cset: moving following pidspec: 14923
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.230427186 seconds)
loading group "string"... done (took 0.630606343 seconds)
loading group "linalg"... done (took 8.19485707 seconds)
loading group "parallel"... done (took 0.170354063 seconds)
loading group "find"... done (took 1.235775195 seconds)
loading group "tuple"... done (took 1.960750393 seconds)
loading group "dates"... done (took 1.308974044 seconds)
loading group "micro"... done (took 0.199013703 seconds)
loading group "io"... done (took 0.942450919 seconds)
loading group "scalar"... done (took 39.327117719 seconds)
loading group "sparse"... done (took 11.940579466 seconds)
loading group "broadcast"... done (took 0.979648942 seconds)
loading group "union"... done (took 13.813363995 seconds)
loading group "simd"... done (took 4.793111161 seconds)
loading group "random"... done (took 9.233795262 seconds)
loading group "problem"... done (took 1.615149839 seconds)
loading group "array"... done (took 21.399319036 seconds)
loading group "misc"... done (took 1.736885919 seconds)
loading group "sort"... done (took 3.347810535 seconds)
loading group "collection"... done (took 17.979332494 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535646553 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127048916 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136964357 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120339103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149860931 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117591228 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124569221 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084924569 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.878021727 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152692397 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114994954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434258422 seconds)
done (took 5.371185106 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174213274 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090149851 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078921031 seconds)
  done (took 1.22979153 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066352754 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126969453 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067534415 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067319937 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067741921 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066865908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067003977 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067696016 seconds)
  done (took 1.595058346 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072856966 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069042931 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066448978 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068062126 seconds)
  done (took 1.337504771 seconds)
done (took 5.477467459 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789926667 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20904006 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191595425 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405345232 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135818927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179715824 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658447372 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321604528 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203435927 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095363207 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112802952 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360750962 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124474085 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651690411 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07841846 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096657835 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140247598 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440954171 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072224725 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088483087 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09276509 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132002599 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089481642 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076503894 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149425398 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070364764 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143087405 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084324074 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069202482 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221524726 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175360345 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651649533 seconds)
  done (took 10.411831837 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101946978 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099727591 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068832373 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126056671 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101703826 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071895464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07574131 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068362861 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089603053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128610894 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092169243 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108539701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067391815 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069881147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083515846 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198055385 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080504849 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082085656 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06887853 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079112195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107946974 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08301583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080429494 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080085665 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129162917 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171070718 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097684084 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10063975 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074341646 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084406002 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116161228 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129992971 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068963808 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06700687 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125588021 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096139861 seconds)
  done (took 4.575066688 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.106603276 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152600722 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090261992 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140034877 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065661077 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112639312 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066452591 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083571594 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237133841 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.447323869 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.627900199 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148081201 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117410175 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104517934 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070926474 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069414184 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093305276 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067752733 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.257796752 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098736884 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113208072 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084308506 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070951919 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074307468 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065431714 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0728093 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064361604 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069261841 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088432403 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076661873 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33235466 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126668807 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069081352 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.826431409 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165581589 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067752202 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104934916 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166129366 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064336715 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093014853 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140722782 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0674713 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064518607 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.294183984 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06551686 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064833164 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072151213 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067172206 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084704588 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109141005 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119981568 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065828671 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066206753 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170010191 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065566755 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081773456 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.26882293 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152490873 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06851669 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293730443 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09446709 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072245633 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065631312 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.218770177 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116869427 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068942695 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067919496 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069925857 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068962986 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364118823 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066491425 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.244909151 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068557165 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077811132 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070601478 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072123962 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079376131 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079551801 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092959734 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067942753 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074081762 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066926147 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066929949 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067313207 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093430119 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39124871 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06716226 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075077646 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065389595 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094019138 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098710822 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066907811 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066548639 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102240389 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070812231 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066125186 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06828671 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063876328 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118112504 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070194847 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112565465 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067592894 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211719102 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097800796 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069854945 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101229186 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077106948 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070977015 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.463872999 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065961293 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072744621 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06650498 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067932935 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067199482 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0784076 seconds)
  done (took 22.171136244 seconds)
done (took 39.327575108 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241362704 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082990429 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083716245 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083496449 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083806348 seconds)
  done (took 1.725784572 seconds)
done (took 2.859387674 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126630053 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102178865 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06463224 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097620042 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064681549 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100945118 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104027714 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083930231 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099691853 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064816175 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097424882 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065153982 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064854436 seconds)
  done (took 2.284236367 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082119349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082647522 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06927822 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081538321 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063008771 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081598121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080394841 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088538302 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081316546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072356501 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062909327 seconds)
  done (took 1.96815055 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081608192 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083115489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069347016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081365058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063105959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081433803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08161955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085282318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081233963 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07339699 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062732164 seconds)
  done (took 1.964744866 seconds)
done (took 7.339214792 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078351091 seconds)
  done (took 1.188380027 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.53303671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.590695566 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078613868 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100118253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191777309 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108768823 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235454364 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083595047 seconds)
  done (took 8.204421983 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106748931 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06882978 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069930386 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069788076 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069219829 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069471951 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069484591 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068896777 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068993926 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070750814 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069143848 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070091798 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070628169 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070502365 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068905058 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070634716 seconds)
  done (took 2.341881236 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096853684 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095490835 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073776737 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075110073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073129497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072219105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074668711 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074502228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071308186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073064698 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075706231 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07397031 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073178023 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064620201 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074465363 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076388867 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07166835 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074611831 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075068365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07580509 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075429899 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064162378 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073238794 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07433724 seconds)
  done (took 3.022528185 seconds)
done (took 15.880387787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115486719 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078001543 seconds)
  done (took 1.310125794 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07796324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079459889 seconds)
  done (took 1.282447385 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076983531 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062071323 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083678768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074082841 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063447248 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063344777 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082249764 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063456609 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063115203 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063622381 seconds)
  done (took 1.822097675 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065472986 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072902582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069530764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078841344 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070082394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064497577 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068861759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065440415 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073235784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06360452 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068758751 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084110968 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068774039 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084900046 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068393288 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068396922 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07038999 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066975978 seconds)
  done (took 2.400420415 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062853067 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064029878 seconds)
  done (took 1.257600983 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066184689 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064071899 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066119595 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066159245 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063516294 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062974298 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06443024 seconds)
  done (took 1.58148308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397672794 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122007665 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321404891 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070643684 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080352681 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250313254 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06492691 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069634254 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069529707 seconds)
  done (took 2.617573379 seconds)
done (took 13.407275866 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080670538 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08599327 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097311875 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410098262 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092564014 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068316932 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113609864 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178219125 seconds)
done (took 2.272170484 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216125461 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.812396449 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.471978118 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207970489 seconds)
  done (took 2.628415014 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343941909 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081397803 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076862928 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066880571 seconds)
  done (took 1.71284052 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067387937 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070223789 seconds)
  done (took 1.276019739 seconds)
done (took 6.977665476 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.178836308 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064211442 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064993991 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064439505 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064692152 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065394584 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064452159 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064951027 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090290745 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06442124 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064948228 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064495329 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065391722 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06491993 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064946629 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070318987 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064926786 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064933353 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064647087 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064924702 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064489702 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064454366 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065085517 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06489322 seconds)
  done (took 2.873004566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081169963 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066720422 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068241989 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068077158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069444564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068295464 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068666229 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06753094 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06915202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066949751 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068876314 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069475533 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066649436 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069412767 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066894302 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069052554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069183223 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066935712 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066799441 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06928499 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068344988 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067334613 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069412699 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068272841 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06876477 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068997425 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066585505 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067085582 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068436529 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069008903 seconds)
  done (took 3.205820875 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064952464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060959915 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061722917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070030051 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061249684 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062021736 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060720507 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061779578 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061942029 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061626413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062309016 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061289866 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060985421 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061883859 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062168361 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066282786 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078929964 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061185604 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061017705 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061950639 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065454435 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061186978 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06149719 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061178523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060959132 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061544904 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064583561 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06172024 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06157025 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061425295 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064973409 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065364064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061300264 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065873423 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066144313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061300058 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065307429 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060810754 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062000848 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060806938 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06139137 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061380004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061375192 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070352275 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06187902 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062824778 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061391105 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062317938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061474764 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063370344 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060929982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061020004 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063085934 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06318927 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066703851 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061740113 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062195865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060940674 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062124193 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06100637 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060916539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060800256 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064896488 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061869751 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07833667 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070229247 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061015616 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06246236 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061606561 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064023665 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062455266 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076335094 seconds)
  done (took 5.707284585 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084698072 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087600563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066233102 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066291232 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061872634 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061931036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069544741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06182257 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067058062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081079486 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062188625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066445204 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066085555 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066188982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062442613 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067083286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070448098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062142986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061530117 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06586361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062225153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069770482 seconds)
  done (took 2.65494845 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149199401 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0676642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105268661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072539368 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07092028 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072925266 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068157134 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068216372 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06800927 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068317385 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068578202 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067692311 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070284186 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06842944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068235079 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068039969 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067932911 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068199839 seconds)
  done (took 2.51570659 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077412267 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067332828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086254625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06698171 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067078485 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066796913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071411837 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072232543 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066983374 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067191269 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072026057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066981558 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066970434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067419717 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066852011 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06734124 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066835648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067336848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071758288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071687674 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071466344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071991176 seconds)
  done (took 2.694329746 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078298298 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066137815 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081796882 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068240149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062344084 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061914316 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077072309 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066576197 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067778205 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0658739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068077344 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061971656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069416325 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066476069 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069038908 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066458227 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066175951 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066602605 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0663334 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062034618 seconds)
  done (took 2.516193171 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082529126 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06511945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064401796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070886029 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064926077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064614815 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071841044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065208667 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065447678 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085911216 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064958192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065374334 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071368684 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069245808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065573995 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071599331 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071406739 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071523006 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068109744 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064744919 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085577359 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064966977 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071309007 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065281679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064986519 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06573137 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064889555 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069271428 seconds)
  done (took 3.096521118 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064851523 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064138484 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064947781 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065023478 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064905572 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064648109 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065478074 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065105882 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064842367 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064750901 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064601465 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065128965 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064575342 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064575427 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065133072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064993937 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064898381 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065281545 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065124515 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065142302 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064818988 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064519789 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064849515 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065256292 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064820459 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06445939 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06533743 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064591175 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064785525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064612568 seconds)
  done (took 3.109942929 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074908737 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073481324 seconds)
  done (took 1.311589371 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063635658 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078289565 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060838282 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072641233 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070223791 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065194378 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070981237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071058069 seconds)
  done (took 1.711314599 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085056276 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07485651 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06385332 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075650681 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075268566 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085185721 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125874898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064078115 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07474653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065431975 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082388797 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066126333 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074696742 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070106612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074115494 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077412179 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061481395 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0687131 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064445952 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062178304 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064162673 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076861458 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073639819 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062194565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069287912 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091254078 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079992742 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0634755 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070675536 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076055562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073846235 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060846484 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06338808 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064707648 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061780115 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07478297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081847692 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07103619 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076617664 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06401763 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072160495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061634611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072142724 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074718854 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079643743 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064231563 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063585027 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062054322 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064778816 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070143641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061668519 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068388629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061388369 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075752276 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071612356 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078378301 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06230681 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069303619 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069824101 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070567528 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074568523 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070132534 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07295989 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062957761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079191941 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07312707 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075264166 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061900178 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060726258 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062037769 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077220968 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091435999 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073166637 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06380483 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064056789 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061527628 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070518038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064377564 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072362955 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07535198 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063481723 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067649932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075423599 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068061284 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069650748 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069147535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061809072 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06681923 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064469436 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083060117 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062300823 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061534914 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064255553 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078345365 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070159722 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065838474 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06436741 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074704239 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060607289 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063440993 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063886974 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069086871 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076233214 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067475765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06754401 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0770549 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072538515 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068980846 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070380995 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061025438 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064030096 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065539383 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074818314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060741852 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070320505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066835462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063023772 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074237625 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061208232 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062474716 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075119984 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074486844 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06122558 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059633447 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069454236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062677838 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064572557 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075560821 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061174891 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060506365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060537442 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070392852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0620875 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069954616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065970301 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069318616 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.184374782 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063081459 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069369264 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077557234 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06777363 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070688399 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074325538 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070400468 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063175812 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076367341 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070726829 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066098026 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073342858 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068053467 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061618541 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066389457 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070338136 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062853688 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071126896 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066290016 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070635447 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064257888 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062063374 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069507173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063983512 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066306227 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068490818 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062459254 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078864571 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069759488 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062048535 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061441577 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070556556 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065234384 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063276818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066399897 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070679299 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06409674 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062048054 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063370399 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06964736 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071510877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066230992 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064301099 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072647342 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080312102 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063257306 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070624664 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063504253 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06464061 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064578119 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077674452 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07388369 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068439782 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070308614 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061209864 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073143639 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076186551 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066177499 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062326973 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066717352 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067612599 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075433049 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066982177 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064082382 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06220423 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069748211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065962165 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070389781 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063040502 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065902332 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068392454 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061996673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069646469 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064162931 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077853127 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071441736 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06188712 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065995258 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06212196 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074578783 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062025051 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06507851 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066267149 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063919851 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063015387 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07024086 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060967865 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076360798 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076311069 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068707752 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065783836 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063334364 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075618763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069045042 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071553827 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070599181 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073164729 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078695559 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066342381 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070106459 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078160811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063299028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060574173 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075094403 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.061866746 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062300095 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062745281 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062512715 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070595404 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070310002 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073408288 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060604106 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070159153 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062231884 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066357518 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061926623 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071986266 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07022425 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067537562 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07577345 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063243401 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062607293 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070084784 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062192301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0636792 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06291815 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069144939 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06262398 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068504003 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064828765 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068137058 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064593328 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060614817 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067548431 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061911274 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067443152 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070616389 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061544526 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068012404 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068893767 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062683762 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.196066653 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068336258 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067139016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071568755 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069921397 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068865681 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071149988 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061798243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075491257 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063761237 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076386114 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068536906 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0611155 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068947159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070101002 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.067917089 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06403208 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064230334 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069575159 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063019177 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069945127 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075918219 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065599856 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079189763 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074423945 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069611799 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069977141 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068763209 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069611136 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066181987 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067836433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064184473 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069003346 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063688532 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07196113 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070684063 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068654298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069502779 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06408649 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068923864 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064359054 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061568098 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066009034 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067220494 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063838953 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076584254 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063777715 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067058868 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062602513 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064570416 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063421241 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061362187 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070696861 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071066556 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064980337 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074154397 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066136612 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069958684 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079691211 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061057454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062883392 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061951543 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06500617 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075986821 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064128646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077027249 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069364675 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066415204 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061297916 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06441527 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062788347 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061391292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062053808 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072335246 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066294641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062882781 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064170148 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070520274 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064384649 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07624607 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062776903 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068088987 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064514381 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061272426 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066210355 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066046314 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070496076 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064309035 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065558314 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061268693 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063242418 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06784395 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069957391 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063355804 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069681987 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075558345 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063262206 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070298801 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065921183 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061373053 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070374627 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063355957 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063037998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065900861 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071369752 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071098596 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064212859 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077410098 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065616631 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069229028 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063320156 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061908878 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063088577 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063338384 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063213725 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066070646 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064006199 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076044313 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061669046 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069469631 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068372717 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066769909 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073351974 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063850854 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069410532 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067509824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064271828 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068905882 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07553685 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065763105 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069821433 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063365915 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067971165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072064492 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064780033 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07370364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067930416 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062429757 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067689067 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063420185 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062018895 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062324231 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061278793 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072410643 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06246321 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.196734483 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067026836 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062243915 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068595568 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066069239 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076708317 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070638948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071548138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061721365 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06126633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064118985 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065649384 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069371567 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071110031 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073499175 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070524692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0670607 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062570396 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078092653 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073557315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071620387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065323039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071617979 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06426073 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070927848 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067922516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068580776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064709082 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071444772 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069668886 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066244591 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073889228 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072023422 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06469785 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07032573 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069383539 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069045768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061818632 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064335329 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07031323 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072874398 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07037505 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063757111 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078658375 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064998196 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068819138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066665248 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062823222 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073390123 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061872149 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070768475 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065046875 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065077952 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06227327 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066437637 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06545448 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070670959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066311474 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062444013 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079218629 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078483914 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069924459 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062885171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062688926 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062092088 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062550355 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066439045 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065293066 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069733667 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078778754 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066700917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066654373 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062252924 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064338196 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071077119 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071849913 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061742414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062230634 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066459934 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070237421 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075387778 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062593027 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063553907 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071350496 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070390829 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061822453 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066709718 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061050347 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072049067 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080285175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064131615 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070389339 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073403866 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076458339 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064445659 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061944178 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063796475 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069552171 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069180844 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064118541 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064578546 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082801275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070576813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066356623 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062587974 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069979801 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06647059 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077332157 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064525858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066904328 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072040439 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069868147 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070772854 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073678782 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075132199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069783261 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069731257 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063301902 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068344429 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062415307 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06571629 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064354365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063618157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067753237 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069938689 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065825753 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079754807 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076591074 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065699755 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060766472 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065537911 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065497091 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061066876 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063706358 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061430528 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061714484 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06128003 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061770178 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068950024 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070841535 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066641603 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063404904 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062309904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059973252 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072252785 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.200333117 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0709868 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062542682 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064235476 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065513597 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072531506 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06656135 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066223102 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070328083 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069319305 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069514249 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062368487 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0753793 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062969437 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070058705 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06608428 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06398244 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064965526 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071162393 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068024801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065098992 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070801433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070887367 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065620431 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062598499 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061544011 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073228967 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061868706 seconds)
  done (took 42.221917444 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099541674 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062779363 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061949258 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062796735 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071986473 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063320923 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062214984 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063527473 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063929916 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065720359 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063188639 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06233283 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070673741 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077538201 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072588525 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06695976 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062906511 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063827018 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062399303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063961267 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070452262 seconds)
  done (took 2.660901704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069164634 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077249883 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074372769 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079007407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070963392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067524603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074667496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06747245 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075621629 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072535223 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075080044 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067568942 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072547401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072341161 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072549986 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067894507 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075987236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071490932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06819714 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075435003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067670572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074797605 seconds)
  done (took 2.826842099 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063684004 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063434918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069733998 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061755456 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062825574 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061397201 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066281637 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061925098 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065444532 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066181239 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065884251 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066308851 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0701747 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061804787 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067249246 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062134861 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106822341 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06598599 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063786248 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064392898 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061572839 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070969795 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061663338 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062477697 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065575385 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066041357 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063974471 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061951063 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063173369 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06614714 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063186659 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061595016 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070056902 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084803973 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064994936 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065130628 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062550215 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063349245 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06475511 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061510816 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06892128 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061773141 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063317059 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069834448 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061367524 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061801431 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069685958 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063083795 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061367626 seconds)
  done (took 4.462751553 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073909694 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109270308 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067617675 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090787108 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076630821 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069353539 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06794396 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092199022 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063194157 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064104795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077639392 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07765233 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065692309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067093019 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069649764 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065487626 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066664757 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06457027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068592461 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065144016 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068964469 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069511876 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076217362 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077608419 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066339918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064351294 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064668583 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066705455 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077100207 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068820176 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067039902 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06746028 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076481032 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070068277 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064561779 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064965666 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077229764 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065380322 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064932397 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063466117 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065151066 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066891604 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069623036 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077324082 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065285923 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070178087 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064848309 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062834322 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076579895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0648527 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069829073 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078097649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066332398 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065176347 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06656655 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076285213 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064939618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063458129 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065418966 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075852617 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062905531 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066312356 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07679486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06437029 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068512214 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077532435 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069830896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066112945 seconds)
  done (took 6.165456131 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07208572 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093289184 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079173401 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078763491 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072902531 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073024219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073305435 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073301492 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073373743 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077046803 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07313824 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113721752 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069284456 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074974408 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073011161 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073304232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073107939 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073225807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073351979 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073240521 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07313201 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079017882 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073089168 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079370951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076157336 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069460572 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07298537 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072757168 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079307825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073265776 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076412787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073005713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072895168 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079196887 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076106203 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072725771 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062698994 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072612996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073095747 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072732946 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069150069 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079332463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072751091 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068791446 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072932256 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072830002 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079438568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076224096 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074792451 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077185706 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07307667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080141498 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072962556 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072809848 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078810718 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081963334 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079115146 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079302748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072725069 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079135487 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079050445 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081560144 seconds)
  done (took 5.969941795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077132721 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069917649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080598687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061533616 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064000478 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071802153 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061654089 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062218075 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070180837 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069927947 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071942995 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071860247 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074246554 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072549376 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07175581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074379483 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071754248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072108301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070719963 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071589096 seconds)
  done (took 2.691887792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075729528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080344436 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067152717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071706142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067036657 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071760018 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066924768 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067318381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067982215 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067801611 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073505744 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073573754 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068390111 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072183208 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07345832 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071668713 seconds)
  done (took 2.405554817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082808579 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069858713 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076772076 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063626448 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067149933 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062657331 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063395149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061543734 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062471231 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076208443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063058285 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074334077 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062947612 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06216572 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06294835 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068866245 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062880937 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063207667 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063904618 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076325933 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070424693 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064124267 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067426998 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063182208 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068449739 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070955971 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064764121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067350375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063438529 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064046035 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069035066 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070518904 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063299959 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064179957 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062345254 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063379881 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063325097 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063377998 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068899035 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063636917 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061829075 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068117744 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063176199 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063893277 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062322804 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.081590659 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062613113 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068849041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063448864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068405376 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063040333 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06557936 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063894466 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070798014 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065712997 seconds)
  done (took 4.925924662 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07787966 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066776749 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061616813 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061173962 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066494373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06739911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067142146 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067181214 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068139796 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062065319 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068255383 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067097944 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068548772 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067448942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067988778 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067294016 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061647786 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067924577 seconds)
  done (took 2.484450952 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072468237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066882514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071465033 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06754246 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06652708 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066231122 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062034018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061891719 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061996942 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066586368 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06683716 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066345044 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062191898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066154157 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066836855 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066930653 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066363403 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062042371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067489324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062519478 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06683399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062327313 seconds)
  done (took 2.720167669 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095314395 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082992274 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140193569 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07879446 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086706957 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07184195 seconds)
  done (took 1.8314809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092022257 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097489952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067220414 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066693186 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072481003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070588234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070279043 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070532403 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074878192 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075476384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070473695 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077670162 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075164966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076646874 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073220932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072570508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070352792 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070654877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067695236 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079579239 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070895514 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075310522 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070879238 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070927956 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070624067 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077220217 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075095753 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0753512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070152984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074836626 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072820795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070352035 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075541281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075202771 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067075694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074693543 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070479531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079451732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072496499 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076723754 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066877422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072928319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074731396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074190575 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074825224 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070253944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073973691 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070225059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070581323 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084687088 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072868543 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076230103 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072588362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074816761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074543869 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080962602 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074898102 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076252288 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072663873 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075223372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076526712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07277101 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076375885 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075286352 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072759814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076950751 seconds)
  done (took 6.169375576 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103437954 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067279085 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070159382 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075001884 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076769942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070908267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07051287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070878289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070799538 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068066525 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10621818 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071001635 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077134262 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077772906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071425087 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071201308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070839397 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077446526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067832557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08200205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070776231 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076945246 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077030648 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076960005 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075307345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07307282 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070987254 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070244548 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070447145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070541914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074417071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070749018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077209966 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067510883 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076689406 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070798791 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070524584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074711825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070658126 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07295983 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077072063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080074465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070877471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070790184 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07514368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070129967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070438899 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067808491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070736013 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067853313 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075702451 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075346082 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075400026 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076670415 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070521526 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070599495 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070979129 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070651095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070730858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072780641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077003707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070611028 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08168904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070620232 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07072096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076944651 seconds)
  done (took 6.171346464 seconds)
done (took 126.247288051 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208282371 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184649201 seconds)
  done (took 1.657929502 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075566025 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104020028 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082642687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13368777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071236503 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105529625 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104642632 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084102953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071486521 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071514455 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071313804 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07407043 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136660498 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071521601 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071402823 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074164408 seconds)
  done (took 2.68721756 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104074842 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.215183706 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108596791 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06907667 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104073202 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077088505 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069697182 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08462535 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076349803 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072240902 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07721144 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07535367 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070876901 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075354209 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076215619 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077139277 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071676945 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077041677 seconds)
  done (took 2.869284862 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102584405 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093435243 seconds)
  done (took 1.486041843 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172571288 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133386052 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200797906 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343415157 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151345525 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423873183 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138702683 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138291981 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112967201 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134828997 seconds)
  done (took 3.235478434 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103773409 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197993397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297977331 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120860946 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076717793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111218891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122464772 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081985483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081408964 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081352852 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080984872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078176881 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100187949 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076912332 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075715159 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078144062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103367538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075419444 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076158854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076141602 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10363403 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070190572 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076720124 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075561983 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078504609 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078647728 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07125962 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069590981 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076100282 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07554835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079313667 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107876713 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078398592 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105028434 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075073437 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106084702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078552168 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074201251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076020488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074387031 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077581802 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077662265 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078175714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07794864 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071085651 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078001987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070921211 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069626507 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079870004 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070843941 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079785987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07909412 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104830731 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070773386 seconds)
  done (took 6.124704404 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107581589 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106222319 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07082395 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112902213 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104307878 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070630473 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105654824 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099851916 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107918365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071161841 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069426535 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071730067 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079673659 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082053165 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115839775 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107673497 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072858016 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070836957 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1080408 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107120981 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069857814 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102109783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097906685 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107694523 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069092377 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070762671 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069403984 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070927647 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076497569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077742804 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069957469 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079516486 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083750317 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077430062 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068468527 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069096776 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069408614 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078634972 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07870919 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078063538 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076786763 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068557324 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06921212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070198998 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070143676 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06802647 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077016938 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078472226 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077201098 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069791814 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071025074 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069386707 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070258187 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078341858 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076354474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079142968 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078470144 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069674014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069204481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072109685 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079343361 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078046225 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078181931 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070194799 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078430086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069642338 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081488527 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081783691 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069494199 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070346007 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068881552 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069722321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069561891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076127807 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076136642 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070429392 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069167831 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069043952 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078125905 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076770408 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069137219 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076006856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068121138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069043389 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070419585 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070205867 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075710762 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07786475 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070290489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069110488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069148539 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069313581 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06789592 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075609934 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077686047 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077190912 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076857553 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070433789 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077512141 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076519224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070208278 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077120707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06857414 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070267709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069398212 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076293115 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075372707 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077046805 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068501941 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067922216 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074867725 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078224064 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068424152 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074642543 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076600654 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074726362 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067364183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077974789 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067868829 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076174058 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068455671 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208876951 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070301815 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078110602 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070410641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069111269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069885714 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078167028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070946961 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069624534 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07024641 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069968208 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077622668 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08113277 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071609022 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077513106 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076893374 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07054393 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077146585 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069292962 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077866632 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070020349 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07022203 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068977318 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08032295 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070018555 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069310737 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070091326 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078290604 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069570874 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079408405 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076252406 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068557767 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080227911 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078791455 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075984407 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079316085 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070773932 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069180707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068911491 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069444494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076419683 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078059437 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070958821 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069566842 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076726455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079145591 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06902447 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077411086 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077092662 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077175305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069942185 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069875788 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080054987 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079491926 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07732248 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077724839 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0773011 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07053783 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077330096 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077842578 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069737294 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083037577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069425005 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081644436 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077862111 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076162775 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078064657 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07914722 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079081877 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079402692 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081699211 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068912637 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069112998 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077530519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069302471 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069517752 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076876944 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07045752 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070659043 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081162729 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069935749 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078983442 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068800325 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077351771 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068096707 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070869328 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081801757 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06950163 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070693863 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07728048 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072218541 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076380599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078891094 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076925925 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069570916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070637569 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078404895 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078063512 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069215042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069244397 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070503224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076373962 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076184384 seconds)
  done (took 18.427715371 seconds)
done (took 37.792592688 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208115647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155161799 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187113617 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115332777 seconds)
  done (took 2.054980966 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106410482 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097865802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087663942 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065887431 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093143325 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065346077 seconds)
  done (took 1.839292724 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294252264 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202312394 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180812597 seconds)
  done (took 1.998475046 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207806541 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196280269 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461242751 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283853701 seconds)
  done (took 2.567037788 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139718495 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0821625 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064611402 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082902539 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122684594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148438072 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092930813 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117282523 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075997301 seconds)
  done (took 2.29995537 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148254525 seconds)
done (took 12.253385404 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100663278 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.275059771 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.189303591 seconds)
    (4/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.177667071 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116998225 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070400081 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073080626 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08500524 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.155456673 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069078964 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065998864 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070849426 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133237713 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130512436 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104070145 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076478273 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247795737 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.177420113 seconds)
    (19/309) benchmarking ("sort", BigInt, false)...
    done (took 0.465504044 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120730388 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232393687 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079235327 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102764367 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074508629 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109790636 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074580446 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073467202 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171018395 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.126192506 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091326095 seconds)
    (31/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167150194 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088820025 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.206111324 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.206157557 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077535319 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091778118 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07512394 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084571515 seconds)
    (39/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118945294 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216607436 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.238527375 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.175294834 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08397161 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078197071 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074154924 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.204483397 seconds)
    (47/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138135318 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099233209 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064744608 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073802391 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090954896 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.159258709 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074135206 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093975721 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.190326195 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075553487 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.083820493 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.06636554 seconds)
    (59/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.166956084 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173667666 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083033089 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193285355 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065018421 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073913504 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226707577 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065582046 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064913438 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13171495 seconds)
    (69/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067691113 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065859027 seconds)
    (71/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.175614833 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08908543 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178303342 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075713211 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.124762572 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089890515 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142817776 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091300271 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08683408 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.193206009 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085954414 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072217543 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077834722 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071217677 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174482273 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16795358 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072963417 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 0.314698304 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078450612 seconds)
    (90/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142026909 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068033979 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090314676 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134462957 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.174662154 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066337991 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072939339 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088243028 seconds)
    (98/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.164970358 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166027985 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065931322 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17400276 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131091409 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075692117 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069893266 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106912876 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087831328 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195190586 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072463347 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094620612 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111649169 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067510651 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065863263 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074536437 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074624266 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068319532 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06654064 seconds)
    (117/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09222701 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192925 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13623125 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07657885 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12238436 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074509597 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.178080877 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134723048 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075618514 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066459076 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133234182 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066283006 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075240287 seconds)
    (130/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072790781 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074846392 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069958537 seconds)
    (133/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067084936 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074598232 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1677006 seconds)
    (136/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069850882 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068340887 seconds)
    (138/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074106666 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131131932 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068274034 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065858812 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065854838 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066262037 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090313469 seconds)
    (145/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076027741 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089624306 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217197989 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06588701 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066212617 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066692226 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06516304 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076701289 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087899621 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079180284 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065530295 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177703122 seconds)
    (157/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078031765 seconds)
    (158/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078731699 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141715143 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169771217 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078241654 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210483292 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13783973 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065334613 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 0.132331094 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079129287 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178860411 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065760567 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07409502 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074375078 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065976735 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070560885 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076699625 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066077498 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139595207 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07367689 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092530538 seconds)
    (178/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.137519111 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 0.130479108 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07386238 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193677938 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070215919 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.170358669 seconds)
    (184/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0659101 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116877255 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066271812 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136049746 seconds)
    (188/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078467032 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06632932 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073510569 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166954401 seconds)
    (192/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065710598 seconds)
    (193/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.169896873 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127852354 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121797969 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065481888 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065496311 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126644676 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065043457 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064817256 seconds)
    (201/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132323718 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.068079146 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06543685 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.228043491 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070068477 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089584635 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073787443 seconds)
    (208/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069843677 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073859084 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069795694 seconds)
    (211/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067979529 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066985054 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078802216 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077245145 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074732854 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073620831 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067698919 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.06904299 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136385871 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120897797 seconds)
    (221/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217938451 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066936695 seconds)
    (223/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067015824 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073691793 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17390124 seconds)
    (226/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074101081 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074865942 seconds)
    (228/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065310831 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074154032 seconds)
    (230/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066765478 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066936895 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067137695 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072899667 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065549859 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066322042 seconds)
    (236/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066492161 seconds)
    (237/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079276078 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069229339 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06609378 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06672262 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066913295 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066088344 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067898765 seconds)
    (244/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120115182 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087848238 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068361895 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066453924 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078854192 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179701306 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067304598 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073885965 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066690747 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065268597 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09015165 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078503376 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067331146 seconds)
    (257/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072797957 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066808111 seconds)
    (259/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066348381 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087977943 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089015665 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067352751 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08932404 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065754339 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118269835 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18077286 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075556017 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073037218 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066709958 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066000198 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066266166 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067978936 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075427161 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075085066 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066797185 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067235637 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065986653 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072508416 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086346362 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065421934 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066354445 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066713064 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067661205 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065530154 seconds)
    (285/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136386211 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067217398 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074210643 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066275084 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078074973 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06556491 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066133816 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066613318 seconds)
    (293/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070631997 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065262896 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074323872 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068971789 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06626847 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079970677 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067000197 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065671161 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120724159 seconds)
    (302/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066536075 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072488594 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090253771 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066289752 seconds)
    (306/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066435678 seconds)
    (307/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067155506 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06520463 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065612818 seconds)
  done (took 32.827113466 seconds)
done (took 34.16417219 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086825478 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099489084 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073851936 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093250925 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081769218 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.0953884 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074347772 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079628705 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081571729 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080648179 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079398608 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072884912 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07581053 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075967694 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073785076 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097925416 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080683916 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074546899 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074881275 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066401637 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074941392 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067135496 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066389315 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073019802 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078523872 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073938022 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076592875 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075938846 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066986269 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067218591 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0716112 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075661627 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066686306 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079946046 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075954191 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075363059 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076591639 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079177978 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066425783 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06718394 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076522833 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066648723 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074867282 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073467331 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071675128 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07328052 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07534567 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07892747 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097509915 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071662811 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076990799 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077648446 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078736234 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072133606 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071677255 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074547435 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072810849 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097040918 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07485444 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071331737 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076746364 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07658995 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07258747 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074447753 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07475883 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077380933 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078349226 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072843218 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077191674 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073692127 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066452191 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074354889 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071086691 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066495974 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080193654 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080023855 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065791816 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070944432 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074418257 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074944801 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06634556 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070884973 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066150511 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071350285 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070785867 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07284084 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071425916 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073805554 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065889775 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074637002 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073520418 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074371564 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066232868 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078944488 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066529264 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072943864 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067019464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066859514 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065633018 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071973696 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065916295 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070537603 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075114527 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065764776 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070898873 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079502964 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066048912 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073511554 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065861123 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066158863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077811371 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07676518 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066152805 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070709339 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065565315 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071863843 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065929993 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066016659 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065927984 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066071488 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070761631 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066200724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070397525 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070909804 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077591117 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065578144 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070310479 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070054386 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065789197 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072470851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065998335 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066112074 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065638792 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079498797 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070122934 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066138019 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071265614 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070497399 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073988582 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064979135 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074375551 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071384418 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069983337 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071791059 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06451932 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076154591 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069274462 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069233812 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064241846 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064939264 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06367861 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064380486 seconds)
done (took 12.564382498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069726507 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117419351 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092358439 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093337228 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083137194 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067611671 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07461451 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09170989 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068744896 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096241424 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088354551 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088795135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109724272 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066753726 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067213817 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068142918 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069067642 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078787411 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094273257 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08908059 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106886424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067287549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086752717 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087591143 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084523271 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090838672 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067895756 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068554034 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069901367 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087982923 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092307232 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070649612 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069118004 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090343192 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085330633 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080069227 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068176186 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075796861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06845499 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06704247 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068956815 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087389105 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075460477 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075414764 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068675752 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075519575 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068770603 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083034552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087747184 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075624225 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082614325 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091005469 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070923403 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083334293 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066942523 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082673353 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076325472 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067814806 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067992526 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07305158 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067861333 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070455611 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078792131 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076275223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071812143 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081896263 seconds)
  done (took 6.62345885 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084963517 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097565242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084262233 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084303572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066972275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068030751 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067819788 seconds)
  done (took 1.981169409 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067469251 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087811192 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09078017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0905416 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08344618 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091702806 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075302838 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067898643 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096502616 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066594559 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087242685 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098469355 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071081073 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07921505 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092360435 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068050254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092148034 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067937871 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068644884 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091554592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072890899 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094810912 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079138975 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068399466 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080203171 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068066988 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099999795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07539887 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069427597 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069060569 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068919183 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094814828 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079758902 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081481631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069233255 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082588788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081743956 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071438361 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078502474 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077240602 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081361805 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069186536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066929022 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068878291 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070666443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079305821 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066934503 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069199067 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069043393 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086629972 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066874122 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079693492 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071147908 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073151997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073591916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072430394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075546698 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069211554 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086905567 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068794468 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084290708 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084059866 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080637163 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083999025 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067606307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079959205 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08061737 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069095438 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069968546 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06949902 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083720403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070915341 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06919793 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078957891 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067523299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091268337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091529274 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067353179 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081176014 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068323558 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068676159 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079155023 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091081516 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072902177 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068962625 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07206535 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070208341 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070812529 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06683118 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071913073 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068492715 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072446492 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068626643 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070346023 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06966854 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083692832 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06670368 seconds)
  done (took 8.849562192 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070058975 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068486281 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069457667 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068278186 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068214185 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068451705 seconds)
  done (took 1.869199115 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091680167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068082149 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080989664 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068515915 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104249351 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083653984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084282805 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077452218 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08199923 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08016232 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084127965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087592096 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08805981 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070915566 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083930456 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0698325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084194452 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072825486 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07984457 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071994027 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081137609 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07069409 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071041486 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088041295 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071752229 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069633461 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077535492 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080180157 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079407285 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07814458 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070869533 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072076114 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076584899 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077888269 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083958593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076438499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071433011 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074510021 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071486712 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071817215 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086076288 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071151575 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07077864 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074287727 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077269265 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075997026 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074491856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076799201 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083068033 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074308423 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074578056 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069131397 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071999803 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074402595 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076639204 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077425926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07435659 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08378452 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070181662 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076101138 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068339725 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071711488 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077077012 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07134532 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075490687 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07436812 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076419884 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070557365 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070992972 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068344414 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075196397 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068453744 seconds)
  done (took 6.936045323 seconds)
done (took 27.712011609 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.522193678 seconds)
  done (took 1.931584219 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.62086828 seconds)
  done (took 2.057654927 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.003707593 seconds)
  done (took 8.440821947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400303091 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47135415 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747923753 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134073294 seconds)
  done (took 3.228283558 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702648798 seconds)
  done (took 2.149812584 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235987094 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22559256 seconds)
  done (took 1.921588454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346812954 seconds)
  done (took 1.785564902 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.058173957 seconds)
  done (took 2.497471817 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236939424 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160592873 seconds)
  done (took 1.840684158 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.442825469 seconds)
  done (took 1.883204134 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.202478353 seconds)
  done (took 5.647064207 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23971505 seconds)
  done (took 1.715672393 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23411166 seconds)
  done (took 1.67796213 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.736703753 seconds)
  done (took 3.180583457 seconds)
done (took 41.413000705 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083706691 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085320003 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085083704 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081191872 seconds)
  done (took 1.760759862 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074982007 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071441966 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074311179 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070738518 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074198596 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070864775 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072392823 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073147736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070420011 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071037268 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07062854 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07030637 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073450211 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072345822 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070120818 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073785889 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074808181 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071103578 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073397169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071077869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068835386 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073531126 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073919795 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070104987 seconds)
  done (took 3.176951312 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07826559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072866483 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075639708 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072401133 seconds)
  done (took 1.75099363 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076686584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088183974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086325854 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077197861 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08857881 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084681281 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06721488 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067218343 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068459866 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077101816 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066354011 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092598328 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086252829 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077500405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079226677 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064044132 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065500501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085176571 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077668957 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078188773 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068599498 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077611971 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066242725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087414415 seconds)
  done (took 3.302937601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083573864 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066038641 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084143973 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091900231 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093577914 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066327236 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.081381509 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093349647 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137483178 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065944872 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071745031 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06643805 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105100217 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066482598 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082648204 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109208057 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113074923 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070526561 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09918438 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066495478 seconds)
  done (took 3.172980262 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083168466 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069922831 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070822268 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065978678 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07638273 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073273677 seconds)
  done (took 1.89724208 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068384407 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068107429 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068167914 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067407763 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07258334 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070216038 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066722464 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067849517 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067750555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067656563 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066984555 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066228391 seconds)
  done (took 2.271855538 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207850547 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070258485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071024935 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066503425 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073041162 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067064084 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082338096 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069871957 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085351828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067114805 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06711032 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069285979 seconds)
  done (took 2.451090755 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189376515 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074290487 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220129966 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142084729 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10222444 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108788135 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108920267 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107350698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132537213 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096598984 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152340504 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158390981 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103128957 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125560709 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087684308 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120036549 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143121254 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152029831 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099176359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152277149 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134876163 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118770807 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139634453 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096016882 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100466271 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115126587 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071383353 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077081501 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157770453 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12212924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134951234 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104304949 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094543332 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163765756 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155237242 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130261247 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1378937 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080979226 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117628729 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126706907 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19077592 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087078497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148430096 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101291599 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076813117 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11924949 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107588858 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.111579284 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098331517 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085714983 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270760896 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1710484 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126751177 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083001605 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113548515 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103960135 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108324219 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110540849 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167118082 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147546264 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117601012 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069737416 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104296495 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140111199 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12341001 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103548734 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116850794 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089178829 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12322777 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146517642 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124522794 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13214158 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112131925 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084166682 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112831473 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129790494 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119345035 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158335237 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114122714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070940838 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114617123 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094412055 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077853297 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141517163 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073781944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161848689 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095322503 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.12010012 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121898706 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104447531 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103940908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148603337 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132693931 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100221881 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083878084 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098365621 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113845477 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135612651 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0843524 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103390731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108684133 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076541054 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124951996 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072333703 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110514829 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091722604 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111759275 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114905837 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076163367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255837724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099717901 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097454826 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121212136 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146243458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084938333 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078138536 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153953938 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112551709 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.098711483 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134214134 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147589605 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117284031 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095929454 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136729695 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162015422 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087277241 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150026985 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098519443 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080958439 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101499809 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113744368 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105604193 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117775985 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078458848 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111703997 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152493741 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07206618 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093361005 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122847027 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078967352 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078060642 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100374095 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099711749 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093038736 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097209649 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099807533 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128908702 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113568101 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099753399 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117136341 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093295904 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15456288 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084637163 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097326698 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100182414 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070222172 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124794674 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144183686 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076229057 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149295699 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115934598 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108496145 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111019847 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080343165 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128284331 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076132427 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070259183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130582294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105718154 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103105489 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137598677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253831997 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118733281 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111741803 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123682064 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12110145 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120432085 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103127296 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08641036 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108458574 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122156191 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071058385 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089011902 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079347385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098651894 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090108096 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081192698 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130189257 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114983521 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10362012 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107898634 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092747767 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138802425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075929302 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117361741 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.114652517 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09145575 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143499284 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142370613 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122593622 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097232785 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128960149 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07137127 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072492004 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086340299 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116703296 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081180435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081077182 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107717766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13956076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118737605 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127837792 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115255189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11096933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146417039 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070823602 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116162456 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134930079 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111817306 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100463031 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088190395 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093852829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133049566 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098955736 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168840071 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106197514 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114513067 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143561332 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09568757 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075669011 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098422146 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121765408 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242810449 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134913441 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095283715 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083651595 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102366159 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076020201 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09330415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118023601 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110896053 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127668541 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106830831 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121561107 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075229008 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10668867 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113628015 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115120731 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081165009 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11054357 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155057068 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092740279 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109903622 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141098973 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076866803 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131796803 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161462943 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134158092 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08205912 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100684966 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113120624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119826396 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111452969 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130319085 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099844896 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128164874 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105225674 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084414094 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083449264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092000219 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098911621 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108462655 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100066487 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106267154 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092484891 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121953003 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097894188 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104486795 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110320724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096345372 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092507224 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09273018 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161600129 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109554062 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157031159 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094174528 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132817679 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148051144 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072246363 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075690136 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077767252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127965616 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08050642 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263778469 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105411285 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109057451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114932637 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128916952 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092403882 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069740176 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103287533 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125418286 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114631405 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092928424 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099685864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147740413 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114198505 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076180718 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107386678 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108767563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099801768 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161573124 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078674586 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102727134 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075351718 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077200444 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118847308 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141440973 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084106941 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100458983 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113057586 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10602289 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119378703 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094120839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104569427 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122379676 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137230037 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119354521 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086862499 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105712373 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121726409 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143355926 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09944201 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09645133 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162306745 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140844879 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148428018 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084543616 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10744978 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107811079 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103084744 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126482121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081128013 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149651612 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07876659 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125391101 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09647295 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085869142 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120111374 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104913246 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084726019 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133428585 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10605004 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0782804 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22492709 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107645294 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110521177 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097844363 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072957764 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129013974 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071633868 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124160608 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155399328 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077849013 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098826775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092174713 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079705029 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098408986 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097094654 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083617334 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095625271 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158403402 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084064889 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136603899 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124910015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104980676 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128727533 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099763988 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63913514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07778347 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140519061 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109937609 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164840839 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095192319 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111027606 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104418567 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114454752 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133712811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097615413 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174860957 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122314987 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109126258 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076319377 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097259342 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098699199 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085556815 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102071792 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106983275 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107727058 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091179821 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109272434 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1148534 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080347637 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093009964 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143412605 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110189228 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133756578 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128702926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081136177 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109632675 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124996806 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076635005 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110217652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288910647 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100987713 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097273084 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08013856 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096259749 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157703163 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07159075 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146464807 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110504977 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104098098 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106647797 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105370181 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119634992 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098657636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11348459 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089408952 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104048272 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106146925 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08057916 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076533544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099719996 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104686198 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128206651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092505143 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095847805 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140357415 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0702226 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09454435 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107613981 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134847263 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159389826 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102471751 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081180181 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11297534 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112816333 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106610485 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112309956 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078863214 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078422978 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078912919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098144881 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120195219 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105667921 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110823093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104080899 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149768005 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081594456 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220183155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092460969 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099110702 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08672998 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077537804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09245888 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092554058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099163964 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104680591 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159695662 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090409313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086860828 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088666684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072190379 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080115486 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117276629 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10345305 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107102195 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097814164 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.226962642 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099567298 seconds)
  done (took 55.990883893 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103071131 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082919719 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097369937 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.142928104 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121143703 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19941484 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149930433 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188195834 seconds)
  done (took 2.634887357 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068395551 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093715381 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101669311 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082541557 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066730492 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067910212 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227575784 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081014119 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066925107 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090754552 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077267026 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068979598 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452277762 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066527538 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067494382 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076397603 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067922557 seconds)
  done (took 3.366134526 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37307128 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.594285804 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352006016 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075416129 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.843287412 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089790869 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.1404297 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137486192 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081745713 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518590158 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370973153 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131087202 seconds)
  done (took 18.265933766 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083055827 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077217903 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091413434 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09120403 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079085879 seconds)
  done (took 2.057062262 seconds)
done (took 103.566252466 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082350735 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.207848068 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068871917 seconds)
  done (took 1.857838009 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09149585 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089746812 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089475949 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086951683 seconds)
  done (took 1.919237339 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075250594 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077114773 seconds)
  done (took 1.710110755 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233031476 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176376144 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094781797 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083814769 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081042717 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081256173 seconds)
  done (took 1.808917842 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073917359 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073701054 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073548036 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077980324 seconds)
  done (took 1.857222408 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07136776 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067666257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069492569 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072199777 seconds)
  done (took 1.840223337 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084805653 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085884987 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079741869 seconds)
  done (took 1.809056989 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101489512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095062543 seconds)
  done (took 1.755146387 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081505511 seconds)
  done (took 1.64157688 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091909177 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100822098 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131143443 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114203098 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141536599 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1176614 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084276794 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089444167 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079537669 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086529352 seconds)
  done (took 2.596741885 seconds)
done (took 20.938589125 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07992977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374956594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361179061 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091960863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673339024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358011988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001723888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093365393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10877032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070074083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087116809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651015424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993918815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332332612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978578697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329895633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653241325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069586999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069243926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069942464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983688079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069025597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070403397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069682463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651041926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374874032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070962796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331042022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070402998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075021287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360198063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071701524 seconds)
  done (took 16.185258354 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071225909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123479686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073854357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086165282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071996352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070935787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072778687 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069964632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119413892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069989369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087634917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069339543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074305079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070572555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090176131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069910677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072636031 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070921768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070282999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072121895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089422465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070621692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071708432 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071430417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071235703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084173588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072295451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070471215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070653588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075228205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076043291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072084603 seconds)
  done (took 4.04449689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117469499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126617361 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075338908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108000417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119036244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071924866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147579317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094624372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121499361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070517288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088428552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069313296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104392569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071404162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092085892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070711177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073536924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07118251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070237522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071666478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08998263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070347216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071125628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070996671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0720714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085628625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07204343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070560878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070660595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074923805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076521928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072428932 seconds)
  done (took 4.306891354 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071427264 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07360146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081849535 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082598141 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068422161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071067002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072220716 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068719555 seconds)
  done (took 2.164006289 seconds)
done (took 28.271407371 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07912488 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068890268 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072357324 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087940222 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074490935 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079722215 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066322322 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075397379 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072559545 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072741602 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074558666 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070954164 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071356623 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067125998 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073120089 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067153984 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081973019 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071645737 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081437002 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081610548 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070562557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073776697 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075935139 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081735356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081870517 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08203575 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077254532 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074180608 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0689453 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071584681 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071218517 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079035438 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082287081 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082990478 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068305744 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068279843 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072828684 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070078773 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082787088 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077513419 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069996301 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07750457 seconds)
  done (took 4.697997353 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084767697 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089323773 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082351221 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08035944 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091211455 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083324464 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08656944 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078451295 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078593406 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086981895 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074577604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081978129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07920253 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073400756 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078068091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075509658 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080322003 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074749991 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07767583 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078418247 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087328246 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074082711 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088322887 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080105806 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076077469 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081391594 seconds)
  done (took 3.685422369 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074095676 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086537008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093692992 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144168139 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112178114 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080897658 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082379472 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093172687 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097106791 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069707621 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073462097 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093894254 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093786581 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07565321 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112436068 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08538416 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085211319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07127407 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076037971 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098113053 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090296046 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086670881 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095665816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08620823 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068806722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071978286 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074675218 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086096577 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072054856 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08094879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072545587 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073943737 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071238661 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080002276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072217931 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068924511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094304125 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080444008 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081994914 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069998815 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078814803 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070022935 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095057365 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130008006 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068457871 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073004381 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073046423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08010991 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068733076 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096341446 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081280708 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069082651 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070252171 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067840644 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068174011 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071428301 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070675065 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071265831 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078938136 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075519836 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090875826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074312332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086399331 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068628272 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079247535 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068217569 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070130779 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068117803 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097350345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070357216 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112446192 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069590454 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067489699 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079429702 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078982434 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074993958 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068713974 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086125263 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080425125 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073252514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077194204 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071998735 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072808159 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099241886 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068987973 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067928158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067394314 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074635985 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072286846 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069380451 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080813074 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068108553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072171224 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086248201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068787389 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069518385 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072496855 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071190141 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06815853 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079055615 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073177326 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070177718 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079225253 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069397429 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072124837 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082327752 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075466457 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067785052 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070932096 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072276926 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070542912 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070210524 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071966419 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07067364 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075965921 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075819409 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074193917 seconds)
  done (took 10.805619846 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164997809 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157522222 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071561012 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149037707 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077166234 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081308043 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152325386 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095903981 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069198962 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070846515 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069478892 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109960892 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1058513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11695904 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082331122 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070278058 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095282136 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116133267 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155074566 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148621586 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092542612 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077215613 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07253189 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071325039 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071298933 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079275543 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086044099 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078268061 seconds)
  done (took 4.406083045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078329913 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103672146 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073882765 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09147249 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08839545 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069706301 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071198909 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071043199 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085616173 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07806466 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069579685 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074876246 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073481674 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072591588 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070616833 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076455792 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076388386 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068917629 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07342141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074830193 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079276356 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094308417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073175863 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06945287 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072254869 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069525265 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077682841 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081646835 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069904669 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10567031 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067111841 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074481606 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08395195 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070076696 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069495218 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069663398 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069519322 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069519596 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07135848 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067933268 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068364933 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073230844 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068310361 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07727831 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082976645 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071465122 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071227042 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072186524 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072529922 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066976929 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072363573 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072231027 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072308277 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076721572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074531851 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072441286 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070351136 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09622067 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07568007 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068842457 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06816044 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068166961 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072145819 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079391515 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085383543 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071650522 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068274792 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069609617 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082176907 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08271368 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068811476 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074357995 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067145951 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071280975 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071906567 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.0728362 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070252984 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068341519 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069264606 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069473569 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070131626 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06940733 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068554862 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072298778 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067589613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068257076 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069645469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074784948 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080696037 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068865823 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072898936 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070162433 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068462582 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072005235 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074737357 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073011953 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080305807 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080389057 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069901603 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068071221 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082929434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072123063 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069326373 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075154499 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073968455 seconds)
  done (took 9.398875044 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091718197 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069422095 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085608356 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092665947 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079174439 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074921739 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079591285 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069412912 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085328367 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07452296 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077307756 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068294 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080515734 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079122278 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069780881 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079914209 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072551807 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086785415 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083940521 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067934412 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078159423 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081642545 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082191155 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083426284 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083553488 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084550434 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081350239 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079184957 seconds)
  done (took 3.84911118 seconds)
done (took 38.41615049 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.677112934 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.822493755 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.649654121 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.839559213 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.699607854 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.880553868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.741961754 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.640827371 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.84444232 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.690183699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.928645233 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.100929291 seconds)
done (took 64.238638807 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.681525554 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.796405946 seconds)
    (2/2) benchmarking "String"...
    done (took 1.892274184 seconds)
  done (took 5.270337794 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.883528705 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.306186953 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.875543171 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.642041122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.648926715 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.896179683 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.42419721 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.092059489 seconds)
  done (took 29.469050389 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.835770338 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.869922002 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.344764466 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.382883676 seconds)
  done (took 15.064517285 seconds)
done (took 61.044272165 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.650212775 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.673494318 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.6802972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.643217267 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.739825915 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.650949524 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.94137621 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.692154741 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.646484631 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.649773264 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.647276391 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.063990665 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.652955327 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.743539332 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.646198654 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.647086699 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.705811047 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.124457542 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.799627355 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.658647944 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.651165038 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.682977506 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.650355755 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.789775991 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.655048802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.646317266 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.053527113 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.656252352 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.254256834 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.64840605 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.682925842 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.953047499 seconds)
  done (took 199.563983074 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.645991279 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.646070629 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.716858154 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.666071791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.080907837 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.840333601 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.741293527 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.111370654 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.650809351 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.663813002 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.821120489 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.648632171 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.853492944 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.59554467 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.682780206 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.655950896 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.78540311 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.862872857 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.687229419 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.792385445 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.669599935 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.737035977 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.672152578 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.811866684 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.684008158 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.677563777 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.670440979 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.674216116 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.831530081 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.768994964 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.65003823 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.689397028 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849333736 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.516136002 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.665875615 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.669950272 seconds)
  done (took 164.974246468 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.836891312 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.649032415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.647533538 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.647146918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.652807447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.647160015 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.770974703 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771756969 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.303053059 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.283303279 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.702093118 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.647644571 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.4237396 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.649559225 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.713176348 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.659918106 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.648450101 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.648359755 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.661502635 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.673934591 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.650292741 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.64876587 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778017008 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.660601579 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.647557524 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.657178967 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.649367115 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.653688952 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.03534633 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.647227343 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.785941278 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.650827673 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.654555863 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.889203518 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.64939642 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.649654034 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.482576438 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.682841585 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.657103414 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729585826 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.650311531 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.653545204 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.648607941 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.867845808 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.64911492 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.649017564 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.649817099 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.650158191 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.649299749 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770058722 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.650097525 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776576903 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.650138122 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.128592914 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.649442418 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.650503739 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.835102724 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.494933549 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.650637972 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.652847894 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.649936761 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.648651586 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.662756538 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.983153907 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.726458776 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.6522695 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.650740202 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.656491145 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.65035623 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.743867881 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.64959787 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.832527987 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.664748642 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.881244917 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.773004123 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.6523589 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.714752442 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741111184 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.6510848 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.65033396 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.650813076 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.650534213 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.730712589 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.651279988 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.772915208 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.661219416 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.653680197 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.707450945 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.720459399 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.652842207 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471620109 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.650874514 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.650256195 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899295837 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.715694566 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.651686138 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.652483427 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.651064179 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.743801848 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774160217 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.371073176 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.653421966 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.032653858 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.738153836 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.652644065 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.767017425 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.65383579 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731705162 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.65816489 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.653836109 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.687328179 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.652129161 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.6640407 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.651892119 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.023663645 seconds)
  done (took 386.786142482 seconds)
done (took 754.804292256 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.271472269 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.231639189 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.338391323 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.252045789 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.225376234 seconds)
  done (took 12.911172856 seconds)
done (took 14.503637286 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.734655786 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.736893896 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.670917017 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.732907523 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.669864617 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.733052166 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.716234768 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.676152843 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.701445194 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.67736239 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.703653327 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.675081409 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.660903648 seconds)
  done (took 23.682225781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.882023074 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877680753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.718688204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.902283813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.697661749 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.880998905 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.806423702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.79458587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.796492763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.666154734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.662136894 seconds)
  done (took 21.280213726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.880314932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.887779212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.725841262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.88340443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.698247856 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.88597126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.818906585 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.801038375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.793097343 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.665567147 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.664148001 seconds)
  done (took 21.298315388 seconds)
done (took 67.854539617 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.655958811 seconds)
  done (took 3.250694631 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.67507375 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.833480031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.656735351 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.657836023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.656138258 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.658677013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.657558184 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.656883991 seconds)
  done (took 15.048225508 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.655838682 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.65642838 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.65638452 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.6571449 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.657214051 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.656424634 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.656484559 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.657808577 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.65771677 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.657648911 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.657983769 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.657553585 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.657195239 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.657576267 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.656799739 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.658475982 seconds)
  done (took 28.110785885 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.659088965 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.656207504 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.656844896 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.658103448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.65841395 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.658415023 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.658213472 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.658567177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.656875568 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.657887935 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.657413149 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.659091928 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.657402369 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.657391221 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.65830753 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.657662066 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.658748729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.657894923 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.662342693 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.658056973 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.659423329 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.658696112 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.657451667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.657639143 seconds)
  done (took 41.394549405 seconds)
done (took 89.398100995 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.395438111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.29439083 seconds)
  done (took 9.286497748 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.662282643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.659483314 seconds)
  done (took 4.988909304 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.659225796 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.659517061 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.658901233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.658595101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.659311715 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.658264271 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.658901951 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.659441974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.659125495 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.659024532 seconds)
  done (took 18.187154363 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.658882596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.660178057 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.658873847 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.65877647 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.660785026 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.65880251 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.659247263 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.659906974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.659931901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.66013061 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.659692564 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.660324244 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.658624433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.658092134 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.657973132 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.657803859 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.658841321 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.657861422 seconds)
  done (took 31.462996436 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.657696917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.659338772 seconds)
  done (took 4.91256303 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.658027899 seconds)
    (2/7) benchmarking "second"...
    done (took 1.657989553 seconds)
    (3/7) benchmarking "month"...
    done (took 1.658030214 seconds)
    (4/7) benchmarking "year"...
    done (took 1.658067454 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.657611576 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.659115125 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.657652137 seconds)
  done (took 13.203489267 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.659528349 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.803355337 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.866063942 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.312023483 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.660403908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.660806957 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.5639828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.662678068 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.662462952 seconds)
  done (took 18.448229136 seconds)
done (took 102.086212161 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.546995947 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.659977373 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.945208408 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.767959081 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.679393216 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.953067697 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.682574622 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.195088587 seconds)
done (took 42.027387756 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.693342264 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.378321077 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.401692379 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.799328095 seconds)
  done (took 15.178417777 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.657449863 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.959332825 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.685741009 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.476407259 seconds)
  done (took 21.381318189 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.019650777 seconds)
    (2/2) benchmarking "read"...
    done (took 2.006673622 seconds)
  done (took 5.627025718 seconds)
done (took 50.478809184 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.659534464 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.659376131 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.660790978 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.659921715 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.660609197 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.661062967 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.659821475 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.659544961 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.659201263 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.660474656 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.660518496 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66121052 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.660532428 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.660384359 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661546177 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.660375844 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.659896431 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.662819056 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.660626711 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660022646 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.66091682 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.660950197 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.661141103 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.661254706 seconds)
  done (took 41.450476424 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.66055193 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.659238413 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.659892674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.659122767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.659535425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.660497831 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.660588502 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.659921001 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.660367108 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.660121125 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.659935879 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.660327044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.660087862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.661961026 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.660941262 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.660213334 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.660619282 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66139713 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.66151722 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.661495961 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.662187176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.661731025 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.661333108 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.660043973 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.661652781 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.66134154 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.661457536 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.660965957 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.661964195 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.66190135 seconds)
  done (took 51.423714106 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.660535284 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.660641161 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.660678335 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.661458477 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.661343283 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.660861452 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.662436459 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.660566828 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.660110966 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.660473819 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.660981173 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.661636043 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.660856348 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.661330712 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.661737314 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.660603022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.661314634 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.661198795 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.663497677 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.665113826 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.663361436 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.661541429 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.662094416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.661505031 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.66137505 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.661245247 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.661083781 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.661829963 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.662702919 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.660860662 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.663395369 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.663510502 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.662140974 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.66019954 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.661754913 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.662767621 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.66290507 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.663266868 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.66266703 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.663506293 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.663340301 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.663162115 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.662427399 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.663542322 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.663465217 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.663085625 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.663451182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.663717618 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.663422826 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.664455366 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.664171651 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.664195645 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.663181433 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.664130764 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.662760067 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.663849202 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.66385966 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.663881127 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.663826158 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.663688947 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.664642911 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.663725325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.664175553 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.664432653 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.662866542 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.664022508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.66428712 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.665030396 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.665245234 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.664472542 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.664218897 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.663426991 seconds)
  done (took 121.315477468 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.663103957 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.664658419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.664105142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.66466977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.663911084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.663503655 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.663808773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.664485899 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.664657652 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.66426011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664510477 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.66541887 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.664175816 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.665767287 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.66451913 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.664376829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.663952605 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.664921695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.664377562 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.66504027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.664820427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.666435756 seconds)
  done (took 38.222309036 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.664454232 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.664814952 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.665189273 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.665278451 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.665962289 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.664738731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.665070424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.665568765 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.665906618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.665539715 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665660906 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665334399 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.665421672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.665690906 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.665968099 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.665572092 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.665962195 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.665629033 seconds)
  done (took 31.582084908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.665632604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.666350158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.665491029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.665981566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.667449863 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.665588582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.666307165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.666606909 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.666215951 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.666792145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.666779832 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.666554426 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.666397427 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66628604 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.66602924 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.666381572 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.667481633 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666901832 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.667511171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.667478822 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.666342139 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.666198669 seconds)
  done (took 38.267275829 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.66624525 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.667179928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.667789308 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.666549455 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.668233517 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.668290404 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.665976662 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.666532688 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.665847295 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.665933632 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.668075433 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.668314863 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.668473911 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.667595993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.667626103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.666555128 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.66808334 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.667384734 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668341117 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.667089575 seconds)
  done (took 34.952878886 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.66834134 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.668031343 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.669393662 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.668785369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.669468422 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.670895032 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.66921764 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.669365959 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.668571924 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.669356694 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.668197445 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.669177412 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.670486695 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.669947505 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.669263821 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.669414156 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.668738308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.668845805 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.669214003 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.668500233 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.668557398 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.669461269 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.668995242 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.669070488 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.669662185 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.669675917 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.670081574 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.670341685 seconds)
  done (took 48.346243493 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.669808874 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.669939986 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.669480303 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.669368057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.668798448 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.669734017 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.669920241 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.66911105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.669023986 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.669143113 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.669809766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.670457679 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.668396245 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.667995799 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.670892483 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.670171641 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.669764928 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.670365043 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.670028503 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.670420889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.670267824 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.670899636 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.669733038 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.671480309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.671261421 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.671252256 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.671512107 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.671742537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.671576842 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.670833387 seconds)
  done (took 51.71178437 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.691539729 seconds)
    (2/2) benchmarking "in"...
    done (took 1.692065706 seconds)
  done (took 4.992634755 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.670791526 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.671051702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.670399781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.671641722 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.671695727 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.670959762 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.671932661 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.670712232 seconds)
  done (took 14.978435743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.67241504 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.671418663 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.670884249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.671329681 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.672051046 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.672930947 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.678786823 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.671949359 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.674904134 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.673146125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.679535367 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.680601684 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.675134232 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.6731255 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.67298996 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.67500053 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.670659102 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.672820281 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.67418783 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.673251399 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.67250638 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.675862633 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.675437017 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.671079755 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.674708598 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.683223342 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.677685762 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.672120109 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.674309818 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.676561125 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.67338665 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.671843795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.673855596 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.672800061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.671509792 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.673341475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.680701051 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.674941078 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.678873869 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.674202058 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.673043244 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.673019225 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.675486557 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.675924225 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.674191684 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.67350347 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.673636231 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.672350849 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.673582973 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.677573565 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.6820619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.674785259 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.67381811 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.678986589 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.677654476 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.682667771 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.674524091 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.677151571 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.685331881 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.684293171 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.686237717 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.683820981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.676898577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.673905465 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.684080853 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.700365376 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.681090381 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.674505159 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.674426895 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.674087425 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.683271485 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.68746905 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.685434091 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.67523618 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.67384001 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.674607019 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.677339371 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.674799169 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.682692712 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.679226856 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.67517498 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.6755046 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.685358978 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.699382829 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.67578192 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.674444039 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.674525741 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.674964088 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.677222386 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.687444002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.676979999 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.67572929 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.675719192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.676528703 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.678892313 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.67465279 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.676046439 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.677967916 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.675486544 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.675918239 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.675756393 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.679610043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.687023462 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.676698542 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.675684303 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.683507282 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.675600779 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.67745033 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.684609955 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.677532886 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.677474432 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.678519016 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.685381169 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.676810995 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.680412158 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.686500235 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.677430808 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.678919346 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.677171832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.676687012 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.68684376 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.706669754 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.678368908 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.676943439 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.682019295 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.688846657 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.678195157 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.681028781 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.677426318 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.676667506 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.677856586 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.680043306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.677762102 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.680158289 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.677321002 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.680029693 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.678229825 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.677167065 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.677896621 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.680158044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.679566055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.678996182 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.680410286 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.681732072 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.678611434 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.680450275 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.685229888 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.678506655 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.680562795 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.679907495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.67877479 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.678200383 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.680822542 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.678851545 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.679567953 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.678888023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.681730497 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.679105405 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.679311465 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.67970281 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.679097245 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.680629813 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.686359337 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.680421573 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.683374892 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.680200126 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.67859903 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.679662235 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.679893798 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.68059412 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.678604425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.679412171 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.68369615 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.687892546 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.680310358 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.679942834 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.682640447 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.679741415 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.680279629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.680464003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.684597616 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.690181199 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.680811395 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.687467586 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.680121415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.679393989 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.68087775 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.68169519 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.681693306 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.680922704 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.684767592 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.687458895 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.694852793 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.689730337 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.680754584 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.68450974 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.68197587 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.685206941 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.685444553 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.679940436 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.680340412 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.682034945 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681809119 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.681609799 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.68386485 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.681557252 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.681352301 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.680528991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.681788598 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.682348649 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.681536438 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.684185913 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.683944565 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.68153343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.68156246 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.682433373 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.683078414 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.680804971 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.681681959 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.681534587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.681502741 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.681654953 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.688122882 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.682555217 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.684213453 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.684594249 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.683382439 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.682414148 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.682664204 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.686412316 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.683523599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.691034585 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.683643764 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.68434542 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.690470392 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.684351022 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.682684826 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.68718472 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.682387031 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.682700527 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.685886857 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.690193883 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.683674448 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.684628714 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.682708263 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.684803135 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.683600858 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.690338583 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.683157858 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.683239157 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.683313641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.684802561 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.681640984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.68548095 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.686068491 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.684794018 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.687147735 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.682209589 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.683683771 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.686542461 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.683523651 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.684019404 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.683772419 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.687199563 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.691923435 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.688735233 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.683461272 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.686078692 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.686396588 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.687635591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.685704944 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.683750014 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.685628633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696152006 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.691471331 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.691339611 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.688158553 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.6840613 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.690829904 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.686272508 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.689167042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.686142925 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.686188498 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.685299884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.686325994 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.684533598 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.690324154 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.684783516 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.687619556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.687766245 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.690077892 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.684992714 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.686463477 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.684781189 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.684675528 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.684946761 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.686721815 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.686046701 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.68860898 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.688393978 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.685657085 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.686829281 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.691425792 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.688145119 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.687568717 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.686588418 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.686932833 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.68573064 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.686574902 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.68648474 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.68996448 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.695059237 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.689949342 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.696461871 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.688133774 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.697009277 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.685741 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.690205828 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.695677594 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.68607519 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.686641994 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.688280246 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.68730764 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.695815972 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.686912888 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.688993557 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.691621627 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.686733108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.687127772 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.687225375 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.686723118 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.686598191 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.687078376 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.696199211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.68898224 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.694665573 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.689378299 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.687425108 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.687842758 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.687143939 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.686791422 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.690468689 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.688050332 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.689426023 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.688369111 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.688076012 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.688477914 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.688836921 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.688821486 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.688800975 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.687911867 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.696821225 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.690101036 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.693565007 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.686690429 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.69676925 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.690464028 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.69596993 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.689399666 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.690374784 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.688300507 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.688982752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.690421622 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.688670886 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.691741765 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.688404456 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.690920065 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.692443179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.689454471 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.691810099 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.690546318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.688852415 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.691648057 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.699790898 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.713271264 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.691613521 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.692664245 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.68866765 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.691826664 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.693136981 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.689658093 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.689020042 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.693950904 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.700839182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697915787 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.691945085 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.68917756 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.691978472 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.689651626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.689938873 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.691393549 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.691326167 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.692201214 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.692629506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.690949986 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.694417711 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.690006762 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.691281798 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.692720063 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.691836132 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.702774275 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.690880265 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.692210747 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.691353239 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.689959779 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.693436302 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.693454536 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.690120549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.694002683 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.690118428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.694350653 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.69996753 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.699952312 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.694877629 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.693222637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.691522244 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.694471711 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.691804178 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.692318074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.691178563 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.690784501 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.693679212 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.690131434 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.693047049 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.690830414 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.689562245 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.692664316 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.691565249 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.695517583 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.701705899 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.693469928 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.691184498 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.691486227 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.692725925 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.691523562 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.694185907 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.700878091 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.696502091 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.702872675 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.701243303 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.696434727 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.693892532 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.695863297 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.702401906 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.693363475 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.695274997 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.692719696 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.695237343 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.694398834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.69844652 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.693398853 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.70062432 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.694366182 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.694199235 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.701136647 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.695261542 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.6923884 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.695382519 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.699011085 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.694331483 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.691720373 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.692348102 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.694017535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.701342559 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.69657577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.693325609 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.696815498 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.692856155 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.69532844 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.698166041 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.693938188 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.696182039 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.694040096 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.696491218 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.693633432 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.693865085 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.693507105 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.695377172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.695068514 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.69830668 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.702685735 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.694503267 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.697442524 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.696636221 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.694463695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.695318028 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.694798816 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.693079281 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.694916186 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.695292608 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.694872676 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.696526561 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.698735113 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.695597038 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.696052883 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.698999825 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.694062771 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.699182897 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.706809014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.703267756 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.694772841 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.695848808 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.696468108 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.698071443 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695086198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.694686892 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.696646155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.698076437 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.694138684 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.694575648 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.695456885 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.70005161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.713322274 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.694598677 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.698413309 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.698057828 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.699913675 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.694620049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.695473241 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.695909146 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.698815156 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.700635674 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.705163036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.696548156 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.702999023 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.698072761 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.698448068 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.701021059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.70153177 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.705277164 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.700860981 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.697000557 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.696609529 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.702947795 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.715142507 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.696846561 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707240582 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72803762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.69897345 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.698707666 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.6965441 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.698875207 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.696500754 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.699236716 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.69743266 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.69665348 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.697396087 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.696917329 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.698235886 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.70386086 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.700406131 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.697111182 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.697897461 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.697381457 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.698819488 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.696958806 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.697783928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.699124365 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.697823042 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.697290048 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.698727916 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.698348532 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.710085602 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.708367769 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.697523749 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.698131426 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.697804573 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.702291153 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.701385047 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.711173088 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.705927685 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.699106626 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.698987459 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.701093238 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.698815806 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.698793559 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.699757996 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.700637791 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.699589604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.700691886 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.71157709 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.708394077 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.704184309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.700579864 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.699593855 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.699598691 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.702129527 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699253556 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.69934147 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.701885564 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.70054758 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.704464374 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.699180654 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.698739855 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.703935024 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.707368422 seconds)
  done (took 1007.728453106 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.699658243 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699535466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.698318503 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.699090196 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698833703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699698982 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699820291 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.700023421 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.700009121 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.699685758 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.699294386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699853319 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.700262988 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.700742547 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.701042073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699773756 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70024627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.700664647 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.700429706 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.700584015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.700168916 seconds)
  done (took 37.334417847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.699994347 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.700495769 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.700570287 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.701781648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70033011 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.70021273 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.701169796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700164351 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.703466927 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701247436 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.701056079 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700977983 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.699784974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.701668932 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700629631 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.70011713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.701278298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70237116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.702646646 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.702025245 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702449285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.701145704 seconds)
  done (took 39.063476129 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.702443311 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.702622287 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.703755003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.702344741 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.702439753 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.701759317 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.702127602 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.701814928 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.70259232 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.70286535 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.702424071 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.70529708 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.709936713 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.709677545 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.70482959 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.703755591 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.848359941 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.703622457 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.702927442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.701951669 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.70346541 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.709709833 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.703744981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.703875478 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.702792876 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.702725264 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.703545264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.701497488 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.704411686 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.704008661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.707159858 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.703732206 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.702635117 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.706128511 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.703863371 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.704843364 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.708205062 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.704009034 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.703468654 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.703265684 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.714185201 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.727046733 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.704751593 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.710966548 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.703551195 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.703336074 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.708217831 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.711698382 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.703100453 seconds)
  done (took 85.331570771 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.704772255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.704694293 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.705159816 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703421599 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.705302471 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.704442211 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.704525862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.70482841 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.70426245 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.704054096 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.7036921 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.704371797 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.705575606 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.704773181 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.704379672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.704432905 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.705664085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.705801703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.70467718 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.704510082 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.705452719 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.704392076 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.704232137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.704858884 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.704527078 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.705517215 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.705400235 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.704284928 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.705348288 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.70520634 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.704420811 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.703636542 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.705417599 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.705455796 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.704654844 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.706176317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.704189777 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.705009535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703741276 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.704699604 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.704240251 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.70495825 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.703588902 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.70392724 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.705324007 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.704368511 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.705248238 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.703577648 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.703988386 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.704557947 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.704898258 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.704338515 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.704886805 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.704647256 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.703080502 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.703369306 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.703133249 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.703000592 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.704179203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.705368319 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.703705202 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.704785091 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.703333315 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.702534889 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.703820722 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.704215249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.703767743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.704394408 seconds)
  done (took 117.548653405 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.704690714 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.70527593 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704550123 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703718543 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.705798668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.704234708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.703408907 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.706048219 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.703617816 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.704292964 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.705503477 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.704201315 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.7047212 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.703766115 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.694104028 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.695573631 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.695259382 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694127239 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.693099245 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695022509 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.691277772 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.691352201 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.691992069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.689828972 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.690517469 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.692881668 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.685497734 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.68845112 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.690423083 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.687565269 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.688768136 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.690546293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.688239311 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.688113302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.687463292 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.690180559 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.685839355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690034812 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.691020267 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.69066432 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.690682554 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689825243 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.689781182 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.689715043 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.688821824 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.688323158 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.689993135 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.690684353 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.685636252 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.689782396 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.692753584 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687634507 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.688063976 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.687850839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.689927113 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.687932899 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690352655 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689786545 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689861959 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.691515206 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.690440486 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.691318514 seconds)
  done (took 106.634857588 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689799028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.692218147 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.689580709 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.69161335 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.686018612 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.6889932 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691911462 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.690516836 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.690062264 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.692733764 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69057067 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688837491 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692385869 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69193697 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.689545925 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69399049 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686642396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691356098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.689950535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.690938585 seconds)
  done (took 35.43246442 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.694474039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.689955353 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.687147937 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.690826488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.69229885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.690002101 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.691228596 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688151489 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692579741 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687845172 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.691972446 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.690926823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691764844 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.691752705 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.690565786 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.685648714 seconds)
  done (took 28.668963272 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.688922049 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.692160952 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.69097472 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.690618741 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.689430613 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.68887734 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.689437646 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.692392241 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.691374545 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.689924605 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.689377747 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.692658433 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.692902769 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.690228774 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.689962722 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.68855455 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.691470919 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.69061056 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.691395757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.695020238 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.686870734 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.689550126 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.68856181 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.690653093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.689128968 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.68915736 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.686366914 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.686975877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.685730354 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.687776915 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.686267507 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.691302025 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.687751793 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.686386179 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.68565814 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.686658627 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.685633489 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.689308168 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.688385247 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.68636656 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.686233652 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.686541574 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.689681657 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.682666427 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.686409244 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.688455691 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.686368812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.687509817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.686655006 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.685896837 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.686099907 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.687922645 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.685774233 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.686363692 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.684098722 seconds)
  done (took 94.490248496 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685020704 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.68802799 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.68643939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.686848014 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.687228285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.686107421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.687174274 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.685358401 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688900564 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.687508607 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.692169603 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.684771528 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.682345775 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.687707126 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.686120381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.686225146 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.689525666 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.68910281 seconds)
  done (took 31.987255247 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.687366097 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.687466083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.685838212 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.68791646 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.688322266 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.689307081 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690461224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.684683953 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688127544 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.687460977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683250049 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.68628669 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686940426 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.686399989 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.689962376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688936427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.685119633 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686822169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.686683892 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689746015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.684946287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.687465747 seconds)
  done (took 38.739592782 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.689438787 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.687974319 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.700587958 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.710226651 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.710447342 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.724767891 seconds)
  done (took 11.841010266 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.684912217 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685228585 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.686052679 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691156945 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685563405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685505194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685617167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.684326064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684446875 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68583827 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683937905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.68456721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684452569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684712119 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68512434 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686560325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684210055 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.684325545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682512484 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682492179 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683077876 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686672085 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683212053 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683741355 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682503464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682044272 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682773817 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684594322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683355097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682783489 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681145515 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682310768 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684445314 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681834417 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682155412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681979955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681055715 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68228999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682890077 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.67835709 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.677661026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.679338205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.678193437 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680234857 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.679783617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.678189038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680451223 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.678892112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.679217661 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681177669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.679939498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.678714948 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.679441825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.680457316 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.679563317 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.679745661 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.679102495 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.67585678 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.679303696 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.677488757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.675190967 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.678042699 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684234759 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.676217205 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.680125337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.678885151 seconds)
  done (took 112.628667713 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.676394206 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.678693721 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675830676 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.678767779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.678075523 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.679443673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.677594016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.679724191 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.678890883 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679707593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.678240466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.675430774 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.678032919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.677304035 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.67871534 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.678836881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.677358952 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.67823818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.675924117 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679950886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.677859654 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.677709952 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.677402109 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.676812582 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6786942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.677985344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.679366547 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.678664994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.677207755 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679707602 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.678441962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.678678716 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.677110482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.677292574 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.674899545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.676664067 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.677124747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684100726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.675782474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.677536058 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.675646864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.676738487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.677655678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.680921876 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.676870593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.67691092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.677799402 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677135922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.67599641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.676014202 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.676075657 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.675403039 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.677119461 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.67649679 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.678101666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.675250428 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.675500157 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.677784998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.677184607 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.677576097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.676208145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.676682439 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.67645254 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675863756 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.678425335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.676278728 seconds)
  done (took 112.33247954 seconds)
done (took 2338.606369546 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.688719973 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.708992066 seconds)
  done (took 15.008975427 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.837717163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.792001837 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.677663057 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.704674688 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.674315065 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.678064191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.688491931 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.675948428 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.678166893 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.675499809 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.678649832 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.862478417 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.67921241 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.679553506 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.674958329 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.766216383 seconds)
  done (took 49.0370608 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.679353136 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.681208268 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.689188635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.681034982 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.676723901 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.690783387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.710329589 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.680735506 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.712841901 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.689860936 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.745994861 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.687024416 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.67507771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.724397561 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.694835627 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.692354526 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.772466054 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.75305096 seconds)
  done (took 32.246039437 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.754695802 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.68952407 seconds)
  done (took 10.06084002 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.692185878 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.735339562 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.690165348 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.690187922 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.682206662 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.693073511 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.722944323 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.723665424 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.685295798 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.684725857 seconds)
  done (took 68.612175905 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.681311673 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.679725523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.675156573 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.672692526 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.670870937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.675352978 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.671224071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.675513328 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.325630935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.70904189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.685192507 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.678458951 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.674938202 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.674402609 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.672329117 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.697160361 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.78561075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.670208328 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.674380431 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.680167966 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.672167393 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.727279266 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.686670941 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.673675533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.705133007 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.327159518 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.681144827 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.680386169 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.807255588 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.67244819 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.677459756 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.861610084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.677375105 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.147593519 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.944138981 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.682116617 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.688977593 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.683195748 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.671532223 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.794464823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.673771634 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.680365276 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.614564316 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.922865556 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.76718182 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.72326208 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.984356716 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.690408946 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.675002261 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.705766646 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.683374574 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.674843729 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.690491306 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.181006583 seconds)
  done (took 122.066257634 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.671910295 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.021344047 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.839381577 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.679786292 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954017089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.87847711 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.675292366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.71730419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.676282517 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899721653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.923093006 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780766203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.674638253 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.675831969 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.675475038 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.671287236 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.828172997 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.74659776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.675251476 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.670471885 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699121348 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915391377 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.797400142 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.677288734 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.702098631 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884118195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.793510869 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.775028416 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.449558158 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.673389007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737035093 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.673601548 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.674731428 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.672728546 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.829363014 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.768966298 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757330048 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.676762388 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.676839191 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.673709396 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.333725554 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.873111964 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.770669896 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.803910915 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.92791381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880281674 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.452840943 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.674869193 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.41139763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.838923729 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.902218814 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.908252034 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.792071714 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.676317247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.010463831 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.672807786 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.675288265 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.9255697 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.897138972 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.768259702 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.676084881 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.676505516 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.673457013 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.912871714 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.676475007 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.769178148 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.674898283 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.672636188 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.770696802 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77585358 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.904251315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886900584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.704290588 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.013708582 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.17456023 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.922379778 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.737195695 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926706872 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.679156092 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.673409417 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.752213754 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.497569137 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.931701229 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.91609565 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919921598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710923007 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.395550537 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.679467598 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.902317561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.896125902 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.936768499 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.92587823 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.90940043 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.993192437 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.674759241 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.674606661 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.000058724 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.797887551 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.680443548 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.018796355 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906939941 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.199502886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.701820012 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.977690498 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.80502428 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.6811786 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.303248573 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.678675242 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.903536228 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.714132637 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.680172389 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.677872113 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.894296353 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.670995876 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.677982834 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.320323198 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.739930915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.680775768 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.909174134 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.681583288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946032686 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.681161051 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908889833 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.136412802 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.706950263 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.850068527 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.928645845 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.680370065 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.91657978 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.919936039 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.791358516 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.897432884 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.390521106 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.679062454 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962601718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.679885473 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.678300254 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.848903824 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.68002041 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81887598 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.679276493 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.972944038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701250727 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910706702 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681545293 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931627002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.709004273 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.727221354 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.682179234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.801700088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.677943469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.598260832 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.832607392 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681877879 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.678326464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.226272652 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.679533645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.829169829 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319960093 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697176614 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.748905967 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.340699575 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.683188681 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759843376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.700517295 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.070440148 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.680417984 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.929924294 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.680643182 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.6796424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.681047133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.914947708 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.860019999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.683384321 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.678288293 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.582342369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.681247771 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.679822222 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858646937 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.017634862 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.678475713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881814795 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.68397462 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.807404348 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.681306708 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.745206433 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.01576123 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.677601555 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.68159757 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.681468904 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.680150216 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.679363832 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888164246 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.703960076 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.174927317 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.815109845 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951168728 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.988854168 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.922087246 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.721290601 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.685389707 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.929420314 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.684316072 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.739525788 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.68387659 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.701136878 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905283699 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.688170541 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942358102 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.950980863 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.521686138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.727880625 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.683134911 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.683490117 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.677602282 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.823275046 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.764065132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.68241766 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.681459801 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.793638583 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.79910292 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.89001436 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.682645159 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.714748522 seconds)
  done (took 859.703907535 seconds)
done (took 1158.347189028 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.682688568 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.678533104 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.682888101 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.682925256 seconds)
  done (took 28.342156754 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.691705933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.687539715 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.683370998 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.683570829 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.684128085 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.681851692 seconds)
  done (took 11.729607984 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.684332291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.68264586 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.682131381 seconds)
  done (took 20.664698953 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.752299681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.061840649 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.813404343 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.093667862 seconds)
  done (took 9.341261055 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.683563064 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.682331954 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.683971417 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.684560829 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.693393923 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.692561826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.685656875 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.684281265 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.69500123 seconds)
  done (took 16.802600975 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.673906111 seconds)
done (took 92.169004875 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.72586206 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.694092865 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.154787455 seconds)
    (4/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.696335484 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.700221531 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.767659116 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.760649975 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.006020905 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.800323138 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.830422898 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.932866919 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.755802558 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.730246914 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.823300139 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.038622296 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.712094991 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.705833152 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.936731461 seconds)
    (19/309) benchmarking ("sort", BigInt, false)...
    done (took 6.699556058 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.833166594 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.118470256 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.699729649 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.492227408 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.857582401 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.820252132 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.719038415 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.901189225 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.798449982 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.72099387 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.707942924 seconds)
    (31/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.095894346 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.988566821 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.080167889 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.027808336 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.701628819 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.137321742 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.726581209 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.787591513 seconds)
    (39/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.72494762 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.024622567 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.48056986 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.882011526 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.786542202 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.700059196 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.937864963 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.854399139 seconds)
    (47/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.942220488 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.080690858 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.806699914 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.776462087 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.473017237 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.919687141 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.825410309 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.731434513 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.067113243 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.704340262 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.544669488 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.377673331 seconds)
    (59/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.701149855 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.812287622 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.948319197 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.696019739 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.853595194 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.719005551 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.699234531 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.177931026 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.786951108 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.723607636 seconds)
    (69/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.697834341 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.683751407 seconds)
    (71/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.868611505 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.487722359 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.816974734 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.716245126 seconds)
    (75/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.798999151 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.317646517 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.712163654 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.700282071 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.790728676 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.066451571 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.623070393 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.842434988 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.37869929 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.805075579 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.700647574 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.904117562 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.702616544 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 6.112715659 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.834239558 seconds)
    (90/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.940938848 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.70289451 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.110056032 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.705029261 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.938933962 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.704663942 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.790054044 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.001136509 seconds)
    (98/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.779709684 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.820944162 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.961660884 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.915011952 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.605126225 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.78225695 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.758178641 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.68221773 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.015616056 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.884009904 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.081585362 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.542481402 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.837368082 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.705350928 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.973027685 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.921105873 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.724165429 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.701004138 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.417747059 seconds)
    (117/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.701809402 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.434004529 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.842160113 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.699557987 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.093535165 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.064373182 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.880542762 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.168821066 seconds)
    (125/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.735176834 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.869020568 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.706899778 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.783726663 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.717819881 seconds)
    (130/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.77987419 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.953606431 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.761950774 seconds)
    (133/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.092643685 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.954512056 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.888907035 seconds)
    (136/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.925942324 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.783084242 seconds)
    (138/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.724158983 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.826291923 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.702240941 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.798209597 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.224586828 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.00236313 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.719511548 seconds)
    (145/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.147874878 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.714379899 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.151154945 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.015241392 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.991262584 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.706349826 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.823364868 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.706151006 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.827571244 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.264411422 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.054880767 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.704058819 seconds)
    (157/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.870105974 seconds)
    (158/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.583399761 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.708030149 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.845819281 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.704855188 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.044450036 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.70632853 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.351008578 seconds)
    (165/309) benchmarking ("sort", Float32, false)...
    done (took 5.441676836 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.961301499 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.705153914 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.947408898 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.705728746 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.181274333 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.911556498 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.723452899 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.704191474 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.941049588 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.707477406 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.732738747 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.703586859 seconds)
    (178/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.970218198 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 5.443351219 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.794031278 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.066315771 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.860039855 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.622214826 seconds)
    (184/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.188267068 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.707741235 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.406875728 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.705849655 seconds)
    (188/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.961658617 seconds)
    (189/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.021625791 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.803840872 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.943279794 seconds)
    (192/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.945925393 seconds)
    (193/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.904741194 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.896827956 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.829020717 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.836074755 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.805278452 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.810667227 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.098280192 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.948955166 seconds)
    (201/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.843701902 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.971089937 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.906096364 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.773339247 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.388732077 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.047811945 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.723579923 seconds)
    (208/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.719707051 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.056403554 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.803223955 seconds)
    (211/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.075641028 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.061836086 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.973966911 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.408147531 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.908166172 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.806253641 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.005110867 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.925343787 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.71067393 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.716650534 seconds)
    (221/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.808461678 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.032118769 seconds)
    (223/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.803894296 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.796570705 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.708606531 seconds)
    (226/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.733318416 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.732670411 seconds)
    (228/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.858667154 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.731643691 seconds)
    (230/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.946829839 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.711650979 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.802866124 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.815860653 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.860902769 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.904376692 seconds)
    (236/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.79426731 seconds)
    (237/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.2194665 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.055982546 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.948969979 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.090091174 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.834889458 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.025977231 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.716485912 seconds)
    (244/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.208878596 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.620440906 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.713016967 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.206810485 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.916866815 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.716780871 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.736116866 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.828004616 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.664900073 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.851337165 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.327380767 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.209900216 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.717283763 seconds)
    (257/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.178205485 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.48206601 seconds)
    (259/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.579308403 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.686283657 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.633735337 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.8478274 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.644457545 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.719223558 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.714985997 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.789533675 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.734827525 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.729295083 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.811634215 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.901092278 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068269498 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.715475258 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.13229937 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.72129302 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.03497138 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.71813443 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.833027566 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.733538884 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.847634851 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.817784738 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.015166779 seconds)
    (282/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.718872963 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.780759055 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.967451217 seconds)
    (285/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.847536853 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.717397144 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.821496505 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.711706325 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.823187073 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.853611488 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.024555807 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.716984802 seconds)
    (293/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.842857133 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.791789429 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.495146675 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.02519059 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.717502833 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.932803394 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.493337308 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.099926519 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.840920799 seconds)
    (302/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.791556176 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.744434964 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.384207348 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.102235195 seconds)
    (306/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.79776095 seconds)
    (307/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.051281873 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.936653958 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.097307213 seconds)
  done (took 955.052183094 seconds)
done (took 956.967945622 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.739329664 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.736683732 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.717452064 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.739780384 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.831681021 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.763748183 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.731727862 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.722873508 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.769896125 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.769077111 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.717170097 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.76294466 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.720875758 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.721697773 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.720158616 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.736701346 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.029290974 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.749281519 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.74067998 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.731376716 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.738496085 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.717502851 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.769568894 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.76373922 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.722331049 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.723557055 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.723943445 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.740090559 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.832755287 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.723916969 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.723502923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.732023897 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.026162316 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.744840431 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.718050379 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.740934577 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.731732613 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.730491985 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.723669634 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.752959289 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.117190866 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.76002228 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.720449005 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.721362841 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.721842362 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.727368957 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.72061711 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.729480426 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.738253659 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.736586697 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.111547042 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.77714274 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.724108305 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.720762715 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.733117998 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.720239011 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.725164114 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.737089716 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.742393822 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.737060887 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.015023802 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.757130364 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.724459253 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.741007453 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.730438893 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.146469723 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.759010154 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.730379561 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.117118668 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.77102139 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.147728924 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.772251114 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.726102312 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.738736626 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.755488886 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.029368583 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.750353833 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.72206838 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.732320454 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.721466877 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.737141462 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.736145459 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.729137342 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.723187456 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.738942559 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.769056535 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.73730463 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.723956177 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.735087216 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.742019673 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.732598417 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.736453137 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.726987096 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.720357852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.736321087 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.729676765 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.727494729 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.725699066 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.727858798 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.737126895 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.117824272 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.780755433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.720077119 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.722552357 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.720576155 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.739885238 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.116124969 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.762645645 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.747395125 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.772212793 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.726991221 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.015024704 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.755097517 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.742116897 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.737529051 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.727360258 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.721523062 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.016103492 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.142576302 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.782482689 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.724900748 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.722904292 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.739587377 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.724879841 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.722555886 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.032708062 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.754110485 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.741411454 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.847545858 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.739133718 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.757451867 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.722962319 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.729470875 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.775218003 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.738483497 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.7549529 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.723718641 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.739628361 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.739763306 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.718741277 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.735841808 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.737365943 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.725117709 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.730585914 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.720649302 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.770543743 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.738327697 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.738560455 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.744347708 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.845001118 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.720633994 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.013744405 seconds)
done (took 271.50821461 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.798943069 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.717945609 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.811141652 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.719283948 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.826423176 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.795220443 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.719499229 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.721359157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.72092969 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.207073929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.72021766 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.728642404 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.718526919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.722131316 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.806067629 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.721845145 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.722082213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.148798519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.72006883 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.799594064 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.718908191 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.720858391 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.721856662 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.208542192 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.724136997 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.720939006 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.800476225 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.721388429 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.162095769 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.718997544 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.721496351 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.161878711 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.800940665 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.747712213 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.729386026 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.725750839 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.812209362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.733591974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.787142929 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.80578222 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.817347136 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.754253913 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.720386675 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.720829647 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.725420489 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.722592931 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.721587728 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.754124809 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.72183689 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.727433104 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.156014104 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.729173303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.725129681 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.723851255 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.721913629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.75137525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.721762218 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.722509351 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.80297492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.721136002 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.790505527 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.21392912 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.202028426 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.721750827 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.722267728 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.723138817 seconds)
  done (took 175.27672385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.790463965 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.79947962 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.789509934 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.726799159 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.773633765 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.79082187 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.727780675 seconds)
  done (took 14.051486648 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.729611922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.721021767 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.772362967 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.773100218 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.722946304 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.879005537 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.721792185 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.736077031 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.729537598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.748583343 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.725180129 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.724176704 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.733942229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.721914669 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.773735889 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.736270678 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.83851161 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.726020758 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.723846093 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.872871227 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.729164283 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.732041738 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.749934822 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.736068932 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.722968202 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.72986505 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.289619467 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.72345053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.72416847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.724559577 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.724645556 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.765800107 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.724863813 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.726190713 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.726941652 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838538432 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.725096195 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.72482783 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.724478065 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.7239774 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.72420794 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.72393404 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.724263829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.72725169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.725123983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.748890498 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.727134214 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.726993364 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.727936069 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.725294745 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.752983097 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.726078252 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.726901074 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.731162511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.770681537 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.734178985 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.728295179 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.727244905 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.726905037 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.726622819 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.875432989 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.775519229 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.725075653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.778011248 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.727045063 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.725735842 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.727386141 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.72543118 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815774632 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.728940616 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.77884764 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.728336807 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.88766451 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.749452656 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.728143151 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.73141734 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.732439045 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.731075835 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.726706818 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.736871701 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.727663488 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.731902914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.733712506 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.733971261 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.728069166 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842243455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866951257 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.728500595 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.728844416 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.736571913 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.729378979 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.774583118 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.729064218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.72935245 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.782071311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.844968228 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.7569622 seconds)
  done (took 191.7070103 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.737151841 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.735099343 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.731798695 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.746820071 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.729098514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.731990718 seconds)
  done (took 12.072267777 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.731212924 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.732009589 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.727785331 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.73141846 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.727363266 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.731153068 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.731382828 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.730511631 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.732869305 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.73118335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.72892306 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.731648522 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.730959852 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.731636211 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.728959002 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.732392803 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.731472044 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.731699199 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.729418159 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.733195176 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.982962151 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.732224062 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.729643225 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.735006754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.732264251 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.732612245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.745628426 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.72854525 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.730742682 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.739618182 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.735044065 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.73173109 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.736588431 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.737541785 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.733889961 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.733181558 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.734395827 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.733693831 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.731622637 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.733236093 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.731515116 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.732990403 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.731824594 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.731549062 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.734630629 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.740040812 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.738439383 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.744243647 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.733739466 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.73345603 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.736060084 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.730679754 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.732736474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.732654456 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.736054621 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.739249846 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.736791879 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.730663981 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.73277175 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.735299104 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.740364501 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.730919797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.73256756 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.738447022 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.737220667 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.732955397 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.736624492 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.737377613 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.730660426 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.730746872 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.734844549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.731924416 seconds)
  done (took 127.719290403 seconds)
done (took 522.49645397 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.976680454 seconds)
  done (took 8.637063555 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.889711241 seconds)
  done (took 8.61218656 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.23201494 seconds)
  done (took 9.900477515 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.744851088 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.757646009 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.749419605 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.737959021 seconds)
  done (took 28.678367777 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.944147421 seconds)
  done (took 8.611157631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.757813886 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.730608725 seconds)
  done (took 15.22362854 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.884911959 seconds)
  done (took 8.550708261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.025613181 seconds)
  done (took 8.698816503 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.749065318 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.751509664 seconds)
  done (took 15.186207456 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.734295671 seconds)
  done (took 8.400010353 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.926138174 seconds)
  done (took 9.691340838 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.755626833 seconds)
  done (took 8.48815078 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.736209597 seconds)
  done (took 8.40098624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.789226233 seconds)
  done (took 8.453117456 seconds)
done (took 157.1997475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.738037685 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.732682293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.731440312 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.730762693 seconds)
  done (took 28.595388933 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.769374295 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.765230386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.768250185 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.776564609 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.770038645 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.765231967 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.759632442 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.7726036 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.776824011 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.768304862 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.768603082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.767766711 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.767063874 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.759721678 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.772557261 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.767726305 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.779606407 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.770769698 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.757439898 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.768791834 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.734564792 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.778315675 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.768329678 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.73579117 seconds)
  done (took 44.054840459 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.923563593 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.803595934 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.886707284 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.78714813 seconds)
  done (took 9.064096581 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.785870999 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.788833364 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.79823786 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.83616635 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.86219082 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.796094336 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.761567664 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.7545507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.741510575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.785548988 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.862817179 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.782860168 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.874857615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.73248669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.917198788 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.735299529 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.733541605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.786584975 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.83704365 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.85247795 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.736709307 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.788762894 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.790336415 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.782803557 seconds)
  done (took 44.791344291 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.736337132 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.742783417 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.747427944 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.735951119 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.736849884 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.735501041 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.743502795 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.741028127 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.75763567 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.73840684 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.73644865 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.736741286 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.744007138 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.7375723 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.736699462 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.749094895 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.751636456 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.739049915 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.741520855 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.747266979 seconds)
  done (took 36.50044659 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.734795343 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.583875245 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.081586157 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.985753607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.735272393 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.732478935 seconds)
  done (took 30.519844882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.74897864 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.742613871 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.737335957 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.792714683 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879975114 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.743584334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.737661349 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.749025544 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.78227509 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.807633935 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.757235689 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.765357021 seconds)
  done (took 22.911163725 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.736930336 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.735324752 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.738444188 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.749805308 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.748080445 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.744858308 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.745662335 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.735399834 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.748990287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.757771171 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.746507339 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.74962691 seconds)
  done (took 42.60954459 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818317805 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.610023821 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190791291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202058644 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260246873 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939508504 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.734781789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.824036383 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.739779358 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010541152 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.124878933 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944502782 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980445889 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467942659 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.739826284 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.22613927 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030664656 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958942828 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767784383 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432653007 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849477915 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.243808347 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.384538702 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.851283258 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94245052 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.859906127 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.000550074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.693997874 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785863573 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738707418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74356422 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.741322569 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010176028 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856942132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809235385 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741534161 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.152757425 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.444670287 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.751448638 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.605661984 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.32995293 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.865845107 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744644818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.739967631 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.667951766 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.248402031 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827925592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.74219588 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.439336069 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.743495898 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.74432606 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813495551 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.741830805 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.544823299 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426509003 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00774384 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.738315339 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743118373 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305207899 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784340245 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341481714 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.672306486 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.826370844 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450337147 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202708399 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.903066741 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.741048194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740620719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664614636 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.444696254 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859720151 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876372422 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.754456985 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381649643 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036196277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.199075507 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.796632142 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01557301 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.580353699 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.669304512 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957431002 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689145212 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.666707019 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.587972228 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.665673285 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962599176 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776414818 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.352656133 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779453757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823744839 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747523961 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755381615 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743964803 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955783146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.635412739 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.741718234 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.069237174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005377456 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756488448 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.826942106 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668312965 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.742430331 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986926358 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.947192817 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.969176064 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.227584413 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833282697 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.538292145 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.857265384 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.652157261 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.746552813 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.015253532 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806280824 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794477289 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863791459 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.686574935 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991354419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.579589191 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.939508788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.133197154 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983821903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.092328395 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990408471 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80088439 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.743086564 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.742137145 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.454406993 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36009684 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.963177638 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.759841426 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.213170137 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743309068 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.743969453 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678513927 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.394291737 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.142036661 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.834402935 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960635372 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.678556739 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019799989 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673072606 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882350347 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.761973702 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.957269939 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.402347479 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.836477224 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996261854 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.83905048 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.967682859 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878494117 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762388312 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839113125 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762596662 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.02250367 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105904753 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.749610467 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.752749379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.480275767 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.809543538 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75287895 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.751218811 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276996013 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02566267 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782353609 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.753095653 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.623845254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.762415129 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811902508 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753488942 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.752292774 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.272095647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.254230592 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.755509034 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.420583176 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963213634 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750962253 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.415513228 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932124715 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.760488402 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024046885 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817773747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.675144154 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.447521492 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.448075368 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.746036419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.67999285 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.751045875 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755461355 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756288711 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.941029197 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029457338 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80441217 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.462289226 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.85835596 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75694196 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.751860929 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.752640756 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.242238287 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798555252 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.233732828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860092435 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879720016 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.763946123 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.679471671 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.756874909 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757771945 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.752466117 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.703636237 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802542856 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.459645485 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963265932 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003565162 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.161502668 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763678346 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.467464548 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.874926818 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.767386873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096434789 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260278147 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.852495188 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817355105 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.760866015 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.466145553 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492387348 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319648616 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060435667 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079172644 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117926172 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.091425038 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.073599529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839596839 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984171504 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.279767701 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811655454 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.844424012 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691491806 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76795343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.410579982 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114212859 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762320454 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974776663 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058070613 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.164030734 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895739144 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958337091 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785834314 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.528885969 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777850774 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.290186314 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774293851 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.273568271 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964071438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839839713 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.107467213 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.838927789 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.757238574 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104721558 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804565934 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.460194175 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100976361 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.128146201 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.272334703 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984477721 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.754437614 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.195062742 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110286334 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.918230146 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.867228006 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679088113 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.759765723 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.7583212 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.76842751 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.725669688 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.592573422 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.998382685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760916247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981399398 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.852965846 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116208762 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.661505878 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.755655326 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.754338411 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002615838 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412179546 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902574557 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.019845778 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.315604527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763893096 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683811483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681698176 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.456285683 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.756578469 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722143037 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970215622 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.858870352 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.435060051 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.099200973 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060438792 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998081211 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.767319352 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031047529 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032079794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.244586278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773904929 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.851305118 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.1058424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.469258339 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96975579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982896695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291555194 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974668735 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214325075 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.731352212 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.757839528 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961983406 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.97066798 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.169744201 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935859538 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.467604448 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.762613154 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118123414 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817497825 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.277022931 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944180456 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.843487685 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763745054 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834199546 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759633609 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.76337101 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.763435043 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763647122 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.167782469 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879480636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.770909036 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837213478 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815848241 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.331449343 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.76661188 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037883776 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117041949 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096721927 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822706944 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.761362729 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771347854 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687843215 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887924539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.204093894 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03494467 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.880276119 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.899533965 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780487276 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.136516993 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.991940329 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064888062 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033206515 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.646301048 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363104651 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.872581971 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.977046693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768372342 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.967070103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985223314 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072632452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330562113 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.874608144 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945987901 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035987207 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.122213589 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764082345 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343678524 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.776648359 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16336152 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.801002091 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.170443374 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02088484 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765755665 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88127226 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.765730597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.961919861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.21616819 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.430904409 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115786585 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620839466 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.767353966 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043031476 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104140879 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072286545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840391026 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769928347 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.455926937 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897062793 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.622149012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994196127 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767496014 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967588073 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.473304717 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.767788799 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041088347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074233091 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.769116652 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.665584393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79551912 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.772535438 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97897892 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988263676 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018543061 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772409667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.768199256 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.574282957 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047581919 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831875252 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691055938 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.765545159 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814689149 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.993674668 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783544436 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.283679849 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.469007787 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052183489 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.676742172 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786887946 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.183813828 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145141932 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102047875 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.290215146 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989513601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322129663 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.574590686 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139558456 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.772123524 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.140216513 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143971202 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.769014886 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.243022372 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873078756 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.041553343 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094791068 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.784880828 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494932441 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.803380586 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982884425 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.127736062 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696423057 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774144665 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816072674 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.768069574 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.774187977 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773999091 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.707275937 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.187937308 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.604065668 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326610114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.772330303 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.772617753 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.304450648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279786745 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872920644 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788165582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780876635 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.472632987 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.056918589 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017938954 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.246790906 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.856007834 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.77227904 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771267475 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689268164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955498226 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.957701566 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054792686 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.073814429 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.874093997 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776195892 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.979142449 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974169007 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.192309151 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906189824 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.862668787 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879095941 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.71280366 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.477278422 seconds)
  done (took 1606.414906138 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.784222362 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.787080978 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.786446069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.807471062 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.816879254 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.790073955 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.84151285 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.779704144 seconds)
  done (took 56.097518323 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.775088408 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.927468915 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.781335183 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.774850128 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.778528372 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.771697328 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.930147068 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.783186623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.777504579 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.78037285 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.772335214 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.773971322 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.04250874 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.788050718 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.769805677 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.226734275 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.783184558 seconds)
  done (took 72.949891552 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.776871547 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.147416775 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.803985703 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.77810482 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.584450597 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.788543519 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.795979822 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.812188387 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.781110688 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.822865289 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.070948701 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.831083243 seconds)
  done (took 88.697703999 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.785474369 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.773927635 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.777138943 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.776511884 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.775566827 seconds)
  done (took 10.6030791 seconds)
done (took 2095.490359647 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.004746322 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.831224448 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.877981847 seconds)
  done (took 5.411312374 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.920448711 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.966330942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.081430446 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.089470541 seconds)
  done (took 9.770325209 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.080734961 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.148043558 seconds)
  done (took 5.933449718 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.098031183 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.805291898 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.187044653 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.7751998 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.77910212 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.778890992 seconds)
  done (took 22.045059922 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.777873143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.777819827 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.776564713 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.777119562 seconds)
  done (took 8.815479939 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.773156653 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.485498084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.775829152 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.786372642 seconds)
  done (took 20.527690258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.924202623 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.892084253 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.919846681 seconds)
  done (took 7.443555331 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.920832017 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.634155501 seconds)
  done (took 6.262257319 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.91712535 seconds)
  done (took 3.622590092 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.804477822 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.042816121 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.268688402 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.29505715 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.352714131 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.601815181 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.109041771 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.000136262 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.224878929 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.227244432 seconds)
  done (took 23.634591733 seconds)
done (took 128.266572614 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.121185288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.80611849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.982270741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.134730213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.014167881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.981131523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.994543103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.12837904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.814596779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.80266614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.142491086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.012629231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.929214893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.796188837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937784482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.795058915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.012678821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.146470914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.8189002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.059397942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.999315018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.779335424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.976802022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.794283606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.039042359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936329155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.324947699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.796840039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.963046369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.336685719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943154522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.202349829 seconds)
  done (took 165.228958378 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.779612897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.777454322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.776526298 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.781133219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.344535536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.782827703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.777150387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.779408299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.233300898 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.222621406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.77697847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.337662042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.778212936 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.781872823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.784511657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.78065049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.406561602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.782534199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.781149642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.778138605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.77949484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.170551461 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.786064693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.180315924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.393443927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.780794193 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.782158139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.782267756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.780068365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.780826509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.783692804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.781379933 seconds)
  done (took 206.73667316 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.687832791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.783296204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.78436639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.781936479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.783252151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.779120235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.782453345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.782818097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.556809674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.550894633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.783201155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.78394115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.780382706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.782926718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.784846893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.782348237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.783616958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.724700869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.785306102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.78378344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.784027253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.370986123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.782096501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.379960812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.781335473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.787455478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.784479682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.786016686 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.782241454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.78501156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.784354386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.782797535 seconds)
  done (took 217.352088643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.025240371 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.784368199 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.787331069 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.705899641 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.787379368 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.782654879 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.772889942 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.032392222 seconds)
  done (took 18.3973876 seconds)
done (took 609.431415611 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.145404565 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.98764322 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.955109362 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.808894073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.05780803 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.852722121 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.804452399 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.868098308 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.614456019 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.878944129 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.461902637 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.831451418 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.553187041 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.834535866 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.927714731 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.865360132 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.358028998 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.455266509 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.980490964 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.8674271 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.981614145 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.698657499 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.889141674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.64097364 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.584836711 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.750270377 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.813887245 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.360312918 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.816246272 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.958874464 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.460056552 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.067424616 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.820819198 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.804087852 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.862844322 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.837847512 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.998347882 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.819860501 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.92767285 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.507357267 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.87988635 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519627991 seconds)
  done (took 98.82418776 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.799433923 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.792159109 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.792771592 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.792947966 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.802463012 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.792146506 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.792873334 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.792824772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.793933597 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.794510006 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.793458773 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.801646888 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.793291653 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.801328481 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.79469184 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.795637858 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.793085056 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.801701717 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.791960525 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.793956602 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.792851108 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.79370084 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.788852971 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.792998493 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.793944493 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.793386212 seconds)
  done (took 48.388646906 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.788469067 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.962229161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.030838591 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.809655458 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.789010088 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.793389261 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.807486717 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.793062212 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.790752186 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.791976823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.8812618 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.795683787 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.806820222 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.042787222 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.806546266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.789862245 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.788553859 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.790229075 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.968157668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.804990675 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.80846634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.795538056 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.810257888 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.803268351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.791295478 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.792099724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.79450081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.293052228 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.795533437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.881622359 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.836370608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.814184884 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.202341076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.051774269 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.845538058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.796485593 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.789461392 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.883355747 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.796073491 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.792736053 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.810441275 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.796958796 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.036515385 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.338061012 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.806982088 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.788319769 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.301644499 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.8900792 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.832618034 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.800534149 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.03752851 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.807430601 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.790881591 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.791053969 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.826707132 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.797199262 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.792594637 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.165376837 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.80208954 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.810218125 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.79574685 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.791487166 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.975952871 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.802461349 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.962960787 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.799685777 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.799743993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.791870535 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.040438299 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811100874 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.341019445 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.808155469 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.791321963 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.883808234 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.96995364 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.329294782 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.800164941 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975550505 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.222642504 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.818458805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.799062052 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.282636238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.819972874 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.800854188 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.793081658 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.795486238 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.794387035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.841515244 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.808507525 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.25504861 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.339694187 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.184492817 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.819601632 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.805382872 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.794289569 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.166097016 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.80299307 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.792958143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.029333578 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.352906694 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.807492627 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.801774455 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.326648401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.809854923 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.813146058 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.799513516 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.043169839 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.809964223 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838996631 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.79332857 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.802947124 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.797262374 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.814844838 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.800474797 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.796301952 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.325348838 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.90217378 seconds)
  done (took 223.625969217 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.795040021 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.795741461 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.791472873 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.798149573 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.789786871 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.795564233 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.79120524 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.791456816 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.793816674 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.792887267 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.793469141 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.797611457 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.793253919 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.798156996 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.797983943 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.795420618 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.397213708 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.794573288 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.795826343 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.793736131 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.433747417 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.796960098 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.794240406 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.793172516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.792442216 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.797124997 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.803881895 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.798965895 seconds)
  done (took 165.229771078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.795346592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.906194955 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.811019688 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.823463177 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.804157819 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.797407447 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.895348733 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.81664913 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.799281509 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.794606097 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.79601718 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.855330159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.805596817 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.8947931 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.827450173 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.902202565 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.903507381 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.802005797 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.797753489 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.794720667 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.826520214 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.801205929 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.857843434 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.919272611 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.814737224 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.910873527 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.8159785 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.79694194 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.798200751 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.911539763 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.813369356 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.855492887 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.826913931 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.814978109 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.916489828 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.9115543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.903159671 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.900846206 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.805898043 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.794177685 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.798275478 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.798560496 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.909625719 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.815450442 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.799814457 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.913152323 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.814865845 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.800173837 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.793766763 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.797357575 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.812619717 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.81619487 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.862212221 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.925284869 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.831562105 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.820887496 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.894629307 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.9222197 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.799239132 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.895770855 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.806646 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.91173909 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.816772752 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.798944363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.800476767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.802351678 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.827370288 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.902988724 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.904458101 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.80548762 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.896788684 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.835416474 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.803422236 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.797419171 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.799180115 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.909556997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.915189125 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.835523123 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.836194996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.828410587 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.80787323 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.801459532 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.802230739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.814370083 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.803431294 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.913681768 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.91656013 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.806776308 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.798160383 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.795553494 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.799087773 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.820469118 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.918605081 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.836390556 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.904283592 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.863015045 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.872458294 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.814477708 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.814379633 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.803234618 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.863331163 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.813350103 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.809263807 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.085588995 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.858329712 seconds)
  done (took 195.139236253 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.172244785 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.849109309 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.854689891 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.108012143 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.161217051 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.706333273 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.844834889 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.845521236 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.870933408 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.028455218 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.914046649 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.864990624 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.831340944 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.821142519 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.844116736 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.871268669 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.854062548 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.180324497 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.066090338 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.009937626 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.835183201 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150857102 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.157727269 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.414973056 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.895934755 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.236393921 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.40935423 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.978607046 seconds)
  done (took 59.513732501 seconds)
done (took 792.435807439 seconds)
SAVING RESULT...
DONE!
