cset: moving following pidspec: 17922
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.971576736 seconds)
loading group "string"... done (took 0.622004433 seconds)
loading group "linalg"... done (took 9.863657302 seconds)
loading group "parallel"... done (took 0.20827995 seconds)
loading group "find"... done (took 1.561445594 seconds)
loading group "tuple"... done (took 2.243058204 seconds)
loading group "dates"... done (took 1.519294979 seconds)
loading group "micro"... done (took 0.239976927 seconds)
loading group "io"... done (took 0.596597192 seconds)
loading group "scalar"... done (took 48.881690081 seconds)
loading group "sparse"... done (took 15.112299219 seconds)
loading group "broadcast"... done (took 1.214018448 seconds)
loading group "union"... done (took 13.592680363 seconds)
loading group "simd"... done (took 2.798818716 seconds)
loading group "random"... done (took 11.04099607 seconds)
loading group "problem"... done (took 1833.121116187 seconds)
loading group "array"... done (took 27.547650106 seconds)
loading group "misc"... done (took 1.252466804 seconds)
loading group "sort"... done (took 3.956556654 seconds)
loading group "collection"... done (took 20.363132146 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.797592057 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150758456 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.233661121 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.397383935 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.246827745 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.17005052 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.182894741 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.597260303 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.021857196 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.297955103 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.164009187 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.624556991 seconds)
done (took 6.563430251 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.268275889 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.406211177 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186013052 seconds)
  done (took 1.207870431 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081968796 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.199685955 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.118947483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.119510393 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106151717 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121012955 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.118542111 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118791146 seconds)
  done (took 1.521301387 seconds)
done (took 3.704653999 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.584438118 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887381049 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.552481173 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.18522283 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.213040876 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.192804554 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.339791434 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165360448 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.136963036 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.120812251 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.220315951 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.381764769 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.536837786 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.026230382 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.11281689 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130805522 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.089808731 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.712170935 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.089073426 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139845915 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.622849125 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.125887446 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122643497 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.131437484 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.209579101 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143062083 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.177091263 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098836512 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.68406815 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108608012 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.242071194 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.090608807 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.184292153 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.265283901 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09177749 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114079929 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680955988 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190742188 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126068382 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.120787069 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67965621 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087279762 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.257050755 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115387952 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120057273 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191526672 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.126504074 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.100134857 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094963396 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10615396 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165991283 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.469037957 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.112403038 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193711298 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099851866 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.708818014 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108110886 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.162845998 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.147637776 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114242755 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088627354 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.1187394 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161566595 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120348442 seconds)
  done (took 20.718374618 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.173940961 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.178938842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099406372 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165699871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.153125611 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087394439 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104992355 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083578842 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.137501858 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.199512566 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.148819416 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.198894365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080591694 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.109165148 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.152507346 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.260108281 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128529483 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114676059 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.106240777 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113516795 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14820978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10414299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117306874 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.119012625 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178718621 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211546102 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.131051489 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128577183 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.106660298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.124324761 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145368774 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156672304 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096592939 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.10445065 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.198290501 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125493196 seconds)
  done (took 5.630458454 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235620236 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125273299 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250884876 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.212175644 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.189530678 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.159672679 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.176897194 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167040736 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.318664516 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288224576 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.196830208 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135216666 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105455023 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100309611 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086258671 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101878107 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.805501808 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.195191963 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158738803 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176835245 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108868813 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088203897 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.391281468 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108882848 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.102021574 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094138713 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100585716 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.218648193 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109952449 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.552323146 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.106447087 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124025421 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097004466 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137641792 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.103655162 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141065137 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153925911 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091965912 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106531692 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.247888367 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100425974 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100175385 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134672781 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137589778 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129895331 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107608702 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118100719 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.26397476 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090158571 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129298182 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.203625437 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.221193751 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144345916 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.087969101 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.415545776 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104910863 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112750437 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.104614762 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.33816171 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148199093 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091766953 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.105519181 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108559751 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086237105 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.456609606 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100401379 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.030044892 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.090707376 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198864764 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104817455 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097716827 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107942559 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107274257 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.107529907 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.103987032 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083395195 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102883649 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099250324 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091210331 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.126755964 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105227319 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105143285 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086691556 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168008299 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116314218 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122349809 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13053996 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.108552375 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084588888 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134399374 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102332995 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105320109 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184393872 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113439476 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112082343 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10794426 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14813161 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102449328 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.224052041 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.1046189 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.131512111 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106552382 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119939541 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104420404 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.131495894 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102802754 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091170631 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101952498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.102017514 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152903174 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100823083 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084524037 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107092065 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.120620956 seconds)
  done (took 25.767097606 seconds)
done (took 52.732685766 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.526311179 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.128740983 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128262275 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.12782863 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.127783809 seconds)
  done (took 1.745425207 seconds)
done (took 2.423630192 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.419703702 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.213702851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.128747715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.211024201 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.113808925 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.236367858 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.200443291 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.130187979 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.250046144 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092897417 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.2243076 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093176592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.114182539 seconds)
  done (took 3.137098031 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107906705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.131811358 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090675467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121922135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100316528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105118849 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119544397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.139513731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104556018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113661561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085099119 seconds)
  done (took 1.896567382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103255641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125649425 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091984384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118964731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100954445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102960157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117754533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127511198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103668218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113849599 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085045867 seconds)
  done (took 1.871809793 seconds)
done (took 7.576160052 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.202077589 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.076565678 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.160763582 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.21417698 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.405500766 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257853481 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.632130667 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172881304 seconds)
  done (took 13.028784109 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.185244303 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109164948 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093228143 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110122763 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093033647 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.109695429 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107528616 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095748095 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108650551 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093004532 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108208385 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108132721 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093412688 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110346188 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108404023 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094469378 seconds)
  done (took 2.473999837 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145612396 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143880456 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101515981 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.12183352 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113753566 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098665763 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.117215107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114490717 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097403331 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.114028295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120355251 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.119566806 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103771165 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112323294 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115158055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108330374 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113100852 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116930143 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116462264 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102809664 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.121288572 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.113913905 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104580679 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.121690162 seconds)
  done (took 3.551494491 seconds)
done (took 19.734750157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.187714886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107213323 seconds)
  done (took 0.979292124 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.160929314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.162098835 seconds)
  done (took 1.013695116 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.121054742 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.106591503 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14934607 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.125304271 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.106794251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.092356448 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.144325118 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106605443 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.105649611 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094086159 seconds)
  done (took 1.845896382 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096587146 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11044835 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118756347 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.158504805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119594337 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096625785 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111921775 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095451887 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112993889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.107926624 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101163834 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.132518906 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.113797323 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132117256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109993624 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101563896 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.121280767 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.114889525 seconds)
  done (took 2.752026271 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089865581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107884349 seconds)
  done (took 0.893616528 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096572795 seconds)
    (2/7) benchmarking "second"...
    done (took 0.107195648 seconds)
    (3/7) benchmarking "month"...
    done (took 0.111244631 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095905732 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.107972295 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092461093 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107852413 seconds)
  done (took 1.414553473 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.587457495 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28933754 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.402104955 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.13266937 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.154313068 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.416194228 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156017452 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.126655897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126211481 seconds)
  done (took 3.133353962 seconds)
done (took 12.725477116 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.099279432 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.246674215 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.648711856 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133071385 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090242794 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165893626 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.338129479 seconds)
done (took 2.422797344 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.388985397 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.169403913 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083146149 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.104610661 seconds)
  done (took 1.442126422 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087145498 seconds)
    (2/2) benchmarking "read"...
    done (took 0.115246459 seconds)
  done (took 0.904507357 seconds)
done (took 3.05508998 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089299081 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136541512 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103671987 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.08880887 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104208972 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09068165 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105250282 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089039794 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.103893444 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088922086 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103748533 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103943283 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.090837374 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.103748983 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090159766 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105035076 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088270866 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105001889 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103212913 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089450034 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103688716 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089817182 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.105283898 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090635177 seconds)
  done (took 3.114201074 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113700469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.109308961 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111147023 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09567926 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.113659792 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112175555 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096826693 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.109082901 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110956548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093037725 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113297818 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112199437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09247299 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.113861955 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107984688 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096888461 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.110995379 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109545058 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093226024 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.11286065 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.112137307 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093434358 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.113753593 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111555505 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111904134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097353326 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.107520135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107720273 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09739786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.11319295 seconds)
  done (took 3.902663305 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098959116 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.101490514 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087467781 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115630002 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.101077523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091294766 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10163889 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088492665 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.104275437 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086781516 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.104486569 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.101660145 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087102452 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10291408 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089742383 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.110637174 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.122990957 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088694459 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.101994593 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088527439 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109488104 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086597065 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.105846799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101980336 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.087770968 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.101099225 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088452721 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.101342838 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.087965156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.10281756 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107285955 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095243879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.101562028 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100887345 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.1101897 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.101547167 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096973879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101850648 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088780823 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.102878825 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085997793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103946443 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101320257 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10416398 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106959242 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088797268 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.102840007 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105134656 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.088783025 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106673913 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087429468 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10363766 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08998685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.105470091 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109037744 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08922925 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.104868285 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088085749 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10400994 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102319821 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088006969 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.102305699 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095420003 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.104387007 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129914082 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101585469 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.104230636 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09180729 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107207111 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.111484007 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091038574 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.124822932 seconds)
  done (took 7.900075615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094326904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118311668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09239759 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109563463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104142312 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087943397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116119308 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103029166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093751306 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124964461 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105893035 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093601494 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107670732 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092319241 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105364411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107549391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101265981 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104708848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088473895 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108443985 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104037471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099279738 seconds)
  done (took 2.982871423 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.271011539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100346327 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.279491404 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125204357 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.130686182 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123663208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096235073 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115707181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11516194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11915943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10410971 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113097384 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.131133731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120230075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103639562 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122120219 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113777096 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.121527536 seconds)
  done (took 3.127441198 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.110777716 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.111746316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.134795105 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094222896 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.111922689 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110338545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102534011 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.126640559 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111129339 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095803491 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.12088699 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112204535 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095136952 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110743953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110375322 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094897866 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.112055219 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110113171 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103807219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120343317 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12009207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121763977 seconds)
  done (took 3.163389016 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110600086 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111161674 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.149019424 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098965357 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.107516536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105664389 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100713147 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.111648475 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119283856 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093950359 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111641682 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105657441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105267149 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111557509 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.118285934 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095783836 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111318861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095073018 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111357149 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.105286883 seconds)
  done (took 2.903577843 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.189417829 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124819621 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110473693 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139913985 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127134459 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109780656 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138357928 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125576707 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123846236 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142789272 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110319152 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124368828 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138611737 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116599372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126242936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139431488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138815441 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139203631 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109513244 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126532207 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1425364 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126252618 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139725204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110627008 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126777357 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12573711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109543885 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135757115 seconds)
  done (took 4.345259962 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091131752 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107113289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092159178 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108219469 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091285024 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.107371697 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091165685 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10928886 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108170949 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092157258 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107985817 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092628361 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108750343 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090691979 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108310791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090884656 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107917982 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107566996 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090961408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107463734 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090351211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108265572 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091057134 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108467993 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107424356 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092143751 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10747153 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091432811 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107052161 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090799007 seconds)
  done (took 3.736690348 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108249328 seconds)
    (2/2) benchmarking "in"...
    done (took 0.138203805 seconds)
  done (took 0.980791589 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09393401 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127690509 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088272806 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115489361 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12084236 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0931688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121726765 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119995642 seconds)
  done (took 1.615323434 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163708191 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163930758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097668088 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123280435 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162547572 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155870185 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.180041719 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.116642998 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112612256 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090480683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.160885203 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.106297497 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.098508043 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113908621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.115316833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105234653 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108846918 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119272999 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100811114 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112384074 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114908543 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108917616 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118001521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.120511261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091575069 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.119958438 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.123631798 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106906367 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111751329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.120044039 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.097328463 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.107266712 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113669763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09828802 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.108420521 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162500538 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126269172 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095982807 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.117221027 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115776831 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104096378 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107439833 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.118602419 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096818026 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120194401 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114249471 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100317081 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108063214 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089464054 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.110022133 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.106913893 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093727294 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.106172461 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100907289 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.117670836 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128494968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111503346 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094744472 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.112170193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092129626 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114301127 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109789193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102342272 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114618631 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117367217 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100268447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115723598 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10832011 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090103051 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108774111 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0989774 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.134035073 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.120576503 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116618564 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100443476 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108071961 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095534894 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118020631 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115297846 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.118895329 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098719436 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118701295 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100742885 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111733557 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.119813618 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100194105 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111575192 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.111908839 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091579575 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1305596 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112167008 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091182713 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.116372793 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10214673 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.11304478 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113543165 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.091495635 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117053777 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089091945 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116904121 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118074932 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097393885 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.122957565 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117398331 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099643131 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.117836934 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154731568 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11337136 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093006185 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.109505726 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116867099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092949055 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116951142 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09008285 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114314738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111327838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099703001 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.120001267 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.112153645 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098763785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119986967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119430983 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095514236 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107961331 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.093647932 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116064948 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120139989 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.102916555 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.113842028 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108551122 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091853687 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.118809744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115026569 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0984588 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116712812 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096099305 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.10809705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109311768 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099833332 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.120691179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110491779 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.098337019 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.119895068 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114664928 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097563807 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.119374471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109091291 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.090145935 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.121933947 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110820407 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092944573 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122252059 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.094396361 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.114667883 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112507409 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103912999 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.11375795 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116930087 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097283837 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116590521 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100222642 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10835198 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114099175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096902587 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.122308048 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111751424 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09183712 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.1090808 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100514932 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.109154878 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115325691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090366818 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.113730448 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116168604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092958963 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114371796 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095083093 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130002943 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125008251 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1004293 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116445144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119513128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097946942 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.116082984 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11521261 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100449084 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.117954877 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.118086104 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099361983 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118413388 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093945136 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.11002318 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114550158 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1023261 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109251419 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09166896 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108598451 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.116505938 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105046751 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116573913 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116424912 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096532751 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116473831 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121477732 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.095929497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11789774 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090779067 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117432196 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123067042 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101761542 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119543176 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.120587515 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097332159 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.11061067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121185566 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096602095 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11719072 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092946604 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109598816 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108870297 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101608962 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.1152396 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094433754 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.108714885 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119855864 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102926738 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.115060945 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.107154671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100316718 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125904593 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094241636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118303742 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.114296413 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09893418 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131122094 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109094666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094969346 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.124446194 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117199629 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091266983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.117291156 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.113670761 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093683317 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116786831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095557661 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115973239 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1205583 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097489806 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.108837532 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.11198753 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096712019 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108586988 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092107909 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.122086213 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11464228 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096789462 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124785733 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119462438 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100412501 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116603268 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11564597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101004051 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11888845 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115031884 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100444949 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111223714 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090130154 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.114220267 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107553068 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094139057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.112444003 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098985706 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.116403078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114877693 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098291807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121952307 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114722784 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099254253 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.137579233 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111487875 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108476703 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098110195 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117995487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094593109 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.115063576 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.110333266 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101306212 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116996011 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121586128 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094989701 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109277567 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100882738 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114389106 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119543862 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100456631 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.119966606 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112443205 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100094217 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113944487 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124857888 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092546968 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.123054505 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116753771 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099628049 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.115519893 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097556511 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.113822979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108877173 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.096862064 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119157773 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.115578231 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098766486 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.117809521 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114139536 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.096088325 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113422258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101417757 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.115305002 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120456633 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091702821 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.11068948 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090615903 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118514126 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119814894 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100310399 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111808079 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115856533 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103378064 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115998901 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091357688 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121779027 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121152306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101081878 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126548035 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108865744 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097487012 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128021492 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109329019 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097240056 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11230976 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093226253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121478415 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119051692 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10333268 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116424498 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108938307 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093231865 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119672297 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097718782 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110933313 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092632203 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120700911 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.11165875 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097063708 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121532334 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.118343847 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102240772 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121332202 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115757217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098262877 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118417237 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.091484986 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.111366761 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110519275 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.096943426 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.119082209 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092149057 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.111395338 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117954278 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097178761 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.117400895 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117706461 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.095078778 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122973711 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09983822 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.117924293 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125910391 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09315045 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.116444585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.116425944 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101140394 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.110409771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098096694 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11788321 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120333874 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.103017091 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119921974 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118239885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100197341 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112171226 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099601144 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119263161 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118866346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091859265 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.121967312 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122409731 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.093805954 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.116800556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097239188 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.113121623 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116737051 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101545323 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.117127422 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123937869 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100442821 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.117842178 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11957743 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10094135 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117233703 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102137569 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.114914876 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120732325 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.092342037 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.125328802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.117905025 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104574752 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.115375334 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111586239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099761773 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117914617 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098957227 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.124561922 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120873147 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.092396671 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.112084828 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113232855 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098494637 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124916815 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122696339 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09869159 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117119151 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094457004 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.112485229 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120990423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09425969 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115593412 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.100371125 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121728681 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116553503 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09368637 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11816363 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.121966912 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102347885 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11963182 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111685422 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.100155922 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122043717 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11672451 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095627078 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.115165815 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102074059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.119551401 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11469288 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093647468 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126994202 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.122377663 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103314612 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115725241 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.119018058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096421375 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113046161 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121449776 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.098443545 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120688142 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097054971 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120758421 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129531768 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091766212 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11594099 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.127951586 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100045969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.124363014 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.114014266 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099018814 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122197709 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121444271 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095251005 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.11205861 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092955001 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.117995498 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.11073911 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095550203 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129475472 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.120984593 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09988449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119319412 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098699389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113642466 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.112588054 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093291938 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123160341 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096310873 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.126309911 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.112108876 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.092665971 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.11546576 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118864763 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10007744 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118988535 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093590585 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115005671 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112467009 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099931076 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.125923383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1181703 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100454423 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11800477 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097793082 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115827577 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126843622 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094147451 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.118618853 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130451351 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103421616 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11997318 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.120760026 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106307746 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123829652 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.113186926 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103011184 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117767388 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.117922753 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104089693 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122765111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13563722 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09994584 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11280465 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099263807 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.117877016 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.114354375 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107552679 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123292146 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122648661 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.100738663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115843604 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123579924 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106248152 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120440888 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.118111371 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.099741888 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118773292 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096638604 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.119556184 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114866953 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102777608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.122787006 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119170984 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105089702 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.112448557 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129560772 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107258955 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123139922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093633853 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113705527 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112759932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096230575 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121543502 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.094563299 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.118529241 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.117830829 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09983026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120602086 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101406788 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.120371879 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122307146 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101453384 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112817347 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.121188435 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0996799 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120812462 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0937699 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121121157 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121634615 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.103875989 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127565015 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121418946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09963138 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.116062062 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119932837 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096344356 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.120925312 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099576053 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.117541508 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112605262 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101335834 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122408508 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100338488 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123587423 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124242062 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.099316849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.123535681 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125042521 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09496523 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.114495548 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120358111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096902115 seconds)
  done (took 66.777287846 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.177477853 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104756338 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115370359 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094237726 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.148042886 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118140755 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113352117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096208296 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116770441 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132357795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095820832 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114710899 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14358053 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151369998 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145646782 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133350189 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096831681 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116477918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095177203 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11790316 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142148412 seconds)
  done (took 3.377375672 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.121993632 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137185327 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135862121 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.139392262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.128774922 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113603211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.13556003 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133420953 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13727593 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131079977 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138452606 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133891267 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110229267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130317446 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130480251 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129173286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117883974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.129245816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134435733 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135456899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130931352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114759098 seconds)
  done (took 3.654024234 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107820961 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.12032354 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104640839 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118230082 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.119266234 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098424207 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127195574 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097176658 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.128048038 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118518448 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.096065177 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.117712931 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103929668 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118116184 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.117167372 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098319938 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126290646 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101114407 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.125122616 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116229746 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.143538205 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09903289 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.118498284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096242513 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.13203011 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.121779221 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102067266 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120796328 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.094863292 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122266964 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11660773 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102335315 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.122959443 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.095793443 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.117007554 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120561987 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101675042 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117812194 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097921638 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.12416888 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118733346 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10352479 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.128022152 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.117683068 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097560439 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.121516657 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101232089 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120087872 seconds)
  done (took 6.248010739 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.161576727 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.179560238 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.111695595 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164384697 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120328391 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.138451748 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124774754 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161483017 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.125901332 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104573795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.146540782 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1441968 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126150695 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.130877062 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113615487 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131495716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.131369693 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10452517 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.136798927 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.12561695 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.134888862 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107560827 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.141037667 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.143500808 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129157006 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105613489 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127543798 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.133805317 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.144714088 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117267305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.130358275 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134659951 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.143264492 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128203364 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106415287 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126721468 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.145452031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126767965 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106500688 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.123159217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.130022222 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114015907 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.130145383 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.143682247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.129642055 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109448211 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127344155 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122143899 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.140801426 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110031407 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.135565368 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.144456785 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128097667 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112538983 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.135486885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143765617 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125791033 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108115598 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12795455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13932449 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.12589337 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10977079 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.145592282 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125669247 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.134208659 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142042551 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114630408 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133426267 seconds)
  done (took 9.805066086 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114834745 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.149569298 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143663531 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143488336 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128719838 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109390149 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.129611497 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.129067207 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109185758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14022234 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129889244 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.220590765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124600287 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13681871 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130935153 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109892323 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131220596 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129062438 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109728278 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131570644 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130084964 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.143013508 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.12929307 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123418202 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148643536 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123771063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129646618 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110322643 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144426233 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130941042 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146406761 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130088496 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109620803 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145429021 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.147723212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.130759279 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11860146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110303041 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.13113955 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129646929 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101651203 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.144503957 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129676678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121295811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109567533 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131174341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.144018425 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.147957082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.137875639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137415479 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109190885 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145078555 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129620053 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129059194 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1448962 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153021269 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142601903 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123588785 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131599506 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.144165391 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144061067 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.154925223 seconds)
  done (took 9.047475124 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100186673 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119298406 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100245315 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119204077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098742646 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121370895 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098401159 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120874544 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118522112 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100963749 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119415909 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099751554 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119739694 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099089134 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120040117 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098171889 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120040484 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118960981 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099773337 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120933258 seconds)
  done (took 3.042704148 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112697765 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.143532467 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123445014 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113515089 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.125132779 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.133102893 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102020884 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12506193 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124008194 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10369847 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.136287961 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.135739908 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124257544 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11297675 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.136282837 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.131728763 seconds)
  done (took 2.813760352 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128156628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.140189219 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.182536114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.127726889 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12183793 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111945647 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.122279226 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.117763174 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100329001 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.130331287 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106693844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.134520134 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.121345288 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098985822 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124512797 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.127936485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099696592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128656816 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099694773 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.204845639 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111004672 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.12802809 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123225841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103585791 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.127894269 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129875379 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111544199 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.122254488 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121233088 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103166455 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.127881496 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133319815 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100947745 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.129012716 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098338208 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122250259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.120842189 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101759891 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.129051712 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121873466 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.098550621 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126660677 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100116938 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.123591882 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.118765298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.100764216 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11986111 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.13243923 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105563235 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.127872998 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.120600497 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110302395 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.129212819 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.134046613 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112677071 seconds)
  done (took 7.492372366 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118042502 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126056288 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130825779 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097907648 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124814191 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111311446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126694731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126659835 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10606496 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117803521 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125697733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10595975 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126011352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125109114 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107440543 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125407891 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097350854 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.125722632 seconds)
  done (took 2.967962664 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110827934 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.123378441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108212692 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125780204 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.122782786 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103746604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118996877 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097414691 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120876726 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124340732 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104122127 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.123725387 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098104086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125036036 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123913256 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103804476 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123311399 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098312061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.125102383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118056073 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103781032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120261618 seconds)
  done (took 3.36676758 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.122309019 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.187912904 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.138546229 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.198223328 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.126644454 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124194738 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116417322 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.127173977 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.145082496 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.124279643 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.102949154 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.123257096 seconds)
  done (took 2.478984659 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131961417 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168689327 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122317027 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103880733 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139760533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130633856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13122688 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110377959 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143098049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147714794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131226373 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14311577 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142966265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122743553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138808676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138425387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130132985 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110139974 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127196016 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155842297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131164101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142241668 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110403339 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134351132 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130992676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144792964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144405133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14849389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111689998 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142996272 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137182492 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132143549 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142082045 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128336053 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127425076 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142395552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131146763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154649543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117016567 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144839175 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1262844 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138229124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143116978 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119877114 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143988269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131862638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140106923 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13180046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110837346 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164868039 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140087472 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144197247 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136915525 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143202159 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143752749 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166038808 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149058857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144272912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117258981 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148912798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144798375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137773656 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14391749 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149896367 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137316026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146986149 seconds)
  done (took 9.860189015 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172111268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10515328 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131567276 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150776567 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145490937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110176329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133304225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131439519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131160661 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106962579 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184780533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131141838 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144546473 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144813599 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132039602 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111067181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131659948 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144288629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126846144 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165288624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110608106 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145776555 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144299514 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145673037 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149506773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13862814 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131776704 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110918349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131483441 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134231771 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119409409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132633872 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144942169 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124063461 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146047256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111891259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134628187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139503689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131479354 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117408399 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146319672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156424906 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132929325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131490755 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150184342 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11147337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133265538 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127291828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112036952 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128066333 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148609656 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150185811 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151372792 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147003522 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13260948 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112146741 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131575735 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132710287 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111986176 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139631042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146006217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13259547 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164837667 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133232526 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111788778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146798254 seconds)
  done (took 9.75487461 seconds)
done (took 179.162539516 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17049735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194042378 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.166709082 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.161398102 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.120645613 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154374108 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132219308 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.167965762 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.119593772 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096764253 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12178999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.123609033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164384376 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.118765793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096620991 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.124515684 seconds)
  done (took 3.094482081 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.230832685 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.328139048 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.143437686 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.126535733 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107322892 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.125408023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123888437 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.106612446 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.12231672 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.134356936 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102367787 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.124038595 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.134975611 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103150079 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.123017202 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122736908 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113757491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.12344263 seconds)
  done (took 3.359927012 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.127814142 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167075043 seconds)
  done (took 1.154658589 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.139641083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.233904573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319316315 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.18470452 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.154882895 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.150687645 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.186319842 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.142517838 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.225465361 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.151505421 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.151069901 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10631925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.156704851 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.134700569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13931308 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.106888351 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.157900853 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136794833 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135903056 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109860307 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.152866971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.13007987 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11307455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138706601 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.214608494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.151283271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.131234588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.130301169 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.109205159 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.136749179 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.134562414 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.148314008 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.149014643 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.207214063 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.135295966 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.201810851 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.139466817 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.128468705 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115387071 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.128357951 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.133499432 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.132966618 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125939112 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12818979 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.130321807 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11705202 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.132087746 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.130061972 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.137706429 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119321264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13975668 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.135457879 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.220616115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121167244 seconds)
  done (took 8.882222405 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.969430782 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.175491558 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104065279 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.104881942 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16205248 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144013751 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.976482584 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130755558 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.303912152 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.958644726 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148975325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.140758744 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.289497259 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.293927992 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.21071462 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420459948 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.799082758 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.142562752 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.159452696 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.18095607 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134901046 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158891158 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148050293 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460528325 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.107385447 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127356559 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133530267 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140482156 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.200467247 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124024045 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108893429 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.247516039 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.306041586 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.250704229 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13159133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124078919 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103100618 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.229522715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323530814 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.272614995 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.202163465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121656343 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103121545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140997389 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.150958832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099079068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.227316326 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.214552187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.239746739 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130468066 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.138468568 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114737018 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139005435 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.224088118 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101831512 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398821243 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.421990016 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104162787 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136231345 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.146158429 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.318846745 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102673057 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.306515037 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156745295 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.267569705 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104533112 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840157687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.230332462 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103344665 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13647738 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.135391012 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13267849 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117952954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.19259611 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.432965073 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119932508 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130778661 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124977488 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.270298484 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104104591 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124146806 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.204215514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130391995 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136786584 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123074365 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142393847 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.232380082 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.290258676 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14269231 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137248682 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.132338692 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118788077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.131382733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.252654973 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.298410048 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.198043062 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.278773532 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119828094 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.22803915 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.205787388 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140256733 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.232706376 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113031799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147498663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139916354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.274025981 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.169838723 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127719578 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13174618 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112646308 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.195086486 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107350423 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135196933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.208505319 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.528150355 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.228503124 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102871944 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130175949 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114215156 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.226006901 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134042092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.316573737 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115583909 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.232506222 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.135856387 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100628228 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.137447907 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.227164566 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120164364 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137224805 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141441669 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135724111 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.291646673 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.276640047 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143183937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.284405039 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.209748306 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137395292 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214511498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137697553 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.232219809 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116738966 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139856009 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130473482 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836288005 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141497015 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113544736 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133276414 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.221203793 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126228305 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104186891 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126602784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122684255 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.864239633 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107425126 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122638961 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105687028 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137748767 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.137828272 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13417095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111205115 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.224882652 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.293052072 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14043272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134875902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104593622 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.223620089 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108770387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127638382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103972824 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127810905 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.137871903 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.109699009 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129049201 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.236767936 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20004313 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.276502504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596202966 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126683018 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103965552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311237141 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104853311 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.366775823 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137238434 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.283526058 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.232044227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102276739 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418374931 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210715214 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.220398797 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129751487 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.213897095 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12431157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134183491 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.2031158 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126442301 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113057263 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.223406517 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14500172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14198464 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.221539466 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1043494 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.295336928 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.101703485 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.23450753 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131447838 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119143572 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.394532067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10440366 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149494228 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.202957595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133457914 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126801784 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.769366235 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105983383 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140578982 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137271299 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.284765281 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.206400365 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136884038 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13641172 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.140932978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.20406772 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.278529563 seconds)
  done (took 51.821452791 seconds)
done (took 69.172708514 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.34542608 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.299067223 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.365384978 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.25384851 seconds)
  done (took 2.249184561 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.247669186 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.179643468 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232632139 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.102514096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.242006485 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102908067 seconds)
  done (took 2.008277176 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.569606649 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.467567495 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.396972377 seconds)
  done (took 2.341933237 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28546973 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.29344931 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392321602 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.556588981 seconds)
  done (took 2.568725834 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.272069151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.151308511 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.145137528 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.2017156 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.239175882 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.241910874 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171152054 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186042306 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154868745 seconds)
  done (took 2.720428341 seconds)
done (took 12.792012475 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.288179255 seconds)
    (2/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.173264498 seconds)
    (3/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.137986727 seconds)
    (4/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.289157617 seconds)
    (5/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.362240167 seconds)
    (6/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.234786716 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.352198245 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.237299367 seconds)
    (9/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.171223053 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.184229427 seconds)
    (11/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.292793938 seconds)
    (12/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.148093401 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13742422 seconds)
    (14/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.149828103 seconds)
    (15/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.201267416 seconds)
    (16/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.303227286 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.250861742 seconds)
    (18/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.120956813 seconds)
    (19/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.334128241 seconds)
    (20/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.264195152 seconds)
    (21/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.22759329 seconds)
    (22/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.319369227 seconds)
    (23/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.31164877 seconds)
    (24/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.135462707 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.26342056 seconds)
    (26/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.192495029 seconds)
    (27/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.321353763 seconds)
    (28/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097432614 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.148615249 seconds)
    (30/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.199126367 seconds)
    (31/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.161219689 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.170802718 seconds)
    (33/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114401053 seconds)
    (34/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.156623594 seconds)
    (35/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.135518844 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111156844 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.241488892 seconds)
    (38/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.094475743 seconds)
    (39/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.150044768 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.172193905 seconds)
    (41/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.216450211 seconds)
    (42/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.158320843 seconds)
    (43/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130828474 seconds)
    (44/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.248950965 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.150112117 seconds)
    (46/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.115562342 seconds)
    (47/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216166674 seconds)
    (48/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09499702 seconds)
    (49/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.130987912 seconds)
    (50/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.175012882 seconds)
    (51/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095085732 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13737218 seconds)
    (53/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112310387 seconds)
    (54/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135868854 seconds)
    (55/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.19654736 seconds)
    (56/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.183057047 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111470919 seconds)
    (58/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.154217469 seconds)
    (59/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136958382 seconds)
    (60/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.230319941 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111908449 seconds)
    (62/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.217969035 seconds)
    (63/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.184435165 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.134783636 seconds)
    (65/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.314245337 seconds)
    (66/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.119728742 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.238984252 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11199546 seconds)
    (69/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.164728368 seconds)
    (70/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.374412123 seconds)
    (71/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.151784969 seconds)
    (72/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.23887422 seconds)
    (73/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.135779515 seconds)
    (74/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.183240244 seconds)
    (75/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115337866 seconds)
    (76/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.119438667 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095814973 seconds)
    (78/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.134874931 seconds)
    (79/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.093921112 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.166178803 seconds)
    (81/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.224722412 seconds)
    (82/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216475786 seconds)
    (83/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.155677792 seconds)
    (84/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.230637769 seconds)
    (85/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131506471 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15100555 seconds)
    (87/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.135635043 seconds)
    (88/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.185530184 seconds)
    (89/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.1205606 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.134396184 seconds)
    (91/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.145877179 seconds)
    (92/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.18883667 seconds)
    (93/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.214851398 seconds)
    (94/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.215903253 seconds)
    (95/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.119154763 seconds)
    (96/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.259641348 seconds)
    (97/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228592789 seconds)
    (98/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.189916576 seconds)
    (99/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.120065782 seconds)
    (100/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167121317 seconds)
    (101/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.094606675 seconds)
    (102/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.137576779 seconds)
    (103/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.095471274 seconds)
    (104/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.119420489 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150164548 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.190014032 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135707649 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.172153872 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.135745372 seconds)
    (110/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095853803 seconds)
    (111/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.118638829 seconds)
    (112/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.108064106 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.232938529 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144080593 seconds)
    (115/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095346576 seconds)
    (116/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.137712451 seconds)
    (117/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212386699 seconds)
    (118/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112272969 seconds)
    (119/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.193787155 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127382836 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113504954 seconds)
    (122/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.119266956 seconds)
    (123/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09507568 seconds)
    (124/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.118771016 seconds)
    (125/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152248394 seconds)
    (126/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095306948 seconds)
    (127/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168977098 seconds)
    (128/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113842842 seconds)
    (129/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128625543 seconds)
    (130/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.100003062 seconds)
    (131/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.147555091 seconds)
    (132/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.147862624 seconds)
    (133/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.182162056 seconds)
    (134/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.096104116 seconds)
    (135/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.186742263 seconds)
    (136/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096364902 seconds)
    (137/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.124159827 seconds)
    (138/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10402956 seconds)
    (139/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166162976 seconds)
    (140/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135096159 seconds)
    (141/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.118075991 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18211989 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.170507578 seconds)
    (144/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132840483 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136429725 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.119292779 seconds)
    (147/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094658495 seconds)
    (148/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.119166192 seconds)
    (149/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106682728 seconds)
    (150/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.135965677 seconds)
    (151/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10341606 seconds)
    (152/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.137158647 seconds)
    (153/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.11251744 seconds)
    (154/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.152411152 seconds)
    (155/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.212861845 seconds)
    (156/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.181068478 seconds)
    (157/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111232327 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.136464854 seconds)
    (159/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094116092 seconds)
    (160/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142328165 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.145262073 seconds)
    (162/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101330792 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.167614603 seconds)
    (164/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.145062824 seconds)
    (165/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10730114 seconds)
    (166/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.140231209 seconds)
    (167/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095198357 seconds)
    (168/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.152288861 seconds)
    (169/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150030718 seconds)
    (170/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096498893 seconds)
    (171/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.144709054 seconds)
    (172/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13865257 seconds)
    (173/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.11669237 seconds)
    (174/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.178183907 seconds)
    (175/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09486301 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136553907 seconds)
    (177/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.177508609 seconds)
    (178/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094408535 seconds)
    (179/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13734789 seconds)
    (180/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.094937938 seconds)
    (181/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.119086912 seconds)
    (182/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.095047311 seconds)
    (183/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.119391951 seconds)
    (184/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096330476 seconds)
    (185/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.119748425 seconds)
    (186/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09491794 seconds)
    (187/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.124233604 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111233556 seconds)
    (189/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128534967 seconds)
    (190/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179692909 seconds)
    (191/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.101498346 seconds)
    (192/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.118742277 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095526609 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.145806488 seconds)
    (195/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.095437012 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.13482078 seconds)
    (197/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140652002 seconds)
    (198/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095194889 seconds)
    (199/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.126899668 seconds)
    (200/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.114584669 seconds)
    (201/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137212843 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135425845 seconds)
    (203/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127610192 seconds)
    (204/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128068507 seconds)
    (205/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.100823979 seconds)
    (206/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13770453 seconds)
    (207/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.138099691 seconds)
    (208/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.095310847 seconds)
    (209/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189619562 seconds)
    (210/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.094170026 seconds)
    (211/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.147875585 seconds)
    (212/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10090353 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135232672 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.135519903 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149074648 seconds)
    (216/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.095640813 seconds)
    (217/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136759209 seconds)
    (218/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.114483522 seconds)
    (219/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1323067 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094805388 seconds)
    (221/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128920083 seconds)
    (222/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.100263297 seconds)
    (223/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.145363216 seconds)
    (224/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135873118 seconds)
  done (took 35.892106235 seconds)
done (took 36.808776287 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.540335097 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.144774576 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116405281 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.142136667 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202868081 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.144642039 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.124079212 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.147032017 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.146603133 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110684611 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.129881658 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.14594003 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.116041818 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.226558796 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.118483766 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.134067416 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.132394598 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121151488 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148811021 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.151220431 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203530883 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109033758 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146038456 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.132147859 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.201040795 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108235859 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.141833141 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.142278415 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121237063 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138916683 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141174515 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.107366615 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.149727567 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148744346 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10416737 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.137081518 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1288187 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105150053 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.137980177 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114016356 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.147981833 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13915431 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118788399 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.134037542 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.140145962 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112484069 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129953103 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.145548826 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.106923411 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142615017 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134028215 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125359195 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137777618 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.129935618 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106432559 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.134674664 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121203629 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130532168 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.147237923 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104338502 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.134542222 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130453875 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116287231 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130001269 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112327664 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.134359459 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138132332 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117304641 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.137262253 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134760376 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106674768 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136920972 seconds)
done (took 11.045212537 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113473883 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193686311 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200115958 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.230604699 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.140230906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.151893911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.153674513 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.163225973 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149231251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133908154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.171466236 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162376164 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.207801599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.147289998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.152173403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114861561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.147251995 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.145430706 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212025098 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.159836864 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167679299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121292853 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.167491867 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.156561239 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.137987077 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.171886646 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.116882903 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.13974657 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.137907905 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122456069 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.159404518 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.138828028 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116646754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.161018527 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150651783 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119789652 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.152341198 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139207613 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.137663334 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112916057 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.15331644 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.157493451 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114379106 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.152356927 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140632638 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.144231136 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122513318 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.146907189 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13991128 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115904609 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.142343918 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.168394244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14592059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12210105 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146505415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144429884 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122142815 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144331385 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.140402209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120659841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.139300458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.139015115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116640362 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.165234025 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.142157116 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146120504 seconds)
  done (took 10.673741724 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.134278765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.17634011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.149219388 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.149328258 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.146241391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.104704082 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.128518736 seconds)
  done (took 1.964909389 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105722657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.203438361 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204977426 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.230582625 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.196914991 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215983465 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153885086 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104987941 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167841041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.143450911 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.203717665 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235280494 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140576325 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150854994 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207101293 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130818781 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.208973187 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10371244 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143402917 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20352785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148483777 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161685266 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.12258284 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.132708516 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.196244068 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133091548 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259844108 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149368868 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137243836 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115580776 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14709344 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.220595138 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.19790828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.149329232 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135291506 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.202559348 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.197012968 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143897057 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.215634804 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109752211 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.226817902 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118365509 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14562465 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146363972 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118304068 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.184207222 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.149986804 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145601155 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115574998 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.204945957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.145950086 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.198508124 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141095959 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142368717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119817309 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145633928 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149166577 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118383089 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.205747939 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147156189 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.199020972 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.200018691 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.225511452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20113686 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128653535 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.226077964 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.195850369 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115891296 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14181837 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144186989 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.20163132 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117454017 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.147849298 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.186200195 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148227535 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.200851225 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.199570272 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141466895 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120236217 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13861435 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140690492 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107146411 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.188650854 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143177339 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140651347 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128154648 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147607581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145320099 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11025169 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.16034503 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144226879 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.147246429 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123121417 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144747735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152262324 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.204815384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.147489322 seconds)
  done (took 16.639771313 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108635269 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.133698527 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113993603 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135007772 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.133685553 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108069933 seconds)
  done (took 1.731689051 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141961282 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.146207226 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156138365 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.146890186 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.202235999 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.20704616 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.209703454 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145659558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136969802 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.157005102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.205848374 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.23548465 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.20668281 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123019085 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.236154361 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122133605 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.209767652 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147725425 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15632075 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116862633 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.153242446 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148615112 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140951794 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.2012352 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121395658 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.149004009 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144633228 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.154227785 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127415626 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.146244124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148515577 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121122865 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14412571 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.146073966 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.209241171 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.142740813 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115349321 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.150715633 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148592761 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147274317 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.209683118 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115637266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.154966504 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.15157398 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.144251435 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116727163 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151250147 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144527334 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.211465067 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150785624 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123898919 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.148360893 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.147688902 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.1509817 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.116171521 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146729844 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151904312 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.211862035 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149533027 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116726929 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148073554 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148833328 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145138268 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126382112 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14954078 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.148884101 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.116995668 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148215725 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141604927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120986937 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.152489411 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.148038956 seconds)
  done (took 12.087212449 seconds)
done (took 44.065155728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.184503761 seconds)
  done (took 2.184968715 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.030638268 seconds)
  done (took 2.033870681 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.658928679 seconds)
  done (took 18.6997362 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.615636671 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.679496104 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.043405337 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1894491 seconds)
  done (took 3.530470639 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.028773496 seconds)
  done (took 2.05924053 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.392059835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.281542759 seconds)
  done (took 1.684614915 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.999493802 seconds)
  done (took 2.020100535 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.472968909 seconds)
  done (took 3.487183814 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.404953561 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.214643759 seconds)
  done (took 1.64369023 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.691118875 seconds)
  done (took 1.712819669 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.768730792 seconds)
  done (took 36.789607283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.27592609 seconds)
  done (took 1.310398072 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.335696631 seconds)
  done (took 1.360283094 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.681904139 seconds)
  done (took 4.706318071 seconds)
done (took 84.23442804 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120508099 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.150405772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122694006 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146644652 seconds)
  done (took 1.557183359 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131389326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.149007296 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.153271111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119911865 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.157189024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14665759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11850829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.156784555 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.147000724 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121887861 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.148748178 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.148743402 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123659335 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.14533688 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.143350904 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122917232 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1522548 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.148202535 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121110848 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.15087485 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.145678414 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.122884573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150861683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.145989399 seconds)
  done (took 4.403875202 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.12088941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.139560613 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114907887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.139285558 seconds)
  done (took 1.544917356 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130396988 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.168628935 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.167357413 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130378832 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.169403677 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.16714842 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.141247706 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11620818 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144929299 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128864776 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.145701599 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.171038083 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167488894 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111354963 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158816257 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.134833064 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114704881 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.168091013 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156210982 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131713019 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144017194 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.155953303 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125782673 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.162696909 seconds)
  done (took 4.547208081 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.233478499 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134086722 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.174731072 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.202088044 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.174863513 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.143998322 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.148608875 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154047035 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.154267913 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.150058673 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123695418 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.207326053 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150727335 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.150802893 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121405573 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155389528 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.153107039 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151223085 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.125123184 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.16164412 seconds)
  done (took 4.203824632 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121549523 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.140359989 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107929578 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.139188007 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.147496816 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.11546128 seconds)
  done (took 1.810841669 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108918874 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.131831793 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107517472 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.133286038 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111674217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.134719716 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.105315718 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134557294 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.13259593 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107121285 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132468906 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105437488 seconds)
  done (took 2.487116604 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.345977055 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109923853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.14320755 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.139042819 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.143121526 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.109627156 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.155830592 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.137121461 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.255519743 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.140598882 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.155113657 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.222878195 seconds)
  done (took 3.102569805 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251276157 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148375481 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28459761 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.419244631 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196130741 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201041958 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311940927 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20015403 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.254469263 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170446487 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236234851 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190125078 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18859923 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219645357 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170770089 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.224252923 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215215793 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243190046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180122571 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275301825 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200703997 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206707838 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222882933 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184562988 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168112159 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203468984 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119469172 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162545801 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209774025 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205867396 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241471287 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181079017 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173750403 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244005191 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296649761 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218220063 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.357454055 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181688782 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.227822082 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.222748797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316250472 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172677383 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238867634 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186064293 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166228801 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221176362 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190836135 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.249843364 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136924689 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17090736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253785061 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215168321 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.222665222 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185931638 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340727635 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181706079 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178957441 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211340702 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257587005 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234039375 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204275401 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149820207 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220196038 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222554056 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219359056 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.180908269 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.233814861 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128164513 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214272851 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269003247 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227662164 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204410236 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.259641661 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138395254 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227622053 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205683603 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18860391 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217631267 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198069048 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120691836 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18497322 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174075897 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156185926 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223033238 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121918144 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2754631 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13745629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.254754782 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244683177 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192299758 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197701052 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201869076 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204152878 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180605564 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.148603858 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177352604 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.195883466 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19334677 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133021216 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192460947 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177163118 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.157950165 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186614588 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149870091 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19531326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136958448 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203261848 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229936385 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.140633673 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202762373 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182106055 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.199343501 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207960947 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254420074 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134186519 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167560639 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234290027 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194531756 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.170817864 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213019045 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257730038 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175349869 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174693098 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239092452 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235523852 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173101189 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231512207 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192086601 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169112608 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.186578438 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194491359 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192030993 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.157328773 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157497172 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.190964767 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261896759 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132675147 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169689685 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212423328 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157927716 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154581858 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147418935 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173320471 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174578095 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.18534551 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.170933534 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192222979 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195954454 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189561711 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195118229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176828798 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246737923 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162409289 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.198233398 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181629431 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119104442 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.248341044 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227158041 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162494002 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223402765 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.207163257 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230942266 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202249355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13026076 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218631243 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163171977 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.148500092 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209807964 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200755403 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199474711 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225912059 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25502557 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208469539 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191890991 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184552718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206440563 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214101161 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194263708 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.178276978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200443402 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211015853 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150794066 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.154207747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.129071196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17145267 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166182194 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133014546 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251611582 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200510762 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221947552 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198547645 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171381936 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223051618 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.156391677 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202427871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.213796413 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169578079 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.255865663 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224421544 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205599226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173331876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209931912 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119944875 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154486139 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.166835065 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205011815 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16278343 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140922636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181387421 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251960896 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213553889 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183670104 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241326616 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231877874 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236068826 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121223745 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.200435262 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20583383 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192147484 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.220139933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163104374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.196946106 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218503966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192133494 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234024974 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200516339 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207308456 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274261418 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193316274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165427272 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181178404 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204534253 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177688694 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199597538 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150235075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168256332 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186857854 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168921858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158472939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220766175 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176928547 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219555508 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.191489937 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241194815 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124746433 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181717582 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197722825 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177845946 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.146100858 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20984145 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226469956 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178287027 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193366586 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212290589 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165540489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.346149677 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256934761 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225303003 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18640557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17988671 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199564974 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193517191 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200367159 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220372796 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181759022 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22179279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196070113 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.174541266 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138299787 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181873864 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184299139 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.188254045 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167841072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19501709 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17658127 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225487037 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176279987 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197286445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202067998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.180094049 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.189904224 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171837976 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245991408 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195241386 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217778061 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193935886 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204902255 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225182508 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153300749 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156211734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129130197 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219049805 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162519389 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196963063 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217509218 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263566586 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197843559 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204360043 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171400081 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154216106 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196285774 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153472136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264007721 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176590659 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168865529 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233946224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185766968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165417474 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200663408 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317268162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178670441 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213942352 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119644616 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.337132479 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126277364 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167234428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196397729 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207619997 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.181813576 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.218489888 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205501196 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179250795 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196281324 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174199756 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22516567 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245658127 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246077878 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215749811 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176598074 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194726265 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200969342 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214839835 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175939348 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.184968653 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198140059 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22584916 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227067114 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.167996939 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203309172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202037857 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198797813 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216238293 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165690057 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227279358 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161958622 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205097901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177121273 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157295304 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19465191 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217477151 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163792298 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214225324 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195847947 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160941785 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129149978 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194370973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195913593 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194552187 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.165511381 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219178254 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.157500185 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201383278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22140527 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130005495 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19586939 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17898669 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164036682 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182110815 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178578558 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168302665 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175707186 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219349118 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.16466708 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212396384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242484839 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202502027 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196422937 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176197383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696469714 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131562788 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223276671 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180543937 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260486334 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15412405 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205440078 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201654591 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185584296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213165279 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184529255 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2641561 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204040774 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.228395244 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138608638 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176865648 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179829514 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.165226346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185210158 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202028478 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14476214 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.171658499 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197626405 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178821544 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179702116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17152707 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227461556 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182513471 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224487178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22360746 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188919208 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206500826 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246962187 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130183265 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.201178661 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209788764 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17615686 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198751984 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16472575 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167680822 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219396744 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124331169 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199620307 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197717247 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202452148 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201441449 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168820004 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199583877 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181755883 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199013005 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158536508 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.191974466 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196074297 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133188612 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.161125608 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194228265 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195785747 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196878041 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160988676 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178197506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250342206 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123284081 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172968396 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32042075 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194943728 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262052126 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.157950325 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167550848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178584339 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198090622 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19362547 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198265326 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.160768535 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131750798 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.16524331 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.219596522 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.190504128 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195118039 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217198447 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197166582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226474699 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.177327779 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.309814637 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172399299 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192051842 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140607654 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.162042567 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175427534 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171898215 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195558001 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227865849 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218393108 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190261435 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.180654258 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159820904 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123363015 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16383622 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197555051 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187940831 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19715986 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186936557 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.117755041 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184388311 seconds)
  done (took 95.755280951 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206371908 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.172807455 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.175636153 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227380745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197286459 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286412665 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234463707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256295369 seconds)
  done (took 2.900891853 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.152560463 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.134349911 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.169971629 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.152368478 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.153942905 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.486211242 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162185815 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121606252 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.221043908 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.191171934 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.122212298 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.735294625 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.148612512 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149984241 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.142981662 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.152019475 seconds)
  done (took 4.531914536 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.697267746 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.583991928 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.198901013 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.289770018 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.269176095 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.192666655 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.794437593 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.225232635 seconds)
  done (took 13.397361549 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153328767 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170160562 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.38171877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.243943538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.189011593 seconds)
  done (took 2.29472542 seconds)
done (took 143.556594761 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12629488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.173346625 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.152808287 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.144150495 seconds)
  done (took 1.737237225 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174509104 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.140654471 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109772857 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.13783554 seconds)
  done (took 1.720649278 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.589973596 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107296584 seconds)
  done (took 1.886243855 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153261074 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.171837349 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.178204651 seconds)
  done (took 1.669246002 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133785463 seconds)
  done (took 1.289706322 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122408231 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.152277229 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.217800575 seconds)
  done (took 1.654947665 seconds)
done (took 11.114725559 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148238622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.461792862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.440101646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162947671 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716428015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431171592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.104994947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.188586184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195231719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11280006 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166705777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.722501917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024315834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.391300298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.035766036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.36100729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.746553207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114845696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151261615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144659074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.047806391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141465418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145373238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114840914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.744358195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.447737493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113419453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.409083385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.14117709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118753943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.433305415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112591394 seconds)
  done (took 17.939757199 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159554903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.213464329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152292798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144788002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118728881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144929274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125743395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160632267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.211186365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144852323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165559421 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113781526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149775904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112597368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169011287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.142131559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116573713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146372909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152813713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115561054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165554699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140227005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115333543 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145591043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112537155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157139954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144858205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129559502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.144000544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148453041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118578786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145655309 seconds)
  done (took 5.793787272 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165439474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.22295103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.154269985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.18192325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.197900496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114986864 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.241501412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.191107573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.243307074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114761159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.168301045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113295742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.190099121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.146190614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169734769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113889059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147594475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116624147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152853582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145849883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136794571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14466408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146566346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117364955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.144473019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158565651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115624456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.159584372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141863571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120839462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.150499035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113559705 seconds)
  done (took 6.108842566 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127454267 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.159429513 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.167833256 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139129539 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.154050989 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126175452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158571106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.150651166 seconds)
  done (took 2.357728011 seconds)
done (took 33.360022488 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.14103666 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.164686609 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132599525 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160848299 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.221992913 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146634667 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131850993 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.148653722 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127459786 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.167393901 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.14250871 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11950257 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.167017327 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123264736 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.20458064 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.159828755 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.212163373 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.204464104 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.149458 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126759137 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.15186237 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.214121583 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154633497 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119767504 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.217267854 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.149588303 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.203333643 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122481205 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.153446 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.147402144 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.205569338 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12481877 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.14980788 seconds)
  done (took 6.426580315 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.222978099 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.234846367 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.115924927 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.146979559 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.233317734 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146459909 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.222634387 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.114797319 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.147180245 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115245429 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.14555805 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222609522 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.230660943 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.2450593 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.262961772 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.233531427 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.249715874 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.232898896 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.217932907 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.236754255 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22344246 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115559789 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.263688048 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.239127112 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.114876804 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147261891 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.257844701 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.230271715 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.258047056 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.219269043 seconds)
  done (took 7.226490481 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129809198 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.163803042 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141687006 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220450781 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.191336432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161995831 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.126953847 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.171285974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173663281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113668786 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.157360274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184918499 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132604765 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.155927896 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.151136312 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136824585 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.175806431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147385558 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123030814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168566937 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165775121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134699248 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.162606023 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.156600396 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116308361 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.157046223 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121073018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.162651404 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.15418253 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124842906 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.151816927 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.151577145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118610534 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.157388439 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.149604316 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.129303471 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.17582037 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156290572 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129336055 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.18452198 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.154324792 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121578015 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170116979 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.200404049 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118052826 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159814422 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.159898096 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126675786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.145890803 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134347047 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.162441781 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.148391195 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.169798215 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115691868 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144689598 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124120328 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14739268 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117616954 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.156838541 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.150598486 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.144097523 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.155978014 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154923604 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118454407 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.154112549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115310707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.146873927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.153751134 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141379478 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154441698 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182284507 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115882641 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157898465 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154752983 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121331801 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156800695 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11464725 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154306912 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155415073 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122117723 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156679564 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148952964 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121296272 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16749058 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.168422808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128657878 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157324042 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158197927 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11996549 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.149137469 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130632529 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.149558519 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150672228 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126841942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.148308378 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118062283 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160409571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156849202 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.1150824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167008035 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.152955632 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115201572 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.16588273 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116523947 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.15067794 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.158716126 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128391921 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.148276501 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157140381 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129112487 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.147816993 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121671815 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.152001465 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.148089262 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134069093 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.15893358 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.15134919 seconds)
  done (took 18.425014125 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.330678911 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.343098869 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.231610863 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436961532 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.17644311 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.224544146 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.302069822 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.287382839 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117363989 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.19662632 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.212669345 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.295801712 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115419401 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.180559504 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.33930006 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406512353 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.182501053 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.198797714 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.196872328 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.177329075 seconds)
  done (took 6.148018588 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139332327 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.19425955 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.182824715 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.18149588 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.152854784 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.131411742 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.147518765 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.173999531 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.124005058 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.155753703 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114247204 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161914423 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.156483058 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127262492 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.167446342 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.196765911 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120898215 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.157109241 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.172304099 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1553255 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.125448215 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.178063747 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.160671971 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.179286883 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128052144 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.163999333 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146837204 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.1252384 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.152053152 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.121808751 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156051008 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.170423248 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155119401 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.124381261 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.157887561 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128615115 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149757028 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148277689 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119443109 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.152553804 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.135760177 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.159113855 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152557752 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114934051 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.162133132 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.119460838 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162428528 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127295223 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.15994165 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165337645 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127058987 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.161190838 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.157084638 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137956301 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.151644893 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.164396206 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130681057 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.162440904 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.156997827 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114661475 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.147551079 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.1508293 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123260818 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162616856 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126935567 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.173175065 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163504609 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.147706968 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.128338179 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.153330324 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120062953 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.167519651 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.177076393 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.152495208 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120388589 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.172193103 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120723865 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.142282966 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128474729 seconds)
  done (took 12.970080165 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.153712573 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.154228002 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.170727944 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15935262 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.272606012 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.15383339 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12300346 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.170881824 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130729832 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16517671 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.163311436 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13240264 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.181441359 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.165747175 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122422593 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.167671082 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.159715213 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.200265698 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.141389898 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.189875538 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.269608418 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122424874 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.166616679 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.1642327 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.159721894 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.163772102 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.189567858 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127006229 seconds)
  done (took 5.863080255 seconds)
done (took 58.229661286 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.325835903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.511774842 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.278763748 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.277249307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.320447767 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.308303029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.282416278 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.47245202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.035127309 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.274244554 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.27976509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.281627398 seconds)
done (took 28.856300288 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.339742326 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885861135 seconds)
    (2/2) benchmarking "String"...
    done (took 1.588339306 seconds)
  done (took 4.678529716 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.271069411 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.270614608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.525285025 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.27132561 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.288451471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.289231807 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.270279808 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.311677284 seconds)
  done (took 16.424578151 seconds)
done (took 26.914105614 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.325173983 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.452631175 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.521720344 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.284855899 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.291817346 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.277256181 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.269306724 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.307442507 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284522905 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.26997846 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.277938006 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.529238251 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.280758044 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.664068766 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.264920296 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.307369816 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.290910448 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.477621358 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.274346893 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.344793188 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.263074661 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.287495992 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.294971493 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.315809943 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.286777744 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.276746378 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.324834728 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.264768096 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.473135102 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.285547609 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.327212398 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.279039943 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.318427005 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.284437541 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.38870745 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.304706102 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.449232962 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.278251904 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.274288462 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.289466559 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.463174612 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.683164354 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.275892968 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.269100349 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.282159882 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.361793452 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.273100193 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.018811749 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.275658905 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.281090602 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.297166056 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.653043244 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.281405889 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.276779466 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.291977668 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.503337556 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.279699009 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.316762871 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.306325151 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.297489723 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.274298311 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.285970712 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.312137696 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.282855263 seconds)
  done (took 148.305296033 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.274593878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.281032284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276392601 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.293480698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282771062 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.28051281 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.279095422 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.278397635 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.282037502 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.296607044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.281103582 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.280937057 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.282550215 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.287934843 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.282514669 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.301763687 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.299408937 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.27685369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.285846672 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.276729943 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.297359282 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.275795645 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.291152728 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.277346865 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.313125618 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.37062748 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.323682472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.310931591 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.285370412 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.279278053 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.318833667 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.302090508 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908029072 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.143579573 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.281805373 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.303976096 seconds)
  done (took 83.164218851 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.278478319 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.279651655 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278165344 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.277567541 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.31372586 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.28343554 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.874378773 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875438714 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.020257409 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.495851082 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.690168427 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56149895 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.282377283 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37534683 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.293578619 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.288983743 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.297908123 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.32160346 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279572841 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279796409 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.872847147 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.298060091 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.492187077 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.462249305 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.296011163 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316825533 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.687032145 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.281638316 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317553478 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.946228757 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.616117133 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.334213005 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282734975 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.686762278 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.282864316 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397745638 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.283635187 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31839824 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.286773518 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.566954299 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.284796725 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.287007814 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.282543222 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968392611 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281915502 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876519166 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288896928 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.244433481 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281663261 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.281475276 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.384673161 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.963807505 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292382198 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.284372859 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.284431737 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.283286773 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.279974121 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.314255261 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.527795787 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.395726096 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.303356686 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.28369181 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317645704 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.284927562 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.311949693 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.303437926 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.471034707 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.357911455 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.400994065 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878369936 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.286247216 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380879957 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403107893 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.283392208 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.283679097 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.281372386 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.281035956 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.394143102 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.280769454 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.718200043 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.283666565 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.461051297 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301462469 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.698408051 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.38575351 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.285566903 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687889024 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.289708977 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.287586325 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.037952973 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382103585 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.282316891 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.284843842 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.279999475 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.716121258 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880436691 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546823146 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.288310424 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.589905872 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.286224126 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.730341548 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.859708201 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.971427878 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.284758607 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.285152805 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400589282 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.464785655 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.302525736 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.284519698 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.699094298 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.286830454 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.341434446 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.287686968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.685571187 seconds)
  done (took 375.620829551 seconds)
done (took 608.283723471 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.020933157 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.969004211 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.109066282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.996181352 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.960566504 seconds)
  done (took 11.256772114 seconds)
done (took 12.461874645 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485328206 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.481333382 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35389247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489013661 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.321086484 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503631408 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.467569481 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.30804357 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389728012 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367483928 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396456096 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.345560024 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320400908 seconds)
  done (took 19.428899077 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554872518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.293358741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.355223212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57091144 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335564778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55777907 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.612975473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.293156318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445675562 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303430657 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304896653 seconds)
  done (took 18.833134666 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601798347 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.291291995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358714387 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55250934 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332911551 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567958861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.6086127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.293756079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432979514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305661835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30912386 seconds)
  done (took 18.862068633 seconds)
done (took 58.326694938 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.329587238 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.459405699 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.323191904 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.306244942 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.299649578 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.303800021 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.31450723 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302742319 seconds)
  done (took 11.851023059 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.301497656 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.299379708 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.2998079 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.298156203 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.298421237 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.300640534 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.300294198 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.300495538 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.299968783 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.300453326 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.297710925 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.300069352 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.299031594 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.3034918 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.300824449 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301906941 seconds)
  done (took 22.012036561 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.301738823 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.298489223 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.299975579 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302618073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.299199057 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.302329019 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.30283299 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.301404171 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302115241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.300118778 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.30224672 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.304279383 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.300403184 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.302449361 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.302042619 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.301650972 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.301577209 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.30240211 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.304083882 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.306111285 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.303941742 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.304681666 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.299831605 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.300608917 seconds)
  done (took 32.4705411 seconds)
done (took 67.539647966 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.291752061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.29596184 seconds)
  done (took 5.794615105 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.361458074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.362509517 seconds)
  done (took 3.93928515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.304479826 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.299712825 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.301909349 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.300838399 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.301578833 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.302815603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.305485161 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.30335357 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.303195709 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.30409233 seconds)
  done (took 14.237824811 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.3041799 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.303962695 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.301985201 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.302597583 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.304117541 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.301445729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.302632336 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.303578298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.306320118 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.303099029 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.304146957 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.302958941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.304962861 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303557796 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.301905022 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.305140541 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.304373561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.305863901 seconds)
  done (took 24.680838631 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.31747633 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.326399353 seconds)
  done (took 3.860752337 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.444715973 seconds)
    (2/7) benchmarking "second"...
    done (took 1.346251515 seconds)
    (3/7) benchmarking "month"...
    done (took 1.421418544 seconds)
    (4/7) benchmarking "year"...
    done (took 1.410725199 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.346275526 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.32981386 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.344357109 seconds)
  done (took 10.855935903 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.310598444 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.504486355 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.621908619 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.882368272 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.307699018 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.35189495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.141216768 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.354760881 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.342396697 seconds)
  done (took 15.033400073 seconds)
done (took 79.609913897 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.296331216 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.362154766 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.304337743 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.31606611 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.598961803 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.318248705 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.300095799 seconds)
done (took 16.706579475 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.287817446 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.30057181 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.30515545 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.305840833 seconds)
  done (took 10.408107185 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.294486502 seconds)
    (2/2) benchmarking "read"...
    done (took 1.674992994 seconds)
  done (took 5.183572635 seconds)
done (took 16.80578812 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307133303 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.3079985 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.30463008 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.305425643 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.309311955 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.308268208 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.305624946 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.306842542 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.308778693 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.308869488 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.3061581 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.307099766 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.305708335 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.304192292 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306956238 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306558515 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306206595 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309912588 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.307373595 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304016406 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308458691 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306459928 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.30685411 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.305656948 seconds)
  done (took 32.577261351 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.310760131 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.307979424 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.308354784 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.306872288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310023488 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.306869779 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.305482342 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.305427245 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.308859401 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.305403135 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307957706 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.305869655 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.30496363 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306014785 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308691889 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.306356215 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.307849146 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30942082 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306082587 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.306171049 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.305461568 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306855173 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.306475409 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310722763 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.307046273 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306932776 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.307984141 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.305369192 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307170566 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.30813252 seconds)
  done (took 40.432134202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.3129876 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.316003617 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.304823405 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.308319813 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.3065154 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.306325792 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.307005017 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.305665449 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.305550072 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.307681336 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.306466961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.306119463 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.306924382 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.306351757 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.30617251 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.308130684 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.305321086 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.305890366 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.308557072 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.307342382 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.305916105 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.308368462 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.308666536 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.307037508 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.308068943 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.308018831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.306887521 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.309053762 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.306620521 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.30914974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.308527603 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.308479725 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.309213237 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.310282221 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.309081009 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.306331394 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.314001785 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31633369 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.310212737 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.30903574 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.308138968 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.309019491 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.308876718 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.310280621 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.309543484 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.309570325 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.309471944 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.308765782 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.310007925 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.3094115 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.313604812 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.310673176 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.309583211 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.311951527 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.309832212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.309886757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.311345806 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.311364278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.308092521 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.310379086 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.309901021 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.309437935 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.313891181 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.309997555 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.312437871 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.311270366 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.311157654 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.315689522 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.313045408 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.310442938 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.310641406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.312283305 seconds)
  done (took 95.485000547 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.314421509 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308397442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309751466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311117567 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312559932 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.313068282 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.312751346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312707663 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311908818 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.311140983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311946855 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309730136 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312218986 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311183731 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313465219 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31086003 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311261729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311831918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.310286918 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312432292 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310270488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312066503 seconds)
  done (took 30.073876125 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311142342 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311419964 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.311339149 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313342395 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314469533 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312281814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313490393 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314067128 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312335629 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311419332 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312021339 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313470251 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314336279 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314941221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311424069 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314125801 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312118037 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313607615 seconds)
  done (took 24.848168527 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.313564909 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.312686977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.311809052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.316717786 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.312624869 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.312453198 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313837483 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.313722469 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.315668515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.312568048 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.314021206 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311868203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.313460243 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313006357 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314629674 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.312353467 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.311164792 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31484576 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314312541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314263322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.317143924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314670724 seconds)
  done (took 30.120117754 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315081441 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311947066 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314653012 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315976188 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315694713 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315164709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.315442273 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314768005 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.31540994 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.314116572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316226521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314344119 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.31652699 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313053626 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.314658203 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313573788 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31373391 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314392501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31452268 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315461122 seconds)
  done (took 27.516692678 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318096434 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318273896 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.317985786 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317094704 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319510032 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316967225 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315984072 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.316982177 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319732135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316984011 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.317342056 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316465496 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316552803 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318476313 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315967582 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317103482 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.3177006 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314927824 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317854263 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318140348 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318383176 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317026804 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320071145 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320790876 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.318915208 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318144106 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318699146 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317695097 seconds)
  done (took 38.123457635 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321398956 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318182351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.320163076 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.318560357 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317529954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.317914963 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.320514961 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.321993093 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.320526408 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317527149 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.319298238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.31901425 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317836415 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.316973988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321997361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.320342127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319481553 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.319995169 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319657165 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319619054 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.323152583 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317663889 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.321534539 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.318697888 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317439225 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.318238721 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318083793 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318909931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321627229 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317924791 seconds)
  done (took 40.804729506 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.364847604 seconds)
    (2/2) benchmarking "in"...
    done (took 1.358434915 seconds)
  done (took 3.946682412 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.322169942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31918296 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.320592214 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318771402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.32084497 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.319029548 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.321479399 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319641616 seconds)
  done (took 11.786937009 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.31480167 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.320584801 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320344055 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.320372683 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.322464509 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.312120271 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318253135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337290293 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.317717402 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.315463515 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.324671028 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.323154252 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.318263304 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314974157 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.313549157 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31815648 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.320076404 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.322164495 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.321718218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.323332042 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321687446 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317863781 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.317871674 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.321758775 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.318475279 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.326182805 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.334252214 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.322644822 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313282272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.317598871 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.314299145 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.322530606 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.319735828 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.321884406 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.324361116 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.321841019 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324387586 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33480924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.320400366 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339284411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321888972 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.322218643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.316119866 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.315624146 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317085799 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.324441673 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.320143154 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.326384065 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.314319902 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.321202509 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.329744494 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315640133 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.321227641 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319474048 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.316619619 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322813995 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.341673408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.323428842 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.327052519 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.328071132 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.344237835 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.337506884 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320573876 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.322795421 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327278395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.33810807 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323560799 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.338560072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.32529799 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.324219135 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.327396434 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34392546 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.34066892 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.321017622 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324134331 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.327269036 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317055178 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323976185 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326932965 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.336566287 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.330272874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32541233 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324967838 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340184845 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.316716723 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.324006009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.328319109 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.324812933 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.320637711 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333301967 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.346341643 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.32664379 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.318747311 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.319058196 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.319354736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.324907854 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.319993473 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.318366449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.32459642 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.32639476 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324205629 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322902867 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.33000023 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324398796 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.325463776 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.325973554 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34355481 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319771533 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.325800744 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.326609731 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323658798 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.321306897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.328372056 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.323486076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322651337 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.329625197 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.324487299 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.325771673 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.325926096 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.327528878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.327591716 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.344287536 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.327884103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.32786276 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.32372742 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.34226085 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327786401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.325227909 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.327330333 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.326970705 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.325916742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.321422629 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.327482154 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324639097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326306085 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323677847 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.329378664 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.33275194 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.328050223 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.322234829 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.324754201 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.323074055 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.326585126 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.323940084 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.32687103 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.322593638 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.328241625 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.338799694 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.32344348 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.32536565 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.327169862 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327859315 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.328426348 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.326916557 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.323462986 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328683084 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.326880724 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328740727 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330448399 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.330441773 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328968649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.32309231 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32786755 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.325986806 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.329251764 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.325150533 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.328810324 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.32888617 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.3277804 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.324883839 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.328846291 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.326316644 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.327398341 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.338232023 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.329788079 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.330184681 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.326947204 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331085452 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330649452 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.333562684 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.328208708 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.334991872 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.33170354 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.330331316 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.343981133 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33054318 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.331717528 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.323253026 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.324620954 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.333636871 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.328206263 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.343066861 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33494466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354186339 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.326499142 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.336587069 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332258734 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.336614623 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.331782605 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.330017127 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.334410862 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332395638 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326632323 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333114717 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.327474728 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.333214577 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.324735974 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.33267863 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.332438704 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.330539895 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335395611 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.325941265 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32864064 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.332247988 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334164161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333030972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.328704659 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.334063248 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.327952556 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.324550751 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.330547558 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.33067618 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.334621242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.332848047 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330379509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328206814 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.325376432 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.323325616 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.333168406 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.328600857 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.328906248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.333645689 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.343790138 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.330199853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.331472899 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.347227818 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.326742169 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.331663927 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.33304885 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.334366073 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.333367264 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.343850786 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.334927887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.331370672 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.333005455 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331971764 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335614884 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.336867824 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.349674801 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.33141189 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.335227193 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.331150615 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.336959346 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.329201465 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.328708608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.333311721 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.330134457 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335290135 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.337534212 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.33386452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.33500897 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.335891386 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.332823522 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331847267 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.344659902 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.332840122 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.333876633 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.331234598 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.332063862 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.339510446 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.329446039 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.336176885 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.334229166 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340034148 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.36349095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.334903058 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.349463732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.337948867 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336015363 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.350339172 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.336542528 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332486343 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.330898183 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.333415874 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.329914069 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.334428383 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332422701 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.338924434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332258886 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.336708564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.342562843 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.33519877 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.329251088 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.33573663 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.335767458 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.339050017 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.333622626 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.337137207 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.334369068 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33173073 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.333021278 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.332763451 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336185537 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350406002 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.332496866 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.331979135 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.330133592 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.331264848 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.332916948 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.338270372 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.333204636 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.3465321 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.336036604 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.341981953 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.33228518 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341807193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.336277391 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.334886325 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.350177539 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.338448174 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.331272097 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.336676174 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.337366033 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340129841 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.356081407 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.335881669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.342394106 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342672397 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.337298834 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.339079442 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.340972202 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340159227 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.335512803 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34458062 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.352416375 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.340152215 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333711695 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.338699311 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.338506694 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.345306893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.337015211 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.338822744 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.33948974 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.334981612 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.335572693 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.336201147 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.342958653 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.339799068 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.340555288 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.342168594 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.341178176 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339922961 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.353928606 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344496419 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.342324602 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.340326762 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358222568 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342774695 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.357865386 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.336104076 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.341123381 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.340042388 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.336733735 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.33849512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.336289246 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.340256104 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.337327288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.344631857 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.340068458 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.337168169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.337852114 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.341005791 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.334827572 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345910792 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359922726 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.3378024 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348767296 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.345898632 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.33604895 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.346185421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.340943695 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.335195774 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.340500911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349559809 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351697437 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.336548516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.342398302 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338106697 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341956862 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34682411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.345159506 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.339993299 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.340534618 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.340361204 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.341472689 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339602164 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.343894212 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.336825374 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336790953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.33833233 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.347112299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.362636916 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.341815208 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342770882 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.344944287 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.337749603 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.338418827 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.343610617 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.337700943 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345359225 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.34121609 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347317176 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.347147992 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.340632969 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.337364981 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.346163163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.337309523 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.338240887 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.34371347 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.345808498 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345711376 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.340774234 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.344776643 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.342355805 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.337825666 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.344383469 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.340821529 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346200188 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342039096 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.348695707 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341250212 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.347001094 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.344492091 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347762692 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.336607978 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.341366274 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.344975995 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358492831 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.349037268 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.349584067 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.352760835 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.343462538 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340603658 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.351953644 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.340341321 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.339892483 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.344859824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.343563141 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.34046469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.345996419 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.349575271 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.348685792 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.35824765 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.337545437 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345866032 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.361806857 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349100898 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.345379142 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.345434957 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.341844784 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.348745781 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.344306077 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.342611025 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347586378 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.36173119 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350437796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345843984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.342276434 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.345004843 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353414831 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347899772 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.342138402 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.348552687 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.340996415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347519441 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346992691 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.348760122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.341569843 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.34323694 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.344590993 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.35251073 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.349876235 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34483853 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.342005005 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.343765993 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347987148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34903704 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.348239325 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.347441389 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.345065122 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344965427 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.34224456 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.348571563 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.340908549 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.345478677 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35539306 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345888586 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347003438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.352267175 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.357046885 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347454457 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.344885103 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.342979508 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.348714042 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350548492 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.34594033 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345094607 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.343897227 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.352201049 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351151912 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.349400765 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.348408284 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.360942362 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.372952389 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345125827 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.348106191 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.348847118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.354574687 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.349345806 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.351003781 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.346702858 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.350373271 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.3598064 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.353832545 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357297628 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365945888 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.346677483 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.358280161 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.348987773 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.354554951 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.349430638 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351916314 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.354709827 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.350065847 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.364745884 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358981989 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356647869 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374703602 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.366562267 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.348021938 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.351253632 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350898232 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.353605151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.351470818 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.35362366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.354567783 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35113487 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.357653156 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.350215228 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352461826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.353978951 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.360319319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.351193823 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.35314355 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.349729043 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.356433296 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.354102822 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.355782241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.357766157 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.359262961 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.355553525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.34912563 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36446024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.375132562 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.357644128 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.357088274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.352356981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.355464297 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.350643224 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36520891 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.369549399 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353073824 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.35849665 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.35032935 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356853557 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.361519802 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.353000051 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.350533255 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353405237 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.358169708 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.362057204 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381117173 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.355497512 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.351518807 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357257712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.357646476 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.352012521 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.354446942 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357823452 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.352204462 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.355946894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360740119 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.359553403 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.360741355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.356607476 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.368732725 seconds)
  done (took 798.638711307 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.360186661 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357651043 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.361048877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357291767 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358771644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35963261 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36049923 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.357349724 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.360139496 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356231787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.362841553 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36183115 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363338311 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.36105665 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360009045 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362274448 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361523881 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.358195601 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.360617834 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360883842 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.361083011 seconds)
  done (took 29.819138169 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.362853386 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.363457749 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363935855 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.364303223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360376019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.362368511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.360100785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362852763 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364113246 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362091003 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36201979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364492193 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.364164576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.3582283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360291688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362872112 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364982364 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361662154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.363249391 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.363257572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363947705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.366085789 seconds)
  done (took 31.245185295 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.357571711 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.366379548 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.360396809 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.364452684 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.364150185 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.364079985 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.363247608 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.364287149 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.362964794 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.353695875 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.359868769 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.35917193 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.362232328 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.373202571 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.361118154 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.36385144 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.362859255 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.365102447 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.36663837 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.364359305 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.364623891 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.381836311 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.364136789 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.358681941 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.365611762 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.36461419 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.364853531 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.367453308 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.359813023 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.367917428 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.367568649 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.35646573 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.360090136 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.355883117 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.362491441 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.371142591 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.365274646 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.363600362 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.364660226 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.368033233 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.387231346 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.365777527 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.367044544 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.38557834 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.366151054 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.361491159 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.37539952 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.367821043 seconds)
  done (took 66.797548068 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.967863473 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.982458494 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.985297096 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.978336521 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.979664906 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.990139594 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.983004639 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.975565911 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.977436707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.977496681 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.980089758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.98317782 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.979064285 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.981885927 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.983653226 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.984968942 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.995833143 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.980368206 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.978833683 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.982769932 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.981845531 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.984507981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.97957478 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.981649387 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.983662985 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.982862516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.984411308 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.996201767 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.981736035 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.975237544 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.985256529 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.982960309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.981946877 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.983580498 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.983840198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.990160128 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.987376047 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.987183197 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.002220619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.991864047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.985669485 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.985445186 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.989684258 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.986593003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.989624508 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.985522853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.9866328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.982891861 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.98826236 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.003136197 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.986711616 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.985562509 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.987541051 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.985335293 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.988622341 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.990050276 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.988409551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.984364207 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.989306838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.984365787 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.003324582 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.989600264 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.986497484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.990873403 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.986700511 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.987787818 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.989263805 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.992428784 seconds)
  done (took 136.286859628 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371906464 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.37236637 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371867379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369911611 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370137646 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.370226364 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.371277685 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.369100722 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369046906 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371352384 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369888559 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.370066928 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.369456664 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.373326149 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.36799449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37043333 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.369870896 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.370096337 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.372933826 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370926663 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.371489497 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.372959495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.371958928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.370180014 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.370522648 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.369957444 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37120018 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.370780866 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370839402 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.371769463 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370855089 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.37112121 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.372647807 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.371911578 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.374092472 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.372773831 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370641494 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37318842 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.370679717 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.369066735 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.371887361 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371696518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.371613153 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.371577669 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.374715269 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.373324434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.374818064 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.372984693 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.373575159 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.373229518 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.373562501 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.375132525 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373605847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.374617514 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.373298521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.375449039 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368381748 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37589006 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373158672 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.372413439 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.375525906 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.374608548 seconds)
  done (took 86.330095744 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376418798 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.373465298 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.375816059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.376028249 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372500899 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.373807369 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.373562117 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.3752785 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.376976197 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.374323092 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377311664 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374670536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374521918 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376347055 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.373835241 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373360403 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373287305 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.376606167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375063044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.374625651 seconds)
  done (took 28.771699617 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.374922714 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.37008483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.375094522 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.374462119 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.373093376 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.374693992 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.374019593 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374721863 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374030538 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375440285 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.375517688 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.371841619 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375245409 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.374926262 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.374046938 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.37443741 seconds)
  done (took 23.260184726 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.375194243 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.37676931 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.377183789 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.37569176 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.375899512 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.374367168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.376008281 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.375678879 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.373547777 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.375298305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.375879706 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.376042524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.375286738 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.374704904 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.377349045 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.374294673 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.376475703 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.376796265 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.374929841 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.377847215 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.37696967 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.376233953 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.376073307 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.378857111 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.375940642 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.37582671 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.37499955 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.376224583 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.376934782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.377679634 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.37614734 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.377766064 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.377242386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.37714668 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.376489087 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.378024946 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.377640658 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.377281337 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.376366896 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.377391472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.376677501 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.377612968 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.376301457 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.378929437 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.378773965 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.378313092 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.379711345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.380474894 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.376648487 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.378053433 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.37890218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.376660573 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.378807465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.380161634 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.379595397 seconds)
  done (took 77.004496081 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.38013146 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376658594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.379616471 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.379290137 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.379346749 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.378618687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.379287869 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.379534662 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379167614 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.377223649 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.378923859 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.379377864 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378896517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.380380961 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.378043325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380028382 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.38033476 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.379203277 seconds)
  done (took 26.100386295 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.382921848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380638788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.379193919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.379057991 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.381531962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.381343128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380048985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.379775013 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380944575 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.381106607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379705602 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.381520026 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379947632 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.379979782 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.379009221 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380140702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.379544 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377662786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383164231 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376659718 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.380877394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380674521 seconds)
  done (took 31.644367391 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.375606616 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.375524621 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.371934971 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.390254923 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.399141924 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.374133935 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.375815772 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.375329837 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.393822869 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.430828851 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.428591313 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.398836481 seconds)
  done (took 17.970132388 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382261583 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382074295 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383158832 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382028521 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38321085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384310172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383565341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382458793 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381548633 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382924727 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384557648 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382810936 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383257647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381145424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380759199 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383269197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383180356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385028461 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382795807 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380756325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381360832 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380819404 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38356574 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382224397 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380153424 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383032134 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382178937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383262796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383539055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382663712 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380762413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380881183 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382872976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383194527 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382487588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381513087 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3819264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383536312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382837487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383552287 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382535515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383861336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382511671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383996927 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38236936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385248238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384643067 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380864665 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383680818 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384312601 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385177867 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384007537 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385725121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384224924 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380290952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384044855 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384460872 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386032731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385878458 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385283282 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383704817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382704932 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385364515 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384704275 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385286476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384861105 seconds)
  done (took 92.571729615 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386971928 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386972043 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384602213 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381844432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385017636 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387035617 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387725149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387270172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386073601 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387067796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384903384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384910686 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385873562 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38621631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386320843 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388333577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387208659 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387755164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385050887 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38647913 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388002185 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386729061 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38713203 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386999027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387345618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382005298 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388016845 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387961152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388501428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385803309 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387371365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389547068 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38778092 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.387872526 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387211664 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386914915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387776094 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387165094 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385120226 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390115912 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383346963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387930569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388221399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386855673 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386585014 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38628763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388319472 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386875317 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388731467 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385124501 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387418478 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388452681 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38684325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384962251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389018958 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388133746 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388738994 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384173308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388402419 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388612342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387873529 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387554703 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387019339 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383266712 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386172023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388791562 seconds)
  done (took 92.820493365 seconds)
done (took 1916.186566154 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.551497521 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.503747854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.3824203 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.39381176 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.38094018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.377639584 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.396546762 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.382902517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.379304717 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.379087346 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.381690784 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.578835039 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.376754307 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.383130195 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.379993477 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.477357709 seconds)
  done (took 28.004073084 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.415561882 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.393323063 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.512908863 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.406933571 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.414424404 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.589311502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.445223923 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.389860327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.577238463 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.413185875 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.389995602 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.416101407 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.384433279 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.394358327 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.412387973 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.589054748 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.664747091 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.384179689 seconds)
  done (took 30.480507074 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882732925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.40855363 seconds)
  done (took 5.580518444 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.410452443 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.384838116 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.390380028 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.384908774 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.376918302 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.39540488 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.387180138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.381483192 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.385646105 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.526018952 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.393729055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.397765436 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.407260311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.386994885 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.390812974 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.432040204 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.546005846 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.39337815 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.393020406 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.394444311 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.386586081 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.482916409 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.433517107 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.393971604 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.524832363 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.394515116 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.397413729 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.395463172 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.528028853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.394096777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.385925058 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.393065625 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.39019059 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.381950711 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.859654344 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.404094648 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.397668191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.418473212 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.393632875 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.552328478 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.390700538 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.395938413 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.386765077 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.864072924 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.553745314 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.518570328 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.40258956 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.407990105 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.390892468 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.459190891 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.392306704 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.391685478 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.451679659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.228007155 seconds)
  done (took 88.600618271 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.402643648 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.384349978 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566592888 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.411393064 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.381368537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.403774075 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.387602295 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.700816955 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.431245337 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.378813164 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.693191141 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.00417328 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.414813946 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.444275755 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.325040149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.463502803 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.384562051 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.404500019 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.391251691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.392682059 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.964759903 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.38772805 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.40464151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.530516725 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.427448258 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944814686 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.389645463 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.388857549 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.409980008 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.383275552 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950186181 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417276028 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.449431903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.387788419 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.676789056 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.808728686 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.764350761 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.385586659 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.408166629 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.386029265 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.390343917 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929227932 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.785858622 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.390802907 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.39003896 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937534397 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.388892043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.400815182 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.391227405 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.640892538 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.385054137 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.387306772 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405844323 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.387867924 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.386490722 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402412439 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395905292 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944994001 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389305732 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.388054064 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.408563199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.389553404 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.385357695 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39040824 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404383638 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.791378652 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.529798893 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.385001655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788313561 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952728455 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.40938324 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013874978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.407061971 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.403000023 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.605641088 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389801906 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.390820496 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943103668 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.420649504 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386172842 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.769791179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.394846638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.69723768 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.406506406 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.386686017 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.979005959 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.401094014 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.391170226 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.389674355 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.393320433 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.386686034 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.390142654 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.680652782 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442294058 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.391830343 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.38518933 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.392615299 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394641626 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.388773212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.389998757 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009474221 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.411422813 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.391236896 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391145143 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389346002 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.409010135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387962441 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.390495513 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.66315753 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.388042882 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.413212561 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.388410101 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.387911204 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.399524735 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.53986362 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.395102895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.736076694 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.393180919 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.394011781 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.409791298 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387181469 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418557683 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.388329091 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.390752148 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.305809663 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.72028186 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.410000394 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390484825 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.392656755 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.407644593 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.407857126 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.392664662 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.438328292 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.392970263 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212961258 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.428299719 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.392196575 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.390603823 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.393737179 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39128825 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.410601929 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391895377 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.694758992 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.683028015 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539726511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394799773 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.390689954 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.211378926 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.430523443 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57451327 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.413188811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.388143646 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.658382014 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624109339 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.391348738 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.390867559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.387821894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.656264393 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.389731599 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707268439 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.986459172 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40987024 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.395361069 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.227071385 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.117695396 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.395282055 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.396674572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.699633438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.41296125 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.394235883 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.393406883 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.393237896 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.408644513 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412194014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.393081489 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.394002459 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.394494847 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.435921179 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.589555331 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.412766387 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.392760551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944874218 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421116557 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39274482 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.423298255 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.392616497 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.391876652 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.484792796 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.390804229 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.412985947 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.39259148 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.393481022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.003472285 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.400355847 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.395862276 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.589896552 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131981637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.410198178 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396055611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.413994896 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.338861522 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010435901 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.454874249 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.744428249 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.407848652 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.437083738 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397362531 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.480416304 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972494084 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399238487 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.417415592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.09777428 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.415431737 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.918010262 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.391614927 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394425135 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.053022864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.415427393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.39360567 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.410216605 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403840357 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.701750495 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.398552665 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.418411649 seconds)
  done (took 513.291321376 seconds)
done (took 667.24151983 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.394237014 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.398749775 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.387305647 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.398832453 seconds)
  done (took 10.884316653 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.413744723 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.399785854 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.408865009 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.402977952 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.414240324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.400985827 seconds)
  done (took 9.745869696 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.395338307 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.399111546 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.400169441 seconds)
  done (took 8.50040004 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.624952111 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.416726077 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.772048329 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.420316904 seconds)
  done (took 9.541885441 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.408573879 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.41043139 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.409691615 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.412421098 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.412474948 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.415243393 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.414201441 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.410789871 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.412243408 seconds)
  done (took 14.006838767 seconds)
done (took 53.981629571 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.43373273 seconds)
    (2/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.438290273 seconds)
    (3/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.429182952 seconds)
    (4/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.588685871 seconds)
    (5/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.41969306 seconds)
    (6/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.624812369 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.344602243 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.418413601 seconds)
    (9/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.630721165 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.463973929 seconds)
    (11/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.441400847 seconds)
    (12/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.452199465 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.430198236 seconds)
    (14/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.411434782 seconds)
    (15/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.401724843 seconds)
    (16/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.600506586 seconds)
    (17/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.209358292 seconds)
    (18/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.218552366 seconds)
    (19/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.669313126 seconds)
    (20/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.567201986 seconds)
    (21/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.618755931 seconds)
    (22/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.572071308 seconds)
    (23/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.395573386 seconds)
    (24/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.512376198 seconds)
    (25/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.519281794 seconds)
    (26/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.569794359 seconds)
    (27/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.512431777 seconds)
    (28/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.193640718 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.466116572 seconds)
    (30/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.432785504 seconds)
    (31/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.419279618 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.626900872 seconds)
    (33/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.442471516 seconds)
    (34/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.397681394 seconds)
    (35/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.540180118 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.514217614 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.48332169 seconds)
    (38/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.425304333 seconds)
    (39/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.489765353 seconds)
    (40/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.39972092 seconds)
    (41/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17656544 seconds)
    (42/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.470598364 seconds)
    (43/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.393198833 seconds)
    (44/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.058030204 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.482569332 seconds)
    (46/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.461973378 seconds)
    (47/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.167648608 seconds)
    (48/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.218468899 seconds)
    (49/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.509513452 seconds)
    (50/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.502416978 seconds)
    (51/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.624249236 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.457420169 seconds)
    (53/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.432549447 seconds)
    (54/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.432194343 seconds)
    (55/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.621336407 seconds)
    (56/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.480361486 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.419711141 seconds)
    (58/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.42445138 seconds)
    (59/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.43191023 seconds)
    (60/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.502248373 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.646046714 seconds)
    (62/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.53801651 seconds)
    (63/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.463178719 seconds)
    (64/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.517737355 seconds)
    (65/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.572232569 seconds)
    (66/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.513989844 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.096703744 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.512446565 seconds)
    (69/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.516636712 seconds)
    (70/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.415965423 seconds)
    (71/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.498573097 seconds)
    (72/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.393526197 seconds)
    (73/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.792809224 seconds)
    (74/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.566838801 seconds)
    (75/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.44096411 seconds)
    (76/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06098918 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.097263466 seconds)
    (78/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.475895834 seconds)
    (79/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.500429289 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.571656651 seconds)
    (81/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.621158112 seconds)
    (82/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.230546758 seconds)
    (83/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.421853219 seconds)
    (84/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.055919668 seconds)
    (85/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.407033252 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.491528589 seconds)
    (87/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.582024846 seconds)
    (88/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.451720946 seconds)
    (89/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.627122441 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.46527805 seconds)
    (91/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.602798828 seconds)
    (92/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.059463384 seconds)
    (93/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.556849906 seconds)
    (94/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.308924856 seconds)
    (95/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.112646134 seconds)
    (96/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.520635407 seconds)
    (97/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.514561574 seconds)
    (98/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.186915249 seconds)
    (99/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.430796345 seconds)
    (100/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.405504461 seconds)
    (101/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.403640722 seconds)
    (102/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.443090764 seconds)
    (103/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.590274599 seconds)
    (104/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.638335533 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.506589742 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.406163788 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.517595556 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.489913775 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.497867838 seconds)
    (110/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.791710399 seconds)
    (111/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.542264732 seconds)
    (112/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.321960282 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.414901416 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.513095345 seconds)
    (115/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.539166981 seconds)
    (116/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.451219398 seconds)
    (117/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.233916505 seconds)
    (118/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.408348692 seconds)
    (119/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.623064213 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.546531175 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.440078331 seconds)
    (122/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.571883499 seconds)
    (123/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.412679044 seconds)
    (124/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.541245491 seconds)
    (125/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.425684634 seconds)
    (126/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.503766536 seconds)
    (127/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.47518299 seconds)
    (128/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.451077378 seconds)
    (129/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.505910532 seconds)
    (130/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.573827228 seconds)
    (131/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.468215091 seconds)
    (132/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.444850826 seconds)
    (133/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.44383257 seconds)
    (134/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.560447944 seconds)
    (135/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.599513324 seconds)
    (136/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.538547072 seconds)
    (137/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.469187332 seconds)
    (138/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.491317432 seconds)
    (139/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.455534566 seconds)
    (140/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.559843538 seconds)
    (141/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.648254548 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.460177908 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.408548389 seconds)
    (144/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.491226496 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.558528593 seconds)
    (146/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.674526068 seconds)
    (147/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.574935985 seconds)
    (148/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.54139754 seconds)
    (149/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.398267278 seconds)
    (150/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.454007771 seconds)
    (151/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.584796885 seconds)
    (152/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.520090868 seconds)
    (153/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.16218343 seconds)
    (154/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.452548629 seconds)
    (155/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.54849168 seconds)
    (156/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.462770771 seconds)
    (157/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.427867247 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.42042374 seconds)
    (159/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.529326985 seconds)
    (160/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.636933939 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.42592627 seconds)
    (162/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.697621655 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.581417828 seconds)
    (164/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.527320875 seconds)
    (165/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.577258358 seconds)
    (166/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462469746 seconds)
    (167/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.48750565 seconds)
    (168/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.563931422 seconds)
    (169/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.488388003 seconds)
    (170/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.098123042 seconds)
    (171/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.409139056 seconds)
    (172/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480488824 seconds)
    (173/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.629531899 seconds)
    (174/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.446413356 seconds)
    (175/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.399841932 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.557487574 seconds)
    (177/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.471064376 seconds)
    (178/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.535989465 seconds)
    (179/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.46009845 seconds)
    (180/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.399348646 seconds)
    (181/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.638905934 seconds)
    (182/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.578980012 seconds)
    (183/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.136049305 seconds)
    (184/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.367777326 seconds)
    (185/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.604955316 seconds)
    (186/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.129503472 seconds)
    (187/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.475545449 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.636637928 seconds)
    (189/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.525520632 seconds)
    (190/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.40189672 seconds)
    (191/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.459318742 seconds)
    (192/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.507505751 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.161527882 seconds)
    (194/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.559938962 seconds)
    (195/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.587830426 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.525332663 seconds)
    (197/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.731684069 seconds)
    (198/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.406544992 seconds)
    (199/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.467907444 seconds)
    (200/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.607024742 seconds)
    (201/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.449116753 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.510214523 seconds)
    (203/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.517487078 seconds)
    (204/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.466621266 seconds)
    (205/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.530268078 seconds)
    (206/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.453758274 seconds)
    (207/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.454174294 seconds)
    (208/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.399419065 seconds)
    (209/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.483540898 seconds)
    (210/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.184718137 seconds)
    (211/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.794393702 seconds)
    (212/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.609134386 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.567016174 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.559497083 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.642815554 seconds)
    (216/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.44683381 seconds)
    (217/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.46677965 seconds)
    (218/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.536216357 seconds)
    (219/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.438211049 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.40404669 seconds)
    (221/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.558385873 seconds)
    (222/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.537516185 seconds)
    (223/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.428784728 seconds)
    (224/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.455376217 seconds)
  done (took 390.489651105 seconds)
done (took 391.794832857 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471187223 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.60293635 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.420755414 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.420780334 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461449442 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.411226567 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.484638132 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.430231372 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.43015794 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.428710559 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.412293498 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.454135642 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.432548787 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.461552226 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.534904745 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.427160197 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.422603609 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.42703573 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.466694165 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.489931696 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464528667 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465897821 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.442996335 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.423819969 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.469958486 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468274671 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.429040548 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.418002558 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.430558191 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.470240866 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.408154532 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.445485491 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.483438314 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.476476936 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.463895995 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.428871946 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464391181 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.604748887 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.465116249 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462870479 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.431642973 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.47954698 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.429824277 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.440881584 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.481233902 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.443166857 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472328971 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.54320327 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.425309247 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.423178016 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.475772949 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.488274998 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.433491665 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.421554605 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.421678823 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.546227146 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.428744405 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46992603 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.433960049 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.469833915 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.53676245 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473032196 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.492301539 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473432541 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.430511771 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.437792049 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.431983847 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.488248883 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.431308774 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.469241666 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471426831 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.433785953 seconds)
done (took 114.327463909 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.554610711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.425377556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.572893137 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.433674214 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.592148374 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.569602575 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.427313668 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.430216262 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.424538586 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.266083358 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.429726524 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.428893714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.423188396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.430252548 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.553360835 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.431281949 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.427592044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152990646 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.429284721 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.572021928 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.417774919 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432753169 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.430065443 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.246646968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.421971673 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.420897628 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.572260796 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.429976853 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.142184611 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.421435152 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.421751332 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.142526527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.573911516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.450420999 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.43830654 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.438865174 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.593558 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.448125466 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.556650863 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.557244483 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.574266581 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.471976282 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.41877809 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.425859286 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.434520083 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.430990402 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.433905875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.457991814 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.424986725 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.433099715 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.156336832 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.442437362 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.431266048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.432801924 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.431566436 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.4606704 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.432324417 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.430906178 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.576779787 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.434495487 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.556968439 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.251064245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270015785 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.432355244 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.422728333 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.434468546 seconds)
  done (took 114.960022774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.494005645 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.504502081 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.543961342 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.445833038 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.476721991 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.552028292 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.444865369 seconds)
  done (took 11.786423971 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434071714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.43368088 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.476784769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.478641537 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.434213333 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.61637695 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434030961 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.439442693 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.43510984 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.482185972 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.435523582 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.435165216 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.441928547 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.426363438 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.477699732 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.440640938 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.544326706 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.429346542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.432325971 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.580076358 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.435666822 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.443006662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.480097405 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438734167 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.438517683 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.434834504 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.199891014 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437390927 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.435033321 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.4367571 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.434378942 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.481354192 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.437566071 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.42497845 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437836081 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.54523757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.436451659 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.43859237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.434224074 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.429960084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.435481526 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.435308124 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.434986163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.434532558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.435255454 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.454136617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.439062674 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.43588278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.436541604 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.437332072 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.482478591 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.437616241 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.43587343 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.432445784 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.487344654 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.448207591 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.437887581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.438858623 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436303276 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.435063074 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.58254974 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.479730425 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.435981818 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.480018582 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438016239 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.437588996 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.433487353 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.436886474 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.523295909 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.435487073 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.478959296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.436052674 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.612623736 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.456442121 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.439633755 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.432001022 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.437448533 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438980138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.428604618 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.438160253 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.43602612 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.431233495 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.440526499 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.440323648 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438380074 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.588107598 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.547101042 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.439205355 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.445655741 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.440481155 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.439999947 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.485364715 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.4390638 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.437078173 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484685958 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.548503676 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.48489163 seconds)
  done (took 147.417341151 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.446718436 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.447410987 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.437875854 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.461569285 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.433363608 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.43236913 seconds)
  done (took 9.987889236 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.43451887 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.446188986 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.436848465 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.438660006 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.436447225 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.440855068 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.438957107 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43688801 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.446254719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.439772519 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.442849903 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.44593391 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.442085366 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.440415245 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.442352826 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.439762463 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.44066405 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.440022031 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.44184523 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44161183 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.436051781 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.442041783 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.441544197 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.439226604 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.447742036 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.43988705 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.455081153 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.440953187 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.439584879 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.443083302 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.462057906 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.446309745 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.436706957 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.443048212 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.448990358 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.438265383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.447693129 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.444856185 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.438631658 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.442337131 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.443949111 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.441224037 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.442823617 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.446463955 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.438989012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.443165523 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.451200119 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.456290197 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.441193028 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.446466315 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.445151412 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.44354526 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.442033532 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.447651947 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.440223072 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.457096148 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.454135631 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.442429645 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.442015115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.440432436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.447533435 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.445282915 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438625718 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.446709531 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.445810074 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.446581435 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.439438533 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.449440101 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4430977 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.441281312 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.445645407 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.445958706 seconds)
  done (took 106.263527617 seconds)
done (took 391.736293447 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.380468655 seconds)
  done (took 4.713004757 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.584157003 seconds)
  done (took 3.920305703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.413082115 seconds)
  done (took 25.756184174 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.444772214 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.483999745 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.443837855 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.43506475 seconds)
  done (took 11.143362524 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.853860165 seconds)
  done (took 4.189490577 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.440857922 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.43538533 seconds)
  done (took 6.213797631 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.759143915 seconds)
  done (took 4.095875894 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.978089243 seconds)
  done (took 4.319458892 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.440638374 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.450794315 seconds)
  done (took 6.235572877 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.424931948 seconds)
  done (took 3.760026102 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.419172192 seconds)
  done (took 39.755114574 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.449465034 seconds)
  done (took 3.79043213 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.482140567 seconds)
  done (took 3.819575566 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.491217553 seconds)
  done (took 6.826374899 seconds)
done (took 129.869120634 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.432768206 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.437578518 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.43568109 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.438394222 seconds)
  done (took 11.078919443 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.500002565 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.499043311 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.500275235 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.498429172 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.499733041 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.500238326 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.473411665 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.474289314 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.49836944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.500594269 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.502090363 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.500313481 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.499415597 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.472580381 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.496343389 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.500581972 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.49895702 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.498997074 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.492687427 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.496793779 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.448117109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.498634971 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.496524804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.446754531 seconds)
  done (took 37.131179896 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.933359919 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.511273379 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.596458961 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.494072287 seconds)
  done (took 7.871645933 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.522828892 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.52447655 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.536158053 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.575207033 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.591944195 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.540271019 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.478468906 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.470672108 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.455270976 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.523404586 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.578588331 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.514533457 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.603850586 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.447188606 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.655019663 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.445670975 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.445816364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.524189535 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.575576782 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.592006104 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.449100658 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.525557141 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.528812858 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.518429889 seconds)
  done (took 37.962226826 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.460728266 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.463560425 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.448751645 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.463870977 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.449355976 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.44993543 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.448101175 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.457423021 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.448592687 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.448427662 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.449527274 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.462145308 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.452532743 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.450952891 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.457290345 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.452338384 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.453922911 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.454456119 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.446161916 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.454358167 seconds)
  done (took 30.410281685 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.437840628 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.438835855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.788392734 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.693489693 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.438458006 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.434474896 seconds)
  done (took 14.570423729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.522076775 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.694936729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.446560568 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.849267035 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.940180741 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.447874321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.446659505 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.721460219 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.085799594 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.054687371 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.514506061 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.522121519 seconds)
  done (took 21.58602985 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.455723357 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.440305262 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.453889832 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.459791768 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.507392184 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.462297501 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.452403896 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.43817052 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.511336039 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.526018027 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.462658493 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.509443709 seconds)
  done (took 23.022084884 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539583826 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.445395678 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445048089 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520011297 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444882151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294625016 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500448647 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190979728 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.468847466 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723794433 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445168216 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569110375 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.701045102 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443229811 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448121116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.428323524 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679255943 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005896376 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449008357 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442982642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48011245 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453248461 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449788076 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682027012 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451027455 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444562828 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.705931644 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.442047062 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764306774 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464218583 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453234169 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44612288 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7222262 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141605201 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563098263 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679992073 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450451066 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448818901 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.442214282 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.448039623 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466614292 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.454292317 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460706058 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450208907 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44818081 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455579193 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199288471 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.4726278 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.448038876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449054661 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738618616 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547058631 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.45347499 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447716714 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477238105 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445717754 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.453760229 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578236352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049606056 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459927946 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464668714 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.452758686 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459235306 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44905233 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11051325 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.469975435 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.4534099 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451594337 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450313721 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450106692 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470537893 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451645025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.474320618 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448719043 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231456561 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462181046 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46912441 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077468818 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461831631 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.443865191 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684600915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450298602 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450850056 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.449750934 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4506033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260444876 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463480892 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.435423439 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492588311 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.221823356 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700634979 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47214282 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482319454 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675273792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.432740681 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451335548 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.451247067 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478193287 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469580186 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197267126 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46284895 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.459127508 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71088359 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.662551646 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446417434 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.434922444 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975370615 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47598932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.465629376 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448827989 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689484992 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.093289164 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479930281 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456249615 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468936667 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445547228 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294928978 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458150925 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.555145384 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45154379 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757838673 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.363370065 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458647878 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521134861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454912744 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450135356 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459292631 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454120543 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452026781 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.674196583 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469088879 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.45761801 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.451241518 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452577751 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.453699185 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452373028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.456163419 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.677834 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46214556 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727822579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453731307 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448186506 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449611671 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.677152826 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.450849229 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.794162155 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716117138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45087714 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450534042 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463633274 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470965403 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557912874 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472728926 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.454408577 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.710999812 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.459215157 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.458463583 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457615442 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461735038 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461631493 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.462745104 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467902439 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096993554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439913111 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460550812 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452684365 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.469822247 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521770605 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462293601 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687477867 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456457508 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470337106 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.460177793 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.457646499 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683280488 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464736054 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.456685163 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537695459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960771646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116122611 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489271745 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.454112914 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.455104792 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.452828363 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45479234 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457215979 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456113327 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68854646 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474675732 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456683448 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106748064 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477444008 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461852553 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.466574361 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468895032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.464567321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458745345 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.456656364 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460657214 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461807662 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.464881948 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59750348 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.473288744 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454223192 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.975241358 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461453604 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457060451 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45281817 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492100054 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462924786 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312496015 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734151782 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455935521 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750677352 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461708137 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.47954518 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.454380978 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454257639 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475316086 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.471661933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465224632 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.466523952 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464221617 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464787642 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040981048 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260531026 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051360336 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480466208 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.454945585 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45657803 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213806509 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473288135 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453883289 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720075663 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230054707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470447661 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970885344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.481522458 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3019098 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753482791 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694830216 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462393722 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.458049132 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76107401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674754404 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490161444 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458780713 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457339206 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.444955329 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05048894 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473356466 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56229834 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213158497 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473422532 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467192509 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.471916853 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.464521121 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910310549 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480336543 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458515242 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461767079 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463442498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319852181 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486366535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461119702 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14550285 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487287675 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.972267611 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478949006 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.696470184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.475340976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.462626071 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.461544172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.4715157 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.721429229 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758028619 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465296976 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475740838 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059861716 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.350317173 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.473773858 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460648883 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30971288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468929202 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788626234 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.465086572 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.463942376 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459681195 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463513902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458852766 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.459429353 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.97865044 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434257187 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02412429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.460441435 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471609608 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464863173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466655356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.717050286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.477104421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113060559 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712526632 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458436869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483662291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.46650842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463066722 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.450326356 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461475428 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461445711 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46054286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.688671514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467940287 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.449780007 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516303458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675943765 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462676776 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466269222 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734347259 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.467757767 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.479697701 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276585346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515377834 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460886044 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46982304 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460813101 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505467694 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546489424 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700178776 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.482387239 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.473536116 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909557498 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481976185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469310001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.480530868 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560067794 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482965494 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.468554143 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.236779219 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112202097 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304439547 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117656938 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781423093 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467833514 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475075069 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463713196 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625827903 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465687397 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741248025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463812785 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.46054589 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490719152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466471935 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483409956 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677880789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743818018 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464556012 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463097259 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483563089 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.464678558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476558157 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.675532057 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027295904 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103582881 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470280844 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479789197 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.232464026 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757188177 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462828686 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464660106 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466396022 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.480357974 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.467901232 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.495141034 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473873759 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61513636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762860029 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175363401 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497137752 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.493701715 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.984778988 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47312175 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.726666827 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464329704 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.734004278 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122974521 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262843984 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736630707 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536055127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703797347 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.469385222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62752509 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.467088275 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464104986 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467914831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465759909 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.469476464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.475851703 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122642048 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756799912 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.472691691 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.469560356 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495245584 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.477735601 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689747449 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281453722 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.69790544 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478418164 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47848708 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466690982 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121361749 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784692322 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470741974 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.476185475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733420015 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47378054 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496327992 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.985373179 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.470005026 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098410435 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.447233827 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487812247 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478939297 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258039367 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128842282 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.497925159 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039448288 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475726143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469353744 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765682796 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.478275198 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477780809 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753598635 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.474961043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47988682 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710667779 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.117408956 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349667664 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.497476372 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480390595 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.475568132 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468082623 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537903901 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504117085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469480662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.938501545 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490293723 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468353078 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486070824 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.469331008 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481069309 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.473506225 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471514483 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.477532126 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.47769717 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.461982896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486207785 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60671615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065638736 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493641556 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.150496687 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.797957734 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729061599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476105015 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.460006544 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.478172882 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470260101 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473570908 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473652353 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467706045 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106978326 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.482222716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.485998257 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.477856906 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.472918115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681846037 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476265415 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715675014 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481091071 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493589801 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.459468437 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469433152 seconds)
  done (took 1022.82013649 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.504932582 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.519377067 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.482518272 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.490207598 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.527197866 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.484229122 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.533215049 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.53004353 seconds)
  done (took 21.439510267 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.46859911 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.479792453 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.464364231 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.478869843 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.472950514 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.00295776 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.501176595 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.482549609 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.49164743 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.475388382 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.487455017 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.461903609 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.48078191 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.477128722 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.478000858 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.484571717 seconds)
  done (took 34.564237174 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.76243286 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.718306227 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.019621822 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.527184287 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.488004811 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.477614849 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.829519746 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.48649189 seconds)
  done (took 28.675421345 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.478602065 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479836126 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.479658833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.480918405 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.480660505 seconds)
  done (took 8.767200339 seconds)
done (took 1301.233142171 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.477883076 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.482394881 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.48144331 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.478861392 seconds)
  done (took 7.285884475 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.462060516 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.468710299 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.465767031 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.478543059 seconds)
  done (took 10.242363261 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.281803258 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.203128533 seconds)
  done (took 5.855440652 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.991179351 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.981427522 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.985561604 seconds)
  done (took 7.3253492 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.776661135 seconds)
  done (took 3.148303975 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.391871631 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.469403199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.171082745 seconds)
  done (took 8.399219152 seconds)
done (took 43.62119465 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.471317175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.741116557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.628975697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.468115829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.635212969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.629544158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.306293841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.487504559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.469892528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.473335572 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.471569694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.634673951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.214562895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.721982624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.21424695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.724190973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.66541232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.480958145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.472916542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.48419001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.305199823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.47989651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.474299514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.47404029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.661432141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.62037608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.486115654 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.743441158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.486038598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.471366106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.623009047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.477400853 seconds)
  done (took 86.063648368 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.490417758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.47217833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.470911763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.492425059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.472493474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.476204767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.496883704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.488945689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.472239738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502908826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.476120411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.46901507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.498687705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.485031378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.484393397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.484981652 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.473381849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.473251525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.50210429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.470974565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.471355817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.493630097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.471876747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.48005755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.476320369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.474801791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.500334996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.470624521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.473989437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.492993302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.495243458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.493335327 seconds)
  done (took 80.822281834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.482608732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.480943166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.480167901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.474495475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490063004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487604355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.473667576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.473911473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497305821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.492352972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.474630725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.473402933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.473586995 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.473932955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.492910754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.47697284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.471633332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.488131185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487248886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.476734006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.473079918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.474110853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.472553978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.493484899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492562746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.480547134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.474095012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.47641428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.475124433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.4894105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.488791627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.483241403 seconds)
  done (took 80.770456669 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.76348024 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.488960328 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.490365205 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.481681703 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.491374327 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.485466361 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.483480014 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.768692661 seconds)
  done (took 15.834378231 seconds)
done (took 264.85775806 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.47911491 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047827503 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.531690714 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.48306607 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.502433796 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.514435848 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.730843537 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.53063303 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.73131568 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.519952927 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.508659815 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.482964007 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.395042776 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.646037796 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.393278066 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.481618196 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.478891026 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.486343511 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.12426736 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.789736182 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.508167438 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.475504804 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.404253184 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.490461811 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.484177541 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.567821861 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.590872792 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.721986367 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.658487372 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.57273491 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.057863905 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.496614148 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.499464335 seconds)
  done (took 68.763874766 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.485957918 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.609654946 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.49104859 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.486310284 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.615968782 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.510401402 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.486105779 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.489440941 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.490471191 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.488852413 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.493681393 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.491681467 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.494398783 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.544201424 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.62018903 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.503685621 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.486614228 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.614751346 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.484951219 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.484507558 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.539999809 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.493194722 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.494331526 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.536815132 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.489323806 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.488155086 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.620246069 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.511331666 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.496071966 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.610448763 seconds)
  done (took 47.028576327 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.489265248 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.151579623 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.318889378 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.497513164 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.489750375 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.491867134 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.804571065 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.498994503 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.490424845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.489678837 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.029572695 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.502887489 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.524667683 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.345867152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.487903167 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.497986562 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.495939547 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.488629604 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.171361657 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.499097623 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.831087897 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.500249375 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.810777459 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.506325678 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.508759372 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.489967874 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.494496645 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.394602457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.516529519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.035125008 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.370079881 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.807173515 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.326850271 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.357023669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.376769725 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.500194488 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.498654577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.043432024 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.496951516 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.486275183 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.808559241 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.493698936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.32636519 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.225499051 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.509299904 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.496801739 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.421390773 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063886356 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.764574705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499135639 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.351091245 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.497980734 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.497832201 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.490024631 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.768451176 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.495520962 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.486392595 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.452039023 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.519668485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.814348983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.500202988 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.491416771 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.164616902 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.492164065 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.168616378 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.495041636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.497576358 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.50868952 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.342335234 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.49530576 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.242326988 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.510991636 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.500335795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.042183707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.171666074 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.474032252 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.494957357 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.173845307 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.348768144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.839823982 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.502968453 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.384085774 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.84906353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.496382843 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.49996657 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.499833816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.496648132 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.578221059 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.81858341 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.185336571 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.255867203 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.459898131 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.847325595 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.501822724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.49363034 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.458898796 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.522316914 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.500757392 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.333846211 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.242597307 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.515741759 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.500222308 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.256274393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.513233679 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.827719889 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.500734596 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.345233613 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.491762734 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.578093975 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.498845748 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.503702074 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.516515508 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.823904915 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.497941216 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.498828081 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.237001259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.076089717 seconds)
  done (took 210.546974763 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.486559213 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.508359458 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.494692791 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.512458533 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.48793655 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.49837523 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.486203846 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.491850786 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.49772102 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.489320319 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.492509401 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.498659279 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.492296864 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.487750811 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.491431567 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.496136739 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.504294756 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.49186196 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.49189604 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.490496281 seconds)
  done (took 47.274362875 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.503320149 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.142320896 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.118558087 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.504080339 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.500925728 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.496392724 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.557889932 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.519613336 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.503812142 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.844501409 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.698036303 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.523153059 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.50624126 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.500366473 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.100079986 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.493689306 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.84547601 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.148547875 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.505580647 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.143261971 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.494886589 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.501593515 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.498934228 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.149873125 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.872404915 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.828837033 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.567279953 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.165230768 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.519224896 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.504172228 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.144075854 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.504431021 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.497055536 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.147384088 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.519212286 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.516656998 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.503227856 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.563251504 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.5810248 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.866038524 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.49393856 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.839887592 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.523757597 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.690821817 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.507971745 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.489768764 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.157093213 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.524245959 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.490603785 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.503542778 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.510034363 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.116597826 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.515170728 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.119769271 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.526917657 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.505375347 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.15403622 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.12555293 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.124559279 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.698414137 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.519960516 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.824980917 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.513930917 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.162561578 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.525014794 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.506680724 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.508012916 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.693832286 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.172291332 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.831898832 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.855937746 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.857899311 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.512127261 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.574212442 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.531028683 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.493702674 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.575327459 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.951367789 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.855588272 seconds)
  done (took 138.570620645 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.800553526 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.624271428 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.965791542 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.174108385 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.556634661 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.648276677 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.627728676 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.778566284 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.518658138 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.578390542 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.246729014 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.628367668 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.318605323 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.598814024 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.632380732 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.653963793 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.972817804 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.496140611 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233083111 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.224212167 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.570995571 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.617234345 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.102328453 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.741715235 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.497780948 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.081017323 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.523901537 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.246040616 seconds)
  done (took 58.048257059 seconds)
done (took 571.605843068 seconds)
SAVING RESULT...
DONE!
