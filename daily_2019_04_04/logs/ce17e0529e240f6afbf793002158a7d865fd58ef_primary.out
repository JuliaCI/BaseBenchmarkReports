cset: moving following pidspec: 6396
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307501011 seconds)
loading group "string"... done (took 0.586367967 seconds)
loading group "linalg"... done (took 7.183698705 seconds)
loading group "parallel"... done (took 0.171027553 seconds)
loading group "find"... done (took 1.127812712 seconds)
loading group "tuple"... done (took 1.756369101 seconds)
loading group "dates"... done (took 1.212749815 seconds)
loading group "micro"... done (took 0.227389586 seconds)
loading group "io"... done (took 1.269283315 seconds)
loading group "scalar"... done (took 39.099734094 seconds)
loading group "sparse"... done (took 13.048824747 seconds)
loading group "broadcast"... done (took 0.992360724 seconds)
loading group "union"... done (took 13.336914166 seconds)
loading group "simd"... done (took 4.540349059 seconds)
loading group "random"... done (took 9.144709263 seconds)
loading group "problem"... done (took 1.974071429 seconds)
loading group "array"... done (took 21.817872299 seconds)
loading group "misc"... done (took 2.001345794 seconds)
loading group "sort"... done (took 3.296908066 seconds)
loading group "collection"... done (took 18.384283079 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549366871 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144549838 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119772705 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14274299 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19068233 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135192632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148902536 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086602365 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.11126829 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166227392 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143229544 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483455698 seconds)
done (took 5.299583605 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.245148724 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090065543 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098855339 seconds)
  done (took 1.012443846 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067428773 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130437182 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083181531 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069526731 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068350768 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083267044 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068200717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066919059 seconds)
  done (took 1.396896298 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077712204 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070379924 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087310553 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070159656 seconds)
  done (took 1.133203631 seconds)
done (took 4.69350853 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.908061774 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239782562 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190997365 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458501612 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150362336 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191482343 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673053536 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320554928 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213414778 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101862846 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106811764 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385779421 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108281006 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668455464 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077292255 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108944032 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160785744 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4278863 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084747558 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084144915 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106591888 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144960909 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103860936 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079317598 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169520905 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07080131 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150443089 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097608077 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07055969 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.247223035 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192105936 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684857648 seconds)
  done (took 10.648015693 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104466645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120967281 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070900802 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142415524 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103595142 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088693075 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072559857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086021135 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093962158 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162420039 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117310754 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108305686 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085326777 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071847214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10371875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214246658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110672566 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086428602 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090088503 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077518461 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12506841 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084598338 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096897863 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080424129 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155334239 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196538851 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114345642 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113595891 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071298518 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082615499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13414028 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144532859 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068134419 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085067779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141808841 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113430554 seconds)
  done (took 4.759857247 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.076424758 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164476827 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093933928 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155459251 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114839842 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087665129 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112192068 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08597278 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103612964 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252781801 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.149136916 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.462017028 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13081415 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104829977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069491348 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08648573 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069928379 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.533851859 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147061461 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10386254 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104739845 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091759861 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072281212 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359465176 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070126266 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067836703 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086660592 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060921162 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147103791 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069178791 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.23215404 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090258013 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090714969 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120537328 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183885699 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098537595 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124602011 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084668424 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068693677 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172425234 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065619025 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09250239 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067856536 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107569193 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104914651 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121846887 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085156834 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06936562 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184804916 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068360245 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101999542 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066098598 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.911129663 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169430191 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086757397 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069220455 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293906494 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103020383 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069022803 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065703622 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.260642714 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159077896 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06978325 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086474219 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068637375 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068480177 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386826237 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070167726 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732648748 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072865389 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079992969 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087694218 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06884354 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083417321 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074034605 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091126517 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086950011 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067738438 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087802544 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068690853 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083836586 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071393798 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101635649 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20902929 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069223311 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068278942 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084342836 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086912754 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115121289 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070959668 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084739088 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101587823 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08745838 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069331782 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12259329 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068814646 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104175707 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08653213 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115418826 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085804818 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138280551 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070553432 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115433799 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07427009 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117626728 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097377363 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070682334 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15640229 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065994132 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084139432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068880201 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06603951 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087222864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070106728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100571781 seconds)
  done (took 21.381382059 seconds)
done (took 38.693489511 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.298683145 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095290729 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095717901 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078012056 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095975546 seconds)
  done (took 1.569402699 seconds)
done (took 2.445017099 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122097692 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12065441 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065327715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117078591 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065728194 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121152297 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117806588 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082578796 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121969659 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066155139 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115489666 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066290297 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064742988 seconds)
  done (took 2.154432965 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08810218 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086962248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089222679 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083763048 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082144711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084861542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082507177 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108760168 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081838084 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092123135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066046758 seconds)
  done (took 1.817927535 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086181268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085993855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088868949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08259213 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082234012 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08344028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082240475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106331313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083061447 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092761026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066298841 seconds)
  done (took 1.81300231 seconds)
done (took 6.653205421 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08319808 seconds)
  done (took 0.949376911 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.721489686 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.798090938 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085480045 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136615346 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225187343 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158852869 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.459868791 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115135187 seconds)
  done (took 10.75596716 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092397239 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103270761 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071221681 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088814258 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075161361 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091454359 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074501295 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07129456 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088204615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073900078 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087727905 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073989953 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087755734 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071749786 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073691069 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090789216 seconds)
  done (took 2.251693664 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094768789 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095541386 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095058537 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078582194 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093641701 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075737171 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096073072 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077425661 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090550602 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075829094 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095374249 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077317969 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09202041 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06872713 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093609597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078925823 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091284419 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078427333 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094667401 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078888606 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095005634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068475967 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092352701 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077429973 seconds)
  done (took 3.039270793 seconds)
done (took 17.869859163 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.138679608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08106775 seconds)
  done (took 1.091929867 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087769361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104705625 seconds)
  done (took 1.07055058 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089272312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086629597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093124233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098929213 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067323035 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086132725 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106310578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069497841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067350077 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086534322 seconds)
  done (took 1.729018352 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074669123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098731354 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074928489 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100841324 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076950578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084750257 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075754973 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087568785 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080600035 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082864678 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073891127 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103552287 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073873464 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105119282 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074722492 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090050996 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090195713 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071420091 seconds)
  done (took 2.398837733 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.071329821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071188334 seconds)
  done (took 1.022234481 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073152023 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067478134 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088647979 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069394306 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083487728 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065496894 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083622334 seconds)
  done (took 1.411440618 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413206514 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110437441 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2464146 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.092479781 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107517589 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266994803 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08768168 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07305421 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091570359 seconds)
  done (took 2.407429823 seconds)
done (took 12.010461533 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08412841 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089590617 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11548963 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429455313 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11211674 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068527113 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14568889 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21647319 seconds)
done (took 2.144409829 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.132420919 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639727146 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409296723 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216659076 seconds)
  done (took 2.15042294 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.39734948 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0944871 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077282875 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069936653 seconds)
  done (took 1.527732689 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070426052 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072572729 seconds)
  done (took 1.030930159 seconds)
done (took 5.728803928 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071843635 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10406489 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069676589 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065881865 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085375382 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069320866 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065650836 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085802731 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068839936 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067275818 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08785882 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071509587 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085107593 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068801701 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065999395 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083695406 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069046595 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065514095 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084519016 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068965274 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065245375 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085924993 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06618529 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065773175 seconds)
  done (took 2.713792216 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091138825 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088908942 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075211632 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092184793 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074895575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091160434 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075166114 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068091984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091711723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070689495 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090720161 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072648883 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08813064 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073978273 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087809923 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073592911 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093521452 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070516526 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069792532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091517393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073120895 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087366009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07350501 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091378819 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072831696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090472271 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07075689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086780594 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074927061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089582757 seconds)
  done (took 3.33368222 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075939305 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066944075 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085644684 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073471044 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065452358 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086437845 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06560429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083009127 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067716279 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065129869 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.086226701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066240935 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065177733 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08590913 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066490519 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086619197 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084069509 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06626711 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084892476 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067043919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068628661 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084298991 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066656223 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08373796 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067547389 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065584054 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084234355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067117569 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066344973 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085501083 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070273772 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068876335 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084588509 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072510009 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087492819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067266418 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069993913 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083912191 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067677245 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06495954 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083784787 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065918645 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06561967 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090929109 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066045105 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08580668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066987568 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067709875 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084682373 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069607292 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082751751 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067462443 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068311683 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08519564 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070869411 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065417034 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084843087 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066061465 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084245605 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06690939 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065659327 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083350091 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069346343 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066231252 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100206373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073351874 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082855678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06887959 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067161699 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086761182 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067933263 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080084652 seconds)
  done (took 6.26481638 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.125692323 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096621733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088433154 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067994084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082374287 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067120243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069501073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084594237 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068192873 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090062102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067587765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066814388 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086302136 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078865054 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085174347 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0687293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089480066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065512883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066430077 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088511835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067314929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087799494 seconds)
  done (took 2.656575711 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196373827 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093097401 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112668424 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095093556 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069354619 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095846981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072357063 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092155901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072048384 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091236672 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071375471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091281777 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071371383 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088755063 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071001938 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089818271 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073272 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088951586 seconds)
  done (took 2.532235675 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084240588 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069641866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.113229101 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069043998 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088360205 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071095775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092519228 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077478912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089855842 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069398251 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096222452 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072764255 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089214355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070033443 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070698993 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086733455 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071144438 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086967497 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07768767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09207216 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074549057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09636153 seconds)
  done (took 2.70719546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087138745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071676415 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107175629 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088341369 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066210711 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066911639 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093598539 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068558378 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093251929 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071419167 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067543454 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085429136 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072776363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087442643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073581777 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086980044 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071137686 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06775724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089902424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06434559 seconds)
  done (took 2.479725048 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093172481 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090120247 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0717598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099103576 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07164889 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089302482 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080017272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087873834 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070764766 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113153842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070691053 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087974607 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079399646 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093426463 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070419098 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097486623 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078736118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09799814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070326019 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0902042 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.225261066 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07251524 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097052432 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070882915 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069353071 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090219118 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070074032 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093531155 seconds)
  done (took 3.395422366 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072711807 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070312566 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086087968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067365087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065968006 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085075234 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066981031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065809529 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08721987 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066968147 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068148209 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087193086 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068547806 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08587681 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070240935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068763539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086677865 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066949795 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066468251 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084986488 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06959221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067678386 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087447036 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067016279 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08355823 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069997568 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066206868 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08427484 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069274226 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065923034 seconds)
  done (took 3.122476024 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082243746 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096780642 seconds)
  done (took 1.085463824 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069589539 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083917632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08582852 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07272729 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09219113 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069891047 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095021787 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073627051 seconds)
  done (took 1.546837809 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087870349 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081473562 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090987326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080151004 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099460114 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08472575 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159074268 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090197378 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075407613 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08518125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083794576 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067254485 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094337535 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068846157 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092796048 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075224348 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066245623 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093122064 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071317471 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086255464 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071253921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095465654 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07210405 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064838753 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089219234 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077233456 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098959833 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069450016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090338545 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077576003 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073668599 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.082568232 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068547484 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088211407 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067482828 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096156871 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085673801 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088048817 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078607218 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069200786 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097982753 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06372444 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092375568 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075037654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096848598 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07002507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068760202 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083025475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066211462 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089200652 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06513839 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068307749 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082482565 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075627175 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090081881 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079991151 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069580997 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089370358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071551702 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090432008 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075333761 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087991511 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072524128 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068980879 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098672097 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072886551 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097138109 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065899547 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064266096 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087746734 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079643078 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113140616 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076560024 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090978008 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072068641 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067668218 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094455338 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072265889 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093909614 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075417433 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088462425 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074952436 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093798592 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069622818 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071328721 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095447784 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067693882 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089968403 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067065271 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102984469 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068526244 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066089038 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085185177 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078548912 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090758396 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070427068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06565569 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095164993 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062864874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08836089 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070265678 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068541584 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098215178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091466721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075977635 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09460973 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077332159 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068152514 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090919546 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066027879 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08790937 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068369296 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07539192 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08264745 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07196103 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087952595 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070829448 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075925718 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087441484 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069854356 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096559411 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074604996 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067543633 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086095118 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071591478 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087788208 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072280092 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094788397 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068462412 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063493999 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083050482 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072363152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087144331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073598044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073270221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090950423 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064089494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08630883 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073826284 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095589375 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069704622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06820733 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093511443 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069641978 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086745338 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0750966 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087755292 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069641064 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073350498 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08815362 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065053687 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089943163 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071755512 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067194203 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090824458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073479855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089492576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070604507 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066708285 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093240608 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069692775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086672103 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068896853 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066631157 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098076923 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069943118 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083348236 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066785712 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094034643 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067382571 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067925502 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087412897 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071467577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087770331 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067867395 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068255262 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090287241 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079022383 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092147631 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069394163 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092913783 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079403995 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086578402 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072622314 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067823019 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088592412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069771751 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096312206 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074990339 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091362003 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072332121 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065556613 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093317011 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076160342 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085955696 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067308684 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067123734 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091498918 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074082241 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091829535 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070912201 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066759193 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088063457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072335261 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090810866 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069642754 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085342236 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074719246 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067188491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094827789 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069614142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098164867 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071471814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082877107 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072343161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066654661 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094020704 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064121718 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085611274 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06842405 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069363325 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087732732 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07106468 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081695803 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076582756 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074875899 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088008153 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067713041 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087398195 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075919454 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069230988 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091595746 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071343838 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09393417 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078385362 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086721215 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07220726 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078059269 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089223653 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06310687 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093717331 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067919826 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067323016 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087779386 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067160321 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090338058 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077820538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094732108 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063301065 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070520439 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086527302 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067969697 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083184125 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074191916 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070254759 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090370246 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076770904 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091926128 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071245841 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091360327 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072098432 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071284393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.092067536 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072045079 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088127941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072139711 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06734042 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090803576 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067685239 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084894272 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071232196 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069233246 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088503431 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074308079 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087537098 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070187987 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070836994 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091841788 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071206024 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089945537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070665171 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072999117 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090983115 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071166437 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091154962 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067228549 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076592158 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091180015 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078054834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090249732 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068037562 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075220424 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093111524 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075848374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091678975 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071036044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089477772 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070280164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070761466 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094409237 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065958309 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098089079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076572182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087497304 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072104955 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068089668 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089337263 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06801876 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086907149 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070994074 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06848352 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088231793 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072824716 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089953158 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069897406 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06977489 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089084808 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069395746 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087770701 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064721631 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067624179 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087333799 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069348308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096815626 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070966269 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068155955 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088272982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070628573 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087186547 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066347545 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093684772 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078953167 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068662301 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095346387 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067916352 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089475377 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078854126 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082464569 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067919129 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067116889 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085976808 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07586177 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087799847 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077919544 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06785319 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087595845 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066395611 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088267103 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068675833 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063232544 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085802118 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072920457 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066598293 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087799968 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069472267 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090956929 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070540003 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097274486 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068963305 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068751754 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088829175 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066127023 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086359012 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06831369 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070921789 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089705977 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066469282 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065343545 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088784869 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068881743 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08913823 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069299903 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069525379 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09474533 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068703471 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091091829 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072407929 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084726854 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072388409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068455833 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088653721 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068032613 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091245117 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072559123 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068875258 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09730042 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068303542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088602286 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069921764 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0655948 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.089007863 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068800667 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088094077 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068339667 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069147924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096973954 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066609162 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091098088 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069261809 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08728663 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076856716 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069344286 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091435122 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075927329 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088952731 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070480028 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094792007 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074148261 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07179912 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090372999 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069748343 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09449265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068888007 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094559432 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071058638 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069867939 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090920599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066849385 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068044327 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089306875 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068113724 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094614935 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070362939 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0862148 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069536614 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067131166 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088725359 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0731674 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094712427 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072705968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070572321 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084770908 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066840913 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088413575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067846206 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069752555 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091456921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074701933 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090108925 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070016513 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06711188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096559032 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074125543 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092120513 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067150725 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072017128 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090308404 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070607126 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089063232 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06912684 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089653237 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073724414 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069634555 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087330124 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075655445 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091007529 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070818326 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069852271 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089329773 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069048642 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083615425 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070646832 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070488397 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093124129 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070464994 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088270439 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079364598 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065560185 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089447259 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071784269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087639579 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074001821 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082726576 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071260651 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070390027 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089520426 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064655668 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086128903 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067544174 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070447464 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087143229 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06552728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097858275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078593154 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071527757 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087969596 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067627047 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083700566 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065150761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067345362 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090257563 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070258489 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098598268 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068298221 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067629931 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084596523 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069146715 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090867158 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072380049 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065797287 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085099217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067804631 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090659853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07464497 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06717151 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088650078 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071941065 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089387312 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067644887 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071509246 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085814224 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071751001 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100587727 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070035189 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08866808 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07608161 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094790589 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071277093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064036933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089385734 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072361793 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087310554 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070997468 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069515293 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10413149 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071082181 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087996318 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067872367 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090353163 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069076475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076758739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090283962 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06980076 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092608034 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071320408 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096854659 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072669049 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075088928 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091541631 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072284592 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087863757 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069127621 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066135289 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087366045 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069981683 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089221989 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074044915 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095835094 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068858913 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098133259 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078763374 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070707408 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086709225 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068647741 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086698229 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066324524 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06997808 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088716593 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068545607 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066340452 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088492177 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069524418 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094276027 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070144116 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070231527 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089308898 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063427832 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090197078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071758026 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069366112 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086517602 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069780106 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088992626 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074039889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071385428 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086884127 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070389046 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089071003 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070109563 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064669074 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095548359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068611995 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092324004 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070375571 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070234225 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090640243 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0732091 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095474401 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071737404 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092532203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.080555098 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072130437 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088562829 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068189914 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096215841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070252114 seconds)
  done (took 48.021621959 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113090373 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089124843 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066534265 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08648988 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078997206 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087845235 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065816273 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064780121 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085482135 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068288703 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08408402 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065218316 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09304615 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089089383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097259003 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068263855 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084945595 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065248253 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083771317 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066148196 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092909069 seconds)
  done (took 2.652158714 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079641613 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.096116399 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078544172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101501515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070211947 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094254962 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074571325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092970725 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097559039 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07100336 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098638642 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073966448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088821647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070526343 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089369307 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075259572 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098900376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070276776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092289588 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075754935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093854966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075323066 seconds)
  done (took 2.808879345 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071758953 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069975664 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091658409 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065587291 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068027644 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083992195 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071981515 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.094006341 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073053502 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06672335 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087516057 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067202903 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088301259 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065268838 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067704298 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086190876 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135899218 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072737413 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067707792 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090543741 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063896604 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090302739 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06445386 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064525633 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087744198 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072574061 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089399042 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067611967 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06768316 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087494818 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068703961 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065563599 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090819924 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068833571 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08650705 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067710244 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06732805 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088819786 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063886881 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085120638 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069930493 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064381384 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089303596 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07024238 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065402509 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086619157 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069654429 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087462479 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064867539 seconds)
  done (took 4.718268317 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.091018971 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13406033 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092198805 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090656259 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105388613 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096810506 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073175766 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115314155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066130652 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088667822 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085105071 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108243649 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090911677 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07514414 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097169696 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071116599 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070521096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090926498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071652495 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089210072 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071976459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096523883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104549758 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083035781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094000152 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068304278 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088370977 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074525584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10277124 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074381205 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095475418 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074932925 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10459766 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074278197 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088447287 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069894598 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105127893 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067908779 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092473909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066319989 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090568602 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072748421 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.096034455 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085739389 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089687479 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073859354 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08850634 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065135976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.102523741 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070826382 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097162013 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104949546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073638668 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087996048 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074319179 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104309232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069126185 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086451306 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072917495 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100578463 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067161385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091181641 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08319439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090353054 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076588602 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103711354 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073507952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093472025 seconds)
  done (took 6.971825679 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080709671 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097446134 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085464426 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107186149 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097596303 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077600468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097611688 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077450695 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098703663 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082502072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099153708 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121150225 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073039705 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100944899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077418188 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097609218 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07485341 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096473591 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093216283 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076940501 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095093725 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08367967 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095691855 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102969529 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10682839 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090454848 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075872566 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095167184 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083478294 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096510972 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106830474 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074967573 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095591537 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103258843 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.089383815 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095691843 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067938288 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094754135 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076336983 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097297245 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071091729 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105874591 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075202041 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.093417107 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075055922 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096673405 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104826937 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087234562 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100628185 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101361202 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077509553 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107275094 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075854106 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099121136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105718535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.112269405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107498484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106888207 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076556046 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106910732 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106639857 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091990958 seconds)
  done (took 6.687890035 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093088391 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101454635 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10204862 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067415246 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068445062 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097023464 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067264107 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087801083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079111892 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099497014 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081142962 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09541966 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076784733 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103007691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094210066 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078878049 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095447812 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074236274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099720571 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07430421 seconds)
  done (took 2.704573047 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08132069 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10867269 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071707916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074128856 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093482818 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074101091 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092473478 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07113674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090566935 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072152006 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100204427 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079985351 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089993193 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075042448 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099010752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073847228 seconds)
  done (took 2.31664596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083882243 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.10302662 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084886599 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090118816 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067429115 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086386959 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069106961 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064304451 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086464429 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082787067 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090851385 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070700323 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089262255 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06766025 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064565592 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092837057 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064256366 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08777487 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069012696 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10398954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080534796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087385501 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070392736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070026949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090341842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074315064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090563041 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066208443 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088516143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06949859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089787553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076694681 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084869097 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068689197 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066939802 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087534178 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069438313 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088683288 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071688468 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067708584 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088493086 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068191823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089662693 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069942805 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084613473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071816825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064238638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096659075 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068019949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091378225 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070423772 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092701908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07318274 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079076181 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.095401968 seconds)
  done (took 5.354995324 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085367733 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072532687 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089313106 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068261286 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092747338 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071581478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071187129 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092405972 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069818175 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0876114 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070977063 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091614315 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072654863 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071973613 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092279026 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071470682 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085244808 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071842122 seconds)
  done (took 2.401335276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077166395 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070033966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099283463 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070577376 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090939132 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073409441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065093436 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089732065 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068551754 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089741603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071512109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071369262 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089922113 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072933913 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090872505 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071470822 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072251305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091029961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070669281 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086757544 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07389799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068674775 seconds)
  done (took 2.70226687 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.077199637 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096982096 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170350048 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.114525914 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086910611 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.106054852 seconds)
  done (took 1.627308758 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096120578 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105359661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071389202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112274563 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079890781 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093184147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073133469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092551736 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081727079 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107999629 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071378635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102951416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102103934 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081269564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099971063 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077961274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094384159 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071479274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092883365 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110879084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073912598 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102162338 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073596192 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092994319 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073034573 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102481387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08102528 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108886656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093182878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082122896 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10034889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07314989 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103691693 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106711626 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075634914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102055793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074225071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11413828 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07854953 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103449983 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073133225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100833307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102313152 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078705695 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103709874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072155086 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099491951 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072175805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094906001 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11996283 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078911917 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103194353 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097943514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08235549 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103151762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118994759 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08629544 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102891092 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098110912 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086703074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102199516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078109432 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102885625 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107626463 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078930915 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1033294 seconds)
  done (took 7.061190123 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090566648 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112178504 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072857532 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107933633 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102271176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073979418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093452596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074223646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093619905 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073307881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135628086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072116866 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10320593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102721669 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073584212 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094611157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073211148 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102878767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072351837 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119874665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093499454 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081186629 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102284001 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101893826 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086965506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100338029 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071944545 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094365252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072368905 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094858513 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077431895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095218057 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102191136 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072578632 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102080178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073501493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093713769 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078351503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093803965 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077541631 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103518986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113504219 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07294918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094413157 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08547467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094953169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072254347 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093702962 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069931783 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0914075 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08336224 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106465952 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107268503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101715471 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073958903 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092851718 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074395292 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092910576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073758416 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097859697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080480153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092829356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118743469 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072665067 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094023067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08101171 seconds)
  done (took 6.927877782 seconds)
done (took 135.683994277 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.24113617 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197579495 seconds)
  done (took 1.41562353 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07341864 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098614235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10427866 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130792102 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090702714 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101611975 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121216861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081171147 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067754011 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090017613 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068612416 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089944566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134730347 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068518778 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089870074 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071030763 seconds)
  done (took 2.466895378 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107674861 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204976605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112333961 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066984629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102381516 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079264841 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088425716 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080250282 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094061921 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068264309 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079748337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099317256 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066354559 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099220226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07322314 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101066797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066817788 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101774539 seconds)
  done (took 2.68002796 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109897145 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15239384 seconds)
  done (took 1.248186599 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206890785 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126541598 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207359916 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.426549333 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.21263602 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.285300447 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182039402 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180180043 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162178071 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.179274577 seconds)
  done (took 3.150303471 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104386647 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178722902 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3249901 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142460052 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089864212 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121440116 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144462023 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.1118731 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086211243 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106013987 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084530917 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103482179 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122286581 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080273983 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098799449 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082753052 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125935121 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07820443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101785136 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080412824 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125159719 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07109601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09893996 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078880809 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103200283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084009763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068901883 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.092739296 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079088927 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.101041621 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082903899 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120543894 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10421801 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13858427 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.086262467 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159871873 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083485789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096334853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080369683 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076204157 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10401456 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101879515 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.090263176 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102964212 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071263201 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081018533 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092415925 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070623013 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105581234 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.082037501 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105927618 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082097611 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158156533 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.083531374 seconds)
  done (took 6.6166074 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.758982855 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111819901 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097054587 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.808721768 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089697628 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108718021 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710706868 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120300461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210528343 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762495167 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090044967 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100071032 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180012098 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21503032 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.90211015 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284620826 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632562033 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105366191 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109673449 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133967626 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141575505 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176137432 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150207434 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434924874 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076556296 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094400746 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139718315 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076184435 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161784763 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085568295 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09535448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155113035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225372627 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15554983 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098724477 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071570654 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093384745 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149342421 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221532746 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192716933 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159256177 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06961328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093245626 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141551426 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130106435 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069291019 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139813255 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150940692 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170476889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074557003 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097057706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143475975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140415326 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143474042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102553771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267845387 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282906042 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091192764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100906977 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104816863 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235177428 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084753269 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200131004 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139029234 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167958913 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092889565 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.731634125 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148644453 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093955572 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075603853 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12083579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096649125 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140280018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147329019 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.348399875 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164999598 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074326646 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092008662 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205994677 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083812173 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09369885 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140819764 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076373169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123780714 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168632233 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147457503 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149917993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212260903 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143233831 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162279775 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075648594 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125782709 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076025746 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213713461 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.17039117 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140894401 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207446857 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142242674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142704387 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147492801 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097497608 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150608292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119953148 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081367475 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139216714 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191960998 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124770882 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083861458 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09618472 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141225741 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127440885 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085848015 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162657561 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149386148 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456184899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147585846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091112969 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087704536 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140819334 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162635171 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078721176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234705773 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103071481 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17023773 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122066781 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070177344 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121858319 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140510519 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078569845 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123635903 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16166246 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077711 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.208410113 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192209565 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078228215 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21470987 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162047074 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076186999 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148956162 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120926955 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146288903 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100434589 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14027606 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07589681 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776874418 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144292486 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122840907 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094719055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154557377 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093501618 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083224925 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107081409 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068610439 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752175007 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085685789 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102822219 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105017734 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076291136 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122492813 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137871192 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094724763 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140172785 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179159082 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098476453 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119909549 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082551932 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16114293 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078012486 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105671169 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084137984 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106054992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124431556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074518336 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105777323 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147827689 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141916687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193208192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542015843 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070728137 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106150691 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19945893 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071601016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262939293 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1389774 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198355917 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142645488 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08053306 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285727202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143954021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177619578 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106638667 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15191852 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06955765 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137625664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142256444 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0940946 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075471234 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139469171 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168070691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144762368 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923702563 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072509314 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203956929 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069074922 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171808516 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077772193 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099494336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240208483 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093999349 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148003851 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143936059 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095407028 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085498448 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.675863261 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106420806 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140577299 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098390534 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.174705707 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167132522 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143370004 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144405135 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078227325 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164378484 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193942103 seconds)
  done (took 40.726946117 seconds)
done (took 59.290337991 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271254648 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.182167148 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247463436 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14845433 seconds)
  done (took 1.937598044 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.159420585 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108336917 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125580441 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092127439 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10759448 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092900015 seconds)
  done (took 1.695234083 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.422628222 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268333965 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233559553 seconds)
  done (took 1.936188044 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271707503 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.222325912 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462358322 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30292845 seconds)
  done (took 2.406600425 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.182540304 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120336047 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069321225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111327885 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164908358 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26602675 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132977349 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19241738 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083337614 seconds)
  done (took 2.383654204 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.204985861 seconds)
done (took 11.580352059 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.192042817 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.274454654 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.205175188 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.234434841 seconds)
    (5/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101980853 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108782936 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.238493632 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113201152 seconds)
    (9/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.142560762 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.188122142 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074431911 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072697596 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.218189277 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.159236854 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.294293481 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.215070708 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079555641 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155762164 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.257835788 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075202741 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.121141641 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141620825 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.258651337 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146306262 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055617063 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12442943 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0976567 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119604702 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080278376 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12547448 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070988933 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.327120589 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079411795 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075004807 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.102438591 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075528254 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.210161737 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.101271746 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082747953 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099737428 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077080188 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.104730095 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150275586 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124881297 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05475259 seconds)
    (46/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145413338 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117321207 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091005289 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.156531214 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099208527 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090246756 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.279074338 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098889432 seconds)
    (54/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219655761 seconds)
    (55/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092242055 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.242730485 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075561877 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107774355 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070620819 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.268621251 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081898895 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099439234 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096475837 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100866559 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075801039 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126480432 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074787697 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.258305856 seconds)
    (69/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.141443373 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.236161336 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.243596203 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088104347 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081641615 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096123927 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.274601646 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100650024 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.162781275 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053930636 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111311362 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16303621 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052922054 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19915196 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122070824 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.216704259 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092590229 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201701331 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078473581 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053157771 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.260953013 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.067827407 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097109307 seconds)
    (92/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077882492 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075859528 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 0.165685837 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17627126 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090838857 seconds)
    (97/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.218804964 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.159652336 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110941269 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054801526 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102071241 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122482862 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.174044389 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091218521 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 0.151425619 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055254987 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106872552 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069218891 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053752353 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070833342 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11973521 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073945879 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.086819794 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070587503 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062440584 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.133604663 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076573844 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099440286 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.228180494 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077692392 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078810715 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054120504 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172717119 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054574491 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093136587 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129280595 seconds)
    (127/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099773946 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094333177 seconds)
    (129/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.239711093 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074566293 seconds)
    (131/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212821556 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.162087752 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100820832 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054070164 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.241745356 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067573942 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.098503256 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070287099 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104498526 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099499112 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.115763025 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.092888495 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076006478 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053778857 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126569476 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054096194 seconds)
    (147/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.135420795 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053967516 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160209641 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082393192 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054407159 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144298145 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074760714 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094985298 seconds)
    (155/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.187024176 seconds)
    (156/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074250569 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053379178 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.12590106 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06801073 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067148798 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100055878 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071877259 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123821004 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079363966 seconds)
    (165/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105703932 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088249653 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100823921 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142878247 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092328573 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064212365 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099755254 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08544406 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068431332 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.104243883 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092487413 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.261303011 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067483872 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099811697 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.243142981 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073448054 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073445893 seconds)
    (182/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13324474 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067999475 seconds)
    (184/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.057570789 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120128317 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074550597 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.378056903 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06807284 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09445736 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085415066 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103963381 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054805319 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063697068 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100557978 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071238023 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067303091 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.258309151 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053606095 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078291399 seconds)
    (200/309) benchmarking ("sort", Float32, false)...
    done (took 0.12856501 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.086531529 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06613178 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067065758 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093723705 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054911833 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074870615 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076619095 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068489334 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066749211 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098658167 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093974818 seconds)
    (212/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.124307975 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053913416 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.0675959 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101065157 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068299612 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075165777 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.102379558 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055286237 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11410489 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054134557 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053291574 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092732953 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064822236 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19673832 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090720536 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096578408 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168979439 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091751327 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.250134641 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069878637 seconds)
    (232/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071534986 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089974223 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115285464 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053642245 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078888306 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07091682 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164856551 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067808213 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130981298 seconds)
    (241/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07410574 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.23857215 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075112036 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069114443 seconds)
    (245/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077878276 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055488537 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054388537 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148396942 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068443764 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.246738191 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069846597 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098090221 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090486263 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077139286 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067880874 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05357043 seconds)
    (257/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091832101 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09339734 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201470631 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080024335 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103450581 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067515327 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055174606 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099533556 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054719609 seconds)
    (266/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053783429 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079981223 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07577171 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090067759 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070433282 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092066709 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114412955 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19368431 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073789395 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053402041 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115914849 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054008905 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091878773 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092379746 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074640241 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080926607 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075449547 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068154389 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078649062 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067255664 seconds)
    (286/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063033938 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079576554 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053987891 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065671855 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09360695 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076219983 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054278558 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196743301 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077675221 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070728541 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072793535 seconds)
    (297/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.076946981 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054462182 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053488872 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112640933 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055359422 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053525862 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054130916 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162848842 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096423479 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093641922 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068139234 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091725476 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.13507838 seconds)
  done (took 35.763115015 seconds)
done (took 36.785839875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086562903 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118199104 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07809579 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117825501 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083739879 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102760287 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076101805 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079532725 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.107974396 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083152916 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105468828 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056582785 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10039361 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077423907 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100078812 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094367261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103372764 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075128073 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074850234 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091657781 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076685777 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091052862 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070809976 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056250175 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103079758 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075822698 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073684406 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101058588 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067359268 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090715036 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071806718 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074045338 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091458348 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080737492 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09750749 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076557054 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076201013 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102466424 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069427757 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091027851 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076545494 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066807813 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097467152 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075254157 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073171891 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097037374 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075153322 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105630246 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093640961 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093599569 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076056164 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101077185 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0798747 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07450351 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096180852 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076104486 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096529067 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094072897 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098988675 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0712642 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075181852 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100871173 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07393643 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074985804 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.101141704 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076806098 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102913679 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073434723 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099891358 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074197553 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067103309 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099570811 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071915745 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066869979 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102141968 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078122281 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090654434 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074665042 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074176202 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097993046 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067704637 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068690664 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094401997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074340621 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092964126 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057781312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071419623 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096612895 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06830511 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07571942 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098311736 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075155436 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069243717 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103755987 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067805699 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096146162 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068623462 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067312531 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09392143 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072246425 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066487581 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093998523 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076727233 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092473091 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075501915 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081121885 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092128597 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073799464 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066556873 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091691819 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0835227 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101781043 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067570144 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092516097 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068842301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074708306 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090085223 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068263889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067265001 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091794493 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074416589 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067057386 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093496653 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07598658 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104147283 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069036316 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071047212 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09363497 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068112842 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073170823 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092008791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068056418 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069222558 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089607147 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06967498 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091342197 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076114028 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069462458 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099640185 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070453549 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075508219 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09742876 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073890395 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096759152 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068567462 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060209719 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093267614 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070889886 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069500273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091698908 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07026854 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066726637 seconds)
done (took 13.637681291 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071483644 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175520486 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131975616 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100727147 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113344422 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067804411 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10327186 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104526604 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094767535 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129126008 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089629743 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109411389 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116455374 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090893719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068618117 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071246399 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093659104 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089977337 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128136944 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109991956 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119795755 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091474339 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122366006 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093128492 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114728428 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104395135 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093270028 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072363153 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071168614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119300189 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111116646 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072147833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067317999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125692691 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120108874 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08765428 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090994596 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087675772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090497138 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069405741 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116683744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10211668 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107430168 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082832597 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099337344 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071563316 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093360612 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088482798 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.116702082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081967547 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11448515 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136083345 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071029248 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108481127 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066747394 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114419294 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10625877 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071986527 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067661725 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094432154 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068771083 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071177586 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114950542 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118741175 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072660607 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108068872 seconds)
  done (took 7.520807511 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090650338 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119895342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086924769 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109547224 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06839654 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068137272 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092756112 seconds)
  done (took 1.714753805 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072382083 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091790092 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11734763 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090638493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112615038 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088795878 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103953615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068670877 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109773876 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070195278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08899047 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131556373 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069735996 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101240155 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092626409 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093468538 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091325477 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093532695 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072531682 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116400102 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072392315 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087880027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096319403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068047181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107784848 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069386772 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141287522 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073761272 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069580908 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097929219 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067265516 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143472806 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106733391 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080399781 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068302602 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108485478 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0842009 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091559847 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08566113 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098644721 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085051982 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069869822 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095371217 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068321596 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073357313 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104190279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069887643 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094394016 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07284617 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088624848 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094520884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083051523 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093475898 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073931663 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069537464 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099264868 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079391131 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094030572 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090468861 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070362361 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111079685 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084098549 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108904485 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084554497 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095984798 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083796081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107303498 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072317055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07045413 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097158645 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085633197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.09072411 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071679716 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079418683 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095473027 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092034644 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116457005 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071449123 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102860453 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070599771 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069511141 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093695073 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092622151 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097123582 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070109502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072527479 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096636781 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067668672 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067111475 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097306675 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067991214 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069381363 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097767386 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070344472 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095355781 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086586102 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068972639 seconds)
  done (took 9.62118766 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073943529 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071630471 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095421047 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070306423 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069819399 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0951475 seconds)
  done (took 1.571550775 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103796974 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098131332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085057329 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098021532 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108741833 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107604742 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085200272 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109425651 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086903926 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106522863 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084332225 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109161047 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088845037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100174388 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083479127 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099019069 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08515052 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102632332 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081958058 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098812403 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09072473 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099332953 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077075584 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083772798 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.098520393 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075478472 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104260531 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081700561 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105793234 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084456693 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099711592 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073094552 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097872049 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084399512 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108931 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073619607 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098901911 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074785352 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102035699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0740133 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107600393 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07708336 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079786161 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099481468 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107399541 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075702902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073398298 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103778044 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083204175 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099053342 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073074771 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099106695 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073537767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097539831 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075123642 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108031046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074461828 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107143398 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077261892 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073282592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09714414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072313166 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109172346 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072407631 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.108493651 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073327553 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09840434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075971759 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099370266 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076283999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073367046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097181983 seconds)
  done (took 7.620658431 seconds)
done (took 29.127614584 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668757611 seconds)
  done (took 1.755996206 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813605626 seconds)
  done (took 1.902901822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.674214285 seconds)
  done (took 16.76826107 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.643330603 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.79808467 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.837404818 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141264753 seconds)
  done (took 3.506169714 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.90461986 seconds)
  done (took 2.020963001 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24443718 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228590713 seconds)
  done (took 1.562399867 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.786020509 seconds)
  done (took 1.885263237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360953173 seconds)
  done (took 2.45063243 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336126115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18438118 seconds)
  done (took 1.621349658 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.536253534 seconds)
  done (took 1.636082269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.796315222 seconds)
  done (took 7.899942066 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235693615 seconds)
  done (took 1.349212037 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2771194 seconds)
  done (took 1.380428176 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.268470181 seconds)
  done (took 4.370140591 seconds)
done (took 51.20655819 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083882906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083188456 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109074157 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080273051 seconds)
  done (took 1.452181344 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083781903 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075504109 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105876816 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074652297 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105945205 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0754206 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101257218 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080504297 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074053116 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102279045 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074777543 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100098355 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078109086 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100941175 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075114262 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077005012 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105021288 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07493143 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10414766 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076061799 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072325305 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103318408 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077437812 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099975374 seconds)
  done (took 3.207547102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083248184 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074785104 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102338554 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074574203 seconds)
  done (took 1.440093866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083437661 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117918862 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092226103 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078604995 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12101168 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114188485 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073236793 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071394457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100296341 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07971863 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093289886 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101642525 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115704947 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07912729 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105209905 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069576498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06986342 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115480118 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079479442 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105300941 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073779267 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080865154 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095613305 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0918811 seconds)
  done (took 3.320712657 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0831974 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103791243 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.106243749 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090205813 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.120255402 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066710281 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104653256 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092932556 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153515567 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066998241 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098673721 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067860649 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098578368 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069190314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078496142 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138073106 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113209233 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.097489763 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098994824 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09459322 seconds)
  done (took 3.058344985 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081192259 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070733049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092470839 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071877071 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077262148 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101290015 seconds)
  done (took 1.604643967 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074340049 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069644913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093908308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069445449 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073564998 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094802011 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068568487 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068903217 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094787903 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06915512 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068235715 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093824582 seconds)
  done (took 2.048035463 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458555853 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072329847 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093520367 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070828472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072113962 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093439053 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082241564 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06952816 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119032637 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068435034 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093912703 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071146837 seconds)
  done (took 2.478462755 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272121703 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081110127 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334791426 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172480012 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143552843 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158863635 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105267888 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14370003 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203210725 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144384088 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207358676 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233345508 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137576298 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170640581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118722788 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107420259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217166524 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227737287 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10868574 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229338579 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210206994 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161114167 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183680026 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13087022 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136755368 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152827498 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073800205 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109675794 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236024473 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166332548 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207725777 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143602165 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101691018 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237162791 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231268964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201375547 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167214387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090731781 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159663187 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174472715 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263776151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116776015 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197394324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13791555 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108396607 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176610901 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150404356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150103701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140036185 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117053635 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177331698 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244900879 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166891751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115997076 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139005605 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144602664 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146683379 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105162822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244964557 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221239039 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161035113 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099424132 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099692552 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214685738 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161394858 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145416953 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157195181 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122167658 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169902104 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215074353 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148846023 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176598512 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185911976 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091246668 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147888687 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199735653 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159193524 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202909407 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180375764 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07674971 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154489378 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133435087 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083363716 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173937129 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100884382 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210453752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127584201 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141406168 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14027354 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137549988 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114428673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227489839 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209881675 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10832111 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.096521811 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134059039 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152642783 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181813761 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117487934 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137658915 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152310974 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083986235 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196229753 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081629818 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156831375 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104006704 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155289954 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167116765 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079868606 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158279825 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132840265 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130084803 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166881915 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224602816 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092867317 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112144771 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202531438 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18190338 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134009899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179593372 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189284551 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129803131 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134047263 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20840372 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245663911 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093862839 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227854619 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138129494 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085873307 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117191036 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156305566 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143205489 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153003719 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084958091 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182497893 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205156274 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105849953 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100611555 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196966998 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08639891 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110881794 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142656457 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129474494 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098646186 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131219425 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136843503 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172166457 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154864902 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137351141 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154884991 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129152156 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229214816 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117148987 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130912811 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107534968 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098935596 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168850557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193612614 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108483566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227865681 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157102641 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132328757 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150543097 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086635631 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172658623 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107397338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072461763 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203967428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140073057 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112890095 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212457301 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131818451 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159716076 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156136158 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166663287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161314484 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190043308 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109568054 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116470071 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143063059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155571139 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100662094 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098081275 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112578882 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133172783 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123425453 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0875281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174853126 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185272479 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10172328 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143453261 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12677117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180781932 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105168669 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162347556 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150505598 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124211762 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188478211 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21442651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168797671 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130897466 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178019124 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099020364 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076427031 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120534965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159599775 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112195852 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08673781 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149163219 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207220084 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159979567 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170349603 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140968844 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153206829 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188610217 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10057561 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119064059 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209855465 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157020696 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161047536 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094955154 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127901794 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176991646 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137500648 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247753526 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145356782 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154307669 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210528643 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132741533 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083062656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134805661 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169597451 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136500586 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215093399 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131383469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093350174 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139990533 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110325206 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134324769 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160743597 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151947822 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165138779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147007136 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189024425 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084917283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147094196 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153945326 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154995018 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09308003 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152046489 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221071104 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09941853 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147401936 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217369849 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081664451 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154808117 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241126993 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20423881 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087609725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139953084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153037201 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160577151 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148563943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198495498 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141388201 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166727098 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113390913 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114978888 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115584984 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101435165 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136610404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124791407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142347812 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147328921 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124294302 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162989247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14291528 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140094161 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150202272 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101453165 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12127694 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127472515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211055433 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152187622 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236109525 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130675977 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20967667 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202068452 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10453419 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081480884 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110403108 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17417195 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113135672 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166702933 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124258808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109359348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158907331 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206427496 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098263446 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09780711 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140010047 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169578825 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141094807 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126005067 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108824089 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226597787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133322006 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081262887 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15568276 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134845428 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132156324 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239152823 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063944277 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127216445 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078982553 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109698877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160675294 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215476058 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087228313 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157001405 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152601923 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152198238 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160986883 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132638635 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099639364 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143925899 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210765018 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161295204 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118298747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116473782 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188442194 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190083448 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136721812 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126764339 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237895917 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192557308 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227429575 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118502056 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146672513 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146623978 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112765141 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200658742 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111681659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205323297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112708709 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168104169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134775799 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123001969 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162063029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.14413487 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091068997 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209924287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150317623 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110704058 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08338685 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149037771 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153427852 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138771594 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104218403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173353834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074548338 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19888186 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204242915 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11243029 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136237125 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098709469 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111722486 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140976404 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134076036 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115159966 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124234694 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242383049 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122295636 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191597102 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205962854 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149833382 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174386785 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134661628 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669777043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082328432 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219874355 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152075454 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242327162 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129616881 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151725843 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141695589 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156096403 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179381305 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136806167 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208005326 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16605243 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15248814 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110136867 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13384303 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142574543 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094681934 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139025334 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147030856 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149352877 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131752794 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154319542 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160280028 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112691249 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097436058 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222643054 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149952578 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175322946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202000121 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088253631 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151367429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204236527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083784776 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183220549 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19650608 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14239565 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132621103 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085036413 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13854285 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240623011 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075044617 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229947422 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158218674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143889304 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148082882 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152771611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197773264 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142234268 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160745855 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128576955 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146045196 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149833356 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088773275 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109555971 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137305712 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14576498 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104224325 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134316261 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150899089 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193922235 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10049062 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101631313 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135493313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179745766 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24591855 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121721569 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084846449 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180889434 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149087724 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14986016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1616902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087184951 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11486608 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085139722 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.144823366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14742023 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149407919 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107218973 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142771965 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235642644 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115770393 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227206117 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128920757 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139698702 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072446139 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112259987 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126772651 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103870076 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141231818 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130976063 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240359653 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103116527 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123613369 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125271905 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077947908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112619816 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166005305 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143724002 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157798805 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131126522 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068758194 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143790497 seconds)
  done (took 73.091089554 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163090309 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108633529 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124157514 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17734252 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151239247 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241926208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185571356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227863238 seconds)
  done (took 2.569147891 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07420481 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125228586 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105723136 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119601649 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095164397 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071567097 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.306322132 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112706116 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068510568 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120875403 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122384559 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097714875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486620786 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067803958 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097008701 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088967954 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070500665 seconds)
  done (took 3.411969861 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.445032405 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.638811422 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.464502729 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075947483 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.901337593 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111884196 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.397014781 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167341342 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096049759 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.437134491 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731657432 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16205226 seconds)
  done (took 17.820457247 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080842979 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070862107 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113432284 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08563577 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100535882 seconds)
  done (took 1.641952191 seconds)
done (took 118.241868259 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085444468 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.36745909 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055138713 seconds)
  done (took 1.649198329 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089715405 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086468046 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.1148249 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084267802 seconds)
  done (took 1.576616443 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.080262643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07809879 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114161579 seconds)
  done (took 1.470538938 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.287214433 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167715821 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093025792 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08910428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079451571 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107029123 seconds)
  done (took 1.472989252 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079119912 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076494032 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10342103 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078496367 seconds)
  done (took 1.529777849 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082181497 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054350151 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056126964 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085581162 seconds)
  done (took 1.47611997 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095144325 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10716239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083780185 seconds)
  done (took 1.481202082 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113122509 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116044059 seconds)
  done (took 1.427293957 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08769349 seconds)
  done (took 1.281301206 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099260642 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.144385543 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15933544 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140343602 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168329378 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139239747 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088266999 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118122753 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106679628 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090365389 seconds)
  done (took 2.453684083 seconds)
done (took 17.64098348 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083491257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.489520692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362907501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118952931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67115043 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357294575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009818656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120114305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12268733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098067208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085718214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677003472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97132351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.440087672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962521036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323482073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678313217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070048839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068721495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098675019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964507293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097006415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069763128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678645146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371928163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09738413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324957392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068378219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099988755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355733174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096684797 seconds)
  done (took 16.290508027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076132696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145983287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07587427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084361837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101428248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071317198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100078037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071267066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155889249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068947372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114465424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069844438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098594732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072926029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088368204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09786436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071064603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0689968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098829866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070073708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115498827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070772915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069593158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099023224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069076849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108785803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070670607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068518178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099132586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071224963 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098840419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070973663 seconds)
  done (took 4.01292788 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120104178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154566714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075474905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11418479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100885912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172385289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095087645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157942013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069406909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1156233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069586587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131101902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070367532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116455705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070998806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071039329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098815631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069933385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097649743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089244177 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068947843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099139287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070106489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097803307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083725546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095342185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073757271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069824604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098945444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074114622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069623405 seconds)
  done (took 4.301277302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07835216 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076921052 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112678709 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085275046 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0981247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07513849 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074048982 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099090918 seconds)
  done (took 1.90826766 seconds)
done (took 27.713901319 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084378442 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07169353 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103474422 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083846613 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101193305 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082338941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068868175 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104644081 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078821044 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074709827 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106507316 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06945931 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100887988 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069781098 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075931804 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098358288 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08090369 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100632067 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081813133 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080476918 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.101528967 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078751538 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103275186 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081738624 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107351149 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082871283 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083876123 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105195278 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070790834 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099628321 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078821592 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084955018 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.10017904 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08066044 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09816011 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07030411 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068453348 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098523281 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080733084 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103200518 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072809579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102474022 seconds)
  done (took 4.870099823 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093693587 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089662671 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116197218 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071108084 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10246277 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064655135 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119255929 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072850766 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094620012 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091767762 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056854046 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.088509283 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073976254 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063233329 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.09873059 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058992008 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060400478 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.086315481 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062379678 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060731341 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085701753 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057242915 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062383668 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064394507 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.086762899 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06432666 seconds)
  done (took 3.254677412 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081013657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085111015 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119527194 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130182923 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137925703 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080075924 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109714976 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090049234 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117569763 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069133204 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072077475 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128581787 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089879252 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10527776 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069266636 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.127557924 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084724433 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070165316 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105539986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091947172 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11525077 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079819799 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.123123373 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084154451 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068084648 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10109531 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073285589 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110709335 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074888703 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078305115 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103892743 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072648312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099814389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080936096 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100156008 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07302485 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091270432 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108212034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080176226 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097632567 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074199001 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069379788 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118627888 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112464777 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097487271 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076826556 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103616595 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080620545 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068515921 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1171903 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078611204 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067720181 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.101704377 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068313436 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096002198 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083571013 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070211486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101125177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078466571 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100243216 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083237609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072676473 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114210677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069027446 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103774902 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069542097 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070209228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096909677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093448843 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097483876 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112565508 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097881448 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07176932 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078105503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.106594492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075345862 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095679178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08676116 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078836591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102030757 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07924927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099768981 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073760334 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090523211 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.101240315 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072273287 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069928985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.106304496 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072106695 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09793579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083672118 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068957077 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101838111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086167211 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096386395 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071404003 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074175879 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103397644 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068957729 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109209044 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075164922 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069561969 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107823821 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068869938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099735386 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080762792 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073851889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097273879 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073766787 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10380648 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071071349 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069733469 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101028367 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071573363 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105726104 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076160929 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073243048 seconds)
  done (took 11.688165869 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.199322777 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188629063 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07315642 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.182817121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077055685 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110100629 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181904873 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097721925 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098052115 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071288153 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070280176 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.134359569 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096792813 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1374884 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10933111 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069439975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115717147 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106987754 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.186011619 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180770279 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115121906 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081669202 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071615601 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09966018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072571603 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078644454 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.117519268 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078583324 seconds)
  done (took 4.430899891 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087283412 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.142455083 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077065793 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093437457 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122962123 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070046342 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105785922 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07125884 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110711982 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081958838 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097738062 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075807926 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075489545 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109132559 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070839277 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107265856 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080078851 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070708787 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102295361 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075107672 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110214263 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082735833 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101139764 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069594226 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076441358 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09783901 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066706616 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116386776 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069104775 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121707301 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069109624 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074654789 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.118807706 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070148238 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097781598 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074136786 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071688288 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102466605 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071367505 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067796348 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09814123 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059797249 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067706274 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.111999902 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075296975 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090944398 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075392672 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102543236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076571048 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067746002 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102696028 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074525352 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07265137 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.112492941 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075098334 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101969134 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075457015 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068069137 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106836955 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073981166 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065743434 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096075688 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075299907 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096382349 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079810813 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074413481 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096825404 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074032536 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07493096 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10520903 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073095469 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099348885 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069227177 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07156238 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102814062 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07446014 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073333787 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097934282 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069865485 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069975947 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087192516 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069288643 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054971639 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10267852 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067838028 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094877335 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074375848 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075271558 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112081357 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070954898 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104859775 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071492081 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068208529 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102757899 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06563986 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099639201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090341962 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113708013 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070463766 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067554469 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115555686 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075167898 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095224473 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059738901 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076041883 seconds)
  done (took 10.206681615 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.102962883 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093615315 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101169048 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085372508 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12762965 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09458002 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105241099 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076337637 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07010202 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115884945 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069427328 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105655174 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070662678 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078022711 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129191976 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077757386 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099011628 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080579127 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07382193 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.14110693 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08532436 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113887189 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083537467 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098273488 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07605957 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081296207 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127865234 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082227171 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109641866 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088309791 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082002749 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.128534194 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087759876 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103193174 seconds)
  done (took 4.48602354 seconds)
done (took 40.141123682 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.287340767 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.501913313 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.284607297 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.223056109 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.323654404 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.298235568 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.292790985 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.284569038 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.606648163 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.284009688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.520314945 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.949100878 seconds)
done (took 60.084266818 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.316164582 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.430419252 seconds)
    (2/2) benchmarking "String"...
    done (took 1.554221868 seconds)
  done (took 4.226840983 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.655444463 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.292775754 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.575980792 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.284309047 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.284460304 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.742449913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.909688679 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.111897016 seconds)
  done (took 28.427394997 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.292156197 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.642091764 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.584374961 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.583469084 seconds)
  done (took 18.330233638 seconds)
done (took 61.179008848 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.277806193 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.350565658 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.296102676 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.267588533 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.409877183 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.303903216 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.357822059 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.516260107 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.282532999 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.269716121 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.303402419 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.294636771 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.284236618 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.813813298 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.296071585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.285965729 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.342598213 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.762728829 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.671190127 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.304765926 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.289738317 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.355224576 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.296513767 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.295081672 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.311366117 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.282034577 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.288356039 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.297175528 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.433017993 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.285742064 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.372174676 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.454364812 seconds)
  done (took 193.878570928 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.286551179 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.16542296 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.271019611 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.306514644 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.670498974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.48197614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.418597979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.769378598 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.302968034 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.285353166 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.448202316 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.283388264 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.519827888 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.337774912 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.295971432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.366120055 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.486219642 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.539366278 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.301730211 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.559639814 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.30136876 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.343113731 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.258311886 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.428169698 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.317375523 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.286571705 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.294508762 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.303787119 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.476646314 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.428448353 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.299485527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.296914996 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.8458308 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.144742753 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.30482743 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.327901452 seconds)
  done (took 151.982150375 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.580516108 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.286343775 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.287508019 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288443394 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.287196103 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.316649273 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.286406333 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805822968 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802926175 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.811380881 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.722865976 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.348343891 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511447433 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.288612689 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380768481 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299721792 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.289223393 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.303485247 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.313710154 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287433902 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28990608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806359845 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.302104884 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.387505889 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294448173 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.288187694 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319945197 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.681898839 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.285733631 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318083913 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.603347367 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332592153 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285651767 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.576068952 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.520343911 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397975924 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287496693 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318422033 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.289811178 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.560349785 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.288805556 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290531798 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.289961324 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.292268726 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.864240781 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.289691146 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.808456031 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289505199 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162579241 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.288234132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2895394 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.2902375 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.985649641 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.798496241 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.290492497 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.290036172 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.291831179 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.287712102 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291537292 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.320577089 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.961811308 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.385850308 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.291403713 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.294291136 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320353154 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.291724921 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.386052403 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.290858848 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.92732679 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.34295665 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.504007763 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809478264 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.293671819 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.291276221 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385239658 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408519322 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.289116553 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.292342196 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291372604 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.28934859 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.39790598 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.291155356 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.678326602 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293685741 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.293287054 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.352092694 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.386229943 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.289950365 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578246949 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.291800055 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.291231603 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984128499 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382539139 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.291712889 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.291905232 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291833406 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.68159689 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811075025 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460160436 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.291889726 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.570188993 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.290064111 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.69126767 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.798562693 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.86605384 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292541033 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399062654 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.295271504 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.293841909 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.29226691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.322750057 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.292896796 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.351773847 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.292611939 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.689475437 seconds)
  done (took 356.017929363 seconds)
done (took 704.686340038 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.988472155 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.968309348 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.082930158 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.965924708 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.943570776 seconds)
  done (took 11.182072033 seconds)
done (took 12.41646616 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482356778 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.482179071 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351614621 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484117308 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32293233 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500379601 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460704292 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.312994744 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395377173 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.370196845 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396218727 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343955552 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321086275 seconds)
  done (took 19.458603156 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606963761 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.609741864 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358493306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611259289 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33348567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612727258 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.489881343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.500357234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485008782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307972219 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306826551 seconds)
  done (took 17.45907732 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612477665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.606335441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.361206492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611501487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.334228185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.615476865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.489659658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.50005582 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.483724268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310528478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30711229 seconds)
  done (took 17.467576362 seconds)
done (took 55.620748263 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.305195669 seconds)
  done (took 2.539935528 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.338862787 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.499573146 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.319912943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.307626909 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.305452203 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.304027511 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.308918863 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.304620503 seconds)
  done (took 11.927383844 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.30277725 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.303949076 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.300869553 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.300487432 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.302953886 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.304029245 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.303523785 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.301366366 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.302060782 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302893184 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.302209001 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.303953341 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.300334574 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.3025441 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.303939408 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.303577137 seconds)
  done (took 22.078190736 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.304681485 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.30210409 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.301813323 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.303393338 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302544751 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.302526467 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.303671279 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.301794051 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302195607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.300430397 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303179951 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.302299688 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.303379031 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.301139093 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.303225788 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.302597793 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.302473452 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.301831113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307494678 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.3024153 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.301917219 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.30175886 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.304189271 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.301962044 seconds)
  done (took 32.50453813 seconds)
done (took 70.286594604 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.26678367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.888081871 seconds)
  done (took 9.390571213 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.306151594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.306992526 seconds)
  done (took 3.852523615 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.305872616 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.305497665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.30541321 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.306676848 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.306733379 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.304457926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304508554 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.305496391 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.30594782 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.305382558 seconds)
  done (took 14.295586963 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.303579941 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.304148043 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303232831 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.304735827 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.306151017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.304164324 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.305620288 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.305078634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.305507125 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.30368713 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.306561966 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.30524769 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.306955242 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.304889369 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.305801914 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.303989717 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.304192423 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.304538211 seconds)
  done (took 24.72805227 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.307834983 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.305719008 seconds)
  done (took 3.85328581 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.305703983 seconds)
    (2/7) benchmarking "second"...
    done (took 1.303799403 seconds)
    (3/7) benchmarking "month"...
    done (took 1.305196399 seconds)
    (4/7) benchmarking "year"...
    done (took 1.304928449 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.30535818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.306065521 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.305640753 seconds)
  done (took 10.376179733 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.310082273 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.484922467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.564307071 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.431701269 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.306568846 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.310475294 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.140924537 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.311094779 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.313447813 seconds)
  done (took 15.414427432 seconds)
done (took 83.149192481 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.314648451 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.299607488 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.139117281 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.305784955 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.315762022 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.600446187 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.342008017 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.422727225 seconds)
done (took 37.981198955 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.308155058 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.007547431 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.016216504 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.301858242 seconds)
  done (took 11.565645476 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.288352757 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.203681527 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.290496484 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326688229 seconds)
  done (took 18.351379304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.907567111 seconds)
    (2/2) benchmarking "read"...
    done (took 1.633730415 seconds)
  done (took 4.784480774 seconds)
done (took 42.251837798 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308803546 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.30619533 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.310005311 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.307504655 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.307148179 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.308195785 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.306234601 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.307490052 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.310154021 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.310094713 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.311416098 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.310850576 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.310133685 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309359364 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307306146 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306638953 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310237796 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.306696293 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30729845 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.30929628 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306185167 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308075284 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.307376894 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.30559994 seconds)
  done (took 32.639610338 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.308887115 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.308611927 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.309308069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.311490068 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.306887282 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.309965382 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.311420339 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.306239413 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.310592746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.311590508 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309107748 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.308302143 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.31152189 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.308767055 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310381222 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.309107693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.309965492 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309141868 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310164472 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.306885296 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.310047422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30792862 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.309550427 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311368553 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.30937105 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306730089 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.311476688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.308436722 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311152309 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.308509902 seconds)
  done (took 40.526253395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.316024412 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.320255138 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.310384214 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.313235614 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.311839356 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.311490986 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312398872 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.311484187 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.310540804 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.31340428 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.311959356 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.311999073 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.31117913 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.312278565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.312057935 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.312850781 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.313752688 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.311441396 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.31248827 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.312381896 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.312813253 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313892867 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.313845378 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.31266467 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.312452631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.313292391 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.311629693 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.312844743 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.313378489 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.311736881 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.312005978 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.312808489 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.313295405 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.314110505 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.313265849 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.314500959 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.317734605 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.322770499 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.313819447 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.31331737 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.313716785 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.313381619 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.313238732 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.314442176 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.313391554 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.312446749 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.312952481 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.314478209 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.313928584 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.314063428 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.3138271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31443517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.313270532 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.315311287 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.314379042 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.314381046 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.314722639 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.315343259 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.31458796 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.314622983 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.313943136 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.314239983 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.314205222 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.314694605 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.315789827 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.315747594 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.313786485 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.314262445 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.315317785 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.314029786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.314349394 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.315473873 seconds)
  done (took 95.833531789 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.313869928 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312474544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312128906 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310865997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31217431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.315632957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.314583669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316446743 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314122116 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.31668313 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316198844 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313882135 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312865084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31537267 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316364455 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313745815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.315790919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312609584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.31606876 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317755503 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316963399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312500564 seconds)
  done (took 30.167488539 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317579409 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316313445 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.312983107 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.31687387 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313505253 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317241978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316761914 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315337446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317663429 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314427727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314021778 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316892561 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315160097 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31518637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312046365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314993949 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317397682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313987187 seconds)
  done (took 24.929464555 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.315994604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.314851913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.317778318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313417509 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.315703758 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317290036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31530772 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318650407 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.316338535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.314195042 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.317506756 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316357097 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.3169826 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315110371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317300009 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315306451 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.317592463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314296168 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319303031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315770183 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.315729718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318763076 seconds)
  done (took 30.210802605 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317405204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317685268 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314071627 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31486457 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31510647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3189946 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.317776513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.315494744 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.318036588 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.317387878 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315853897 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319078924 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.31539543 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316752362 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.31802286 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31544479 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318635443 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317351493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318714801 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315099917 seconds)
  done (took 27.588821791 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.320391538 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32178528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32100652 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321492314 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320131933 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320466768 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32104447 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.321102855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32004646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.32070341 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321016315 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32085499 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321152372 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321199545 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31951538 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321924911 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319710452 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321737985 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322095327 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322293175 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.322640672 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321683758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322862015 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320066158 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322089767 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320972227 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322092824 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322796163 seconds)
  done (took 38.245764262 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322032229 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.321109542 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.318734308 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.31953668 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.320342367 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.318627987 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.320163478 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.318735216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.320327003 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316965408 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.321282809 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.320319542 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320936149 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.320659661 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3189283 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.320789788 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320389065 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.317912184 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320309216 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318397776 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.32045099 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321347415 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.321824393 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319878108 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319529429 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.321787983 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320449677 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.319369239 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321872325 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318688972 seconds)
  done (took 40.856084383 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.339081898 seconds)
    (2/2) benchmarking "in"...
    done (took 1.341608374 seconds)
  done (took 3.935328802 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.319829384 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322388891 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.322763035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.321146398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.321074712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.324204528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322882217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321648202 seconds)
  done (took 11.831273272 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.323014688 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.322876699 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.323990708 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.322999278 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.325457157 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.325581008 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332397462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.34101356 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.32574598 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.32439243 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.32926521 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.333405106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.329703101 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324936296 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.325403677 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.326929244 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.324547132 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.324472073 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.325734999 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.322411956 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325670771 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32717116 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326287527 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.322169398 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.324811062 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.339428389 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.331822742 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.325300484 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.325783866 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.33079814 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.32428277 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.321833847 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.327602224 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.326987299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.323348693 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.325340012 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335704255 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343012741 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.334265731 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325989182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325721945 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.322650061 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.327585357 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.327437822 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326943294 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.326122448 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.325591831 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.322895422 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.326740647 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.326735397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.331741804 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326101251 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.325446616 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332867897 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.328215402 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334385942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.345149061 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.329256831 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.33765167 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.33993756 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.34105183 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.336488088 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326539307 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.327805794 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335809884 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.353332119 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335051289 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.341563016 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.324555543 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.327977936 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.335743408 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341132395 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.340026796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.327542541 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327445548 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.327536724 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328720262 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32741642 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335948841 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.348424336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.328547213 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330576914 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337756183 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352270941 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.32797047 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.329871933 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.329911206 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.32828449 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.328113311 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341360709 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.346858026 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.32782943 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.328496871 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.328078225 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.331632254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.330097595 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.327769665 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330291537 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.326636698 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.328799398 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329291488 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333637667 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.339691993 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328301123 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329402196 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.339096679 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.328778789 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.328478056 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.340664426 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.328406528 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330606537 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.330895407 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.337680616 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.326956886 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332229421 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.339281643 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.329310704 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.330628195 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.329791479 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.329388168 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338835629 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.360541016 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.329150351 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.32853796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.333856947 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.344032429 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329398416 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.334857152 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.331490998 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.328398245 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.327498934 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.332614978 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.330039712 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331421844 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330425497 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33351803 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.327452204 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.330505225 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.330824843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.331896935 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.333540437 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.332495632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.333189426 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.333876785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.331866471 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.3328555 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.339933669 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.33141509 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.332137954 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.333395987 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.329763753 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332972112 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.33446587 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.330103366 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.334360503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.332190717 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.329008898 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.331238295 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333105692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.331207457 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.330103164 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.332420615 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337468915 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.334358439 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.337100586 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.331857181 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.33226278 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.33286425 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.331418403 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.331822895 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.332535657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.331780992 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335932473 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.34207597 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.333748054 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.333454508 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.337373119 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333717306 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.333517449 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.333975374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336576628 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.341453785 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.333151097 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.341850548 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.333323139 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333274596 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.333938214 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.333675491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.332851358 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.332402167 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.337067215 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.342146603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347442211 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345457497 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.336692266 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.337802321 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.33542217 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.339024182 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.339256265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.334791274 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.333678417 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.334096818 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33386374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.334093489 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.335786753 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.335816469 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.331141634 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.334598433 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.333535224 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.335052716 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.334934062 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.337390809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33582214 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.332645831 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335786781 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335041191 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.334313334 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.332222046 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.335170254 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.333918169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.338136054 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.335194356 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345846854 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.332164477 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336328186 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33593005 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.335507257 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.33467464 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.336476214 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338334514 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.336293614 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.344415405 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.353453726 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.336730348 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343293501 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.352496523 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.335844947 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.340508822 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.337689308 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.334572789 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.339589511 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.34638168 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.33678506 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.338271755 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.337195231 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.337358357 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.336954337 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.347392697 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.334350251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.336016826 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.337828865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.341956507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.334505815 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.338567785 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.33957476 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.337635886 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.340614704 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336959199 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.337815028 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339603007 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.338756773 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.338863057 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.338315207 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340734208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.347340027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.344536649 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.338851134 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.340353318 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.339559407 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.342090375 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.340011386 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.338736303 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.337760361 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353422728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.348321084 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346810677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.342413092 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.338449457 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.345244588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.338771677 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.344009186 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338499132 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.340275729 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.338679537 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.336763016 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.334860539 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.33985366 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.338301109 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.340106799 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.34167793 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.344959362 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.338950223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.338345499 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.339266183 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.338732273 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.339904795 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.337774411 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.340219596 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.343516993 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342148439 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.338975024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.338599989 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347229614 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358280134 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.342712714 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.338493168 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.340764042 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.340049439 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.34135278 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.340994828 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.342485549 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.346528537 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.342483707 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.350916139 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.339396925 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351503689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.339531937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342111328 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.3505106 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.337997988 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.338744723 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.341171395 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.340857953 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348517041 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.358121777 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.340557106 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.345386656 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340483698 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.340013945 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.34109665 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.340453124 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340606201 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.340853666 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351337747 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.359383523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.345675707 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343788988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.339993483 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3422551 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.341806129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.33997505 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347824077 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.341931708 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.343052882 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.344502373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.342620485 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.341707277 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.340384754 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.342452088 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.338512194 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.34170024 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349368758 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.36183385 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346352058 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.341523008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.352968748 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342727689 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351232489 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.359860564 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.34496092 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.342699688 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.342016199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.347582523 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.342921437 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.346108105 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.343933395 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.344639282 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.346881898 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.342052241 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.346191426 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.343941515 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.343090591 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.34369419 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353202103 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369781356 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.34487464 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347283005 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.33912276 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.34307248 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.348675607 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.343425453 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342389784 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346969484 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355979408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352417651 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.344667152 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.345208285 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346912079 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345270391 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34529317 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.345798035 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.345174455 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.345255898 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347793042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.345082651 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351794084 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.344913755 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.34479455 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346411082 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.345848147 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.355217491 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.346410875 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.346546036 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345886003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.344338156 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.34713026 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.346449487 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.345728077 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347855263 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34450157 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.34600363 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353229368 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.353163773 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.349215747 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.345871038 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.346028671 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.346747427 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.347168285 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.345750863 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.34380489 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345451941 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.34623344 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.346396355 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.347571355 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.343932532 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.345878961 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.346335832 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346348613 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348084796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.355223308 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347872507 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.343918144 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.346381248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346868163 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.346679436 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.347824447 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.356492824 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348045058 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358636488 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356316554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.351077155 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.346341556 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349393327 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.356216316 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.345016003 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.348257297 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347105259 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.350794281 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.348862673 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.351123174 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347194692 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.357565983 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.349129982 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.346725181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.358822958 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.367880744 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349277175 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.348470806 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.353413876 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.349298139 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.345707743 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.349266137 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.347787221 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.357227035 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.368525594 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349579862 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350637925 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.34618076 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350523002 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353482741 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347444317 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.34949513 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.346285388 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.348794155 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347845027 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348061738 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.346706151 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.347665906 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.349460766 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.351299979 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.355701571 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.345939646 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351348101 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.350255733 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.349902198 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349732361 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348458848 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346319289 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.346871857 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.349191058 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350211643 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.350839782 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.352525205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.348372812 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.350492075 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.351246504 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.350084406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353142559 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.361347004 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.35956928 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347306318 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.348478932 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350930895 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.354263379 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35149547 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.349915677 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352413153 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.35396822 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.351148592 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351355794 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.34938209 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.352948467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.370427581 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.368159034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351631692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.351114764 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358186766 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.350577682 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.348735176 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.35022607 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.356122227 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.355474589 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.35927819 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.351189819 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.360254885 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367458982 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353233876 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.355260025 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.354661474 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.361160693 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.35337711 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35269989 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.350951972 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.357017498 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.370547618 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352891327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360758932 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.385752781 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.370228858 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.35247106 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.352691184 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349979568 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.352789775 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353861163 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.354099286 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.35257551 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353679986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.352499324 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.353446603 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35871324 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.355994672 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.352023646 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.35227609 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.351884476 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.355811143 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.351491035 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.351234076 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.351939587 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.351784912 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.354218374 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.353337508 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.354987067 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366588958 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.364347365 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.352734746 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.353519994 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.35059145 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.359253408 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.355266911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365333909 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.362295242 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353595397 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.354211941 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.355645525 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355608385 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.350691318 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.354993615 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.353983882 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352722215 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.351182629 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.367465859 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365154678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.360062867 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.355720193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354469742 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.354459992 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.35606189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355411628 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35528034 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.358485694 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.35413716 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357931423 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.354137763 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.355611073 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.357660167 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.365103043 seconds)
  done (took 801.212672836 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350289821 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352008922 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352971939 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351041152 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35268534 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353078859 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353437694 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.352817275 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353418121 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.352836142 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.352247078 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353079614 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351896306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353595843 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353863247 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354076438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352585088 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352505256 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.353401347 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354024642 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.354946185 seconds)
  done (took 29.69842834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.35568831 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.353602827 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35445204 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356339004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353708921 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.354912212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.35406379 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357259179 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357491991 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353558279 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.356305033 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357703926 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.354697725 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.35364459 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352822156 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356438407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357250486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354356965 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.355923348 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353883481 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35615148 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354869561 seconds)
  done (took 31.104065921 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.355783413 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.356314077 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.355173407 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.353553334 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.356780582 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.353961232 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.356940154 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.355583722 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.358099245 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.358837182 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.355682473 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.356789346 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.363597764 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.362953051 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.360687267 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.35771978 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.499069681 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.356059649 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.357672104 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.357735441 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.354254505 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.363807224 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.354741018 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.355785462 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.355522287 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.356728533 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.357761905 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.357430102 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.359171786 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.358500369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.363342751 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.358465777 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.358390234 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.359409527 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.357903726 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.359532908 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.363181853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.358813629 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.355387626 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.359346782 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.369029733 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.382140205 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.357418321 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.366108787 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.35797764 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.358429013 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362408755 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.367088962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.357391078 seconds)
  done (took 68.023678 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.357541598 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.358275096 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.355547373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.359140255 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.358192461 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.35873557 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.359000765 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.359648716 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.357280311 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.356541908 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.360187715 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.357553849 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357078253 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.359247281 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.360324392 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.358054077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.358901892 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.359596617 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.35912657 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360085768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.356744749 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.359215565 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.360725748 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.358082969 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.359833372 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.35637661 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357837929 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.360413286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.357834486 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.357177974 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.359219557 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.359847131 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.36067247 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.359265166 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.35797951 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.360445486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.36203999 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.359531645 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36197054 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.357612517 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.36109489 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.360036185 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.361854679 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.361661814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.359015085 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.358509181 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.359258118 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.359621285 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.360127652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.361216652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.362401433 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.360633117 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.362149383 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.359122557 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361330431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.362141602 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.360877939 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.358961526 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.362118436 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.359033574 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.35981851 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.360455949 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.359787286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.362483052 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.361997917 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.359912239 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.359833585 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.360882351 seconds)
  done (took 93.742120385 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364124428 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.361622241 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36129106 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364033033 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362275719 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.36169833 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36366694 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.363302782 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.363771604 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362244842 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.363313588 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.363631008 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.364472013 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.362990594 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.363853853 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363223215 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362652259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362978687 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.364282827 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36276186 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.362824616 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.363275915 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364266446 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.364090422 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364519722 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.364017839 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.365112732 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.36461471 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364682852 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.363027968 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362763182 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.364876712 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363739224 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364650739 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.364696371 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.364368756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.363447078 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365686302 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.363665262 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.365403784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.363764334 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362963635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36386725 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.3641645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365363682 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.36393278 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.364713581 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.365535547 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.364388131 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.364591441 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.363020923 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364123578 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364793195 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366198463 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.365298044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.364325433 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363423044 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365926597 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366273494 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.364498239 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365804864 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.366431521 seconds)
  done (took 85.864723917 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366638269 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366195144 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.363535387 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.364272691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.366234897 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.363073115 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366324437 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.365965323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.36678522 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.36874165 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36502649 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363142309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36549783 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367352132 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.363975223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36425918 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364413651 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.36437023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365726823 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.364797295 seconds)
  done (took 28.602215531 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.363147596 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.366488899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.364408252 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364519487 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.367236011 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363620555 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.368728264 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368005478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365852441 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366812833 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.369394838 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.367992652 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365071036 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366182484 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.368260315 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.363949866 seconds)
  done (took 23.157940176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.365283288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.368079378 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.367316763 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.367418992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.36313139 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.365296802 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.367842554 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.362340812 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.36614763 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.367114181 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.368047183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.367899335 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.367648963 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.366396648 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.365697653 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.369277805 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.36572949 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.364840105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.367690654 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.368157928 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.366237954 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.364114639 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.367938931 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.367389548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.366411226 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.365690988 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.365685281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.365175315 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.366735017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.368679057 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.364567035 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.367875627 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.366066481 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.366198332 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.367709079 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.366503023 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.368601042 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.367989901 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.36881844 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.369704098 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.369863512 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.366138596 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.370390311 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.370970998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.366125721 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.36981544 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.366575045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.368234778 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.366819403 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.368101776 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.368319703 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.368710919 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.372028809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.371614391 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.371032548 seconds)
  done (took 76.504351341 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37019956 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.371401547 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.367898659 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.370811385 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.370131273 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.367292281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.370931066 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.367698833 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368140367 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.371114484 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.367950044 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.371249564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368575435 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.369876205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.367984305 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.370704265 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.369541863 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.367908158 seconds)
  done (took 25.951598752 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.368175305 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369624896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.371594203 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.36815528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.368340622 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371941345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369287546 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.370799984 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372230024 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369850099 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368660552 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.371231595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371670037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.370779093 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.370261288 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368779401 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.372824107 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37155924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.368695885 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.36952076 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371234626 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371671357 seconds)
  done (took 31.449134927 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.371641599 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.372278579 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.388980972 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.418174958 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.404147234 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.371039818 seconds)
  done (took 9.630266732 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370230609 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371474885 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368248749 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374165371 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372928468 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370626973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371297626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371211196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373199289 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370352336 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370129896 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373499328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373378393 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369713542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372659917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37427465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371020718 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369974659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371903374 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373463136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371492875 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372139466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372373536 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370828183 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371032454 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37112482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372946255 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371796029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370685731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373995711 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37375733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370515133 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374087349 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369785605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375066012 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374740253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37205573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374293852 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373133801 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372792653 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.375468208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37489568 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375283459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371200308 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372978803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372558611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371992806 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371636403 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371635748 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375167647 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374760896 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372661815 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375322246 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374634688 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373787716 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376120389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373654001 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372284761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375752065 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373292972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372586266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376686008 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373043577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372008136 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37516062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374714779 seconds)
  done (took 91.907198645 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373961083 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374985641 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373449851 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375047725 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371418377 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374188892 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372188151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37320348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373382577 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373039899 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376825501 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373408652 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373522323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372448893 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375982373 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37326602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374005676 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375225509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374521098 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376716121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375012093 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375850779 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373596355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375070047 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375356166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375927156 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375218335 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375348262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375110691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374500917 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373927915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376259422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375370017 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.376009774 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375395584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375017231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374216901 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375815387 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375945874 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37820725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375256199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378815343 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375686543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376070556 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375278514 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375496063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375433447 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375073183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376462611 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375648642 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377103548 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378311461 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376733211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375653203 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374713795 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375441074 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375669929 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37571776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376674883 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378349562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375848349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375286528 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380075231 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376898364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375696851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375831103 seconds)
  done (took 92.080457389 seconds)
done (took 1866.934348482 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.472604417 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.508345362 seconds)
  done (took 14.291194194 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.539215069 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.490981837 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.377549192 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.428639821 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.375450194 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.373279025 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.392973303 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.374790304 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.375667581 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.37717756 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37812761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.562072237 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.374818682 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.376950654 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.378175946 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.472135649 seconds)
  done (took 43.968945471 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.406423123 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.383632069 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.497309167 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.398376398 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.405313425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.565735983 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.436552041 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.382545828 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.553474905 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.419454521 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.911657345 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.405470224 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.382175061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.471550816 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.398367295 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.567912511 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.628840995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.915376477 seconds)
  done (took 31.441004964 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.828419795 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.380474283 seconds)
  done (took 9.520246063 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.383312626 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.411559891 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.412320524 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.394078761 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.376766626 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.429191939 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.437080565 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.438957777 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.374785817 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.39235489 seconds)
  done (took 65.372945813 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.402919185 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.38385 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.381970914 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.379425594 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.373233475 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.369452203 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.380286933 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.37514832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.941238456 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.508236578 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.399253558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.38703367 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.38077135 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.383910753 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.379402061 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.418480665 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.511274018 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.381746012 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.37986866 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.388662367 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.382304252 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.517091519 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.423686058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.381878618 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.508364397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.958140706 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.384139368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.38789984 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.500036785 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.379815621 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.381172603 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.382113042 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.384226924 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.956731702 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.834173627 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.402296978 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.404485274 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.391348487 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.380822049 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.581155397 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.384863947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.388486039 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.375815769 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.811319879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.543795887 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.502259188 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.652121053 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.386292891 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.385211151 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.446233315 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.384349983 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.384660135 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.414670085 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.169574405 seconds)
  done (took 113.971344709 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.391944269 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.862915074 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547165218 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.398698029 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.166057624 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05543281 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.376096341 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.666308372 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.382171424 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.37711682 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.659069486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88174356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.385910855 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.383153731 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.519978132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.469625353 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.378046628 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.165528887 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.379262948 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.37626051 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802935129 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.396634997 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.378415993 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.376041676 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.415356322 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851509949 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.807265926 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.85658246 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.380667016 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.376268044 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846542938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.382680561 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.431593311 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.377164048 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.657108031 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.746288849 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725286858 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.384607291 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.391138982 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.377257766 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.407488791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847707136 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.734457787 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.381666525 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.379351245 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853615795 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.380402517 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.378528413 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.380446077 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581707157 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.327351986 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.379785043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.816025378 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.378371953 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.72326572 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.444939098 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.453969223 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.879661087 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.378382003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.494886525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.384776428 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.379631731 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.38614517 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.382402143 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.380849218 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737298326 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77660878 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.38587756 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.741058859 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839889971 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.379524354 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906086381 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.224435787 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.40388556 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.418740265 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.382175869 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.980008053 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881967208 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.426201102 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.378185784 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725583094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.383709733 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.664647623 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.391615146 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.395835719 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80993677 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.402372513 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.39082 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.379727982 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.381512728 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.001863967 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.385187725 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.669843558 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.405443005 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.380555174 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.382595647 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.393688117 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.379454403 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.379402128 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.382762759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907255697 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.381553958 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.689086587 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403387337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.382970012 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.379383237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.383497956 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.3834242 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.598875467 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.835928833 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.387312852 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381024764 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.380169008 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.383794144 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.641163297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.388066995 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.697507688 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.382953943 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.382094609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.387122682 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.08519149 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.392854624 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.381172587 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.38675735 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.239866233 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.59456253 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.401047321 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.402518856 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.38320279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.398012229 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.793817864 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.382832119 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.404555304 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.385223396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089214584 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.392197591 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.415244066 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.987789185 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.385096788 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.391211519 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.387100153 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.38360495 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.694055195 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.663644548 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695608319 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.380029887 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.401271821 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068705104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.440114176 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532136588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402143472 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370167313 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586226015 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741714563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384819591 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.973662908 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.383835137 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596591431 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.383828179 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703678587 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87663867 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.385456501 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.384702874 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.090481738 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.062769372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.997727377 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.385250529 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.666803578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.386538686 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.836942167 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.384066028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.385163573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.819767319 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.385680899 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.386433645 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.384738777 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.384425368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.442495336 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.562448885 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.822719846 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383947246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857488358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396201872 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.384589085 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.388441667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.390431955 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.740141207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.44671377 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.386752114 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.393362527 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.388821743 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.385758993 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.86909077 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.335348984 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.38574088 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.541044691 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017482431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.387326071 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.388119023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.989546662 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.67522594 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903612986 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.400814967 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.704672347 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.389623376 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.427722004 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.110847166 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.447050823 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.912641459 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.387537461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.385490147 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981091756 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.386551903 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.436771776 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.388149834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.387498086 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920220066 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.387673257 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.389465894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.8041881 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.397601602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635362164 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.38731782 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.440998495 seconds)
  done (took 1122.569159176 seconds)
done (took 1402.445077278 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.390118917 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.388559548 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.375160608 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.387583768 seconds)
  done (took 26.866448042 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.403042273 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.393432538 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.396516079 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.393885822 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.396643086 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.394306662 seconds)
  done (took 9.705129888 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.424816858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.388715663 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.386261695 seconds)
  done (took 19.526542423 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.614138935 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.660998445 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.760215139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.570294232 seconds)
  done (took 10.932466779 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.39666907 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.395902153 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.395092875 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.397699258 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.397564873 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.399552333 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.397380824 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.397532095 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.399407307 seconds)
  done (took 13.901950116 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.309700916 seconds)
done (took 87.567941253 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.497420419 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.375388263 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.396806308 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.845107527 seconds)
    (5/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.486522084 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.669872466 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.99067082 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.374327255 seconds)
    (9/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.579694882 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.756147467 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.658668171 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.174161311 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.279481382 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.722090757 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.2550018 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.385626148 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.432797469 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.37543066 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.745028815 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.417524342 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.802718676 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.474009868 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.379289582 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.565237492 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.379685761 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.751624411 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.289451545 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.418912356 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.41421945 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.391134284 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.466794592 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.674893901 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.435756537 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.416957212 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.514333824 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.492245308 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.579541475 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.477631612 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.389974199 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.499945748 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.393198664 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.431100677 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.394417018 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.053677698 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.824067221 seconds)
    (46/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.394833045 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.465508436 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.801942483 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.425943649 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.501661547 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.81174449 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.069045878 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.649393689 seconds)
    (54/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.466716201 seconds)
    (55/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.400394182 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.195155255 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.427782368 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.657894139 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.453205989 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.392244642 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.517364319 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.234403879 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.284488778 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.497023741 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.418276394 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.397316487 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.42119139 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.789860279 seconds)
    (69/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.778739906 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.889027926 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.6783427 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.378505049 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.510284345 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.249388537 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.294010081 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.464094406 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.376963302 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.692081026 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.153584508 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.393106942 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.904636153 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.394302426 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.58407419 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.559258716 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.813595176 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.409086258 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.517354549 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.731435828 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.967997228 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.594273289 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.904494649 seconds)
    (92/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.419001221 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.420264785 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 4.412779164 seconds)
    (95/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.303305884 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.394166366 seconds)
    (97/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.787183601 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.630731087 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.930407183 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.627685102 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.444357497 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.443210461 seconds)
    (103/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.96660492 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.900301293 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 5.710026625 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.378251202 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.833084204 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.319701471 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.792944153 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.291900536 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.798334259 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.798726108 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.75895876 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.483349419 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.760353818 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.179106835 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.443004939 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.61546158 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.710376227 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.175694213 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.455582965 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.323882665 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.410870417 seconds)
    (124/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.470959185 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.165543177 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.470304622 seconds)
    (127/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.406313728 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.90948829 seconds)
    (129/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.7727382 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.411760779 seconds)
    (131/309) benchmarking ("sort", BigInt, false)...
    done (took 6.39491894 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.923009716 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.418766539 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.825423252 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.977752842 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.994188377 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.650039662 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.394441265 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.511385596 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.168922159 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.418761434 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.49807744 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.675995183 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.733145415 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.442351678 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.777794949 seconds)
    (147/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011854993 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.805747154 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.399022712 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.523807577 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.774708265 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.505842738 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.529479355 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.507007128 seconds)
    (155/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.025584917 seconds)
    (156/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.479184711 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.258207646 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.013197607 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.164327377 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.18738623 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.425418257 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.462113283 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.048704061 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.398315583 seconds)
    (165/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.439478273 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.817908149 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.439129964 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.397312125 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.615465727 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.741866699 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.404394838 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.11877223 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.415645795 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.407337365 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.164691773 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.977058189 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.142092969 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.425066425 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.985265358 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.417245287 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.423781905 seconds)
    (182/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.878530014 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.87343344 seconds)
    (184/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.931826788 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.444730814 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.425698354 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.506078345 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.410586726 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.486009886 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.788107408 seconds)
    (191/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.129164312 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.827599924 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.769080111 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.442444248 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.46327844 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.345494094 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.419518325 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.229634387 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.816150505 seconds)
    (200/309) benchmarking ("sort", Float32, false)...
    done (took 5.424231345 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.768817113 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.403192641 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.880790418 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.386434088 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.618202999 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.425767594 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.994403929 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.455548536 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.482073173 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.423902856 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.399338639 seconds)
    (212/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.016347194 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.982083655 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.359207202 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.450527297 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.437605342 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.615716754 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.95960591 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.025186824 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.417011228 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.597783819 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.719561955 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.402465788 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.243356389 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.401253055 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.916604438 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.424879754 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.400134109 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.83182758 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.614764051 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.423914475 seconds)
    (232/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.045156088 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.441132369 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.939883153 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.401295242 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.70998159 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.556223577 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.402314186 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.346279861 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.889737367 seconds)
    (241/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.527602181 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.54957348 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.441991312 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.504231327 seconds)
    (245/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.267358118 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.699238804 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.023604128 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.427611705 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.405049428 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.388962209 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.467205815 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.199910577 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.437608857 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.72450011 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.619894773 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.082278985 seconds)
    (257/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.407945539 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.798646025 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.403097438 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.684361583 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.487986253 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.823502745 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.399809128 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.449667011 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.387683754 seconds)
    (266/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.409790811 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.399474264 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.783031806 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.052918995 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.508357188 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.26210218 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.435945134 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.401666089 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.528703338 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.543527751 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.541422702 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.037344882 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.410252151 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.414287101 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.411687583 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.296061091 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.494999586 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.488505203 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.572565062 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.500206405 seconds)
    (286/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.726943222 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.644632043 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.330450727 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.535357986 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.403392248 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.580185757 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.030480423 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.484833447 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.063023237 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.539580012 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.445777966 seconds)
    (297/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.783588935 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.26927687 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.285452285 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.43931631 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.388309517 seconds)
    (302/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.083338983 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.404227093 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.579450312 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.425959794 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.919032055 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.137583947 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274242048 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.389791899 seconds)
  done (took 948.86874217 seconds)
done (took 950.197435327 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.437567911 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43155355 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.416376817 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.43616802 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.526880425 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.445693236 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.426058776 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.416971671 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.4628972 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.464809772 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.414272904 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.441371139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.417363054 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.415440353 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.415983269 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429645581 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.460103952 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.417196754 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.432581156 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.426548045 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.432811161 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.415287379 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.464753132 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.442983111 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.416084524 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.418740275 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.418796761 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.436496891 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.528551207 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.420428858 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.419304667 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.428801675 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.460735608 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.413745048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.411219335 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.43611375 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.428581127 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.426080192 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.420242458 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.449093966 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.87972553 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.417572643 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.418995404 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.417489698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.418077924 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.421624978 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.418935882 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.423746165 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.42917496 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432613983 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.887413218 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.434674473 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.421062093 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.42027553 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.428494405 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.41938291 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.422601126 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434508875 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.438125697 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434339412 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.458684073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.424198317 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.420787186 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.43654558 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.423797015 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.93560042 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.414688369 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.424572208 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.88736775 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.425663109 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.941863316 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.428170649 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.421997212 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.4330222 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.452066825 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.470613397 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.414297315 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.418365722 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.429038919 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.416426063 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.429293493 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432722704 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.425788079 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.418282195 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433396379 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.449878948 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.429767702 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.420177472 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.429039301 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.439537454 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.426051732 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.432929427 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.422337772 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.414619373 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.429426395 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.42410592 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.424195066 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.421228361 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.425289224 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.430748486 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.888972451 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437511651 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.417190454 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.416402668 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.419092762 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.433736737 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.890221694 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.421418672 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.441983231 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.46784387 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.423272253 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.466750936 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.424989353 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436593167 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.431672245 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.425110959 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.416581408 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.467087936 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.902608127 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.436704505 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.422592121 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.420443991 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437619096 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.423757305 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.416587067 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.478477861 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.424062824 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.435577177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.543492614 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.433504731 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.452169821 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.420612301 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.425722745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.454421758 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.438562537 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.453117206 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.425200944 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437777646 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.436972249 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.418700778 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.434199106 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.434140527 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.423497191 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.428716308 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.417869918 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.451864719 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436958019 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437372852 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.443851744 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.543716383 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.419792122 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.46901751 seconds)
done (took 239.036159191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.482516319 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.413259077 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.524232072 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.418389322 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.520965374 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.516990262 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.415820696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.41638266 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.417567587 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.798692889 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.416967303 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.417562178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.417505699 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.417968003 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.500895582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.419344521 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.41796629 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.760075852 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.421019804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.492478621 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.421694018 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.418113606 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.419699983 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.804226328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.42000108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.422811001 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.492611377 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.421041537 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.767107 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.418962496 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.419679232 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.767311173 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.509603417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.438333998 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.431706095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.427637632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.521741116 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.438368218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.503939652 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.504126353 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.524932098 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.460948001 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.416556336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.41277445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.425295939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.42332921 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.418874468 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.448493523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.42221697 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.419675675 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.76264539 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.432287862 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.430057941 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.419872983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.420136517 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.444837205 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.421393649 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.424077543 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.511761351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.423836925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.486179488 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.805142552 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.800221508 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.422136701 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.417309422 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.421475038 seconds)
  done (took 154.342793791 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.491527188 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.497542452 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.538495791 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.424776058 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.471857144 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.540455317 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.42544236 seconds)
  done (took 11.743283849 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.429950077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423025479 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472791693 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.475263192 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.422686122 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.569070348 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424112493 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.43456309 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.421272969 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.47741021 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.424297722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425248745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.43133045 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.418480312 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.473490778 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.434604277 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.539769428 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.424494493 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423547568 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.577078495 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.42276802 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.430747699 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.47597329 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.4352489 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426604416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.43017744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.988682433 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426063512 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424010209 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.42433953 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.42235703 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.46334825 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.425424899 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.425821049 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423525499 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.543957051 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.424812514 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422914433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.426072277 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.421141538 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424199137 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.424811927 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.427438456 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.422883071 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.425581261 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.448348417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.426794212 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.425550334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.424638819 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.428022036 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.476789435 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424464759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.42402679 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.425584412 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.481971036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.433401942 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.427082625 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.424038951 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.427539962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425043598 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.580076697 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.473833613 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.427179137 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474720233 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427604704 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428463759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.426703871 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.428135686 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486213911 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.427313935 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.476256821 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.424646201 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.584000731 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.449753836 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428246579 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.430652665 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.428617209 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428657631 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.426107536 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.433169341 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.426330196 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.428130809 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.433719557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425878048 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424780721 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52944778 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.538591338 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.426709228 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.442826355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.434992564 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.42440114 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.479051111 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.427727382 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.424394725 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478756231 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.541707833 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.481918809 seconds)
  done (took 162.271697009 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.434444805 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.435763583 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.429894362 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.444377625 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.428287037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.428509238 seconds)
  done (took 9.959667521 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.431292997 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.431098956 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.429016684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.429139265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.4296498 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.429719662 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.429923472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431112833 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.437773125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.430603254 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.430342134 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.431608059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.430197316 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.429368151 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.428254683 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.428989006 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.430490413 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.425970687 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.429432297 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429078078 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.533674607 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.430506597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431011554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.431201219 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.434722242 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.429480474 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.438201835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.430693182 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.430395172 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.437054037 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433913975 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.431811238 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.431986929 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.437513566 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43476298 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.43394138 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435608248 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.432643733 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.428632989 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.431310979 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.433133203 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431829987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.431241669 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.433179147 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.434337628 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.437760952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.43706879 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.438301229 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.431697875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.432407379 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.432065729 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.431256262 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.432658515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.433021702 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.436508188 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437957435 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.438312974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.431141601 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.432973621 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.43363836 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.435100209 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.432445704 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.436337349 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.437293139 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.430045373 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.432864411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.434308385 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.437915478 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.434407111 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.431985669 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.434728975 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.430585025 seconds)
  done (took 105.612592953 seconds)
done (took 445.277753099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.854370522 seconds)
  done (took 8.213703247 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.952661474 seconds)
  done (took 8.315907882 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.010789856 seconds)
  done (took 22.38394269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.470191498 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.46508968 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.430329539 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.428598668 seconds)
  done (took 27.15728989 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.946105729 seconds)
  done (took 8.308378375 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.436426465 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.435912504 seconds)
  done (took 14.237130501 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.896937006 seconds)
  done (took 8.259531849 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.43045313 seconds)
  done (took 7.801848458 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.452133437 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.448533596 seconds)
  done (took 14.277746663 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.417633669 seconds)
  done (took 7.781951765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.471895695 seconds)
  done (took 8.833376828 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.42422685 seconds)
  done (took 7.788098502 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.464286117 seconds)
  done (took 7.828134819 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.471205678 seconds)
  done (took 9.8344843 seconds)
done (took 162.383871067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.425190006 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.427445754 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.425428755 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.424792089 seconds)
  done (took 27.063997137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.46630271 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.465713562 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.468421131 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.478974604 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.47228884 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.469476313 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.460548818 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.463212255 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.478499861 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.471947088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.470939123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.471108426 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.466557929 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.458701427 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.467651938 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.470000807 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.479045353 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.468855749 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.459675288 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.46878215 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.436717379 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.479598912 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.469673395 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.435313469 seconds)
  done (took 36.562663459 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.634139555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.506807389 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.587854089 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.486110236 seconds)
  done (took 7.578834265 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.486316868 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.488056845 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.501168234 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.537977372 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571359897 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.496947918 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.461547128 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.456400539 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.444484124 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.490040366 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.565528095 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.506811166 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.571848153 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.435011522 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.623265083 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.435595617 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.436902154 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.486498868 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.539452795 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.55217999 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.436132114 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.488453041 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.492508788 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.506334572 seconds)
  done (took 37.375581999 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.434687276 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.442728416 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.440560874 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.435006139 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.435188947 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.434244091 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.440203938 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.43636198 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.455514862 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.435646428 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.432606442 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.435495506 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.434226363 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.436825223 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.433331213 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.44751685 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.449766074 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.435945297 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.439489145 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.440702576 seconds)
  done (took 30.143713293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.428771953 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.285322643 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.780317191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.685675338 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.429158772 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.430089656 seconds)
  done (took 28.405041673 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.507241424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.642051272 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.438121612 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.806822919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.888088483 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.437688004 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.437455633 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.679949919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.000754855 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.997239942 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.495314402 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.507253514 seconds)
  done (took 21.206197117 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.437059623 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.428587139 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.43503492 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.448031558 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.494283321 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.442539863 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.445108178 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.431196743 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.494531744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.499100599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.442189154 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.495724105 seconds)
  done (took 38.862619544 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521516807 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479830406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.358691229 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299301666 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806902032 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642718677 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290013678 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.896682934 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.434099316 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707435384 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445731088 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524787865 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.692337877 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437070976 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436142954 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.470508533 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662194631 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95300931 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434421035 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522250332 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459166036 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.43878791 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.703266246 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.463511559 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646536037 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.570560396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.69525216 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434466783 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722489394 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446608409 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4439342 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434082769 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709627869 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101618558 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527053835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445817689 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371730513 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.147332562 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.428548482 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.600579832 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439178963 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439436488 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446591296 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435140349 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.369085341 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44168737 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90757297 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.437166414 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.147107771 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435565352 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445321124 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531457172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.439049492 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256214229 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598104891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434179844 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.433928845 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441886929 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005565712 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.084768742 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440161645 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.371084292 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.987515165 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608945483 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105375311 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.539140647 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.439300513 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.441013377 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372553772 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.578915764 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454903917 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575970393 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.455581626 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09886258 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182334701 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445055034 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367990527 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016265898 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437255667 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.373991535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664477231 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437690863 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376388274 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.394166371 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.373227859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152468033 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442198047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.832628052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440834948 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901872224 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.445434716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455332245 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461736181 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664206598 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.324926177 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436839482 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.445786198 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55798956 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458489311 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.914160196 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370888441 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.440705749 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695465041 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.162437147 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450982154 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.463162319 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664761004 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434226179 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.475561327 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447407472 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.449879357 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.0651633 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45103058 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065366117 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455201571 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439444635 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193365256 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435856728 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.560979446 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442364181 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694467481 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219976045 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437172403 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520366982 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441476586 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43962982 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.605544562 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958068111 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.439746447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.442337134 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452376651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.450928859 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.44055967 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387669965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.433662193 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458662375 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.442341725 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664399741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439456212 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716246449 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375438135 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5790189 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.503825046 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.661350297 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.681747843 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.441160529 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700064736 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439473397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.468048725 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452536223 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458664585 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539218394 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463445373 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.450379345 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696282417 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.443565004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.444467067 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626629563 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444517711 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448039622 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.446757008 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358536525 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063525767 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416356925 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440096033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336397818 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.456252472 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505831569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446173755 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.452329692 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.296241698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.470265771 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.44343203 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.447084729 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664184405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453575395 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.605092811 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520919043 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.661052837 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055734926 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451728748 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.376406411 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.153514653 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.135778049 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441477717 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.377893268 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442723406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451485737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452278519 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.161541397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058907539 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442231775 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.539472765 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.449163983 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453794105 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.448145397 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443354659 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.274783333 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098754146 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455209225 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.454362653 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585892336 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.457304929 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.378778236 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.447197461 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446553055 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443341704 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444078216 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476807039 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.546591146 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940890123 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700883061 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.343988442 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450651584 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.66450787 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.47659584 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.444872927 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451423788 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449797533 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.466631907 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453457255 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.454023817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.54959709 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114762914 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009696682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213084266 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004930043 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468590653 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.45179041 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447129671 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917789069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376506831 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.005062037 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642552368 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914094918 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386390293 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663007491 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.687589964 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229065133 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455374708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674482012 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475533904 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.459666275 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456511022 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657618272 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479315924 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.454777668 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.37450985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.729923274 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726783488 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449175614 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52490051 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918482375 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453149714 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448053511 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.443687515 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.795858092 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624226343 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156508066 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618223601 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447175065 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456791857 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949353259 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445355408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.676216691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108727544 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448326083 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.669462185 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384711175 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.457614355 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.45590613 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.447492404 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.799001097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.444373048 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.702576595 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458901563 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382590422 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45136353 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02574917 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.303527728 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.453664886 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448863573 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211465246 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447526009 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752701379 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.463044868 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.27846748 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452544218 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.382104214 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383195178 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.141018221 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451368168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420051921 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965567395 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.944723049 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591227808 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469043515 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296326264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704711096 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.461124308 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08268328 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675319536 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.458414956 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468103112 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.548912797 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460586421 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.434604435 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449202416 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685262066 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366675723 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672071314 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.379556159 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.353150505 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448334271 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656945539 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448103618 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.460066526 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704560544 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.159351085 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.465445911 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181339172 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47112693 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.463844015 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372551972 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000002312 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453513965 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528300962 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459719826 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.459290159 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.460694933 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631478025 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459775183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452985002 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.462595443 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542522555 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114627542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.285245405 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.454310333 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089326623 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226753608 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087503409 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463686859 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451066656 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453673932 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388016666 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596756356 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.678539486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725303512 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56956369 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.075348207 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469285242 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45646265 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453113508 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663117886 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72572095 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35278939 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453142358 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.466864155 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.453093872 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462141619 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.662193482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975969018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033457763 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566994894 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455418276 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920706009 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725095696 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453285175 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453395196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045182002 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.451947665 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.81681952 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.460807628 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460960618 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605208078 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464545913 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125534296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.462902845 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.606628127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.225692729 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.660894658 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709564609 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.954112143 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.462478743 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091734519 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217659585 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717142297 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518575527 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463700711 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.57660333 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600854814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.45259867 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.45431106 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451723087 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301625551 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.163380645 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463985285 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09697895 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718127807 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.450915422 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.454743702 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47742439 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.464507629 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678331722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189463575 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677389363 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463485796 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.457162807 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.271419413 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094874692 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467780202 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389551413 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.455670089 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709311727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691493272 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474208243 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.907228799 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.166591362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042923405 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.426759392 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475178741 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455901519 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229993972 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094098306 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.303735243 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975967886 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.02078283 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457243629 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730074264 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.461361334 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46512881 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732459532 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.459045033 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.46980066 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467526623 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.090937055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248552015 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.456673927 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592631749 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.3930776 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.801258635 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228086232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390104809 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45217924 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.649255798 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453843153 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578269593 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465355465 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.455181903 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456839878 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.189973009 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737596989 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.459194863 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.45113123 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.450211474 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47043981 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463738449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736416476 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459023036 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.313027902 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.813093521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.714808984 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.467488526 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.44310862 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.459745481 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458644184 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444350202 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.654605266 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.173585277 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040309947 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.462528271 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.466534465 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4633924 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.675528535 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670146133 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.473737351 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470497513 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457190746 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473967605 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.370549389 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.966083259 seconds)
  done (took 1656.438702555 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489823779 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.4905348 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.503765526 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.514962154 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506068463 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.49429061 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.49487898 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496196086 seconds)
  done (took 53.383647109 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.467207647 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.709716994 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.488832311 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.457716733 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.46706988 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.45883693 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.917693267 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.463557545 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.468831608 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.468129905 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.461452947 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.467498874 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.123305968 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.467474706 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.472212481 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.45012142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.466529843 seconds)
  done (took 67.676931261 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.474222985 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.591873805 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.470185612 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.460784763 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.732719681 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.460981134 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.633807464 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.492554986 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.461360598 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.551791612 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.123567501 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.494126528 seconds)
  done (took 81.344043445 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4676789 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.46588112 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.467426746 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.468201578 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.468402668 seconds)
  done (took 8.733045067 seconds)
done (took 2096.138661874 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.714987379 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.200030847 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.139862221 seconds)
  done (took 5.735353271 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.607907182 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.656000907 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.80021782 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.78704195 seconds)
  done (took 8.245681522 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.736058078 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.834866293 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.648788534 seconds)
  done (took 6.613548721 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.915681864 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.472162884 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.584483342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.458269897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.461324873 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.458403071 seconds)
  done (took 20.773360942 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.463537992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.468128102 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.463147521 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.465799554 seconds)
  done (took 7.2563575 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.44951783 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.221125478 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.444887668 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.459026682 seconds)
  done (took 18.969470468 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.212666395 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.224033686 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.210884504 seconds)
  done (took 8.043978318 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.468653005 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.301817012 seconds)
  done (took 10.166016172 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.786867369 seconds)
  done (took 3.182655753 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.597127652 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.734271502 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.600399414 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.475246246 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.615143367 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.444962589 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.16673751 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.726170336 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.461837989 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.716578927 seconds)
  done (took 29.934536169 seconds)
done (took 133.001431799 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.342823105 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858479811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.669244656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.313336531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.685189138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.670230543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.741277138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.280905895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.966500441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.810189871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.351051516 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.686267223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.694581516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.862317621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.694978297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.479573761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.689971888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.398778242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.998420924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.194490174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.741181208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.951587793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.178058102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.124096738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.69290844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.6182329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.529572739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.476213252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.179125937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.708719468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.618505809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.373151438 seconds)
  done (took 195.976352713 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.470349158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.461142952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.463326377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.461527218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.460908015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.464266817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.458968374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.460151128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.475677723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.470524681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.463754941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.46033591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.460555813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.495492913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.462766916 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.476054744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.461371302 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.465014499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.463157519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.475194392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.464238742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.472211286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.475104189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.46958739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.463483373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.462602797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.467478152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.462214635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.462795862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.462220568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.461542265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.479359136 seconds)
  done (took 208.332816696 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.471268974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.462058435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.464238541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.47389447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.470797822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.461985282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.463646138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.462926432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.462755914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.476755749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.468288027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463255649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.465789099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.489157945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.465250034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.476192753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.463459283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.468887595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.470488971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.46924621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.477780216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.469854416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.472113487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.471191402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.46275047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.463257499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.477426994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.46304964 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.463120054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.463813086 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.465234441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.481211486 seconds)
  done (took 208.401930575 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.663633864 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.474078576 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.474278705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.410505116 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.475430793 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.47215464 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.472807545 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.66685173 seconds)
  done (took 15.511536378 seconds)
done (took 629.618635023 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.924781646 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.634302826 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.680320853 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.49374464 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.344781119 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.495969255 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.494745022 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.673313299 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.443341236 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.679755861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.762353502 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.490760605 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.906772209 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.490700695 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.755328646 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.594612627 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.403146152 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.537059238 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81879344 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.089406601 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.755685572 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.037780488 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.670606532 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.443619667 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.904471682 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.036002849 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.250825387 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.417326391 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.494359864 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820275884 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.288719094 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.531991742 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.558755053 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.539631054 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.594517361 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581384314 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.495103691 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.537432683 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.682399219 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.791930299 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.09198604 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.251058194 seconds)
  done (took 98.891921213 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.465079233 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.468697068 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.465545881 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.464862549 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.467691946 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.466508349 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.466114687 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.467120089 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.464919433 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.465071814 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.464870139 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.467756402 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.469861622 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.46817862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.468218382 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.465992898 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.470016551 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.47005065 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.467147126 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.46749858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.468458353 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.467839375 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.468411311 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.470415247 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.46714646 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.468593936 seconds)
  done (took 39.557485154 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.480171656 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.728809385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.906493984 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.486296234 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.479196752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.484472271 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.559587581 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.481655946 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.481804599 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.483116905 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.636094301 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.483084287 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.51307136 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912271984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.482515654 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.493286083 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.481333711 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.481189107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.736847483 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.490309828 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.562900651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.482963618 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.560527717 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.490059262 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.482754741 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.481365291 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.486174711 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.979928616 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.483942676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.639138352 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.293658393 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.558701252 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.937695204 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.918206994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.295020299 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.483956032 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.480767208 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.644424918 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.48358284 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.481276994 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.560406751 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.481376932 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.917990557 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.116642247 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.497946609 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.481135761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.002247559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.642788678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.736081071 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489660156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939509987 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.485251541 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.484347102 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.482442427 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.73744993 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.488247185 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.481283766 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.026322305 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.48851553 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.561644133 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.485447385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.483226812 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.744019217 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.483448412 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.733038172 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.482686797 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.490114561 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.481336092 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.919787306 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.484424212 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.135994396 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.499345527 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.484525589 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.639380425 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.732252966 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.0329961 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.487517112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.747686535 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950626955 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.561547148 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.48861659 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.969763383 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.564618276 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.48526423 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.485900253 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.48464267 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.483500834 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.528310317 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.562457582 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067320302 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126249687 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.045093326 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.565805183 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.496451032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.48339255 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.031220265 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.485054715 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.4849156 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.912588759 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135856571 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.501201349 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.492091484 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.121559328 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.500972564 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.564217655 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.48890832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.925693904 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.484111674 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.528674593 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.483981127 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.490922354 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.48931042 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565712925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.488654119 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.485317883 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108770904 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.663469157 seconds)
  done (took 193.351314751 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.4807124 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.476863897 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.478379204 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.474580684 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.479311961 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.483960102 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.477814496 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.479214196 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.485418463 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.47881174 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.479012618 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.480248968 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.480375327 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.483081542 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.486077737 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.485163504 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.092679647 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.478384359 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.488774828 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.478301826 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.283377294 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.481214768 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.493089297 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.476701512 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.481420274 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.479880992 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.496735787 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.479192159 seconds)
  done (took 156.313027977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.486537009 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086252779 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.489052002 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.622109322 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.504273394 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.485096794 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.621048585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.5430807 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.487002963 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.485272872 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.486738018 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.808880551 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.488279401 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031893781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.682395625 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.623502658 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026455321 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.488904816 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.486407564 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.487258352 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.62524561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.495401315 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.809041808 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088835665 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.48985517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087186239 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.476631551 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.490197624 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.485830984 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.091839632 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.491180869 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.816049769 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.573509796 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.553034004 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.091998087 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.035531936 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.0339798 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.640868655 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.486792062 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.486615142 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.486963685 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.47757112 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.087904974 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.491051838 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.489402026 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.085706248 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.505726077 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.490853615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.498013436 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.487268404 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.550458002 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.547922422 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812982953 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094772852 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.569656166 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.510357703 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.624237626 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.887169992 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.492100171 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033152093 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.47820269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.091440617 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.493646041 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.477402633 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.488109912 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.494795192 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.644295413 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.623174476 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.035342917 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.489312363 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034009058 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.645248465 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.488754163 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.489320331 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.491763651 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.086688113 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.036953206 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.644464759 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.628643691 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.689131836 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.479688794 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.489589896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.478127872 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.571111348 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.489848232 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092262839 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.038382423 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.492705259 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.490805958 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.491091815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.492940168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.671517076 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.094589955 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.570601776 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029678373 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.830169922 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.814142626 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.492388665 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.551512705 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.490973458 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.81635251 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.492679977 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.549056557 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.952477389 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.816595584 seconds)
  done (took 176.743042497 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.742207338 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.749288888 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.577098279 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.608592233 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.067284638 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.052790835 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.678289024 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.627197406 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.601288558 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.741631168 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.681007265 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.581818984 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.684901709 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.571118825 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.24028614 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.560598994 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.58907857 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.63224382 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605995512 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.565924663 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.143643612 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.776935064 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.666639686 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.611839426 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.586954945 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305691152 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.042038349 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.004443921 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.665371301 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.861563922 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.037845551 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.659729165 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.487252973 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.187369492 seconds)
  done (took 70.6175793 seconds)
done (took 736.875979023 seconds)
SAVING RESULT...
DONE!
