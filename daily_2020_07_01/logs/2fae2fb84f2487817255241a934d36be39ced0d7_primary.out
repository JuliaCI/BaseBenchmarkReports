cset: moving following pidspec: 3137
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.574007984 seconds)
loading group "shootout"... done (took 1.165289643 seconds)
loading group "string"... done (took 0.417538039 seconds)
loading group "linalg"... done (took 7.694788309 seconds)
loading group "parallel"... done (took 0.146703976 seconds)
loading group "find"... done (took 1.215561806 seconds)
loading group "tuple"... done (took 1.86412369 seconds)
loading group "union"... done (took 12.177806223 seconds)
loading group "dates"... done (took 1.292374538 seconds)
loading group "micro"... done (took 0.199514056 seconds)
loading group "simd"... done (took 4.216347989 seconds)
loading group "io"... done (took 0.945488898 seconds)
loading group "random"... done (took 8.514896379 seconds)
loading group "problem"... done (took 1.537424371 seconds)
loading group "array"... done (took 18.426605501 seconds)
loading group "misc"... done (took 1.54040389 seconds)
loading group "scalar"... done (took 38.410379965 seconds)
loading group "sort"... done (took 2.920206816 seconds)
loading group "sparse"... done (took 11.328984281 seconds)
loading group "collection"... done (took 16.417955095 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525803694 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12312909 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135190994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12083198 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155139328 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116777255 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1259804 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084756269 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.857444532 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14950631 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11093276 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438348597 seconds)
done (took 5.347246759 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169341129 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085151832 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076611241 seconds)
  done (took 1.255665604 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064245057 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125333263 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065403476 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066471688 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066064849 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066488057 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066630101 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066738509 seconds)
  done (took 1.617297143 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071398633 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069282276 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064325701 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066452144 seconds)
  done (took 1.366933392 seconds)
done (took 5.587041076 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.237895353 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.106878285 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.301148657 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.322014384 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.414376261 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090179812 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074256763 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070857172 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129106817 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349842271 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118410562 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.191914343 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099369683 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17558772 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.023160591 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.126868663 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083963158 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120852123 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091664585 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130675212 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.364861025 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075744466 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.080523078 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07002543 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066739781 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.680034064 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691955689 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138745856 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082528024 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079401932 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118073983 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.637150919 seconds)
  done (took 10.471027424 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098998177 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094918568 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067127971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123166269 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094352552 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068058266 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074256776 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066391684 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086861527 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124947417 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088488157 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104550367 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064757593 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068676826 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081979528 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195227255 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078654819 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079729174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070534924 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077549207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10490981 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077184088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077506852 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077429041 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127465233 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167296739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095539723 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09685273 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065589956 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078489825 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115311142 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127813634 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066557407 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067608834 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121913285 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094619752 seconds)
  done (took 4.515999512 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.109956053 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089282732 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099410553 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.600831011 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065661171 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149345228 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23128252 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073361754 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.393556807 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090490919 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.150635281 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.119290222 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141225843 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.122124686 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070382623 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.257586674 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.120602689 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.257227465 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068255269 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066491351 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065773723 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07400665 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066360625 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062328814 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.074712699 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089191657 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086015126 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.173594786 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.976395737 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.289336165 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067058303 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160632858 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.087155637 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093433366 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07346028 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.367265832 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.091180105 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.389844278 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122314325 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064337381 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16036629 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.13124826 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063914634 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113187736 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076055385 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067956952 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070502606 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.0682049 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078896633 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078127175 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099699054 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066584223 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064753189 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166011513 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064258352 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064646575 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066163885 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063348126 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149258339 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065973133 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.146685629 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065050296 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068948347 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098126703 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07111556 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088221623 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112185755 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338400871 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.036829131 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066703223 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.937517885 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078741103 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066118601 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.082961558 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065718257 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068009776 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067296938 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.077302478 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070882934 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069445802 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10951677 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065974844 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068431087 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064544535 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07030758 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096307672 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064797551 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.452630646 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096536781 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065395108 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075315013 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10357817 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066042865 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071825228 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066246545 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071883157 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065454191 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066172493 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070721983 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.08933974 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068085615 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111716467 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.142195457 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070297492 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063811585 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067365382 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072854716 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070346107 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070092775 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067676714 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069822934 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06850601 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065397624 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.115981116 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064366826 seconds)
  done (took 21.502145054 seconds)
done (took 38.69392859 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239130525 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082107348 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082479136 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082760171 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082261954 seconds)
  done (took 1.7622684 seconds)
done (took 2.94770725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125150579 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099100306 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066042355 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102227043 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065432257 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103953507 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10316461 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083614071 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10311062 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064493782 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100429606 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06452719 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066659998 seconds)
  done (took 2.339775232 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079769272 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082223349 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069114641 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080524306 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06257968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0810347 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08049404 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087501064 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080779438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072251206 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062312818 seconds)
  done (took 2.018570757 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079950592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083351452 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068935179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081259125 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062491911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081063414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081167455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085741441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080990411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073274966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06245353 seconds)
  done (took 2.013026568 seconds)
done (took 7.545667082 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073643456 seconds)
  done (took 1.229728696 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.521417601 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.4789844 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.075371779 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.096007919 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188176557 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.103259354 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22450566 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.079613041 seconds)
  done (took 8.098728875 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093872814 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068320727 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078068394 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067337403 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068548784 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067837888 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069679564 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067607395 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068751359 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069086027 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068454979 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067850218 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068908652 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068485092 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067306683 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067604652 seconds)
  done (took 2.379601382 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096179725 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093048815 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072254454 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072455138 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071483768 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070837927 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073619135 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073246519 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070274912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071090227 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074293936 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071860482 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071677966 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062929621 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073116867 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074288686 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069418493 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072599773 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073532147 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074340953 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07309522 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062783278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070900875 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071849465 seconds)
  done (took 3.037071678 seconds)
done (took 15.918450355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113045609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07586548 seconds)
  done (took 1.355260744 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076062983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076660839 seconds)
  done (took 1.33257921 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074904656 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061283027 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080765495 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071668134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061287562 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061125639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078716922 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061136156 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061284805 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061571862 seconds)
  done (took 1.852154251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062944746 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07067726 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066971155 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076091824 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067959963 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063270364 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066144123 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062789671 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069960693 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061656599 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066234076 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080979503 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066062969 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082083631 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065600098 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066090181 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068968332 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065953323 seconds)
  done (took 2.412335432 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061012391 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061985261 seconds)
  done (took 1.310393532 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064810067 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062194516 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064701938 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064273307 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061779601 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060916493 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061895463 seconds)
  done (took 1.617501261 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.358902168 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120507758 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31544473 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069837099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077283009 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24781525 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063052733 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068110335 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067809836 seconds)
  done (took 2.60780586 seconds)
done (took 13.681176907 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078020257 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085899197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09673841 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.408008842 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091995019 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066291863 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111859673 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.172811001 seconds)
done (took 2.308978667 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206726664 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.085835892 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.901653894 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.064236602 seconds)
  done (took 3.237198123 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330604151 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084517885 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07549399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065310017 seconds)
  done (took 1.753996735 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065411067 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068432911 seconds)
  done (took 1.327320456 seconds)
done (took 7.722614703 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063985804 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062784761 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088151199 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064769367 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06343855 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06330495 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063049634 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064149332 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062881938 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063724422 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062802652 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063228349 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062865882 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.062885887 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063321215 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064551825 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063214177 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063346174 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063642247 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063541945 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063276637 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06282508 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063746571 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063689393 seconds)
  done (took 2.766755142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079024248 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065942951 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06677635 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066365851 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067529376 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066087637 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066831399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06507535 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066381321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064897439 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066903628 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067603522 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065188607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06695689 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065189627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067060162 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066631202 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065377749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064917933 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066803674 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066846377 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065366695 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067029048 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066488497 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066844157 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066704324 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065135119 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065687722 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067044767 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06693776 seconds)
  done (took 3.206186053 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064501579 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060812035 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061195113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069006057 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059577333 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060938458 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059721612 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060357607 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060308399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060034064 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061119045 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.059773209 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059961178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060673328 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.060616068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064014033 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076645584 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059698515 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059393273 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.059945135 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063695564 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059763039 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.059601829 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059599253 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059668311 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059636815 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062330706 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.059660799 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.060586959 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.059726786 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063371016 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064724765 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.059581675 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068802133 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064243787 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0612746 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065165265 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060967404 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061677687 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060963869 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060829941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.060875444 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061185075 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06980568 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061053588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062888294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06121711 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062074888 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.060863388 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063353877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061007802 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061231928 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063133457 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062294784 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065162677 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06014683 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060678485 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059437797 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060360914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060257398 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05946665 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059371698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062676614 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061071845 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07706043 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068622392 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060147338 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061111739 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060344488 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063177963 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06170594 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074972806 seconds)
  done (took 5.683782958 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082964155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08550529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06511783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064739849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06075359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060159813 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068709288 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060257082 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06496741 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079106842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060456059 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064334228 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064772507 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064955927 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060591794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065604322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069063362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061106832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060800345 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064723269 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06107392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068452937 seconds)
  done (took 2.677666033 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14508716 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066465344 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103500705 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07039161 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06867373 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070643318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066191722 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0661838 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066087539 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066780786 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06688435 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066324163 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068538158 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066887556 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067001051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066574072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066417956 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066490339 seconds)
  done (took 2.537715013 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076240865 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06581445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084356558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065594914 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065287709 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065446964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069180769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070248886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06598697 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066323324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070029467 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065311048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065343764 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065997339 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06571373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065884387 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066159789 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065811974 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070154422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069479319 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069713183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070014841 seconds)
  done (took 2.717407481 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076505829 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065040962 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079746798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066835887 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0608817 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061041853 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066419991 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064817196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066339502 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064455328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065189299 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060413093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067645332 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065461802 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067276639 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065548946 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06422403 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065192594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064735493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06057615 seconds)
  done (took 2.533214021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08078749 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064261306 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064935492 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079383779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06457581 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063833325 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069445724 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064330556 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063279964 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084017305 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063434346 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063633863 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068976747 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066786566 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063544415 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071266443 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068946164 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071264314 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063517853 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063423235 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083966549 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063699632 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069168837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064224244 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063833108 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064193495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064002405 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067162002 seconds)
  done (took 3.120367995 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063533223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063494404 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063610801 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063470677 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06341413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06459016 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064645073 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064678739 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064280199 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064991134 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064036827 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063207904 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063154978 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063776113 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063320471 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063299908 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063384072 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063986122 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064106088 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063727635 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063390872 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063070583 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063385711 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063370641 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063676278 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063245937 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063049264 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063162089 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062996953 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063262323 seconds)
  done (took 3.130673565 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073791395 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071420199 seconds)
  done (took 1.366104944 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062089723 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076474291 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059705819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070726321 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069369601 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063493747 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069959089 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068396272 seconds)
  done (took 1.755669337 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083309509 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074877885 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06362188 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075351167 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073199381 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082477289 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.124833466 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.062132861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073760776 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064070763 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080360046 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064328954 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072577274 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067223132 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072376268 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075809853 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060377357 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.067231112 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063166777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.060626169 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063011127 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07584966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071762353 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06225265 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067438862 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089927802 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078333959 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061740912 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069270321 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075709559 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073926739 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060822306 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063281472 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063043077 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060884322 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072773281 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081309686 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069152666 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075330731 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063364066 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071241245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062033432 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073011808 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073163845 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078808214 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062423636 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062887381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061554829 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06418222 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068834425 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060561302 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067726787 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060642266 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075457961 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071457879 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077339237 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061129786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068791262 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069354145 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069765067 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074227485 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069878748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07365266 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062940937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078362045 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072303648 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074000042 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061857191 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060492866 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061532755 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076360499 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09100905 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072248993 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062607543 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062873464 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06070561 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06971601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062970477 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071587885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075641352 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063151418 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067591097 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074335565 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067008423 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069030537 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068499207 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06075819 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065153996 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063607306 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081096057 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061248228 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060622 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063092722 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076907627 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071294366 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061406848 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063486009 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07364944 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060285779 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064072976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064309234 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069071712 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07425091 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064468099 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06508362 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073743268 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.069875508 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066356269 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068342907 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058484366 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.061828397 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06327901 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071929488 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058463558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067859932 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065129978 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.061022479 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.071847875 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.059493447 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.060381338 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073314208 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072105084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.059644458 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058294554 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067908954 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.060914441 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062859079 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073849253 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.059790781 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060424906 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060393156 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069425732 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061122583 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072880508 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065670138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070534776 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.192924962 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062447535 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.067709424 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075712628 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067646445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069024563 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07233384 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06887814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062867837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074950543 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070114092 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065579387 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072269383 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066799636 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06066704 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064195204 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068923432 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061883752 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069943331 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064094666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069318468 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06246243 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061965464 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068716707 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063262761 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066204368 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068357846 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063139585 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078723854 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071021907 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062402275 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062203694 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.068778674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064268456 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062006772 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064470586 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069041097 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.062753472 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061047259 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064268239 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070470948 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071834469 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066441368 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06377311 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073353674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081057631 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063087005 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070779318 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063071934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064350101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063506247 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077436538 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074426219 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068024197 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071075411 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061452029 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073522173 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076305503 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066434485 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062090292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066579898 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067271933 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074010625 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06592673 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062907913 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061409349 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068433539 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064925278 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070330634 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063317085 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065110624 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.066944376 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061267296 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067688118 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063261106 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075841206 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069423001 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061628181 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06420743 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06097918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073749058 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060983427 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064212932 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065035587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063085895 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061825604 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068725924 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060109091 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074450434 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075023479 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067898754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065191407 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062327002 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074205723 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067918741 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070640006 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069257452 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071547012 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077273165 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064596743 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069008893 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076395801 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062404769 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059805056 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07349004 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.060724248 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061179481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061403833 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.060970518 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068829102 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067585324 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071275047 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058414953 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067264221 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.059829549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064010807 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059798029 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.068923104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068115892 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065826698 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073506675 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.061307935 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.061416364 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069871716 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062468917 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06213468 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061876982 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067972441 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06098065 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066812813 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063306238 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066533028 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063209157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059146978 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066248294 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060692489 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066166384 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069330076 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060288646 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066636186 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068057809 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060946214 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.204743851 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067539364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066182645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070669326 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069540353 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068128536 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070320711 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061253051 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073971637 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.062244726 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074768546 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066978477 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05992533 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067324575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069741472 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.066109922 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.062928834 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062480537 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068177183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.061940981 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069477434 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074969491 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064082625 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077502993 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072844595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067699731 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069071554 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068077292 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067563212 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065050982 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066835693 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062584594 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068479684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06185536 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070410328 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068487641 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06767459 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068794539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064323765 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068143856 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063620496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060053015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065426299 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065143584 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062198838 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074199877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.062095693 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064955482 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061371544 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063488568 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061225614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059613284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068783081 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069286103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.062662255 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072468546 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066255671 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069601564 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07783323 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059961131 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061592665 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060473931 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063451755 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075407499 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.062958077 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075454525 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06803641 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065032142 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060436084 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062705602 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061366058 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061516217 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061871572 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070526238 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064976388 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062374739 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062444824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069588121 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.062873002 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074445934 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061680218 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066691839 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.062395402 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06017449 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065117909 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064966984 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069066084 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062655032 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064097207 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060267871 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.062034201 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067212622 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068213824 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061970307 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068245295 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074313141 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062126262 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069378694 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064690517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06085303 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069867662 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062024424 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.061994535 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064765908 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070099053 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069421025 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062688496 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078589055 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.062749233 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068952218 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062687281 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060178522 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.061329511 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062246576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.061403826 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06366828 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.062520965 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073683796 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059992596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066941401 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066396731 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064807441 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070319793 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.061957652 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066686566 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065123919 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062617041 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067022541 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073389425 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06396207 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068197308 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.061368538 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067092482 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070424038 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063401109 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072096842 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066434194 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061100963 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067011334 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063009974 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060580903 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060439083 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060137883 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070704307 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.202404765 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068754455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06825758 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062771581 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06930608 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067229247 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077552386 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070800844 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071168566 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062754765 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06194599 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064378055 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065449717 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069271733 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070756911 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073794309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070263262 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067589353 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063293429 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077999873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073539231 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071717325 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065585105 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071246561 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063724845 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069417732 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067429178 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066816187 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063214839 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070260835 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06912398 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065169929 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074115498 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071764535 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064338753 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06931292 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06979167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068735675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062083273 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064310652 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070572564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073100951 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071072318 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06409353 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078649832 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064724142 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068238312 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065870931 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063295167 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072137958 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061812905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070323953 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064283211 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064825243 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061855683 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067017377 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064450832 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069695724 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065481079 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060749127 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078831448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077415929 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068525392 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0620468 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061774347 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060581912 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061111373 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065070814 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063461542 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068439514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076582964 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064632145 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06497699 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061360929 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064101913 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071579956 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07173135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061369852 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061114815 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065452819 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067982927 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073634668 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061848884 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.062123203 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069966377 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069791699 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061366562 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064639307 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060045631 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070059363 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078141203 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.062813792 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068774317 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07334044 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076034428 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.062633495 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06142496 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.062790364 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068706686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067890345 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062971639 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063149039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080703318 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069319673 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064991494 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.061679895 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069536831 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06489946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075362917 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065483123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.062805889 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071102751 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06849867 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068518788 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072263538 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073241386 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068006251 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066999539 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060721985 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066317978 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.060030744 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064156638 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061867333 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061923063 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064686753 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067438488 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065306775 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075808131 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074328392 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063895948 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058955651 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063605946 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063754483 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059887586 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06170276 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059804315 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.060047341 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.059578616 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060214204 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066973909 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069562573 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065409125 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061232952 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060578736 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059456563 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.21129869 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072739111 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071650682 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062053141 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06492363 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065523079 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073491422 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066974751 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066431396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0710647 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069979927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070333286 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06202487 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075555693 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063238635 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068734828 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065782715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063357557 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063227325 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069408007 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066172663 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063992597 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069452209 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070151599 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063301569 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060617773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060842293 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072480239 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06246271 seconds)
  done (took 41.68828571 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098719135 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061694287 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06149416 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060912523 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070908275 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06215011 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061538273 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063298456 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063807573 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065320478 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062875199 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062412985 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069287819 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077421814 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071310283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065020019 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061130704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06132125 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060821996 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061944733 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067659628 seconds)
  done (took 2.729539536 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067980635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075495133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072749693 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077791396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069180263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065287845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072526993 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065150839 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072996875 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070331625 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073450083 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065889769 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070713793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070438444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070107607 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065186725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073480764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069777557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065850832 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072810115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065968839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072613966 seconds)
  done (took 2.866361316 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062577223 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062136045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068410076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060529658 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062685311 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061032126 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064818943 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060376594 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.063716199 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064226147 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06408891 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06452614 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068538131 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060096898 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064946568 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.060293043 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103823119 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.063534305 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062234236 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.062998916 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060067105 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068526239 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060247371 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060630444 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064473508 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06421223 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062385791 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060549477 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.061951718 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065765201 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062960854 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061622431 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070020821 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068765848 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065869284 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065509387 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06272061 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065052289 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061841758 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061651206 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069161363 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062668088 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063394135 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069680372 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061533728 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061345499 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069773469 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063177912 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061907742 seconds)
  done (took 4.488205366 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072495599 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108411109 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06752828 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089282396 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073740681 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067131409 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065988209 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090658716 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062043353 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06306452 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074961329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075963319 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064651959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065521899 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067334827 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065044874 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066245286 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064702307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068210006 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064826954 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068239074 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068586148 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074655607 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075508413 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064792548 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063620559 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064167614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065349536 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074275985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067219436 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065194764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065919358 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075599637 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068325782 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064905526 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065006134 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077260794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065928567 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065276999 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062783944 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063688616 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065135644 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068095487 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077187407 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065418123 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070632325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065514515 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062964464 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076676851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065307716 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069683375 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077579476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067197641 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066190501 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066879705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076448371 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064655806 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062401113 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064438492 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074190819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062747895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064776136 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076079269 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064909899 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067404112 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076442725 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068249289 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065227487 seconds)
  done (took 6.180024887 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070482089 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092793057 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077766262 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077414909 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071548746 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071953352 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071523611 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071689976 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071524583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074958884 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071949479 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111852503 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067414719 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072942043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071255012 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071448501 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071423989 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071422725 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071203045 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07134917 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071252504 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077286314 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071153544 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077378022 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074417537 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067456553 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070967858 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071326201 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077146932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071763755 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074355813 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071318578 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07153227 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077980809 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075010439 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061904322 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071276222 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071854841 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071608517 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067511061 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079421845 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072806822 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06921963 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073690095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073094465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079161484 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076783564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078143858 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077599725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07363495 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078745519 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07152118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071833184 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077616939 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081154127 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079435677 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079704813 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073780952 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079202883 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078451314 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080530882 seconds)
  done (took 5.981073107 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076510042 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067811739 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079177799 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062853529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060190981 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069972284 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060646152 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061076824 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068431418 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068224617 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070094554 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069860308 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072314847 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069983391 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070197334 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072419569 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070632085 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069927275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068534478 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070095041 seconds)
  done (took 2.731305433 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075318958 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08026018 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066421248 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06991023 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06614698 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070451781 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065279286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06644747 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066350921 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066242139 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072269438 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071645454 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066555384 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071044702 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071320522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070288329 seconds)
  done (took 2.457640232 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082207268 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068577102 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.074669355 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062512615 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065450582 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06164366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062631812 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060317539 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060990872 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074263719 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061962411 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073714285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061639907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060776274 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061250125 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067640526 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060838213 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061906707 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061918918 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074343463 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068232391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063014621 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065597389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061718953 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067234328 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069389901 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063250642 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066411297 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061611542 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062704085 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067494884 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068379523 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061385742 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062711164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061097443 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061551361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06196474 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063521761 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067972932 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061682117 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060592523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067878013 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063933508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064792823 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062460046 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063868787 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063108664 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069182867 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063638957 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069137919 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063425365 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066214125 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064040918 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070727285 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066197655 seconds)
  done (took 4.927592197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076678835 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065987473 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06029987 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060700967 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065523001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066420488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066261539 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082860968 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066612155 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060770527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066478405 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06608615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067169054 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065971792 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066303165 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066172177 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060763055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065879032 seconds)
  done (took 2.550564965 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071595787 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065781761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069853391 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066264445 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065261146 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065105796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061343882 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060977521 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060895306 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066476259 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065091209 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065271916 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060548885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064754227 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065283928 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065661105 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064944193 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060573514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06533101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060503328 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064646816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060523448 seconds)
  done (took 2.763003983 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093217254 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081891822 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137010207 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077967053 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086169942 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073185275 seconds)
  done (took 1.896699011 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090701673 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096347627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065380657 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066665925 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071009742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068409644 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069304961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069325969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074655913 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075266979 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072804635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074555615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074854164 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075046636 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070761298 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071199522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068964788 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068844926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065489858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077302021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068888078 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073343674 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069333841 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068844849 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068672713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074673999 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073169349 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073702811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068697891 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073534837 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070961861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068925382 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073344781 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074221364 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065791725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073252616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069350202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077854963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071029102 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075331984 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065695851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07125525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074130486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074063278 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074019666 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069008833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072421146 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069628679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069915728 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083500118 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071300835 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074712292 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071064955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073506871 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073064188 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07922854 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073162779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076174042 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072903549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075331205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075089159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071233541 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074834528 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073195678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071117254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075015314 seconds)
  done (took 6.15664062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101792362 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066028528 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069301159 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073363531 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074861529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06892129 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06926512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068710781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069070335 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066466933 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103088618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069179679 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075278694 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076040718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069310618 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06948568 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069633544 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075012158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066231851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079356595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068848352 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074495991 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074980311 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074620319 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073364855 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071542003 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07012021 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069038459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068861134 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068971542 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072563396 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069056022 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074545947 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066824279 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076022607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069431892 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06896158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072683487 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068893532 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071555052 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074954212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078524793 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070997049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071097029 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075128692 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069810186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069924491 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068056315 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070501943 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066491049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074637612 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073961382 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075201454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075220472 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069581905 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06949354 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071679461 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069162268 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070291123 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072934791 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075429209 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069242551 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079859566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069531945 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069187075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075248036 seconds)
  done (took 6.149726396 seconds)
done (took 126.25765858 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206034785 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182774548 seconds)
  done (took 1.722268602 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072707152 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101853882 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080252998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132129456 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069392847 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103514316 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102408886 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080770132 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069366275 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06938891 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069185771 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07192832 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134665277 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06918923 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069064676 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072290844 seconds)
  done (took 2.723273035 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103686642 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.21229608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106921968 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068154008 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101729924 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075037129 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070189791 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08078342 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074437263 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069867383 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075423186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073493973 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069997185 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073135607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074323275 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07501872 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069759442 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074745204 seconds)
  done (took 2.905465843 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099437045 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092029538 seconds)
  done (took 1.554200109 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170235033 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13213966 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200545656 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331390066 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.144233257 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.41056043 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.135516122 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.134198108 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111085839 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.129984096 seconds)
  done (took 3.25474666 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101566379 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191767956 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292788702 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122073829 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075887609 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105375301 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119421446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07987671 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078557556 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078965094 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078299247 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07551591 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098467924 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07444967 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073864405 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075425795 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1010019 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073284156 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074093973 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073967162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101657264 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068301627 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07523173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073025116 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076991879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077115094 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070081842 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069189013 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075734135 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075168165 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077650104 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101810403 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077308424 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104519128 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074368016 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104818579 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07813595 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074623054 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076045905 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074945946 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07600695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077279047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078504892 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075385872 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069803655 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076096921 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069593734 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068380202 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078705332 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071195178 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081520347 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076367394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101428879 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069302869 seconds)
  done (took 6.104263666 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10499884 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104081508 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069873199 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111187438 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102649291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07081362 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105660642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099783221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106565176 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069196287 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068321268 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069877401 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076643563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078759526 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111639902 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105152047 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071205396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069124795 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105383972 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104812963 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067694694 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099051854 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095824153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105035134 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067628781 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069545245 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067671889 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069204829 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07447416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075044806 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068344589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076588293 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081194637 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074974537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067205733 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067853411 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067549395 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075959204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075955208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075930736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074540079 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066760711 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069079674 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069812011 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069874817 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066847261 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074575038 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076715571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075384245 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067815074 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068413643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067071916 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068585032 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07581053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073878045 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076275601 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075986215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067712837 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067665009 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069742776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077933414 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077118451 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075605996 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068648486 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078560029 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067533347 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077385081 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079890714 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067764098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069085352 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067834627 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067366598 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067936953 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073989291 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073863239 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068689891 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06762728 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067556629 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076372106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074356202 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06765845 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073674216 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06756317 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068590335 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069012732 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07016612 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076142831 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077609379 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070731131 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068544202 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069425165 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069294002 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068163698 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076261875 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078070724 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077792134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076396839 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069558364 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075252357 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07353073 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068217257 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074268115 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06651654 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067787687 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067284284 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073307994 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072180667 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074547478 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06690365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070632515 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073359715 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076070209 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066545509 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072823243 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075023711 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073110478 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065894875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075975442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066849472 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074230656 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066678478 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21161732 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070879034 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07823953 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069331425 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067903478 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068676213 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075937768 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069474041 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06791145 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068763216 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067826525 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074819343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07842515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069149254 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075017379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075840633 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069813795 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075045293 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067697106 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075576581 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068568912 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068503049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067072735 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077869182 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068448959 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067505028 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067483659 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07649834 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067666343 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076908557 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074742563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067068648 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077681368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076969578 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073735475 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076595956 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069879535 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067452754 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067369442 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069550672 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075822765 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077681364 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071358595 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069055978 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076540142 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077237369 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066996146 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075119998 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07670236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077334822 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069585368 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069900005 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078252096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076846673 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07509652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07509908 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075037501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068225962 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074234941 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074901662 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068118758 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079945888 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067542203 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079032331 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075354104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074940766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077334203 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078924533 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079322321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077901858 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078975723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067169134 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067219265 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075034531 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068028024 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068012415 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074849285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068631128 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06868424 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07884794 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068270235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077032651 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066985451 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075743739 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066720614 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068797455 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079118849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067827558 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068581767 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077073611 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067520859 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074061196 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076958035 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074654299 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067299609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068636972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075474074 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075553168 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067591335 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066991122 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069299779 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074346846 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073162864 seconds)
  done (took 18.126095901 seconds)
done (took 37.7613835 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208639066 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156440173 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186208217 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117604597 seconds)
  done (took 2.130751858 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.105603721 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098555317 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086061223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063711755 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09143204 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064212111 seconds)
  done (took 1.914766247 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299891238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204887732 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183472479 seconds)
  done (took 2.088834565 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207061198 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195990715 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45813008 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.276692024 seconds)
  done (took 2.63456014 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.137617087 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080833552 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063876249 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080066112 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.120015925 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145735015 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091246738 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115651345 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074281644 seconds)
  done (took 2.37003025 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144637071 seconds)
done (took 12.704451292 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.127544213 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179749724 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.213085758 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.423523813 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.21607934 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095590378 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167372233 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066999971 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104417733 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201620478 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095226556 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086728473 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075280979 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064419081 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158056322 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.231367893 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076010141 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193966521 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197402459 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184349499 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065467275 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122345627 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084329219 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.182800273 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075518833 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072727383 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092898181 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103458274 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074750844 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 0.132572567 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.174347262 seconds)
    (32/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.141487893 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10329538 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10212239 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078694374 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163155678 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082756103 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064574109 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081952761 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102067242 seconds)
    (41/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118556461 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192609219 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181762378 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102488235 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097201536 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064180085 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073077241 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.22699852 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073471803 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063950592 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089877036 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154608207 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073768243 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119435858 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067389834 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205002967 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066974339 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.158519709 seconds)
    (59/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.181034319 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067055772 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088915366 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163362405 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.225208143 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165483994 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.065316005 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111905563 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083043167 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157973166 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063958225 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073109027 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095700903 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136743539 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.1343467 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128593932 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.196182893 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.063279178 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063030308 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077666128 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168927834 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.062757082 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079914745 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063053806 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.211002642 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072471049 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158952585 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 0.161934257 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068045892 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12093722 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.230018177 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066693812 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.213556235 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06575935 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196449731 seconds)
    (94/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138217795 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065607999 seconds)
    (96/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135663278 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178582084 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088679988 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111123604 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075706254 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0653797 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178682866 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143035355 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063697039 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079638588 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070796204 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078049943 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072126924 seconds)
    (109/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066613229 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07058452 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068621101 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063478932 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077309559 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072498863 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071739409 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06443952 seconds)
    (117/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065120813 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134741454 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087245818 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068131946 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076212167 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159925419 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.1361683 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087603797 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072813511 seconds)
    (126/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064770884 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089132297 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123008225 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064875087 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073283377 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073202022 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067980479 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091316504 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201153109 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092319404 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177334815 seconds)
    (137/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065613575 seconds)
    (138/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064800381 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064565569 seconds)
    (140/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.137440037 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065256897 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067197881 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07584198 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131327981 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07229674 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072589831 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073251918 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065572327 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073540247 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071847264 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06467403 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.193412529 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.063579108 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154425226 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065096175 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073071235 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072542963 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079795412 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065075759 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21672767 seconds)
    (161/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063357291 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072402274 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.163343803 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177339268 seconds)
    (165/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.13479166 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087809971 seconds)
    (167/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093253664 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068232991 seconds)
    (169/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065393505 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160532862 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064585062 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063620646 seconds)
    (173/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.089200048 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135240917 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073396386 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065875808 seconds)
    (177/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06308603 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070649777 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072944669 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125398089 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06383773 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063881423 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138911379 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141391957 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166041766 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130065453 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072708186 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086575171 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064242086 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084333668 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064441854 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.1655927 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064787444 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063190147 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063670672 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063130661 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074642665 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113326848 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066643382 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.064989654 seconds)
    (201/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064170738 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063084525 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064263694 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.067980745 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09279179 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12277572 seconds)
    (207/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065010372 seconds)
    (208/309) benchmarking ("sort", Float64, false)...
    done (took 0.126993552 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074736708 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072312963 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075394812 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06445625 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064449282 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063500708 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.233971243 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091379447 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079507979 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075088215 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.212262222 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078401556 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076647717 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067809108 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077251123 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075959769 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138099315 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.190826378 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066254106 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122918552 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07345502 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.063899529 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065232737 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074035649 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064693478 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090385754 seconds)
    (235/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065782187 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074828211 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06709997 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06513552 seconds)
    (239/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066010765 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066026192 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075369609 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073985471 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065121341 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.06983258 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065048602 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065359565 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0660376 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135533312 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063715549 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071345553 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.063675109 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089892645 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065530567 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064121891 seconds)
    (255/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070930727 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063576069 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065155398 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071426723 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158011536 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064987703 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07308711 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068874559 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066387983 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075468996 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065930857 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067353067 seconds)
    (267/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077285487 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092623285 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065442552 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064446772 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0725988 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071242725 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063495061 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064038863 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065488399 seconds)
    (276/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.065469366 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067632302 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064982456 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064190962 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072166178 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065069037 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066665806 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06386487 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077288059 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064012355 seconds)
    (286/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065309123 seconds)
    (287/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073059835 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065458681 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.064998212 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065104994 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064666285 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073609617 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11883793 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071146923 seconds)
    (295/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245544526 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089756334 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065370016 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065981913 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073031716 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06617713 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065112239 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065192375 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117618011 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106746613 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.064764023 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063967828 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.128639372 seconds)
    (308/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065078219 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13393033 seconds)
  done (took 32.354970757 seconds)
done (took 33.773942049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083196361 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094698979 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071265844 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.089818136 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078711766 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092467834 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071802485 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076760663 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079064679 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077786511 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076444412 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07065384 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073479481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073044197 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071470206 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09390778 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078220077 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072678251 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072847576 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064009538 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072408941 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064540359 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064913352 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070694665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075233234 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071191579 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073693227 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073751034 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064575442 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06486705 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069287019 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073109047 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064969372 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076606344 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073437378 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072894009 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074545725 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076552737 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064279181 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06478079 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074272639 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064626892 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072106557 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071139147 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069376159 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070808564 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072459747 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076113748 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093892413 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069871762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075991681 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077298609 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078429474 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072198394 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071710041 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074386539 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072563863 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095412606 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072646522 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069940239 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076481889 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075952477 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071290303 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072240483 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072077347 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074659748 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076303072 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070788909 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074942614 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071156199 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064595535 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072288927 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071513073 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066149978 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076296518 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077443015 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063686788 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068771449 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07232216 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072740799 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064712934 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070722931 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065307368 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071077521 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070218133 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0708236 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069946103 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071501403 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064728624 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072772711 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071609206 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072338846 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063929985 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076730871 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064642591 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070824978 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064696972 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064678013 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064019526 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069503343 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064107596 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0685468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072901654 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063947673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069268231 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077703566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064298571 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071695033 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06447939 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06437672 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075180028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074434928 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064288016 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068496726 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063954765 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069368728 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064118671 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064106635 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063925078 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064342201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068594441 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064145724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068232447 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069728719 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076124604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064047508 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069042998 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067655964 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0641994 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070390156 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064345262 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063934353 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063888419 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077528798 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067588668 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063794869 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068922572 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067869417 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071545122 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062797013 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072279915 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069389882 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067910865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069495608 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062608178 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073810394 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067931737 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066914521 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062721111 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06340468 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062451193 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062938802 seconds)
done (took 12.341300591 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06768918 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.113927138 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.08754407 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.089945418 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080732864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065715517 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071266744 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086893404 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066837715 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.091171519 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08617539 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084645851 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.103749883 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064577123 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064890376 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06644205 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066588239 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074697208 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.089409403 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086068527 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10121077 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065447377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.081790228 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.082865673 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079776169 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084266923 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065651076 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066115009 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067918512 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085989009 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089050079 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068490054 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066087754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.085676675 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.082010617 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076900018 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065693661 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071936558 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066003245 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065180852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066367907 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08299918 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072384627 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072588272 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066572227 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072851129 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066707346 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.07880954 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.083509633 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071948846 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.078523245 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.087052274 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067827247 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.079376965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064433925 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079291115 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.072517387 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065431573 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06644749 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070301855 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066061252 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068543608 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074437339 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07255148 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06901445 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080189205 seconds)
  done (took 6.505824997 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081953165 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092111838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081134601 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081302444 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064952402 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065476215 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065579355 seconds)
  done (took 2.059378525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066022146 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086026612 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088480351 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088222019 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081256154 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090064555 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07336821 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065454158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097271033 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064538864 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085212836 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098260105 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069889031 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077094493 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090291137 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06553958 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088966648 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065705966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066344899 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089027137 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069194872 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091513522 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078983497 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066032083 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077715737 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06601041 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115007196 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073471093 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066919526 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066978112 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066512545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105043874 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07713789 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076289035 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067150911 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079194654 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078240196 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068583839 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.075793753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077713475 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078214921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066765167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064356562 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066792278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069101575 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076333441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064907356 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067020041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066690855 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084581301 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064702466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077249804 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069266868 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070477441 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071508679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070272587 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074466609 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067035408 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084810221 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067252404 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082986863 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081761269 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077865155 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083113786 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067773882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077240862 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077914542 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066788142 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067734403 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06737888 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081278455 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068854943 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067301947 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076113817 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065512473 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089820767 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08940198 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065614659 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078895865 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066567663 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067698021 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076456105 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089500918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070613868 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06666766 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070179278 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067754251 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068490508 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064457468 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069425866 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0668493 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071286558 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06730421 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069246522 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068009371 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081541275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065179275 seconds)
  done (took 8.771857682 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068021177 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067087003 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068316823 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066293081 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066882431 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066516504 seconds)
  done (took 1.960358234 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087942727 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066307149 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080060845 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066539508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10691708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08034325 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.080638204 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075212928 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078616719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077868775 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080063353 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083310572 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.083771565 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068050572 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080085402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067637592 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0806028 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069818901 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076738044 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068270732 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077990485 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068212466 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068923151 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084583029 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069342624 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067197621 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074764492 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077921717 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077250859 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074705888 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067833538 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06940461 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073307093 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074603388 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.082313562 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07342058 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066134665 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07191243 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068981448 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069349573 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.082461859 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068117972 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068924359 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071701487 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074213707 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073761954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071724741 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073604345 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080406688 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071620081 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071775565 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067194069 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069233483 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071770203 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075724541 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077010842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074562968 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082657073 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069389037 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074396067 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066199414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069103272 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074416702 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070772872 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074063663 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071891177 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073877943 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069761145 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070817888 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068411177 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072340146 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066450663 seconds)
  done (took 6.858455337 seconds)
done (took 27.709635447 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516971735 seconds)
  done (took 2.022774698 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609163665 seconds)
  done (took 2.153089984 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.521775673 seconds)
  done (took 8.06750077 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404521991 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46968275 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.739734737 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130237259 seconds)
  done (took 3.320841745 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701793207 seconds)
  done (took 2.258021358 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236173999 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226459569 seconds)
  done (took 2.027138897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342650715 seconds)
  done (took 1.887959879 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.05738598 seconds)
  done (took 2.602357936 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.247768625 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157500485 seconds)
  done (took 1.955529969 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.433763969 seconds)
  done (took 1.978727911 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.392778737 seconds)
  done (took 5.943852445 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234678401 seconds)
  done (took 1.819819342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2318589 seconds)
  done (took 1.785437747 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714275376 seconds)
  done (took 3.258567699 seconds)
done (took 42.633031826 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081346768 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083473509 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083519259 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079653833 seconds)
  done (took 1.847334559 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074198994 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069728331 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074187857 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072032334 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076020204 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071563164 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073112903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073983064 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071216834 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071838021 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071862508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071593508 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074919581 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073676732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069991873 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074619623 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075835551 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07138546 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074601328 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07120151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070215027 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073953729 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07461922 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070546011 seconds)
  done (took 3.289369732 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077864606 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071695916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074853939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07231545 seconds)
  done (took 1.847847943 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075763884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087037322 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08477536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076317921 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089565248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083633432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066019572 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068024898 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069323003 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077904703 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067400443 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09371508 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087817848 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078442785 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080762491 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064603786 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065940331 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084223192 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076084565 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077359343 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068931563 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078174099 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066876674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08722002 seconds)
  done (took 3.40589015 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082662282 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064823131 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08201913 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091137727 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090928972 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064812525 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082446816 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091240506 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136655656 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067143699 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072696256 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067211014 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104685097 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066310817 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085836269 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109519793 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113185319 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070766328 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099357347 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067190056 seconds)
  done (took 3.272410414 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082024259 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068241576 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069812269 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064615747 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074812234 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071943499 seconds)
  done (took 1.993974285 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067371646 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066840622 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066543217 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068856077 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071125773 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067059972 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064775283 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066768076 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066955188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066178914 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066734523 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065013468 seconds)
  done (took 2.359255081 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157097189 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069195694 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06933863 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065297396 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070975775 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065832177 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080739968 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068677334 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084202354 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066250619 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065858697 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068267118 seconds)
  done (took 2.486967495 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182610825 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073787582 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213352428 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142423271 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09746429 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106199017 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107344867 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106537458 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.128134743 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092449264 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146720508 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150086671 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100978954 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122907688 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085458715 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120006202 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134354948 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15069994 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096768752 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147434681 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131558401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118319195 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13497441 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094237669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095970448 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110823751 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070639675 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07422124 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152533231 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118963217 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128592609 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101506546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085364766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162591895 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150655522 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126661428 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136524194 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07861615 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114630682 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.123789252 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184853225 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084018367 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142227288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099482256 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075481846 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116294082 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105883271 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109248021 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.093730564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083357731 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272594678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166237382 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.122934389 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080547073 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112846425 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100785328 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.103425934 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108323655 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161732168 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143250729 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115005828 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068338375 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102370724 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13545645 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120355186 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.099900655 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.111925256 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085963505 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119572615 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140940798 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119366523 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127569003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.109121972 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083746251 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113086013 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127857824 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116055035 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153694373 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111374482 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.06904296 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108262111 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090400166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075577263 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.138486747 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072123158 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156582166 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09317866 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.116694247 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120208049 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103092764 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102790407 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139815037 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129094582 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097348186 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082318042 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096921559 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.110187636 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129429392 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081436742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101521779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103991843 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074653806 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116506552 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.070639579 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107702791 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089999919 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10973664 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112989766 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076990379 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263319908 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10067153 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097407156 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121973294 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142784141 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083913092 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076246298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148361077 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109781373 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.095364295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130470341 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144616767 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121638597 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092860853 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134514695 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158639968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085355046 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143954531 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09478249 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078098571 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099624298 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112636955 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105587698 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.115533473 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076523781 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107653208 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152195447 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072705582 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093021928 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121923342 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078116068 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077653263 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097868062 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095237296 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090429924 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094163581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098517455 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124907802 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111780753 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097815949 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11291071 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090606935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149246016 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082962554 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096548378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097135867 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06905209 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.122010709 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139159509 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073998714 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146203676 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.112639341 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108047807 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110013379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07870621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125535851 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074924363 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069007744 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125877737 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10291801 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099468217 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132927943 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261288055 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115291181 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.109780478 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116730081 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117129787 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.117266248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100430111 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085060246 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105433315 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11657567 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069449491 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085396124 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077920045 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096116541 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087063714 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079187958 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125702614 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111586431 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104756274 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091126312 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133826182 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07396992 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113430766 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.111798683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089069701 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136963241 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137683866 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12243433 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096755459 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128194003 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070627877 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071130979 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081843936 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114533614 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079436325 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078853632 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104434688 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134857303 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116352093 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120136783 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113809524 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109199966 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142690071 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069626198 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113824357 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130396031 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109583693 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.099002372 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085311708 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.092359256 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129476886 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096052403 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163471165 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104104301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112204442 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140229439 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.094782798 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074248303 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096498093 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117128485 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090805863 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.283182535 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093253619 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081991886 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101339665 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074826242 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091305659 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115434721 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105382469 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124069474 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103758585 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116393165 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073908027 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102114011 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111562738 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108829128 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.079713468 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109428418 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148986861 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090524257 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108170948 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134799427 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074164791 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.129584385 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154618199 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131573727 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081446629 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098720096 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111785075 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116203094 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109387448 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127122011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095114085 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128401661 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104446524 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.080494319 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080919501 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090167821 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097131791 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106019396 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.095695622 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104031779 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.089881522 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119020129 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09539069 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102566346 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108254708 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094979949 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0922163 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091062309 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156225788 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10727042 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152296325 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.093420482 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.128814987 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144551574 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070787562 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074062837 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075322422 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124719601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078961196 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113926164 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.25789545 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109720134 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111812839 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125968188 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090773353 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068869488 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101564269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117323438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113708935 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090644137 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.093888535 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144436292 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110618213 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074515085 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105393012 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107933734 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097186488 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15576709 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.076949793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102110572 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073621087 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075070925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116329713 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136675371 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082233611 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.098006012 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109254359 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101134252 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114423249 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089301565 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103270015 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120908237 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132044159 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116124147 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084281594 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10262538 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117709295 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137992981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097484492 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094246784 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154975605 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13575762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144510162 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080497682 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105535939 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104998545 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100930669 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12202198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079371007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1462779 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077953816 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122403621 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093038933 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082846943 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115069608 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104770381 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082859826 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128766312 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106202697 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079726446 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076828176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260908089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111265412 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097285234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07186547 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126073791 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070323774 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120913257 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151555076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076493829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096956255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089540347 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078229839 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094194973 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094643407 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080280081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.094139469 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151769741 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.081581433 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132626394 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121590076 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102856727 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124639599 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096728533 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63560788 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07574086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134808479 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105617363 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16167251 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093359467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10823134 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10203208 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107926508 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128989181 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094676953 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174400419 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120217492 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106403328 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074329677 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094431789 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094923301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081958403 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1005815 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104524536 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105969186 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089314182 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106630069 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110237547 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078491236 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089746421 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138785341 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105703405 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129826289 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126887443 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078999164 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107121776 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120271908 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077260133 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.105876402 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134295126 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251730015 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095516581 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079565158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09110777 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154272079 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070164827 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138766678 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109160843 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101102192 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103619051 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100815733 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116097835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094058665 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110187066 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085697531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.101297098 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103483906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079333168 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075179762 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097329054 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10128611 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.090895801 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089415669 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094067316 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134611732 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068987857 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090451837 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106373575 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126318476 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153985983 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.100423543 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078985754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107380959 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107990596 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102830938 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109453817 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077198048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076720922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077267149 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128386174 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116830424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104315583 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109741984 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101964306 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145881708 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.07951867 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219961004 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089365346 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097574194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.084877127 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0760525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090789846 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08964106 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09580873 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103359463 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155546959 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089189965 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.084434767 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085962871 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071907968 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078959343 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114081161 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101294457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105515648 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09483006 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.077154925 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092670415 seconds)
  done (took 54.62083687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103730678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076027997 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096006835 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143438238 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121271734 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198219945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149240471 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186795143 seconds)
  done (took 2.7979589 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067733619 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09376033 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100426824 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081159835 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065888553 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067568767 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226708849 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081220851 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065379822 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090339362 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075246498 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06729338 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415242617 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064963786 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066084303 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074085794 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06634755 seconds)
  done (took 3.446305612 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378680015 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596675515 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.360516463 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07377972 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.824779817 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08870256 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.117772864 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136463864 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079559267 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.516026437 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365350435 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129506571 seconds)
  done (took 18.359012586 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07917134 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076962242 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087741364 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087386428 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075803939 seconds)
  done (took 2.089209452 seconds)
done (took 103.396512346 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079442369 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.188501945 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066734987 seconds)
  done (took 1.963433752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088277409 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086500315 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087129302 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084230306 seconds)
  done (took 2.037674576 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073429537 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075098799 seconds)
  done (took 1.833778444 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229682497 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169896779 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094773618 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081426461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07833977 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07931658 seconds)
  done (took 1.932511235 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071620179 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071040225 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073758281 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075492937 seconds)
  done (took 1.974750508 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066566159 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065350088 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067276536 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070122301 seconds)
  done (took 1.951989079 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082605523 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083435659 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077758137 seconds)
  done (took 1.926308038 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100747209 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09313933 seconds)
  done (took 1.876313533 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079249742 seconds)
  done (took 1.766921885 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091751824 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100324024 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128152722 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110208211 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137350843 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114534649 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.080618406 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084771199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075429975 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.082315591 seconds)
  done (took 2.68849386 seconds)
done (took 22.209549303 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076981068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364770358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359560898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088902888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669735977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35528627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968046769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089979938 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105786176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067619238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084409145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648097143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959547253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320953168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947072968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321759708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651134527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067670078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066578519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067285608 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95381531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067127607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06762165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067717669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647592073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371996182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068267253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322259096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067526713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071413046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357399781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06878486 seconds)
  done (took 16.074555482 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07045384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119209762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07249318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083722332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069673788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068748299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070971669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067653081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1158864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068077579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085089562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067115221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071366443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068625973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087545059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067753927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070364405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068588102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068769363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068764461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086573945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068533716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069476688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068472362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068383162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080880483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069169206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067779666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068489544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072286901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072739724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069882534 seconds)
  done (took 4.092912418 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114550778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124978474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072797846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104992285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11555737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070222057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142952076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091747415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118896414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067894122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084547529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067061375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100953556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068879638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088062497 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068393058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070710997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068413345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068151514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069023306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087160288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068122995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068726579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068631468 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069451515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082618361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069830069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069041789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068174577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07205101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073803333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069510074 seconds)
  done (took 4.346062688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069328197 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072370897 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079613998 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080035491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067034045 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068921866 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070604073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066595575 seconds)
  done (took 2.277945394 seconds)
done (took 28.491500568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076517146 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067512909 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070223205 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085632428 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072764163 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077864209 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063963266 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072994442 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073346789 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070957426 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071835725 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066254023 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068850781 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064327852 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0706762 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065421477 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078308472 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069456781 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078016798 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078125818 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06815474 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071216033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073729604 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077839925 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078060856 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078128835 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075031961 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071241827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066491856 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069210089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068423227 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07612083 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.079945005 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080966063 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067223081 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066923703 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070942013 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068935225 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079149035 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075168491 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068149969 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074930615 seconds)
  done (took 4.718349695 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082194834 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08713999 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082210185 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077710571 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095896041 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080898139 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084537074 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075452469 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075813753 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083407066 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072501425 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079577814 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076534084 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071173947 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075878458 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073361977 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077396932 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072019466 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075470608 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076171066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084076404 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070649265 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084927742 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077766519 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073739386 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07861555 seconds)
  done (took 3.760439242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072192785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.0835462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091253009 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140434323 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108245175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083966129 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08010005 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094027114 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095256303 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069582848 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074022876 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093636427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094226591 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075439673 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112342802 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08444676 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084240622 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071210465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076221922 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097583399 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089078624 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085652312 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095084144 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085411704 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068510916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071951741 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074348243 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084610924 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069425587 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077938914 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069391574 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069881672 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067849635 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078567635 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071064659 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066616438 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089420473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077494238 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079020831 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10314702 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076276295 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067520556 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091227016 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125376006 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068034447 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072195784 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072265854 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080517563 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068112167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095776598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081141095 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068504803 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069471578 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068417981 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068000712 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070019843 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068666164 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069644578 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078255917 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075048375 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089573287 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072528751 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085142889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066029373 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076806741 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066275089 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067688095 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065339532 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094742145 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068125509 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109790144 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068184533 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06577381 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077572846 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077752312 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073693341 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068439941 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088310642 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077786596 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071811612 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074998528 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069902146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070030425 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096333455 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067022325 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068982246 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06586776 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070358229 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069611694 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06786572 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078421912 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066812535 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070422432 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085749666 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066092726 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067261628 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069771922 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068514743 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066053682 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077116627 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07037702 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068162014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077155967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06724234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070474419 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079826836 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073719571 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065605406 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068608379 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069468462 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067996883 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068153041 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069947044 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069132643 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073142081 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073316908 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072547734 seconds)
  done (took 10.780731656 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160786293 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154453309 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071043467 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147962182 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077306837 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080706644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147957789 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093702321 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067886835 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068152715 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067229299 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.105719717 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102240179 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112874415 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078665343 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067942468 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092035643 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111465357 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149260332 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145518654 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09143018 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075958426 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069676155 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068682565 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068589714 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076980717 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08437037 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075183798 seconds)
  done (took 4.458254904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076067214 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102678556 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071287166 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089316599 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086229081 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067571557 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069439242 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069101046 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083377621 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075992347 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067689226 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072543476 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070703153 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070733018 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068335508 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074107061 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074411194 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066363434 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071290058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07236739 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07695569 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090730927 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072391429 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067127321 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071069719 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069102193 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076137709 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080929626 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069453385 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105711694 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067643098 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07384049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084300629 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070069873 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069048914 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07021529 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069311114 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069499824 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069871676 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068521495 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067989342 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073459716 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068482419 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077211484 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082175318 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076131776 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071654678 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071656452 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071992999 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066856642 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070840215 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07008689 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069991877 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075379286 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071013315 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070114345 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068351997 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09217664 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073096999 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067072577 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066583959 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068331643 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07184047 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078624689 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084334365 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071717321 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066469909 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067722477 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.080763776 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082156912 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069095221 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074405677 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067520634 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070408445 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072153939 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072588463 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070336357 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068214854 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069337391 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069077814 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069614923 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069540413 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069138827 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0722865 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067940356 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070758154 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069903636 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071232432 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077121776 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067469975 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071181426 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068475101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066449811 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069867541 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072279958 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070189603 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078110636 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078163003 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067764853 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065945112 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079975786 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070030421 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066784301 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073392475 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074482719 seconds)
  done (took 9.410104066 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089377664 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068374655 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085688868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092874282 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079495949 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075207857 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079652764 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069546868 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086084455 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074783836 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076841308 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068189989 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080519104 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077980226 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069011638 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077481737 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069682636 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083745059 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081594955 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065824388 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075696883 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079834381 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080041908 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081573548 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080218435 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081378344 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078704344 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.076309318 seconds)
  done (took 3.94226686 seconds)
done (took 38.764812982 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.816856494 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.045766941 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.778020842 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.997092041 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.006065277 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.803688063 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.872205911 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.780898203 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.058605112 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.798589417 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.064173388 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.280593746 seconds)
done (took 67.132856817 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.856100293 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.928529465 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019056878 seconds)
  done (took 5.657716693 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.001344291 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.429187627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.036680033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772092482 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.77830253 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.201136656 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.547766364 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.220300342 seconds)
  done (took 30.694996296 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.917038616 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.990850897 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.460781995 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.5047443 seconds)
  done (took 15.632968992 seconds)
done (took 63.647780033 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.820542836 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.773489211 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.809989303 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.810744696 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.783179768 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.776508713 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.778469874 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.77742442 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.815994572 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.004558419 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.774535747 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.777160271 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.77669182 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.795889383 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.286074607 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.823138021 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.793704449 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.777908563 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.781126921 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.814430245 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.775639332 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.781533467 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.188652107 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.928445823 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.382539441 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.911645412 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.115610132 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.131753606 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.786127938 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.78402278 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.847786478 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.898908359 seconds)
  done (took 204.793340637 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.773672214 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.690052535 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.760682512 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.823858561 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.132161172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.95085154 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.871558023 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.18748571 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.778604878 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.803020021 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.992428466 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.776381007 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.01691977 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.722149427 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.811473102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.865509486 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.941972114 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.990290866 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.813485276 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.92021063 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.801324035 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.827259097 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.786337406 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.947263928 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.795309185 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.776964807 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.933803754 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.78205652 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.9615988 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.922007219 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.777282358 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.793151687 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.990229701 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.646476481 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.802413539 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.805928121 seconds)
  done (took 169.685533217 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.965943975 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789568659 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.776795909 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.830360674 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.900871261 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.779609251 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.461842803 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.786308134 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.382476904 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.779252412 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.777997562 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.77664647 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.776340448 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.778206037 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.790412715 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.887093513 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.779908414 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.792181653 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.778836988 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.801842077 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.779799996 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.777112534 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.777067332 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.776928083 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.777506712 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.778982283 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.777162214 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.234946024 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.039506853 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.779484211 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.779144623 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.277281387 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.79105245 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.779515018 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.77923458 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.809231805 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.871062477 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.832755357 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.885895634 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.780568298 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.995425969 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.864305187 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.77919546 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.779256589 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.843059954 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.790972751 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.782255882 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.78046738 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.785015181 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.843959813 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.024822923 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.780501814 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899478673 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262109556 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.779760746 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.779740504 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.779811617 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.77971477 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.364993163 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.779476826 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.780446668 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.786004226 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.786501672 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.780165102 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.78179026 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.16729186 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.851058621 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.875728377 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.194736183 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.789276181 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.693426269 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.91246708 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.779950083 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.779497446 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.780447496 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.781447544 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.7804559 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.783615331 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.902001072 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789422377 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.904375841 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.8613493 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.90238362 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.784144866 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.789572445 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.610449677 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.852233193 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.817764955 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.60117193 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.78166876 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.155813672 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.554681842 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783045487 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.780689557 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.79412981 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.782182006 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.781766665 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.782225136 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.860977654 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.781591937 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.903105248 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.501773895 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.144356604 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.783737337 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.781011421 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.782386745 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.789446673 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.862743674 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.904130685 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785135484 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.847451486 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.787871368 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.784188802 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.873357394 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.78334083 seconds)
  done (took 401.770355047 seconds)
done (took 779.982582819 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.407744193 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.382825222 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.479909332 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.395864699 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373314517 seconds)
  done (took 13.758780911 seconds)
done (took 15.477219817 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.859976081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.867107605 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800754199 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.863626713 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799418099 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.863671859 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.8474026 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.804114401 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.832182067 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.804597728 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836364096 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803995951 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79023111 seconds)
  done (took 25.492112111 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.029210473 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024284478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.850089555 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.018601383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826703987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014120785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.946536023 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.939503464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932288671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795575559 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792831028 seconds)
  done (took 22.890781726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018854558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020347467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.85666769 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.021677265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831595082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.033472343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949496612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.939579895 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.93647147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797052726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79513956 seconds)
  done (took 22.92141901 seconds)
done (took 73.023836171 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.786558563 seconds)
  done (took 3.508063466 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.807283026 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.961906777 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.787985998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.787430265 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.788841398 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.787052371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.789091454 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.787822619 seconds)
  done (took 16.221779969 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.788085597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.788407402 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.788138972 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.787846245 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.787638855 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.787482253 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.787698618 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.78704434 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.788471653 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787804487 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.788137451 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.787906573 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.788289474 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.787767407 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.789271327 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.78768589 seconds)
  done (took 30.330152181 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.790224096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.787377907 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.787826735 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788070198 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.78939024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.788117765 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.788539552 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.788702113 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.788869285 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.78830907 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.788201829 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788793009 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.788027672 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.790058731 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788358409 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789133533 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788869134 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788316201 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.793586084 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.789477923 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.789178969 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.788961604 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.789761004 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.790008173 seconds)
  done (took 44.664970481 seconds)
done (took 96.445946972 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.528170912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.397872849 seconds)
  done (took 9.650070612 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.792566495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.789223567 seconds)
  done (took 5.379002611 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.789989337 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.789975419 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.789696471 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.789782884 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.7898637 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.789964169 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.790591085 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.789799121 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.789988252 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.789571063 seconds)
  done (took 19.622201612 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.790264418 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.789811584 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.790976877 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.790080909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.791432984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.789844451 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.790870585 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.789911343 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.79033104 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.78978858 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.790603142 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.790532693 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.790248794 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.792808114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.790800203 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790502824 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.790972777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.792234227 seconds)
  done (took 33.955774109 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.791231563 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.790419968 seconds)
  done (took 5.306858454 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.791134504 seconds)
    (2/7) benchmarking "second"...
    done (took 1.793953716 seconds)
    (3/7) benchmarking "month"...
    done (took 1.794563914 seconds)
    (4/7) benchmarking "year"...
    done (took 1.793761632 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.793357851 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.793270337 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.793266564 seconds)
  done (took 14.277670473 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.79461261 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.949140882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.011844069 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.469306689 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.795723406 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.798046998 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.709319973 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.797482423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.797949686 seconds)
  done (took 19.850822712 seconds)
done (took 109.766764985 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.612862674 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.801948703 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.094481927 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.865291059 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.820708931 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.131797912 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.833607858 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.062681979 seconds)
done (took 42.951881154 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.807429173 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.354869351 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.38438459 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.607369003 seconds)
  done (took 13.076099327 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.793593111 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.132527091 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.831234833 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.621092547 seconds)
  done (took 22.132675413 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156458329 seconds)
    (2/2) benchmarking "read"...
    done (took 2.150863283 seconds)
  done (took 6.039825862 seconds)
done (took 49.785807687 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795514492 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.795587939 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.796050473 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.79539101 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.796122114 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.796173735 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.795699099 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.795575785 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.795690808 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.795013684 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796094463 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.795086283 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.795933435 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.796772184 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797250437 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79552495 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796306427 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796759756 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.796683764 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796564826 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79703494 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796232304 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.79702021 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.797447575 seconds)
  done (took 44.837707446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.79765169 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.795864313 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.797244402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.796710194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.796882365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.796045451 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.79843797 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.796414362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.797234303 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.797276781 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796319325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.798043691 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.79728045 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.797867945 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797454658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.797646931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.797806431 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799260859 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797971378 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.797302808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.797728047 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797703802 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.799339712 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797473991 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.797482681 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798594953 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.797689557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.798618175 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799257656 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.798207986 seconds)
  done (took 55.659281562 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.798286365 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.797937947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.798690002 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.799364257 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.79880853 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.79932119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.798773071 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.79795765 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.80010525 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.799236827 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.799452453 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.799029885 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.798544932 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799632823 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.800140364 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.79870348 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.799097428 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.798049488 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.798640859 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.799126372 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79892161 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799588499 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.799360154 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.798796056 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.800012262 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.80082017 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.800208418 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.799334587 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.799038465 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.799030288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.800947217 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.800104637 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.800199507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.799943952 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.800149568 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.799654317 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.801306236 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.799312443 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.800463646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.800059659 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800674698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.800697326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.800344361 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.800752196 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.800775405 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.801303973 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.801136529 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.802222 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.800546577 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.800579377 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.801520016 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.801672099 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.801449662 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.802958958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.80238419 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.80165221 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.80189281 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.802847809 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801973262 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.802003567 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.802057947 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.801955085 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.801748317 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.801526602 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.80332936 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.802494018 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.802974888 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.802077265 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802066941 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.804009003 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.80252376 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.802683997 seconds)
  done (took 131.368637833 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.802166672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.802611165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.80261068 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801316443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802060244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802150849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802611129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803719845 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802576077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.803243167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802223771 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804065822 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802810704 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804618873 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803477644 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80245801 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.803959413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803094005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.804152873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803380635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802867787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.803243143 seconds)
  done (took 41.401319634 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80343365 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.8055898 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.803514818 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.803498241 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803620318 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803243036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80397478 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805537834 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803999772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803762868 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804429543 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803700422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804388473 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804618601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803799059 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805168541 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803872764 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804353308 seconds)
  done (took 34.211487281 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.804048092 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.804625415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.804363734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.804606138 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.804567365 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804511872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804367142 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804023519 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.80390051 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.805595893 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.806063185 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805279001 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.805594236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804676942 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80516586 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.806109892 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.804800814 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805666381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805204363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805152171 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.805643758 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805524185 seconds)
  done (took 41.448171102 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805202687 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805116939 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.806222317 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805240951 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.805258253 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806084704 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.805959951 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.806583708 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.805996045 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.806182026 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806299623 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805803462 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.805655833 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806452571 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.806096712 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806507677 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80631379 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806436891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807716138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.806892366 seconds)
  done (took 37.861121963 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806702831 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807280624 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807661377 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807301226 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80731151 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808548594 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807799362 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808574673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806809136 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808386423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80857206 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80840166 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80876364 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808715999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807821622 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808268497 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809253204 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80911305 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.809109976 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808636944 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808476598 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80897508 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809600095 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808463705 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808366685 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808283505 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808580289 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809121253 seconds)
  done (took 52.373027324 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807407583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807511217 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.808412357 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.808582668 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.808019872 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.807446916 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.808996618 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.807983631 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808387973 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80817711 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.80857976 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.807623966 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808186059 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.808092072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808870214 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.808172782 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807872064 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.809275946 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808891609 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809481141 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.809096523 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80944854 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.808737221 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809552328 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809981615 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.809979104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809820455 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81015488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809417856 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809523741 seconds)
  done (took 56.00322483 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.830284077 seconds)
    (2/2) benchmarking "in"...
    done (took 1.829954096 seconds)
  done (took 5.401978096 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.810192142 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809005464 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.810242566 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810467063 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810533137 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810557496 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809802983 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809969941 seconds)
  done (took 16.22363982 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.810162619 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.810196082 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.810041794 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.809847202 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.810736698 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.811253487 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817291106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.811321671 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.812228017 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.811983411 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818524418 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.817933872 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.814308012 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812855927 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.81063423 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814124424 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.811890282 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.81131486 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.810880358 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.811100059 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811646362 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.815128172 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815283801 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.811115323 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.813547026 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.823330631 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.817154723 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.812067307 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813134609 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.816395259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.812837861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.811992008 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.812154889 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.812938732 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.811419024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.812538606 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821472404 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814028023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.820160779 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812277813 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811806411 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.812383979 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.814383743 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.815319615 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815242445 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81324464 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.812720463 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.813007812 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.813408082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.817348867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.819102554 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81403824 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.812520455 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817840855 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.815459363 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820657829 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.814210767 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.816976531 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822865364 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823836862 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.82535535 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.821961075 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817187225 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.814527788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82323585 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.837598095 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821359493 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.814436399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.813947894 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814433717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.821320756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826183568 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.824575605 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814851152 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814230873 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814374533 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817423628 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814466472 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.822272889 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.819426983 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.814701911 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814179429 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823967713 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836925302 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.814892558 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.814894504 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.815191054 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.815059384 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.815313418 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826718737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.815134273 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.815597387 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.815851628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.816455237 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.816131211 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.815493306 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.814840627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818119308 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.81681646 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.816572191 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815793754 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819588905 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.825671068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816411331 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816719836 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.823877509 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.816233186 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817012276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.82488024 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.816956225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.816958387 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.817216495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.823493083 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.816475642 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820375375 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.825217402 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.817074388 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.81982695 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.816873185 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.816434977 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825818266 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.842186753 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.817779106 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.815916102 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.82229031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.827784958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81818953 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.821715316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.81711908 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.816748462 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.81682946 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.8206958 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.817457915 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.819179835 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81653415 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820093394 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.817307916 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.817757917 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.817671446 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.820220823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.820391255 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.820032485 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.820936972 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.821587306 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.819316705 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.820835747 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.824444741 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.818792323 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.821482991 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.819136162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.818330277 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818625216 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.820533161 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.820142251 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.819285136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.819699783 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.820360543 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.819487193 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81972791 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.820233594 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818948859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.819904373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825291829 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.820206029 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.824442711 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.819957349 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.818788144 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.819745519 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819200104 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.819249956 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.820001097 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.818571837 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.822997428 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.827534789 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.818914322 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.820070582 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.82406829 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820221776 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820476829 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820502637 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.8229483 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.829768615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.81985029 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.827306021 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.820584946 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820535479 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.821442182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.821433634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.820686773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820775815 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.824199159 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.827451618 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832997352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83054892 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.822379714 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.824854466 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.822000888 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.825188503 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.825884614 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.821222286 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.821165356 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821397352 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821853264 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82161571 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.823428149 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.821344951 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.821698751 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.822246351 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.823051226 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.822990276 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822694144 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.823725169 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823773748 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.822240676 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822074728 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821106992 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.821965305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.82258979 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.822428206 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.823404477 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.821807275 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.822409212 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.829706786 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.822990395 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825668421 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825076591 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.823608035 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.822685639 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.823535308 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826461552 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.824264076 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82987799 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.823628797 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.824585344 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.830919999 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.824742556 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.822968702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.827588244 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.823758057 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.822214403 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.825768859 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.831550321 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.82279612 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.823715886 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.823741333 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824461976 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.824019111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.830805388 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.823777162 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.824472251 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.823590044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.824798606 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.824278336 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.8266066 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.825583246 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.825199878 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.828009409 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824798577 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.823887348 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826264313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.824348686 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.824425344 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.82492388 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827719181 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.831217259 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.830041763 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.825276219 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.826432073 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.827275152 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.827915858 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.826909676 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.825954149 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.8256346 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836479369 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.833281387 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832278723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.828026846 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.825233005 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831314394 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.829385135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.829279212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.826617132 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827150951 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.826616121 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.826409332 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.825840417 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827273739 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.825366138 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.827430025 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.828017969 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.829972076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.825686064 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.827402319 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.825721212 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.826308069 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.825391577 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.82676017 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.825266897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.828612543 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829349243 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.826706958 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.82758088 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832881426 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82889251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.828150724 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.827910878 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.827411057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.82628743 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.827844445 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.828573307 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.83065256 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.834841999 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.831396447 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.837321734 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.8287137 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836447857 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.82785633 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.830194982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.834723977 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.827376857 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.826746345 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.828159289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.82785658 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837549577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.829039046 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.828866356 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.832099013 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.828851585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.828706448 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828547464 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.82826899 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828787942 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.827888418 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.836129439 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.830773617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.833113399 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831560364 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.828205389 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.828802764 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.829171814 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.828486018 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833470911 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.829422047 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.830230453 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.829516163 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.829708794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.827874539 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.829662956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.828465129 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.828259072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.829196728 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837316462 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.829472829 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833052092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.82792043 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.837260524 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830219003 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837770521 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.829473152 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.831039905 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.830038404 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829618475 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.831758234 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.829146615 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.832131684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.829866043 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.830733575 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833755823 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830162961 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.832323521 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.830773375 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.830618302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.831791172 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839432237 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853184452 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.833054883 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.834235771 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.830205309 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.832303002 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.834489615 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.830982934 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.83082191 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.834437972 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840969098 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837443727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.832792079 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.831725756 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.832775935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832043745 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.83024937 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.831850457 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.831227487 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.831404018 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.831609811 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.831640099 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835108406 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.830791139 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.831905237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833321848 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.833657934 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.842107632 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.832876382 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.833296601 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832262873 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.832048139 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.833582013 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.832648519 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.832092881 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83356969 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831668027 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.833852356 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838860852 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.839295662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.836844755 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.833282004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.832354884 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.834502904 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.833678537 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833258819 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.831964742 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833897788 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835248686 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.833206314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.834085452 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.83171363 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.832819678 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.833790434 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832188203 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835866218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.841963639 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.834631233 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832890134 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.833102037 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833319272 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.832834232 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.835057616 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.8414592 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837705131 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.844466808 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.841579687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.838942196 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.836141629 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836627521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.843900822 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.833212888 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.836187635 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.833906315 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.836233027 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.835558397 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.837901735 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834735994 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.841157084 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.835089263 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.834552171 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.843628944 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.837660591 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83518634 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.83700939 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.839505048 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.836063426 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.833819674 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.834661532 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.835799951 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843175817 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.837677659 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835572618 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837750729 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.834409834 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.836590583 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839008867 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835611225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.837045363 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.835276738 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837237459 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835566311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836080517 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.835838192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.835547488 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.835325395 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.839028984 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.842428118 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.835678004 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838737297 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.837127615 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.83640189 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836733451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836027072 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.835946704 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.835546246 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.836395681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837474978 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.837863926 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.840867205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.837523911 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.837511516 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.840409613 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837414479 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840492705 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.847080493 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.844122647 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.836606036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.836699146 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.838748111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.84140375 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836828187 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.836631374 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838462526 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.840176005 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.837384939 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83783561 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836772469 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.840075503 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.853203765 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.838046067 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839784171 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.83969671 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842081951 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.837684317 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.837491986 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.838169613 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.840238757 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.841233342 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.845569013 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.837482014 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845990833 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839998722 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.83917905 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.841585019 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.841143234 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.846335059 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.842425083 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83879833 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.839373915 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.843859605 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.855335459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.839592718 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848304281 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868215423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.840447294 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.840804481 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.839517323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839976402 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.839389007 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.84120139 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.84053021 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.839807479 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.839676266 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.839610351 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.840061566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.845694169 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.841398815 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.839370874 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.84007243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.839635554 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.841747843 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.839158137 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.839788044 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.840433987 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.840920249 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.840548831 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.840219756 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.84105445 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850813714 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.850746185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.84033344 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.839961898 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.840602123 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.84506134 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.844138175 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850346594 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.847494827 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.84070908 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.841306239 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.843781481 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841331115 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.841069535 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.841856506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.842323535 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841419953 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.841020106 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.852527972 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848711546 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.845853867 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.842192445 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841640359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.840668381 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843456436 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841484811 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841422706 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.843057572 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.843123449 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845732825 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.842709405 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.841947819 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.845580483 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.849882593 seconds)
  done (took 1091.641906152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842905057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841944565 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842159398 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842054748 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842888988 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842449175 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842494879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842828323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.84249444 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842597918 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842372042 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842475081 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842673231 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842806662 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84365486 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843650308 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842030197 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842536524 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84344321 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842177123 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843898096 seconds)
  done (took 40.469770856 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.842854482 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.84307434 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843340768 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844381543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843796162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.843012646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.843264521 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842592765 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843380656 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843382897 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.844702476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843190515 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.843174127 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.842630503 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844120382 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84285283 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.843537441 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843649415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.844176987 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843937071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844853056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.844382018 seconds)
  done (took 42.333019258 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.845466108 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.845160009 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.845911462 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.843604352 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.843830407 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.843596363 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.844657477 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.844221083 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.844524292 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.845868466 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.844760684 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.845627983 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.85164459 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.8533127 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.847731549 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.845159606 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.990496495 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.845271615 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.846530573 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.844951795 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.844198526 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.852007713 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.846090797 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.846214652 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.845181299 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.845583728 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.845568735 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.8455511 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.846022821 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848203369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.84975487 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.845539224 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.846818184 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.848977546 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.847295061 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.847057469 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.84964531 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.845344476 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.845958947 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.845999878 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.855507155 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.867618879 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.846918471 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.852097026 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.845914436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.846679681 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.850011452 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.854238426 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.845490055 seconds)
  done (took 92.44161635 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.845666626 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.847629707 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.846342574 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.84591163 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.847758344 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.846681445 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.84740413 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846860445 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.84693786 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846390391 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.84667603 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.84732279 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.847084738 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.846367879 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.847880822 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847766592 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847978781 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848067931 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.847387206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848869648 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.848274034 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.848278983 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.848275528 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.848161597 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.848164186 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848777304 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846848252 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.84848971 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.848674343 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.847579068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.847984652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.847487037 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.848086359 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848398653 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848644096 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.848215891 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.848284237 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.848143515 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.84914445 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.849673699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.849754071 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.848198318 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.849852798 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.849381134 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848815143 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.848971416 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849233966 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.850054465 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.850715454 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.849357777 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.848304191 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.848953484 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.850516613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.849582845 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.849695723 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.850513598 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.849244859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.848475359 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.849561842 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.84998971 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.849552445 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.849643521 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.849614343 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.849586526 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.84864592 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.850119296 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.850366997 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84938196 seconds)
  done (took 127.474607947 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850521735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.851844359 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852294995 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851432598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851410603 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.851230331 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.851822701 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.851953886 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.852959238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852473142 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852014806 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.851386316 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.851597379 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.851906183 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.850823393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850677579 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.851060167 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851278692 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.851365611 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851461598 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.85161354 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.850734257 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.851440252 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.851585186 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.85180771 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.851260446 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852137868 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851676766 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851987183 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.851694198 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.852131905 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.852143753 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.852821743 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.852434129 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.852845115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.852528105 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85292539 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852884528 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.852148121 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.853244625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.852640265 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852670571 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852099327 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.852560417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852030296 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.853433953 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.852905966 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.853213228 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852826321 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852245147 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.853381788 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853137464 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852522684 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853362044 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.852879339 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.85376434 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854194952 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853780328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853748417 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853911561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853609136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.853421399 seconds)
  done (took 116.626123296 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854218963 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854148248 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.853306974 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.854499709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853476844 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.854542112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853905914 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.853728238 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.853011752 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854654477 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853584079 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854838534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855550717 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852754094 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854291024 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855246356 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854836904 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854285674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854475257 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.854296269 seconds)
  done (took 38.869552151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.855104308 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854288848 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.85421514 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.855382874 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.85493327 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854797277 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.854744688 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854819179 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855145428 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854619406 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855354433 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855336316 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85421409 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855135704 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.855322254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.855980425 seconds)
  done (took 31.465420789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.855538243 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.855192021 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.854892789 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.855316254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.856453179 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.855679803 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.85550653 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.856096465 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.856214758 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.857013309 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.856106752 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.855868453 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.856783685 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.856774801 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.856476694 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.856705205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.855450078 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.856837323 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.856640361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.857662842 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.858202789 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.856296142 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.856647557 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.857721745 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.856947097 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.857786653 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.857388508 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.856925855 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.856937564 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.856955805 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.857243788 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.857743141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.856905474 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.857002336 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.857338095 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.85751692 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.856871464 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.857051794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.858159002 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.856757726 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.857473884 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.857591952 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.857345275 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.857496912 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.85788085 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.857005341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.857187923 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.85799518 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.858213343 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.858040283 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.85797828 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.857890936 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.858321042 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.858259176 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.857449815 seconds)
  done (took 103.921704984 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.857219504 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858883412 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.85857835 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.858778655 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859424337 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.85918829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.858982528 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.859025822 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858726898 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859148495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858500535 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859008789 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859540533 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858687599 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.8588292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858531622 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.858292888 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.858839621 seconds)
  done (took 35.247876712 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.859807755 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859539732 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.858991857 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858471628 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.860263502 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859365917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859639585 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.859197963 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858958668 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860269998 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860169009 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.858604767 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859640929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.860176882 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859862893 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860590882 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.860239761 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859486688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860036663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860606632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.861547907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.859655614 seconds)
  done (took 42.705419234 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.860965246 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.862642316 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.874457892 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.880105446 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.880517598 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.892582377 seconds)
  done (took 13.041465958 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861025062 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861271987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861189528 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860487259 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860548673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861301726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860928778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860522567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86175132 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861008932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860591777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862071333 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861967657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861713307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860874447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861762721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863274426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862752988 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862216838 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860993294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860960831 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864446139 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862581627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863072877 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862693351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862745068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861920565 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862773794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863235966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861067204 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861425211 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862527284 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861651909 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862685319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861874505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860964417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863131256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863069551 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862028462 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862755427 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862846421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862430506 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861870584 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862657629 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863028402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862909486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862507568 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862440516 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862588185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863906389 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86309712 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862662541 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862884025 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863718915 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863417852 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863045136 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863889591 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864431585 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862905777 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863890102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864078645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863739059 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863163157 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864781799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86357524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863919531 seconds)
  done (took 124.713542496 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863457013 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86391331 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864620507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86441692 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864506129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86512146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864841481 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863835096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864412785 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865159825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863935615 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864273107 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863457069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864526886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863814421 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864975112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864425899 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864314716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864027227 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864488313 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865243477 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865001828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864616936 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864743401 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86564902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865055436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864700716 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865142707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864968607 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866087033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865458843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865559286 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865311866 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865939794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865121278 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865352978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8662778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86511879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865001315 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865154118 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865616797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865977677 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865585032 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866116376 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867369653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866022954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866231757 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865664707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866620613 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865917213 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866464756 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867303599 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866969773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866705001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867408959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867138017 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867388825 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867565543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868377158 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866887217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867207825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866556384 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868109794 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867806438 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867188897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867001774 seconds)
  done (took 124.926953488 seconds)
done (took 2544.404278195 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.967565705 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.890210242 seconds)
  done (took 15.655701857 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.033490604 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.984884182 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.869601687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.889710101 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.868334664 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886494772 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.869316789 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.869922066 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.868828766 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.869255672 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.870377753 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.054173753 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.884239051 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.869033641 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.869257642 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.961120518 seconds)
  done (took 52.476638139 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.87160951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.87518264 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.882429251 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.876639963 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.874355915 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.890976959 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.906623025 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.877054611 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.933068083 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.884744376 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.994779506 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.885076881 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.873183014 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.929621578 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.886030061 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.887162879 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.964720892 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.949539955 seconds)
  done (took 36.04266102 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.949384936 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.87934489 seconds)
  done (took 10.636227294 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.868967485 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.906522949 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.940536031 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.897128902 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.894724259 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.876511372 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.893415449 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.877436972 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.897020778 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.876595284 seconds)
  done (took 70.729908903 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.875540113 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.875628012 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.87403422 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.872782679 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.869729974 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.876614348 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.872336822 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.869803434 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.539726937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.907748399 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.881113523 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.878279002 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.87362208 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.874353263 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.871717573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.895097692 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.982516617 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.871301632 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.870652833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.878384545 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.874391112 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.93265288 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.887358017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.874957136 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.903396916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542249496 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.881885339 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.880445235 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.990810469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.871473481 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.874402176 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.059702716 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.876275853 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.339808537 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.143464943 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.881118181 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.886974921 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.881508105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.872357908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.98502848 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.875309957 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.880892232 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.830911046 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.124068556 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.967403445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.917870378 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.181064437 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.893185143 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.874835312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.903458768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.877409622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.876039137 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.886934256 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.389109798 seconds)
  done (took 133.032577195 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871724285 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.218708386 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038910046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876404202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156352656 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079823891 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874262774 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919279848 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.876279935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099934994 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.129128286 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977364781 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874453332 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.874256063 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.872294918 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.872222129 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025945385 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.944548474 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874389824 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.872634995 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900412288 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11445358 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.996784544 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879167394 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.899188497 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082641449 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99566932 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.977905832 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.651187193 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872434839 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934590017 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.876760446 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872742829 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873037624 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028346544 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.969727121 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955577876 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.876143669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873583046 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.874057885 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.528954016 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072823162 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.969731648 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.005879432 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128063322 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079387932 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.653090425 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.873274403 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.608418063 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.038773477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10110969 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102439535 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.99454962 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877946659 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.204601139 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.87377303 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873939217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122906072 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09540018 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971149206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876808963 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.875080367 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874346223 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113489084 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.879953155 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.969966029 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878806244 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.87647382 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971585687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.97329382 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106452044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088416592 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905197669 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.221197561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.378036097 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121301548 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941910063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125089598 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.880289838 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875251435 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952403998 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.719331382 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.127687697 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118632539 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.121074797 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.9092334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.589674269 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.875423123 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.100004546 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094753461 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.133759384 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125531201 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.110750413 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.195541139 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875711738 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.872614099 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.56872451 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996435179 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.876102575 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212303409 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100544814 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.393702239 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895116766 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171673948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002581255 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871718853 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494948956 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.869663821 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.095297441 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.907833132 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.86780954 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86453153 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.080182517 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.851031523 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864999578 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.511238243 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.917110439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.8584292 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084625122 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856642342 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120327767 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853979459 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080297059 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.939063303 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87785757 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.020993486 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.0928348 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.84798316 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082013076 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086012113 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958581709 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063737133 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.54941117 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843240765 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122743089 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843425155 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.840715449 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.00552698 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.83924278 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976110919 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838202323 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123305409 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85554132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065385619 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835210442 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.083010664 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864462736 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880138095 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833338334 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955388817 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83082097 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.67017463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981866107 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827879792 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826022401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.37514707 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.822425869 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970990109 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04662489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841832916 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89209423 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.484697612 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821252499 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898425846 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.842901709 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.207601372 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.81880666 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.067903353 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.818202664 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.815802031 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.811868152 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.045786917 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.995554275 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815679867 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.811009133 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.714164605 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.810345887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811206334 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99082217 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.157213334 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.810633806 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01167784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816164381 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93984614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.816210752 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.05233443 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142232498 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810911718 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.811577382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.812698423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.811950449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.811464462 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.019274083 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.837275884 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.302029398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947249837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08393972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.120615565 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.051046478 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.855618673 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.816360476 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066133092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.816166207 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.874180466 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.815829682 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832443881 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038484982 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816266902 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075357496 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08410502 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.657159238 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859946317 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.815452902 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812683975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.811773141 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957791558 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901092971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.816491735 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.813526724 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.926434648 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935027709 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022628174 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.814592474 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.849834532 seconds)
  done (took 899.189649091 seconds)
done (took 1219.562948082 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.812601151 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.814913376 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818391747 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.8149374 seconds)
  done (took 29.009523302 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.816485533 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.814069906 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816025519 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816092889 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81670358 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.815151938 seconds)
  done (took 12.641704603 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.902313451 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.816791 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815751465 seconds)
  done (took 21.282587071 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.887164547 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.203328375 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.956149795 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.236281363 seconds)
  done (took 10.031643904 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.816763004 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.815862046 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.815168616 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.817457595 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.817873976 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.818815334 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.816945625 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.817449294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.818653839 seconds)
  done (took 18.105850604 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.938635915 seconds)
done (took 96.758641382 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.510581154 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.787386193 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.405535561 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.325373704 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.255780989 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.956853856 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.323817829 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.025480824 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.897165386 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.754459895 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.552857523 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.992618698 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.902360521 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.241393329 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.924950901 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.142318122 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.976174908 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.234798812 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.196512093 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.039768733 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.06581989 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.887642378 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.535833381 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.914326862 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.048037822 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.978638011 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.768716266 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786210454 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.911252002 seconds)
    (30/309) benchmarking ("sort", Float32, false)...
    done (took 5.577499069 seconds)
    (31/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.96335816 seconds)
    (32/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.984392672 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277929608 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.236325905 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.058300398 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.745347813 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.975925191 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.219233738 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.259997568 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.540962643 seconds)
    (41/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.886354738 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.065994984 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.88667883 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.929463282 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.886165955 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.267135737 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.060495659 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.197197928 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.097455818 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.992829463 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.501886523 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.028842432 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.019240802 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.011335056 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.882339278 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.893050116 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067252616 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.099947208 seconds)
    (59/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.091465471 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050363114 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.831279006 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.991309542 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.884017689 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.187760946 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.562610435 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89035349 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.124844588 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.973159955 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.032534832 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.896902089 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.842438011 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.13346479 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.8921291 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.12917991 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171239505 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.773164641 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964884261 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.3577115 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.881439809 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.116181081 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.691764613 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.239886121 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.139970685 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.016695705 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.119723687 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 4.740973925 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.955425272 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.875560175 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.998443687 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.065006067 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.235717095 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214509478 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.210599907 seconds)
    (94/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.107225809 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.275599119 seconds)
    (96/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.96016551 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.882806822 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.274872009 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.013939364 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.881224596 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.878015076 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.962979543 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.878631047 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.99077181 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.366690799 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.96310507 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.876913083 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.937155626 seconds)
    (109/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.873144789 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.548572461 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.93134349 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.081029313 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.428395574 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.881945246 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.246481934 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.127604616 seconds)
    (117/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.960417375 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.873466463 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.780582141 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935166714 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.169636769 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.954558986 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.97988236 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.883726139 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.968374257 seconds)
    (126/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.020740404 seconds)
    (127/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.869098744 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.466348708 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.558254996 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.152667855 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885023216 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.921442025 seconds)
    (133/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.886021349 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.865730228 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.994190404 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.969926548 seconds)
    (137/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.179938743 seconds)
    (138/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.146588846 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.096525828 seconds)
    (140/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.966149961 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.15960013 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855703911 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.945958079 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.849852175 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.182045111 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103435496 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.869646797 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.226417455 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.852845849 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.667751955 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.874814657 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.397641432 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.582379583 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.949863183 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.846639983 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.001796174 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.861691729 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.701668508 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.088729339 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.840446282 seconds)
    (161/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.817803545 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.920461784 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.271125354 seconds)
    (164/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.835998952 seconds)
    (165/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.939695632 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.17680332 seconds)
    (167/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.874588909 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.891684611 seconds)
    (169/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.20550954 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.947100083 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170864899 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.850422046 seconds)
    (173/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.718908252 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.13861337 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.838387243 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.836747691 seconds)
    (177/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.043643411 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.991175302 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.832904999 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.470737998 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.315562719 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.087332366 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.832159707 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.833615158 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83279236 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.834334284 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.917342834 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.956206431 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.091601665 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.761825236 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.29792471 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.013453317 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.10351223 seconds)
    (194/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.102641109 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.935448877 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.957025765 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.832719371 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.835832074 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.918347862 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.692208524 seconds)
    (201/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.083842168 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.027496138 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.836898311 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.321162409 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.850331231 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.941027162 seconds)
    (207/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.913783044 seconds)
    (208/309) benchmarking ("sort", Float64, false)...
    done (took 5.57754098 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.970061096 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.899200352 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.869674117 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.034539228 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.833550381 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.242546465 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218735997 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.854589919 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.835826707 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.180318929 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.836208321 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.621443522 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.155818025 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.83613592 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.952566731 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.857452498 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.835999032 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167089025 seconds)
    (227/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.842529482 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.139700851 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.88132218 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.853842837 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.02507314 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.86921629 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.837334331 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.164630939 seconds)
    (235/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.216906432 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.867212216 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.154112479 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.250664481 seconds)
    (239/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.084001954 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.840223896 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.92445267 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.940041329 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.894311336 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.089870988 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.50921915 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.837599367 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.238235179 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.997052637 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.945004767 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.932679189 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.580825592 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.45642451 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.139529835 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.925258604 seconds)
    (255/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.839147092 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.979391739 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.177089008 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.870706044 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.948302536 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.228740221 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.868156709 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.836564451 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.911851819 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.823437339 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.02773895 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.150678039 seconds)
    (267/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.844710555 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.734843091 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.110645965 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.242531409 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.867242346 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.854454092 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.145007523 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.978929877 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.841063216 seconds)
    (276/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.058130293 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.981112525 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.91694348 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.99570559 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.851383445 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.143346492 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.151325421 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.155728097 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.539227666 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.015005165 seconds)
    (286/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.984210917 seconds)
    (287/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.86196075 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.222402835 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.977407046 seconds)
    (290/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.841282429 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.290221578 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.714663951 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.963512848 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.850269074 seconds)
    (295/309) benchmarking ("sort", BigInt, false)...
    done (took 6.840596391 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.990592623 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.006840924 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.847044499 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.171040802 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.110604011 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.162775443 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.105720527 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.846559419 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.117388552 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.81368672 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062115234 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.868677283 seconds)
    (308/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.99752406 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.984925778 seconds)
  done (took 1003.645246908 seconds)
done (took 1005.521515183 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.867295528 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860661889 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.84341629 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.865734278 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.95635206 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.886504916 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.854871546 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.844260599 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.890741705 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.891556835 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.840447199 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.883496009 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.841272213 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.839585823 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.839171675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855183446 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.147014671 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.870742888 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.85541948 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.849195455 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.854011257 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.834442264 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.886142344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.875337679 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.839418578 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.839073924 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.837951946 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.854349713 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.946791344 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.837151639 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.840292227 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.846085363 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.139977133 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.866066461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.832804468 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85534161 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.846327413 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.846349486 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.839652494 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.868641013 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.227020659 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.877143224 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.836193361 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.83616479 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.83464535 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.841555193 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.835170016 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.844977739 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851731808 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852773899 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.219832007 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.896923217 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.839633805 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.836190645 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.849047882 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.8370341 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.839292112 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852408035 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.856478865 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851703009 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.124894236 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.876796776 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.840110398 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.854142814 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.845360525 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.257372371 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878588694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.842617429 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.226095108 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.889291347 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.258002675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.890487757 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83935027 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.851518124 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.870275481 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.138273591 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.866256018 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.834813606 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.846106348 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.834564575 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.848479314 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851664501 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.840336627 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.836810645 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852816128 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.880053107 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.850402564 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.837763084 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.849133694 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.856736817 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.847892165 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.846666795 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.838821429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.832391491 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.846675006 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.838780159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.838199579 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.835909027 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.836822194 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.844981949 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.220918689 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892127462 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.825516183 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.825606043 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.828466968 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.844119624 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.219939466 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.870257798 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.847712099 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.873878793 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.825306873 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.11470289 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.862208878 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841340748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837439997 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.828092633 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822518257 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.114973333 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.246350296 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.886530037 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.826168096 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.825124429 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843630992 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.827501372 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.824516527 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.128442343 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.862628789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841832309 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.948563814 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.838932679 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.859234624 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.824171957 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.83083277 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.872480807 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.843842781 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.86081566 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.829106815 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842703822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.844209246 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.824184118 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.839827899 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.840046495 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.827372788 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.836042507 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823767094 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.873515492 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843023299 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84270005 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.849329301 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.950207304 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.823482054 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.116544027 seconds)
done (took 288.532928197 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.906018019 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.816727179 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910349425 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.818032458 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.904201881 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.887365962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813831798 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.8142691 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.816774385 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.293180346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.813569701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.819409249 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.812431117 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.807113944 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.87690458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.807686296 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.810250319 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.237052056 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.809372499 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.887513219 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.808796023 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.80850269 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.809089081 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.29444657 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.808912965 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.810328492 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.887339565 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.810118455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.243671 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.807493702 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.80940007 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.243345527 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.887524105 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.83594418 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.8174098 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.816613384 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.897815924 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.818603927 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.876407524 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.87739887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.900464802 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.842445383 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.80843939 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.808175515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.814238055 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.812200315 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.809950055 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.842256981 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.80934746 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.816967536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.239392799 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.814772107 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.817632484 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.811918235 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.810152013 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.837028109 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.810867815 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.811771836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.889785389 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.810564246 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.878512057 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.296913017 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.293642106 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.810320867 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.811411386 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81129652 seconds)
  done (took 181.209806287 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.878288071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.887073384 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.878717849 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.816144218 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.860772655 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.879656142 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.817140601 seconds)
  done (took 14.755940055 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.819388719 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811881822 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.861201625 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860600119 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.812343508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.967309762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812104548 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.823084966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.817247143 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.838096398 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.811296206 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812633754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.81869482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.810319744 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859594333 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.823966067 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.927584232 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.812896357 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.810946435 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.960615634 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.817023407 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.819097874 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.838587737 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.822923503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.812549273 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.819171048 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.380379438 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.81227889 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.812533709 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.811734701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813288191 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.854888987 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.81268415 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.811969812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813094991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925884074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.812625425 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813191968 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.81304191 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.809934091 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.812669872 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.813344062 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.812909113 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.813281406 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.812554067 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.836802911 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.813446715 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.816308514 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.813788747 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813337385 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.839047481 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814080832 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.815371892 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.818757154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.856489618 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82011797 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.813725416 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.81412158 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814565492 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813601593 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.960661446 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.862651986 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.813016654 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863173407 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813942726 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.813410714 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.813456096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.813563418 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903456564 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.812651988 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.862073301 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.814440322 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.976112314 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.837325862 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815083561 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.817851579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.818155093 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814882315 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.813303573 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.820898927 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.815508986 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.817251022 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.8217579 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819001254 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815291902 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927737042 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.952474486 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.814468811 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.816637855 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.822586737 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.815951054 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.862789454 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.815744651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815348088 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87070117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932088543 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.841575488 seconds)
  done (took 200.257717274 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.823683159 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.823747147 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.817823691 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.831835725 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.816705253 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.81792883 seconds)
  done (took 12.6769831 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.81935563 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.820038121 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.816172706 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816225805 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.817906962 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.815912383 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.815961879 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81747883 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.819859923 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.816144675 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.816892152 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.816840741 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.81624252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.81822917 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.817176237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.81698456 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.817183311 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.816643635 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817592194 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816470374 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.067982543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.816087302 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81648419 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.820780185 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.821024952 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.81740369 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830791294 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.816076474 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.817276855 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.824852956 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.821617027 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.818192769 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.822436098 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.823379819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.822424119 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.820860049 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821222181 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.81889186 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818833098 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818374897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.81796497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818772448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817251733 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.820312332 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.81986562 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.825682406 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823118187 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831590173 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.819327821 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.820003086 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.81974421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.818846823 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.820671923 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.818652887 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.822991463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825292285 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.824443929 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.818909287 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.8196176 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.82191534 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.821371112 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.819394565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821600796 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.824789859 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.827177773 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.819609269 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.824955847 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.82437414 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819585524 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.819529215 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.82058679 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.820565354 seconds)
  done (took 134.036439373 seconds)
done (took 544.712694941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.092396058 seconds)
  done (took 8.839616086 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.019095787 seconds)
  done (took 8.833511609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.374384173 seconds)
  done (took 10.131450439 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.846156151 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.876412928 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.836030232 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.827469242 seconds)
  done (took 29.160006325 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.037583553 seconds)
  done (took 8.792353191 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.849831347 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.824850963 seconds)
  done (took 15.496618436 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.861555155 seconds)
  done (took 8.627394465 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.125306403 seconds)
  done (took 8.887981367 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.848741653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.83943741 seconds)
  done (took 15.464179727 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.831470866 seconds)
  done (took 8.586250982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.214619955 seconds)
  done (took 9.999531072 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.855796722 seconds)
  done (took 8.68672368 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.840558482 seconds)
  done (took 8.596713631 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.935329521 seconds)
  done (took 9.691033325 seconds)
done (took 161.542480832 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.844599187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.825143466 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.826600453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.825086403 seconds)
  done (took 29.076505926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.8590762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.85947996 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.859872576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.870666636 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.861046301 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.859940194 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.85203329 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.851698136 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.870361375 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.86238689 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.860713883 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.862300673 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.860146429 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.853012671 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.862695665 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.861614687 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.870418374 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.861784024 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.852406663 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.863110485 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.827760758 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.871645943 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.864033902 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.829065478 seconds)
  done (took 46.362872876 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.018352128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.898395802 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.982809836 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.881056473 seconds)
  done (took 9.537358113 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.879077716 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.882369787 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.893127002 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.931167108 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.956769231 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.890786415 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.853128354 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.849867006 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.836572237 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.881443565 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.957192597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.876247413 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.966336523 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.828618997 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.016200952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.828296903 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.828586405 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.880206986 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.931267727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.008304751 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.829706098 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.879043328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.88379521 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.876205554 seconds)
  done (took 47.202365536 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.829360635 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.837888979 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.836199271 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.83010676 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.830334274 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830232094 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.836927703 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.832718842 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.852276009 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.831576337 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.83087384 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.830731544 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.836934488 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.830371762 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.829683191 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.843672765 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.844565283 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.83114419 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.834278976 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.837358268 seconds)
  done (took 38.454524643 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.828487397 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.675754492 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.174330702 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.082576081 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.829800955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.829040945 seconds)
  done (took 31.178295806 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.842746572 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.838558859 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.831761832 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.889052218 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.975240099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.838975509 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.831710836 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.842088672 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.879050806 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.897271125 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.852017277 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.860796801 seconds)
  done (took 24.138792928 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.831242994 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.834840296 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.833426984 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.844681015 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.845320056 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.840391147 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.841182858 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.831820314 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.847292481 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.851763262 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.840595007 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.844310137 seconds)
  done (took 43.849646377 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911616035 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.707057342 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294200716 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293886497 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355806933 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035490883 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.831946101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919363402 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.833120133 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103186931 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.166327674 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417806965 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168210333 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925659344 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.00867059 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399619356 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218244762 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135762627 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953124802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545435807 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030411795 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42695634 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.718216181 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036290393 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127599814 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.045229967 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.184954679 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.877595803 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974500255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929861742 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931064049 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926629141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198015052 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049609768 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996958362 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931269774 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340132237 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.632304476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.935695958 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.603753769 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.474649462 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.041263806 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931630556 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926006163 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853264463 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386013405 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127464884 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.92837593 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626387992 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92776603 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932049287 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002307495 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.926930285 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.733298497 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611605058 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196011028 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.926789406 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92977524 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489488918 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919383725 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496669555 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.971588328 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.022765702 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602331514 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373676782 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.080882934 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.928246712 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929448175 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854890316 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.603744384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041109036 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063459438 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.943300113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568788371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217776162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.349951966 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976634394 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204267379 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.67869676 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.971779179 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146638054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874690685 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855665331 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.758730752 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854037666 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137834527 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9643122 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.526115369 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968230955 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010922052 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93478363 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946486104 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932365494 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14440969 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.822736869 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933144383 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.229204628 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178643442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945547435 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015983617 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868223675 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.930630316 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17405632 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.131544975 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134224907 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.523831793 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020561702 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818570904 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.058127726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.807353745 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048460536 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.193108079 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989255287 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.933261414 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047470409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.886013501 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173989667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853992455 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.144277628 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.300415788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167080654 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.26419269 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180495619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993297544 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931479878 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931603368 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618901476 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.538850737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.146340915 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.943718914 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37423669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048638379 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.932888451 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866734124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.784961213 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284045344 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.00976208 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144602237 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.839494941 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320965415 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858210403 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069057279 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.937931139 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.145866861 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56389052 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.010500772 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18067401 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.140225669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.254369981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05302641 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947000123 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024098025 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951095567 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.31386889 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292730648 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.934537364 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.935858425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.597923191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981056088 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937731411 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.936945974 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.460633695 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197669885 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953693333 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.94029287 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.809513137 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.945650323 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996283787 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935621869 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936155772 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.495303591 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.43798147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.941818015 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.6301556 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148093528 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938657627 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.59766134 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114069108 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.946726079 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194299104 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998927427 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.860893328 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.635668596 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.635475208 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934846277 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863013857 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934804597 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937597031 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939577074 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.124230586 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202392384 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982221065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.536589745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.035946634 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940013998 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.937912165 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935973012 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.456807206 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928940875 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.516687234 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055116328 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064891089 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.948763989 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863092271 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938774337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939542845 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938400691 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.881452112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983208575 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.573199645 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133234985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185624709 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.340723415 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945872009 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.546944183 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.049357392 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.950999302 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216038473 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51794806 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.042330752 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0088492 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.943589384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.545365527 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.660557465 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499580337 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224996384 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244454341 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283246797 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.385619573 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.266284077 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023495752 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164734035 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458455515 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995141541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026471455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874345807 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952382707 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.573122175 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341323643 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949225571 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158076004 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228388397 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.272711276 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062131027 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141243573 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968248335 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.813953248 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.973226961 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.472739101 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955613858 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.358144053 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132884471 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022050524 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213087071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.008232956 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.93798772 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.28725304 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981385743 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.640282933 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290962776 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420933716 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.393425773 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154346806 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944728383 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379381044 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281928752 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.210346029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.067064525 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865836527 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945314381 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945563033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.952578143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.91383433 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.784317749 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.18196071 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945492915 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165508418 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.148825729 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305370988 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.841582837 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.943474315 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941674486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184986776 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.77368843 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103149495 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.328628107 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.526801746 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948000892 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.869007147 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867438705 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.641930335 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94884156 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909147504 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147872707 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.045146033 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622192812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394674143 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258486434 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184407624 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.952050761 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204798892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210690611 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435246729 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962106785 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.039466851 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.219483202 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.671057538 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.155791007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167347583 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499442108 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159081882 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400840745 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.912942794 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.942379758 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149892536 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156724251 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.277844839 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108624887 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.652603448 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.949985889 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303524128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002337221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.283795918 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119194397 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.030106482 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950307651 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020333875 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946701694 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.948260205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949240244 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953372069 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300515391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.050037833 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.954711182 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019237955 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929934069 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.511212807 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.951351608 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206728003 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279712421 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267179744 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003772077 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943848771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953540609 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87264849 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073108151 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.383529087 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216201081 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065130733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.07788686 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965168137 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213803621 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273583951 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262367841 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21788626 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.828603737 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.654211425 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.069893141 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.159874819 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950338667 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.14836768 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155574922 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245374875 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517294555 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.157040432 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144243208 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216199244 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.305085299 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946117045 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524178829 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.953138296 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360718834 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.981601765 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.298976179 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191508964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948431819 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069121344 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951012614 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.145611505 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.399061881 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624114548 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285343824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.806656399 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949789543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211413157 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264452926 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246943367 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023993731 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951655195 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.636378927 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080567164 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.810056666 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.162690364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946489465 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150267239 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.656510334 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950326955 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211844334 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247195911 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.945937802 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.827949803 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95011155 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.950753189 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161757078 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158144387 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193035017 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95168215 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.955611636 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.755758163 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216600122 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005377852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873015148 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.948768273 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992592176 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174201498 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966325009 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.46301097 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.648641186 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223999796 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.855409098 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963314585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41683615 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324124329 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267123506 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.473359303 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169780855 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501025325 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.86053142 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332710351 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.952261522 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421710693 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.335367191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.94947769 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.533855047 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067495337 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.210181748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27210166 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.961095112 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620912524 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.974238329 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164258733 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306823897 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881828263 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951449894 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.000955291 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.951056296 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.961809058 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95848763 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.867723726 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419561843 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.796361108 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506977532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.952652707 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.956164675 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.262402631 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.541382777 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065173054 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968281298 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953973857 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.662894097 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.237561884 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194197887 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.533012511 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.047665884 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.952644041 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951202371 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869802672 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132321876 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.140324082 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231005128 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.378719495 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.06551693 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954827393 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.160258706 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154811671 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.290410307 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072540923 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.165339641 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073593484 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.891461355 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.657481289 seconds)
  done (took 1695.561638922 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971306993 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.955354359 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.95259754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.955489925 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952992106 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955646633 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.989994899 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.034302619 seconds)
  done (took 57.644291126 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947101998 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.052620832 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951394074 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.94662906 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.962527618 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.94942328 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.123763108 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.960051622 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.953832636 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.954001219 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.94995402 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.947823048 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.251949892 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.969042045 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.948635108 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.945688252 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.949287782 seconds)
  done (took 75.642869471 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.949470878 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.116042158 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.988114641 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.947592442 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.65394776 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.956546316 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.849440494 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.967699182 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.954446497 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.997584741 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.245825258 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.000781559 seconds)
  done (took 90.498249059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.960264887 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.952322361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.951170541 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.951450599 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.952160586 seconds)
  done (took 11.648231456 seconds)
done (took 2202.644064849 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.186984757 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.008396487 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.049642722 seconds)
  done (took 5.92885328 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.097541218 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.141644115 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.254419823 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.27417471 seconds)
  done (took 10.647506965 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.258185802 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.324527286 seconds)
  done (took 6.452335402 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.270271823 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.983176342 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.36327176 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.950838627 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.950013607 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.952074605 seconds)
  done (took 22.729135171 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.950405688 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.949418799 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.950530334 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.948865785 seconds)
  done (took 9.672114881 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.950481476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.658041687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.951132769 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.960851342 seconds)
  done (took 21.391455707 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.097973002 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.067762413 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094180761 seconds)
  done (took 8.132883716 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.092309064 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.800674024 seconds)
  done (took 6.765391751 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.099779392 seconds)
  done (took 3.971291331 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981662703 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.221022716 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.439331962 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.473831548 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.528784149 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.777779676 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.259610194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.174001745 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.393975487 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.404140175 seconds)
  done (took 25.528365703 seconds)
done (took 136.893944966 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.287306905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.980213519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.158101543 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.298620258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.181391639 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.158124558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.165402738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.288459737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.976165966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.966669131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.302425097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.180281115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.116084443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971105981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.125925798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970349368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.175176721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.303057385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.995572461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.226142013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.179332857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.948754235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.14384758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.962093417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.181012505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.105712183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.49260935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971341872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.144437587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.503610761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.135920481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.376211539 seconds)
  done (took 170.845817536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95387638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954769113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.953217627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.95253687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.498097273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954768941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954418208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.952039464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.387564455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.376658383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953294118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.489480786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953529349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951848391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.95197425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952306563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.563107044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953775731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.953169905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.951669016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955962771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.329505773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.954425469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.33757054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.554934434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952755082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.952328215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9530082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.953625379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95232951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95430895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.952938931 seconds)
  done (took 212.294019278 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.851582099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954477894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.953493154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.955191983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.955756128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.952942019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.957215466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.953772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.717887393 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.707333321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.955488061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.95567644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.955722677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.955282152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957285783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.955021124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.95476521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889120623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.953937267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955702942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955129949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.53488587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.975740677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.540840325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.957083685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957057225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.956158638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956687961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.955831549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.956403732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95720633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955695868 seconds)
  done (took 222.985640501 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.197816553 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.957816372 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.957922821 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.892967155 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.958511707 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.958734868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.930693461 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.204920834 seconds)
  done (took 19.940390059 seconds)
done (took 627.949510925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.357478246 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.190552331 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.13509222 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.983626993 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.264065722 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025256258 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.979267162 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.042467493 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.805830137 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.053864894 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.624933955 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.003232188 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719278263 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.009697585 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.100713293 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.036871559 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.573901015 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.685140013 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.116294777 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.046646858 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.153789179 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.929407768 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.060277361 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.856485697 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.632016056 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973469909 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.034302316 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.586559599 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.99130646 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.13761287 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.649807117 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.274522203 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.992577762 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.978586444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.033456062 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.012361545 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.20751318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.990516125 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.107185682 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.715194522 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.0783117 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.713436633 seconds)
  done (took 106.741595639 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.97134772 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.964691432 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.965225357 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.966832961 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.974775097 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.96567668 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.965938315 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.964756986 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.965238151 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.965006498 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.966674159 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.975055502 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.966335975 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.975423687 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.966225344 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.964467951 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.967575348 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.974374011 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.966663302 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.966694219 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.964855337 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.967147296 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.961667126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.967212156 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.966263105 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.966044261 seconds)
  done (took 53.045943262 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.961772697 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.135223431 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.205771805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982917039 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.96129389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.965289111 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.979216128 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.967571738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.964537205 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.963932401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.064818202 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.968362319 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979504745 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.207111354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.978169153 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.96045025 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.962191379 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.963369085 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.140790393 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977199658 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.98246756 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.966169749 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.981035423 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.975194667 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.965552655 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.962006591 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.965420443 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.392414316 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.971387222 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.064992043 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.007821768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.987245729 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.336099023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.218004169 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.017798692 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.969112549 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.961512742 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.068959251 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.970232917 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.962954596 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.980049165 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.966598686 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.203947215 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.485543892 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.976970469 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.962368136 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.403196816 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.079500855 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.003935711 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973184859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.209860859 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.980292211 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.964410453 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.964514747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.999971116 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971662609 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.963631136 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.274227311 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.976017196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.980724687 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.968555403 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.964661526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149722535 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.972837948 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.134506778 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.971865124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.968847816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.964196286 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.206002032 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981983368 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.498435687 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.976910435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.963795497 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.067217395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.140396947 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.427836901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.976634707 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150285584 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354740587 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.988594484 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.972711555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.382301408 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.993202618 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.97246225 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.966951372 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.966798002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.964953169 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.00601077 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.981755027 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.408207348 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.497734321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.293526757 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.991975849 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.982632928 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.965081462 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.275699699 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.974534277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963480525 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.201450232 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.505831491 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.980469647 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.973032381 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.478644745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.982362563 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.98375639 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.973903287 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.212488114 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.981114369 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.007616082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.963963535 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.971239908 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.968006237 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.983058869 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.971281866 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.965070998 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.471797703 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.085591666 seconds)
  done (took 243.271047059 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.966223313 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.963256016 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.964323294 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.963483711 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.963925574 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965259732 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.962891168 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.963713573 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.96437849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.96380298 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.963390375 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.965584723 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.96605813 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.967755496 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.970173536 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.965715855 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.567388789 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.96457239 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.965419432 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.962093188 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.605740714 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.970274316 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.965041921 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.963266795 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.965404724 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.965192719 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.969885671 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.967064418 seconds)
  done (took 170.160554641 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.966366469 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078915682 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.98582516 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.994326882 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.974800159 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.966890383 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.064255382 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.983630101 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.973723265 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.967903576 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.966584675 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.026923117 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.976459767 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064506386 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.99615858 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.074269763 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.07051731 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.973200411 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.966436856 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.966069976 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.994788133 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.975323367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.026094183 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.092583412 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.987840866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.081419217 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.989809604 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.968428206 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.968410201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.080799654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.989148225 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030917419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.997888207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.987304704 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.088349883 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087590013 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076166807 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.073744354 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.975478148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.968825473 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.969413019 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.971491912 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.082652351 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.988572002 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.96884373 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087390242 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.991824292 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.970358717 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.972222012 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.971713036 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.983093586 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.988613212 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.035847704 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.097912145 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.007002587 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.9923514 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.069307773 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.105198627 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.97060872 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.069543281 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.977935493 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.083713093 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.993579878 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.971232193 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.971539173 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.973744012 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.000407158 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.077413495 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0765076 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.97773213 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.067924321 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.008406655 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.977252429 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.971270257 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.972807859 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.083420247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.087869955 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.004587886 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.007151227 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.999751008 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.980481899 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.971893397 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.973440051 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.988000601 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.977238205 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.083640761 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092889623 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.978116637 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.971656959 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.973059641 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.97182458 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.99710409 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.093225168 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.01055601 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.078366234 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.038714186 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045794122 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.988144653 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.985402316 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.979329466 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.035692726 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.988235265 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.984508802 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.285243889 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.030433173 seconds)
  done (took 213.451053882 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.346681381 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.017699632 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.029003557 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.2953495 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.332301594 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.1282436 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.016943753 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.019879749 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.044050707 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.206847431 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.102694341 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.038463007 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.005519114 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993547128 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.021438025 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.039818976 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.03154428 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358250617 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.241466436 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.235989327 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.010596457 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.324451185 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.367179706 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.616655172 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.069510125 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.426129558 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.605622966 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.154950185 seconds)
  done (took 64.981231166 seconds)
done (took 853.530706628 seconds)
SAVING RESULT...
DONE!
