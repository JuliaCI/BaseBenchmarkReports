cset: moving following pidspec: 29661
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351545309 seconds)
loading group "string"... done (took 0.550382809 seconds)
loading group "linalg"... done (took 7.044482398 seconds)
loading group "parallel"... done (took 0.158417037 seconds)
loading group "find"... done (took 1.112056111 seconds)
loading group "tuple"... done (took 1.750088534 seconds)
loading group "dates"... done (took 1.24891559 seconds)
loading group "micro"... done (took 0.222082229 seconds)
loading group "io"... done (took 0.91458218 seconds)
loading group "scalar"... done (took 36.176877215 seconds)
loading group "sparse"... done (took 11.072177826 seconds)
loading group "broadcast"... done (took 0.909520166 seconds)
loading group "union"... done (took 11.806532841 seconds)
loading group "simd"... done (took 4.134030417 seconds)
loading group "random"... done (took 8.51426809 seconds)
loading group "problem"... done (took 1.860070401 seconds)
loading group "array"... done (took 19.801369627 seconds)
loading group "misc"... done (took 1.659891588 seconds)
loading group "sort"... done (took 3.08089449 seconds)
loading group "collection"... done (took 16.6200165 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484952471 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122727549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114126411 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117992746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133739269 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114208341 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123615585 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083700093 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.799882122 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147166103 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118606419 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413617118 seconds)
done (took 5.097243078 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173261877 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082185359 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081582176 seconds)
  done (took 1.297172489 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065432219 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121987459 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066630913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066437786 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067022998 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065982631 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065937779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066348612 seconds)
  done (took 1.654921101 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07325265 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068766389 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068345544 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068331795 seconds)
  done (took 1.413845929 seconds)
done (took 5.748420785 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763864641 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202387361 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182646524 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39993388 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127877349 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153560703 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637723124 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341266534 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183043363 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080839108 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104145733 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317989112 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107227393 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636205911 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073685961 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089445905 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137827052 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413381256 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066829756 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081824543 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089101302 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127963914 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084639178 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074089774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143671477 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067448311 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129439782 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080165548 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065923069 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208615037 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171914783 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655098539 seconds)
  done (took 10.17122932 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095320977 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097189253 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068816584 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136244389 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095426501 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069535379 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070981636 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067151429 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086535472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127569686 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088002697 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100991333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065833636 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068687499 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083889659 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203552594 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079605967 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081079717 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070024334 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075289363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115754397 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077445001 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077488882 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077271903 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127850347 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179495855 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096045092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096841763 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0665199 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079877449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11465189 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125429275 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065065704 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065863049 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123635349 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094450339 seconds)
  done (took 4.584107182 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.92940817 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139530584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091021449 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13070331 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064573724 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106778558 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065396103 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080039833 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201682217 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295693213 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084380195 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.568413264 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110770813 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100620323 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067714485 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068465571 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066683169 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347852926 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10572214 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101963921 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080946827 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069256849 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068582431 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355051391 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069583396 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063646529 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067519467 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057634436 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122490869 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067448951 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92582951 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125153741 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066865758 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100451919 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168715741 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089428431 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087198915 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140657155 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067036131 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063122278 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148379713 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06913511 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06726262 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081505884 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062583863 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101862078 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109570336 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063980038 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064694125 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.157285128 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062832844 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075770593 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.973478526 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15244564 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074035905 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062182771 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.237938441 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083722815 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066809611 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062677914 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18591267 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125450483 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065138877 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.063827955 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065034465 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066362452 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.344492811 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062688187 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.963850985 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.064534684 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073230823 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065954966 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065954783 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069071554 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068882273 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08080811 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06244398 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071221785 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062780484 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062850298 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.062791036 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.080745495 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.343402952 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.062826869 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064748755 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061438384 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082488935 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093465806 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.062899947 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062352913 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096234083 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064032445 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.280547015 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107807887 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068093737 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085447669 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070316634 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114030208 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070385194 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.096864517 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068566986 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09694156 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070063265 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09973946 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08072712 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068128404 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401787854 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06537009 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065119449 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064519034 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065707932 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06797492 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066148093 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068476859 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079216852 seconds)
  done (took 20.89233124 seconds)
done (took 37.709667464 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272687652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07555189 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07543189 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075188057 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075017928 seconds)
  done (took 1.827734546 seconds)
done (took 3.075561618 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120439788 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099112066 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064361826 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095859337 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064125283 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100395928 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099066792 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081070793 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099716556 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064472877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096248116 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06447643 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064381289 seconds)
  done (took 2.366610151 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083486117 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083655884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070141104 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082691989 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06432459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082458897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080562947 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088700293 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080758314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072337544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063724102 seconds)
  done (took 2.080533718 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081604455 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083714325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069745272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08153258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063414396 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081543996 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081553922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085907784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081314402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073456496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064313328 seconds)
  done (took 2.074476152 seconds)
done (took 7.744157649 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077128585 seconds)
  done (took 1.295006646 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594757733 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.280339245 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08193049 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11184271 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185586518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11952662 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279321343 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087049812 seconds)
  done (took 9.136752552 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088575078 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082760815 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07189065 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070022654 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071386946 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071096893 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069548769 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068698105 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068640619 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071306341 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071675967 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068320854 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072405151 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069810158 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069560719 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072114797 seconds)
  done (took 2.4426739 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092366922 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09065628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074161248 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074888814 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07235338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072563931 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074505212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073368739 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071192468 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072102366 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074941766 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073587963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071643022 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065009538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074156497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076214988 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071224517 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074233898 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075124151 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075151891 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075252051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064752568 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07173692 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074361784 seconds)
  done (took 3.109669584 seconds)
done (took 17.210069642 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11228646 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07139043 seconds)
  done (took 1.408784287 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080826071 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08292333 seconds)
  done (took 1.392696813 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082477244 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06559423 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089855516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078175789 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066423551 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066162408 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087810804 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066504799 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066321055 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066403843 seconds)
  done (took 1.965330433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068644787 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07888968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069935198 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080498456 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073972639 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064369298 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073166851 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068050392 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077604105 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063179059 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071502884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082451656 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071026643 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084427778 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07275649 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068641786 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070786459 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067304584 seconds)
  done (took 2.540460359 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066688736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067664911 seconds)
  done (took 1.369944601 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066662078 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063914617 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066626353 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067136633 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064343114 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062981438 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063670039 seconds)
  done (took 1.687846178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386286383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112006352 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299489322 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071494313 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082600254 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253420337 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066014966 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070902183 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071060018 seconds)
  done (took 2.689199957 seconds)
done (took 14.293065051 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079572808 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085312577 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094561114 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367046454 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092031451 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066370229 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115025241 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190259656 seconds)
done (took 2.336710337 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211485136 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617302629 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384384849 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197809359 seconds)
  done (took 2.439699881 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328424585 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087232338 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059767724 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067772197 seconds)
  done (took 1.792513427 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066638932 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069606995 seconds)
  done (took 1.379808729 seconds)
done (took 7.067445246 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067279923 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066697488 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063815755 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067350344 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06450891 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063705373 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066545272 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066306303 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.066081497 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083191352 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068655919 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066805991 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066030475 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064163476 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064381511 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064529868 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066744629 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063556463 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063928642 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067225092 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066299307 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066220926 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064034842 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063968116 seconds)
  done (took 2.870380969 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083695034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066812061 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072209277 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071851299 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070502968 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071471438 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071651324 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066670675 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072018824 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068505244 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070063731 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070420504 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068316535 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070294909 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068414862 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070341124 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071360764 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066834748 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068950317 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070654727 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071640695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066625657 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070541861 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071388379 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070107326 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069948547 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068541657 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066880892 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071258617 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070130587 seconds)
  done (took 3.361012514 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069775928 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064061439 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064638512 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071859019 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063757183 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065340967 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06334846 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064263106 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064783185 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063752998 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065422294 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064005086 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063831425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064974646 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064575775 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067364865 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07942667 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064289956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063452279 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064199914 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067003872 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063890113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063866724 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063957669 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063879983 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063731855 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064075908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06363502 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064786625 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064087959 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067249837 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067288177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063732195 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070245495 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06761204 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063942556 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067568946 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063607769 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064575177 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063555225 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063536873 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063526088 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.179163303 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070173073 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063853597 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0655472 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064025336 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065372895 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064387233 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066297841 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063231288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06375065 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065887121 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064889916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067921845 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063117306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064165416 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063050564 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064278233 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063273713 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063042945 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063179596 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06623921 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064324463 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078273872 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070462813 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063968844 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065078836 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064844802 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066024682 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065471049 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0768983 seconds)
  done (took 6.090991802 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091634679 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087067895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06598972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065416958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062389374 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064705008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06792144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064293221 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065657482 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069997352 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064619932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06561081 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065334086 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077245235 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0644106 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065635519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07025225 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062229434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064437423 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067686119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064527741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06758487 seconds)
  done (took 2.773456106 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155825835 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070833992 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106052953 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073457482 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068124719 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073080754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070368572 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070079917 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070144951 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068633462 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068369184 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070179581 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068640533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068141551 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068398269 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068759884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070372511 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068281158 seconds)
  done (took 2.641034855 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077445152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066329611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086912434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066267336 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066179642 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068384738 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070834757 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074750231 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068364691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065945139 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074857943 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068236559 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068546997 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06617301 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068815935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066246867 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068210733 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065985279 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074468003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070880189 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070815245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074120918 seconds)
  done (took 2.813458567 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080257209 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067949269 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083153543 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06888509 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062705236 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064365381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070701087 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066290111 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070308416 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067745913 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066425644 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064432996 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069558163 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066182156 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069554459 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066210506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067761132 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066055591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067777016 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061847503 seconds)
  done (took 2.634604291 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087132941 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068572558 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068110748 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076302306 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067938165 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067825834 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075266157 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067589727 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067434755 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087593477 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067616342 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067951699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075033417 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072413423 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067664705 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075275552 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07545944 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075231058 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067724277 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067891811 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088197364 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067702945 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075201652 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067400433 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067733698 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067328284 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067591578 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072624197 seconds)
  done (took 3.286756992 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066968512 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067465564 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064051134 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064532778 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063984043 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063980598 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063634081 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063855849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066968852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063670849 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066376536 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066150981 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066122999 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066227287 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066664916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066393424 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06650242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064028582 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06371615 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063914874 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066418476 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066560209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065925504 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064098626 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063764601 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065938228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063841344 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063677947 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066201367 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06381171 seconds)
  done (took 3.225887234 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076036444 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073645919 seconds)
  done (took 1.420899894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063554389 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080166969 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063315615 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070261711 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070588662 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066808844 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073960773 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070284355 seconds)
  done (took 1.826272367 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081834352 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07803019 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068851835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080685162 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076867887 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083798878 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133908698 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067888186 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073625966 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06488166 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080179267 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066254736 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072946427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067146812 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0722964 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072732124 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064324397 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072499028 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068825223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065267442 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067509934 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075390484 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06895009 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061790068 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067657303 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088396588 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07704007 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068414569 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068996885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074215171 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071928868 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060848752 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066579872 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066800018 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064110116 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0757814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081902548 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06921969 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074740128 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067407852 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076816025 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061874175 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07078624 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073339012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076189617 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066750897 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066934713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061111289 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063941564 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068093145 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061360841 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066162372 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060671433 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075248216 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069563202 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076772541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065025046 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067538629 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069115529 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069805696 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072832579 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068607826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069161186 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065905122 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073112805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070928852 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074993845 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061283703 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060313974 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064434861 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075944108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088675366 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072401636 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066961674 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066587749 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063816058 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069212397 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067109303 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07189612 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072544876 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066382907 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071646777 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072995733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066582595 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06880682 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073999058 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064616691 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069502792 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064214395 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082431987 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064985766 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064059392 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063778151 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07671445 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069304121 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066009567 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063927571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072849895 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060229812 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066895268 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067086308 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066687052 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076944309 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070981435 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071325661 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074714803 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072989533 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066196427 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069358894 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06280191 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067110443 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064960287 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072708455 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059574284 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068074117 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065797735 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065456232 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198161803 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065002763 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067363409 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075033329 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073143044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06574044 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063831778 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070008098 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067059989 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069796197 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074767118 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065422529 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062045704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062375029 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070245472 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066649015 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070804275 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071964191 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07049862 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06114796 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065691076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07150881 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075568454 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067656646 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068029539 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073053441 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068333782 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066430018 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073430585 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069008157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066636968 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072692672 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067330553 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061988303 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069727146 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069812152 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065453193 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070463898 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07045484 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068786573 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067964797 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065352458 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074748022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067414657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065724218 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067507132 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065164951 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077195487 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068791636 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061796155 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063510796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076091397 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064205105 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065881627 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065527185 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069178369 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068074732 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06494344 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065606933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068774006 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076856057 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070071067 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067293631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071491252 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078166004 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065480349 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069121501 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065949637 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06714668 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066982152 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074773672 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072124764 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071027457 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068439579 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062868948 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071938364 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073790394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065674931 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064246465 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065553405 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070374169 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072006167 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071131089 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066922436 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064515327 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067178051 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069343939 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069329823 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065890994 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06544987 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072962333 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064759721 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07348662 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067741523 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07682834 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069892159 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061572422 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06949765 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064451133 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072620257 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061706188 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064612068 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066111883 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067500546 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0654266 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069291948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060678853 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073521057 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073974112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066902622 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065572999 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066086606 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073363697 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067710709 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069947593 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069325232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071768405 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076295277 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065049121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068792468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075643561 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065127983 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187818226 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072610153 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06653569 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066494109 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06587392 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06533084 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069998143 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076277284 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073625471 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060801523 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069619062 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065838077 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066351412 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062214753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072289715 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070299455 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067682727 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074582833 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068153618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067832023 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070848374 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066662678 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067852218 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068328225 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069596683 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067913976 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069300481 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066477299 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069795737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066287001 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064795689 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069488668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067445901 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067369074 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07274514 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066097696 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066943158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0692153 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067253453 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068029463 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067003205 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066299667 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069564458 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067711799 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067364774 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06948898 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062210897 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074057227 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066562352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074019642 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067908476 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063111971 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0740428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069775433 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072332771 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067981359 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067464056 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067788707 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066291882 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070119078 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073638723 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064658667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078064466 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074468203 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067474582 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069597714 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067165238 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06779873 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06517103 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067125783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067232703 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066898891 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066322123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070947102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068758084 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066679466 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067625086 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066834919 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066387357 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067199353 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060755031 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065458767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065631639 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066545928 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075802198 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066983845 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065752196 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064968287 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067024057 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065253145 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062962241 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074272687 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075701173 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067460086 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074114007 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065604374 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068488277 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077307756 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060584057 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064978964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063866422 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064088372 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073588847 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066573354 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075496456 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066390399 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065457226 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063814176 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066593023 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065055927 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0606197 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063529448 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069367299 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06527376 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065218901 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06607451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068554741 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066443327 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075067079 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064738997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066565279 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065291039 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062201969 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064247181 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064303742 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067752182 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065881127 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063289558 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06277124 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064887296 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066021634 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066999758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065007502 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06696671 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074071297 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064643881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067868219 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068285604 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059903115 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068001396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064620461 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064698463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06450944 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06894786 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068516451 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065795965 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073567588 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064500779 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066090418 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064992991 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062671258 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064291465 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06438434 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064968367 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064255456 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065578698 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072361336 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062725195 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067496204 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064735991 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065384899 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071276838 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065580972 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068133745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071014822 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065738028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067210875 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072788072 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068651163 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06801934 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065696109 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066706678 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070293976 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063751142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071238434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065226793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065399614 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066501317 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062880379 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064304672 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064217825 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063711121 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070823986 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065059783 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06421539 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064342288 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062698079 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065744394 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067882536 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072216663 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06712563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06785852 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059977554 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061995785 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066074566 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06287592 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066921362 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068078326 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070408977 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067603441 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065417365 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06415663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074054148 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070756754 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068835751 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063530664 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068333078 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065503907 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067186123 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065808725 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065273708 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065577357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.067387947 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065556962 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063440313 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07005804 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067283856 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064851114 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065689448 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065674114 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064470954 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059334153 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064415949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066151651 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068558259 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066219137 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063874336 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073699844 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062118513 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064405485 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066593994 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063055826 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.068458724 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059812119 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065990754 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064670654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064879452 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05957635 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063145527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062031722 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066257146 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063492365 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060094972 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07413885 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071806219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066361526 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062967095 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063673542 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060608802 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059878458 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.304158967 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069205415 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070397401 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078619057 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068333236 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067096769 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064159088 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068991439 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071567061 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071689466 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065746546 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063844961 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066974831 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07131872 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073310992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066256101 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067353103 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071186772 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070089798 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065446397 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070813222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065228334 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071191927 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080372782 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067633075 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068264887 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07401014 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074525871 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068078435 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062548418 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068230706 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069837728 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067791074 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068288445 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068403509 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082378946 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070792058 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066302497 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06648928 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070367901 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066832851 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07514611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067649631 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06722318 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0717358 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069865318 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07582647 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070071864 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074991587 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070611663 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070020421 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066403539 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067641602 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064914075 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065678967 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068223152 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067777976 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071456382 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074709926 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066529137 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077508395 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076375118 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068634991 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063617212 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066263934 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067323765 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062285647 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068262158 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065869286 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064623776 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0655583 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065910451 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068195686 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071768156 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067692714 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068019017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06631896 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061250453 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068984111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069446115 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067779584 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064316473 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067000045 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067440594 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071678583 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069412822 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064906524 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068431094 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069241017 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06792761 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0621091 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073604098 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065963289 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069108471 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066417928 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066984731 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067336896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070066363 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071606996 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067786347 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069138481 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070479949 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069088287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064039797 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064278167 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072126115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065225395 seconds)
  done (took 42.476467081 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100512304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063590046 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062357655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061865034 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074292798 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062715281 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061883796 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06289584 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062863143 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065368842 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062099221 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06194282 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07078232 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077551584 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073662765 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066963875 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061819921 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062964764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061946314 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062968603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070800405 seconds)
  done (took 2.809147508 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074013763 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069450358 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073105246 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07613954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066904038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07052775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072543006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07069339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075711663 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066735173 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075902564 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070677346 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06695409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066971094 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067213634 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070489275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075496544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067219753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079085477 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072818864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071097732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072624274 seconds)
  done (took 2.941249997 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066981978 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066042286 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067980934 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061605832 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065851855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06100754 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06950679 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063978152 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069664558 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065034971 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064980029 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065079998 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067491004 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061383089 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06635528 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063599722 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108314657 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069134068 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066003306 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066970702 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061415549 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067967271 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061647964 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062045073 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06515654 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069039821 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066561778 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06406146 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065614816 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064913448 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065835838 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063901555 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068044614 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066477196 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065080658 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06474661 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065317986 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06558567 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061254375 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064091875 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066753346 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06169655 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066177177 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067162815 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064225792 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06352116 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067605679 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065426188 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061077089 seconds)
  done (took 4.610679673 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079926089 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108790315 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067307797 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088031348 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080070247 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075175995 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069491676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089328908 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063703059 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064342272 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081490593 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07967029 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066005067 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070630669 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069642677 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065577744 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067184558 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064701751 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069417236 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065493867 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070018944 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071932202 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080072334 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078374646 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069568822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064820544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065139576 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070341494 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078436371 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070067212 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070155486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070779141 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080612637 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067373253 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064951654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067780405 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081649308 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065886991 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067952559 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063462708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067646642 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069487715 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071727906 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081741645 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065824158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070615088 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065313413 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063031408 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078273705 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067708112 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072944525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079741953 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069740876 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065764967 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06993302 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080484984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065526876 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064225438 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068898136 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077687772 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06314965 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069496026 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079443857 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067462029 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072497388 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079493163 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070574975 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069200634 seconds)
  done (took 6.402222257 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075279106 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072502275 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080287388 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080849311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072123988 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072215138 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071606202 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072173026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071970357 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077007721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072299975 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092740228 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067485374 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075258808 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071972026 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072118281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071959507 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072146853 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072017162 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072123477 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072052847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079760473 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071956142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079480511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09810554 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06768938 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072081475 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072505868 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079964494 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072479874 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079389553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07276434 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07219209 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080110681 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079316808 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072192715 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065271529 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071950218 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071977847 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071790812 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067237942 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079724033 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071582944 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067266153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071806984 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072010979 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079513614 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078902514 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074303076 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07620592 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071809088 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079504164 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071678373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071850687 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07939576 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104405328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07934946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079410892 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071724342 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079272166 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079090458 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085497444 seconds)
  done (took 6.076052739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083525362 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074800304 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075777981 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061330165 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063783698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069326528 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063716721 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064093112 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07376212 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073929223 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076278674 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06958793 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072615529 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076532011 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069273963 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072140279 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069444847 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069625198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074125498 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069333424 seconds)
  done (took 2.82101672 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073643831 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082543517 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067118645 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07164113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069176506 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071466117 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068025275 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068757178 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06701946 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068855524 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076143802 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075669298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066379181 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071881216 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075588869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071465842 seconds)
  done (took 2.534793297 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075595441 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071950407 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079662025 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066534132 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063952882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062610601 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0658998 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061148156 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061996136 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077215473 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065299642 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068689082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065673305 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064216787 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06330335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068826087 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062497473 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063177841 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065745076 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077866704 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076572956 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064292701 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066300074 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065436449 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065673536 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0705446 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06495024 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063310401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062785334 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065685662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066015731 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069158569 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062726963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063589462 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064250431 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063150325 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065157025 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066032223 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067950446 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065206131 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063833214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065679757 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065332135 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066524806 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061929956 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066210426 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061724605 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067695711 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063275831 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065713147 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065382851 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067743383 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066038578 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071959855 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06856016 seconds)
  done (took 5.048690878 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078521793 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069199981 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061254426 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063848037 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068372807 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067622319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068983188 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067126148 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067226445 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063862822 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067383433 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068296663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067641453 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068868269 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06751729 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069291413 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061659448 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067867204 seconds)
  done (took 2.617407977 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071014903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065925182 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07259168 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065231271 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06512235 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068273231 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061649621 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064436765 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064657488 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065680384 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065870074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068018945 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064058126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067894397 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065650496 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065625529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068032237 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064458823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065830388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06212639 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068020528 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064297069 seconds)
  done (took 2.850081496 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072425468 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092169871 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137807051 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083066737 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080906109 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078282219 seconds)
  done (took 1.942219822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089937554 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078623877 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066606431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087875381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073384706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066815028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066823076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067301474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075551428 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07574299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067172518 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075629319 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075500991 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075316147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073074256 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072712445 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067262016 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067219195 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066192899 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083856098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067312812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075092102 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067487276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066747766 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067207039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074885381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075717295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075614134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066703911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075681252 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072914488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067289637 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07569744 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075910382 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069495682 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075854128 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067984152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08445826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073068523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075371866 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068849513 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073218063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075696227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071982771 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07548107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067493438 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072456867 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067334459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06739734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085538136 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073108453 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074835775 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073124978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075742912 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075758342 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085375326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075872405 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07499404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072925714 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078588217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074685838 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072789562 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075339526 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076165135 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072965148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075177847 seconds)
  done (took 6.25781056 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082627998 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086184942 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067817764 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075904506 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07516961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067196799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067409022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067596576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067482788 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067098188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106669925 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067649792 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075361559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075433688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067889501 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06705552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067151047 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07515964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066981431 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086437563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066988531 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074928563 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075252478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074897871 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075901835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073297041 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067332415 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06735672 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067478082 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067391857 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072097388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067933464 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075361911 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067128572 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075325051 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067694338 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067068159 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072350069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067365126 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073404603 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075120399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083693859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067245453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067407368 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076033914 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067700599 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068084483 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067265269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067562314 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067320952 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570476 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075569835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076016105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074945748 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067711749 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067601218 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067555912 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067081418 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06729237 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072736155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075479494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067659319 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085879353 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067721208 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067363079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075284901 seconds)
  done (took 6.172816201 seconds)
done (took 129.746365425 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184698517 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169321283 seconds)
  done (took 1.750549214 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068543574 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097418321 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07621576 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128285642 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066886684 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100407377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09924605 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077838632 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066153475 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066386232 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066010532 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068635969 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131658917 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06675461 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065775508 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068523416 seconds)
  done (took 2.724015345 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096186523 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157554634 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099486874 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064890033 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096676636 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073121024 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064642601 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074905034 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070707375 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06512759 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072636411 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070458559 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064848476 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070861912 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070868305 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073081589 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064822837 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072728513 seconds)
  done (took 2.835377902 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101369889 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091126593 seconds)
  done (took 1.604505963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159482557 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106578837 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151284712 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346439593 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166403648 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231912131 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129404931 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130256114 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120927924 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124554335 seconds)
  done (took 3.076089305 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09783696 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15246258 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254739473 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115627944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072440284 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094598361 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115791012 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077466881 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080603403 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080401654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080103204 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075910742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098494974 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07329254 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07311494 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076067386 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102083538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072123416 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074286251 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076832829 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099385458 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065899216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073519711 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071753288 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077200305 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077082346 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0652534 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065487824 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07639403 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073777744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07712423 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09353601 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077609975 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106664958 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070547286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108146002 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076371672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073776157 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074119081 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073406424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078380192 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078536794 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072009359 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075896489 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065149574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075930935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065089594 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065703748 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07797662 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066766911 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077799777 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076848064 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106755382 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067925127 seconds)
  done (took 6.009188461 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101442835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105579066 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070985647 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108564774 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09736485 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071192831 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100697239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091542718 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102503443 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092543187 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088724041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070739917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08199898 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083491564 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109394541 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101842589 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095254765 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070758815 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10189361 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102567675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068473296 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095074934 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091291603 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102323795 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067687124 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070194663 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068077249 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070504757 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07701373 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07836932 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070074263 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102377976 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084024194 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078130922 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067022131 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067449366 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068405382 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078869491 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097374202 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078779898 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077756137 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067357429 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067682914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069252341 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090855334 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067785021 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078682585 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079912912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078676177 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069625444 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070350044 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068122686 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069776059 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079884399 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077671053 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080441862 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079692534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068177682 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068217455 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071451045 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080490996 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079008882 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078719173 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092897278 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078904454 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067978516 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080000749 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084613532 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06854723 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069797533 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068652787 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069543046 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069935182 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078130495 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07837927 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069814656 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069871952 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06819465 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080046776 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078303164 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068081251 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077494591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067419694 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069097084 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070192765 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070415136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078130035 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080323232 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076470505 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068344293 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070293177 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069305327 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067579629 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077488655 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080544129 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079571128 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079091769 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069720297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078732871 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078479777 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070012109 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.206546796 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069890135 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071109927 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070329525 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079399105 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078434461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079760694 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070348555 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068613917 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079431716 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081501331 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068789312 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078631007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081772951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08056274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068341122 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08067309 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068789068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080246186 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071085285 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079667808 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068766735 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079205839 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068860537 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068093596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069608614 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080344569 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071023872 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068880921 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070029032 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070448533 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079196147 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083229862 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070743635 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082033699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078370809 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071286372 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079267161 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069209749 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079702496 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070162543 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070571277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068222698 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082158454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06917119 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06943131 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070140885 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081258241 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069065524 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080852925 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077797995 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068659139 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081646574 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080402301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077691336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079829942 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070940279 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06923884 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067727185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06992963 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07843336 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079352572 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070808406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068933493 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078825092 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079419813 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06775643 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078401003 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078336809 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078451988 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06899563 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069793806 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080499414 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081160229 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078120397 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07840916 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078389935 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068132194 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077227497 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078025966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068183927 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084139598 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068773702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082047294 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079135383 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076503466 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079366194 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080863922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080875172 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079813647 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083037035 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067986072 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067665145 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079650092 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067902929 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070223664 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078529577 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070154204 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070513271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083799364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068866019 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079893534 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067813057 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078576609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067457831 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070257958 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.213307897 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068845885 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070463782 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079873815 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069833374 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077878024 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082101013 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07930466 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069852374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070864604 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080737727 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078942428 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068792591 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069556473 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070823501 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078169734 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078350332 seconds)
  done (took 18.881487169 seconds)
done (took 38.300142215 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209633422 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150750239 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180012424 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117917124 seconds)
  done (took 2.16351716 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120939758 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102907526 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094996917 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065051837 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101439604 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064869563 seconds)
  done (took 1.99478247 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313629256 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211806411 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182882941 seconds)
  done (took 2.149464908 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199189446 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187134656 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393764639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253844581 seconds)
  done (took 2.585419791 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143058302 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08890738 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066751594 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083149352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13447749 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16097524 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101484615 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126287256 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077846957 seconds)
  done (took 2.479164641 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146694175 seconds)
done (took 12.960097405 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100304633 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165955818 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071224089 seconds)
    (4/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088748943 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.185159616 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081551187 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079904001 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077337023 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153135435 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073143042 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.163293001 seconds)
    (12/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.145678683 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120793823 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065309787 seconds)
    (15/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.165799597 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109434612 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09117224 seconds)
    (18/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198616789 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088323145 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109048495 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075700725 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196127516 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072036012 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086402497 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.147420437 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075782336 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109496589 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087186636 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.198543324 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089310321 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069465784 seconds)
    (32/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.171689795 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115751638 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071519938 seconds)
    (35/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068607792 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099024158 seconds)
    (37/309) benchmarking ("sort", Float64, false)...
    done (took 0.124460923 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.178793694 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121578008 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051012242 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094777828 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112987577 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072234753 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154311091 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158039755 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072378043 seconds)
    (47/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.155129101 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079535636 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.164837986 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188199952 seconds)
    (51/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070986306 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066929917 seconds)
    (53/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10874275 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203893368 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106068659 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157865558 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08806871 seconds)
    (58/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092592383 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.182994255 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.205974075 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052831033 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110753099 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.15616865 seconds)
    (64/309) benchmarking ("sort", Int8, false)...
    done (took 0.140382182 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070445071 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072467268 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142960896 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071127953 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075184114 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052515804 seconds)
    (71/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052406379 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154187209 seconds)
    (73/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105841626 seconds)
    (74/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108578036 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074410197 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073013317 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13541681 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088545294 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.065620458 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077377426 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088290128 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178445455 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074343346 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.32613767 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156078732 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149086359 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176526277 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073865946 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.165881501 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052122818 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051039928 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183997731 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097980197 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100617188 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09814058 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073119483 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130747201 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051525313 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073164828 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071964738 seconds)
    (101/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099063931 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083584257 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116462545 seconds)
    (104/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062363447 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073018941 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067259263 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067104661 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092515629 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.343593042 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142371001 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140142547 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064429871 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.164768087 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149471517 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096245203 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.142637259 seconds)
    (117/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.149890442 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073768394 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06555071 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091021555 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071277313 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091114321 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178589408 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070557337 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077285753 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075188401 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050848911 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072742639 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064803186 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078274927 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060787159 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066023808 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062226676 seconds)
    (134/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076182596 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071459003 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16743489 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067810694 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051170498 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067171044 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066568932 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065217799 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072033544 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070639287 seconds)
    (144/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051850546 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093264962 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0667953 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06303693 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07495342 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148366196 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195007833 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053605142 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072972691 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141672284 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06141974 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183726785 seconds)
    (156/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104762754 seconds)
    (157/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067462388 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085207132 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087774841 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065164064 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08829256 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131072187 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071825629 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075432723 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099258174 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169558036 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065926655 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087137843 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137756864 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071488983 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089177212 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149716115 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052455434 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054116402 seconds)
    (175/309) benchmarking ("sort", Float32, false)...
    done (took 0.126936522 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073847878 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117677097 seconds)
    (178/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074718263 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064408694 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051070952 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.14852452 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064714075 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07163237 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071625342 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147701668 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08869565 seconds)
    (187/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06269559 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.221383891 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067091309 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053609266 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151551898 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141041464 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073919579 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052399323 seconds)
    (195/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051471451 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06613807 seconds)
    (197/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066721204 seconds)
    (198/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07580425 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176941267 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07406248 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092399347 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065786623 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066355487 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052046404 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065156169 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150228348 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071971934 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064336835 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076023352 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066321951 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108126197 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125400182 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050991046 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052997884 seconds)
    (215/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066168493 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072483214 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05215605 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074939753 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079927365 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051934597 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055129276 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088916792 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051744256 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05424735 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051876493 seconds)
    (226/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185480496 seconds)
    (227/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062679797 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050850641 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052846165 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071288735 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094278706 seconds)
    (232/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05253235 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051730639 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064638323 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070705264 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067130279 seconds)
    (237/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061346099 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072004646 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052794682 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066679513 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135547257 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.1373598 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173364729 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064413111 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051292671 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071290185 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051376455 seconds)
    (248/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068917774 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051133297 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184396874 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072868787 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06852936 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051422305 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078975935 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071055426 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064658387 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064474913 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08769564 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052202516 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064942167 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052656212 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052240812 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072474797 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050987137 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071224092 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066558906 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051321047 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072902445 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066520317 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066649673 seconds)
    (271/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051845883 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052111552 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072878496 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063864024 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089467933 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069085114 seconds)
    (277/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078102927 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051347156 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065927882 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054003975 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064988653 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064880172 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051188767 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052542992 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064792422 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072313814 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071795006 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063699477 seconds)
    (289/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07778502 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051272543 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064016833 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072245191 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067337899 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065019202 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07101145 seconds)
    (296/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173899533 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051582589 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053814393 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07060959 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073044336 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052062331 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052641827 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088679295 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051564024 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051695559 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086079281 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064974429 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070314435 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052144816 seconds)
  done (took 30.529782468 seconds)
done (took 31.985603611 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085908989 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091725502 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074665875 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092682436 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07990737 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075962389 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072310873 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077968734 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079740427 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080861699 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078136104 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054909842 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073564442 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073735947 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074075133 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090612396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077634812 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072238116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072646825 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064259197 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072442797 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065257011 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066934313 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054379596 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076798336 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07081385 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071949755 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073406937 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065136746 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065176867 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068505752 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072959031 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065333903 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077556769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071948446 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07245253 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074537579 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075786322 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067238931 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065707271 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073293561 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065483353 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072099563 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07268265 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071338206 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070883477 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072386435 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077257924 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091137832 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067947685 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073653969 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075194529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075534303 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071405934 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069007733 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072413029 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070226849 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090410499 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072840687 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06784304 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073895601 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073571079 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070626405 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072322889 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072724678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074598857 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075069573 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070980775 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074178702 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070363694 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06496797 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072045771 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068560698 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065342561 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075194098 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075980546 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064373973 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070895622 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071731137 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07125124 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064514516 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06743619 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066461913 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070784338 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066983731 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054605813 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068268373 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070912132 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064509519 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072615372 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071349291 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07161286 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066461438 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07455263 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064278702 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070170695 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065001126 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064973029 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06636948 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068274163 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064705593 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066979633 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073390892 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066126736 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070914521 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079031954 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064956519 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071216943 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063926207 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064502149 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078825641 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073993203 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064786619 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067206867 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064123411 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071724009 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063790222 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064890814 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064757324 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064682667 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070062339 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064915354 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066844399 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071847503 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076685072 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064830897 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068212934 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06706921 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064955484 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070348003 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065433635 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065346246 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.198638217 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061618113 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067884067 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065519621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072811218 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068168214 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072584674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066198212 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07300961 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069370993 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070765288 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069969924 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064570576 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059037531 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067595284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067681418 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067107077 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065617676 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066685953 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065626665 seconds)
done (took 12.437652531 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067151946 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141645853 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098818248 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095074179 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085149851 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066285835 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075360412 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101491138 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067138028 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102065317 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086737805 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084676872 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11193751 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064417736 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065434668 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069038729 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067182271 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081153895 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100703456 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085556305 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115077488 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065221282 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093715566 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089546988 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086967539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09163297 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066544005 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06945467 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069049729 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099606414 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085765242 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069474974 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066239447 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100234526 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091563414 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082434124 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065932604 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081998721 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066326844 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065894092 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066682821 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097547598 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079356405 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07950655 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069766653 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069332113 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066611871 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083393615 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088164478 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078098012 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086269348 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101703039 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068568544 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065117239 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06427322 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084877465 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065081235 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068640781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.0658267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067726012 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065809219 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068675735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080505695 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081386708 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069085628 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079540245 seconds)
  done (took 6.816998563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08289747 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089140867 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082833989 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082876171 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065491867 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066370561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066044975 seconds)
  done (took 2.08328531 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067410079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087700834 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088102491 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088610559 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083600184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086901505 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075883569 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066285523 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08033267 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067510628 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086532306 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101279668 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066747279 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072441388 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09020285 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066123112 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089572464 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066174277 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068992227 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089232223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068125626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081775175 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069841057 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066527156 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080046992 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066121001 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112655049 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070359028 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067730221 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069492701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064075357 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106399 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079583149 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074706529 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065743755 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080357777 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080762699 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064407469 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082605529 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071288615 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079656924 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066818465 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067403218 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064451337 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07047996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076638936 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067248345 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066785121 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068636491 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085391335 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066968097 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079482818 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070285166 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068865666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06739096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069914656 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075534048 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066918814 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085224488 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067220539 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082429491 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081999895 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079314922 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08192944 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06823161 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079574471 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079443338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06843655 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067522948 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069241597 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082079914 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064179906 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067561691 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076361425 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068062691 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088579479 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088729375 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067636733 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075277368 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066856094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066465137 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067729708 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089257818 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068914434 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06607614 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070327589 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068977864 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064397891 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0657045 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06965552 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064830984 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06766229 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06905984 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069560064 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069037952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082129019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068563302 seconds)
  done (took 8.772822738 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06846679 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06780124 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068996927 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067292723 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066838123 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068021948 seconds)
  done (took 1.980668513 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093560678 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069573202 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079570229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071555879 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103767636 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085991607 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086676624 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078061994 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083272815 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07845745 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086190166 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087565715 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09246561 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072833257 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085898547 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071616016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08669518 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075597756 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077759443 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072784461 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086249564 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07231306 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072722135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081019307 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075486135 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071757959 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066850386 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078441667 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078110112 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078727588 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072501584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075021745 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07031595 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078063916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086607606 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070319258 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071552054 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076704827 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072083426 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075344062 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088055518 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072504042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074091968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07736106 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078072941 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070509722 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076663746 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075481137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085574997 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076824596 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076427375 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071478728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074955705 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076919872 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069969109 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077833625 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076614586 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086676477 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072298202 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069947252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068375555 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075223524 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077538982 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074732386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078107357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076843797 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06988722 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072284425 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072239023 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071522648 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077027269 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068581206 seconds)
  done (took 7.113204403 seconds)
done (took 28.302797016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54674317 seconds)
  done (took 2.084108766 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601303009 seconds)
  done (took 2.164499208 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.647740345 seconds)
  done (took 8.20534431 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391884075 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.479379481 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690979377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130494556 seconds)
  done (took 3.291549628 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.662547086 seconds)
  done (took 2.232714546 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209930749 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196417209 seconds)
  done (took 1.982529334 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376740129 seconds)
  done (took 1.938128394 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.117642636 seconds)
  done (took 2.680719319 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2624821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162854015 seconds)
  done (took 1.989888447 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459423671 seconds)
  done (took 2.022272275 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.888864293 seconds)
  done (took 6.453093988 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212511152 seconds)
  done (took 1.821185677 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239651061 seconds)
  done (took 1.807699159 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.671854168 seconds)
  done (took 3.238604776 seconds)
done (took 43.480529587 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079846724 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080148535 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080653557 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078291543 seconds)
  done (took 1.872832897 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077829389 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07240721 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075605325 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071783437 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076060751 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072112198 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073838299 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076485093 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071886957 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07244388 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072126824 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072187551 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074127454 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073650245 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070261497 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074119696 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075141468 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071486872 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074846009 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071939018 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070607717 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074676902 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074116165 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07113487 seconds)
  done (took 3.332115453 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07834774 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072279777 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074110879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071068166 seconds)
  done (took 1.876240482 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078310998 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091533747 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08860457 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076848228 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091220873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085265933 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068904745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068477197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073289288 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077002434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067377282 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095028881 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086709719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076255372 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078346462 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065587194 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067891722 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086594027 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076519992 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077088877 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069795825 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076606555 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067536863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087018134 seconds)
  done (took 3.453021408 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077743337 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10273564 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077363911 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086555687 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089378111 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064771607 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073803695 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088510531 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121743321 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064880191 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069349768 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064880453 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072144825 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064636379 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076168251 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103663568 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107135022 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06802734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09551375 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06477864 seconds)
  done (took 3.220291631 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074121592 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06899811 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065181303 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068451536 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076959361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071866031 seconds)
  done (took 2.014078063 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068965101 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067470969 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067157498 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066423184 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071335527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066391092 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065596914 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066288276 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066537156 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067209971 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065835807 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065505655 seconds)
  done (took 2.38817107 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421328844 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068163807 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068541845 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065375555 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070178504 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066061289 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079513334 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067315841 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089803305 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066256243 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066336706 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068040923 seconds)
  done (took 2.782382733 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205413964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076010433 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235761548 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136364877 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110698199 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114605174 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10324892 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112218922 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142377345 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10097386 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166786267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164419465 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106026048 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136107222 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088617087 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09704785 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154553305 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161363484 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103051492 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164443614 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143621171 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123927373 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145657758 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10073499 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105112429 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120807217 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070640444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079455024 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169333429 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130577504 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145638199 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110441135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093218264 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175800567 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170166386 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141737979 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133291789 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083212336 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101832606 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132173812 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198446419 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088262718 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163945743 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245368962 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081218569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132889584 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120239082 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119099694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106549251 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089401742 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145423899 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182124262 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137763803 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086798596 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112263629 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11399058 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115024531 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102678443 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180721927 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159525775 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127689744 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070505965 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097961915 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151964135 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131643612 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10791165 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124875206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092272663 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132532695 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153195648 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118150316 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143133533 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128346673 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087592783 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118385978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138568389 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127558997 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168744392 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123759065 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072507615 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123769434 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102759948 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080641164 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141402034 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074813936 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174874316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098037316 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105961617 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112178412 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107939169 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108443119 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160469244 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143115145 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243934652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065855698 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102778434 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119398377 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147233096 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087003136 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108077651 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116091553 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077797192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138392656 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07503263 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123765898 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074994468 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125127093 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130981339 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075277222 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120573016 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100521125 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100286652 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132817179 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157895051 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087836983 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081840725 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165818734 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121244025 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103784489 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142074989 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154747105 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098225211 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101238317 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148515484 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178402483 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088854705 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161997722 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10676533 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08324987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087296729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12310853 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111891705 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122030866 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081337234 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117817117 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167671267 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074367066 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094623677 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133358106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078916985 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080363606 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102946179 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099935005 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093883405 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099286479 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103137621 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136255535 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122377211 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103940859 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267114187 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098475789 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168886504 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088039232 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099261942 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102827506 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069519084 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136113304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156431915 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078602468 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163263181 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12357455 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104312836 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120006966 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082309371 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13882413 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079061918 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069948625 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142023448 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110225973 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109510795 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149715386 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103955744 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12749588 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119691504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133886639 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131778589 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128020118 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105269681 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087541087 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111466105 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125282499 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072546991 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091588895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079562714 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103203779 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094707329 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082604277 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142004933 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124017791 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099881639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110925687 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096209636 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146960113 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076137664 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128420712 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11881542 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093500445 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15133113 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150715765 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130280798 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098472775 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144507819 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070108652 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073511506 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088596488 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264062635 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083090099 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08377254 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116511057 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146647181 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128852314 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137062825 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109964473 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121072494 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154198923 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069053477 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114919753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147293108 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121482326 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103620016 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089251569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098069888 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141460643 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107564291 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181346126 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113610084 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125334706 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152330081 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09863723 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079392707 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107738693 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135029364 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104367533 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144451792 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099318002 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087136806 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109977552 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073692321 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099075955 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126313133 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118805125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134969771 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113800781 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132519268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076951421 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116549448 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120217697 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122123053 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064302076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120223437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160840182 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092957309 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11778458 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151901157 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078711992 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123641647 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318846538 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146945045 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083937279 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109222802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118227535 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127198922 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119675976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140086441 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107822165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13551594 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108443947 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084331359 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086531702 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096183815 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104648767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094402135 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106989492 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114151022 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094691714 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131264404 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101444474 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108537018 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116738493 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.0956871 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088198062 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095337034 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173830643 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119715162 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171467994 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098331732 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144004372 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162357551 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074092724 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078003902 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077610637 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138751852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083305477 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130045432 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09772156 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105202479 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123709062 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14119761 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094248519 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068128219 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107543541 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133762776 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111584656 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097840879 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106752709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163530902 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099655954 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078743898 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113161205 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103882045 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101463146 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171190866 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061359381 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238622977 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076770821 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081021733 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12787911 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152996498 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079890675 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10274737 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118394191 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110036789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126862139 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10146615 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099166551 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114762897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150142732 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12798355 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090380951 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111893763 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129081427 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155183067 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104970656 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095492756 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169441453 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151470084 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159314018 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088466557 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1301328 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113089147 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10725382 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138739484 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083108403 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162321367 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081566722 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135081369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103627013 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090060863 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129182505 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098158381 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087930621 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147295409 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117071086 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081885226 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077528638 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117387035 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119879483 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106487646 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075015878 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139086736 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072602595 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131782839 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167395239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080467492 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10332321 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095052653 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222088217 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107808245 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103112412 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089761803 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097399591 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173874389 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087450885 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149364936 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141375069 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112347309 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136843131 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09946347 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635813136 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077760588 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151243109 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115812716 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172288965 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097175184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117013169 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108254123 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123332636 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144815415 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1042953 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176862636 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131546766 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114999824 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079621713 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101340666 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102549889 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088337146 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104718252 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112768891 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115918839 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09284011 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114834581 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122446614 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08173507 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094444412 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155246054 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11686438 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144161472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140081834 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084506566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117464196 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139224134 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079469153 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121114284 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150773606 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105103145 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097109986 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079569993 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244783016 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170175191 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072627732 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163258039 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120944905 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108922673 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113182958 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114179999 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1309823 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107516599 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120925021 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091853663 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110097845 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111295113 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081694569 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076498953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103959213 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111343614 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096433338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098006334 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09751144 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150676195 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07072139 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094484473 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102418628 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1449709 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173492852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087679563 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081959928 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118105844 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112377919 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112807753 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119830184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079252412 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0816633 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081501786 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076911923 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107743687 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11204473 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10384868 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110481783 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163650199 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081802517 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224068731 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0944026 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104201358 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069243204 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077984985 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09522358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097171081 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108016014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10048467 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169528357 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094294488 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089960455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091879387 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07248378 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082025149 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126621171 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253711095 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11923389 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098181821 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062008995 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108735946 seconds)
  done (took 58.629871289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109472827 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081985134 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096542537 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148823458 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121381455 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211977413 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157149461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199400744 seconds)
  done (took 2.817148932 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069322047 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094099469 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098814873 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082281331 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066144296 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068650878 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224402604 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080301167 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065837203 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088685416 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078799643 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06882391 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422334276 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065386748 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068827454 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062410116 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067248201 seconds)
  done (took 3.455445718 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36560763 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359898031 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371091928 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072842487 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.804733301 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088444773 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.073281487 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096118673 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07149941 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280216502 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701177132 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094227747 seconds)
  done (took 14.072383346 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078083871 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070219768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085036209 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084341063 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073505788 seconds)
  done (took 2.147848926 seconds)
done (took 103.668141748 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081979447 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393161061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054217823 seconds)
  done (took 2.168535988 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085436039 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084647966 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08452581 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082725038 seconds)
  done (took 2.033778717 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075533788 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076174426 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084859546 seconds)
  done (took 1.92688721 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225626633 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139992194 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087007353 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08330276 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077805721 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078845731 seconds)
  done (took 1.933713421 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073051115 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074819508 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072826153 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076793239 seconds)
  done (took 1.984537024 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078164337 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052678791 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054874945 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056061834 seconds)
  done (took 1.930269133 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08745137 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078839413 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078024316 seconds)
  done (took 1.935411156 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109777066 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085362385 seconds)
  done (took 1.886063685 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082617503 seconds)
  done (took 1.773891207 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09985946 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113753476 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129654601 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109783424 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136765043 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109535304 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085828053 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086725016 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077372814 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087331846 seconds)
  done (took 2.726967634 seconds)
done (took 22.524066874 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080398076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36889093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361265491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090964332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668661304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357522729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983715711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093184347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11411976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067865193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084520669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64876484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97327725 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323551512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960874803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32556621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649727837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068382961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068216495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068242207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97035672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067883188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068035033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068525481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648797724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371723121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068343375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323964152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068007796 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069892607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35606564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068366728 seconds)
  done (took 16.18317766 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072591728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118145035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073713541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084630125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071231329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070022738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07170286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069897625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119820301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067950342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08514102 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067856344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072068882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068865598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087301886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068517764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068909084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068761559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068743588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068813741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086532526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067774755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068868691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068510339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068423362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080299815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068315117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068409533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068537251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070583547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071156028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069183121 seconds)
  done (took 4.113178691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11723607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124923763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074046802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103271429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113195862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070667698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144038194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092923093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127576428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068366711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084881775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068413809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101408884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069138963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088047473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06890639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069724535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069460404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068672917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068767155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087777451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068451449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068772038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069678556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068956477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081514503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06893841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06893216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06900115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070542289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07252912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06949677 seconds)
  done (took 4.366255182 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0756135 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075472661 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083688403 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084874919 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069996927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072699831 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073062483 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070187623 seconds)
  done (took 2.31601263 seconds)
done (took 28.675614198 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081142052 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06947512 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07278571 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081373551 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073190377 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079016744 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067444934 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074838359 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072355474 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073094684 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07504728 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067830004 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071373976 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06749889 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074207587 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067880451 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079621607 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071922334 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079606923 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079761693 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070203425 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073485144 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074270642 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079005922 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079722587 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079522846 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077731551 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073248418 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069495734 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071102836 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076978584 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084002413 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068693015 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079399965 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068120452 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068139563 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072328782 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068711623 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079504904 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0769178 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070027103 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076667469 seconds)
  done (took 4.804403002 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089742469 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091596998 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085445782 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061925017 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06779126 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065176267 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088451199 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060247395 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059985427 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087899559 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056403782 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059731565 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062627864 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054634163 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059502678 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057189576 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062077524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056387188 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059574913 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059791912 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05849772 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05464491 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060619737 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065905315 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056736527 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062644859 seconds)
  done (took 3.422977993 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076530306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084614849 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088358236 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127569026 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115281407 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077352709 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078070844 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093024144 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085569073 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067056451 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071283856 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093934033 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088403488 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073826868 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068084337 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085080636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082079691 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069051624 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073597886 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091222904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084519709 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084007651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093332505 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081191586 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067304715 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070234848 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071963196 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081427184 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072861367 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076817781 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072019207 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071258732 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069543622 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079278306 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071402563 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0691597 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090960086 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077572926 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077831683 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068970545 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071144405 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06872296 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089643572 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123040578 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067232903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074140556 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075472866 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076928339 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067557749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086079685 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078611785 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067246405 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070768781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066760018 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06754791 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08042467 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06998073 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070147153 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076477977 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070567833 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085845957 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071561958 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083297907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067371732 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075252823 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067254443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068592927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066831233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093323268 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06948749 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108697993 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069178902 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068683996 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076468826 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075445426 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074255563 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068235779 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082778843 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07811825 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071323444 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076192937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071158951 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071024776 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088355804 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070561281 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069652929 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069008624 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074238296 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070937496 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069457114 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080625399 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068194294 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071152361 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084848801 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067898914 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069518246 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074431207 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072870917 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067712244 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07894357 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072783854 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068795486 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077073287 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067878675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070846352 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078283274 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073996345 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066764441 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072644385 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073940987 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068551403 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069591522 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07070513 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070006705 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076331401 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07435699 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072148532 seconds)
  done (took 10.674429177 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162794217 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154691504 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071537641 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145447051 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076474634 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079728444 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147412569 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094556028 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067889287 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068982471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068785983 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110158702 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106197938 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11823382 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078882587 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068063101 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083635275 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114031209 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150138009 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143627543 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083804004 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076869376 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070440764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069265809 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070967111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079009936 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085516605 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076770684 seconds)
  done (took 4.474258413 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082312028 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101021489 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074323499 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089359037 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091422712 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067992855 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070319525 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069870359 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080788143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078914411 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067970679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073705234 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07469489 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071494032 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068873344 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075213055 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075223806 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069434718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071055442 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07324177 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078224729 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08104386 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072226669 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067694865 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074528137 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067573866 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064677605 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084649942 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068593937 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09088353 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066325192 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075070627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082470502 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069221757 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067933999 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06790595 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06792939 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067974493 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070123863 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06682514 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066426625 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05809018 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067205815 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07979546 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074485825 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05695069 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072740263 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073082004 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073360831 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066069429 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070978402 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07074149 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071347594 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075283391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073091885 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07331143 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069233771 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066040613 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075954774 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068086872 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065100087 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066726189 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072822672 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066342847 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075996796 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072516081 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066669568 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067795345 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069962444 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074044837 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067713525 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07094556 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065774043 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069574549 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072393327 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069756615 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068858487 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066485788 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067603912 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068103966 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055756554 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067662152 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053877053 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070591567 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066036265 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066156031 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067680057 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072166343 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080010811 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069094682 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07348315 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068695323 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066722431 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070608576 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060389058 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070739779 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08281486 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082833268 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068008409 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065715223 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082192812 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072113098 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066642031 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056436267 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075373585 seconds)
  done (took 9.24009747 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09661658 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088408183 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070321943 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083442263 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091579961 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086180448 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075102005 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076805802 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069728634 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082520281 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073657162 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077195256 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068337522 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077442409 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093496714 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077284523 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070371303 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077368944 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07243424 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101098145 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083345332 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082212027 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075115594 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068388595 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076326227 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080426367 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089777169 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080398811 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078993247 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076248316 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08020885 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089572217 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07445104 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072345222 seconds)
  done (took 4.476672555 seconds)
done (took 38.799351094 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.805551814 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964343796 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.788992143 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.180925139 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.876334094 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.930606229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.842908131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.797931101 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.966293036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.820511067 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.041101083 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.83083725 seconds)
done (took 65.569765434 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.828779738 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.93233831 seconds)
    (2/2) benchmarking "String"...
    done (took 2.085441906 seconds)
  done (took 5.743852511 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.085788493 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.336703302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.046954142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.799557593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.80718815 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.105024662 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.594397834 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.319839021 seconds)
  done (took 30.737363723 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.992671778 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.996125962 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.454041177 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.48843322 seconds)
  done (took 15.70177123 seconds)
done (took 63.896884151 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.796408017 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.834769423 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.806460219 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.769396856 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.862893336 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.825668842 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.145464405 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.83399442 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.799905809 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.778439735 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.802046953 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.238705946 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.80701675 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.212375189 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.800986069 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.808671071 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.836720124 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.215675476 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.957245731 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.808710322 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80640712 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.988736114 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.803078371 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.816600672 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.850271628 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.803860019 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.26097834 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.809239338 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.432252715 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.804518276 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.833502517 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.863630837 seconds)
  done (took 204.739590916 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.805141924 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.692145702 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.781674157 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.805171594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.01327656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.996425861 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.941514501 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.270774573 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.803618167 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.818189383 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.941877251 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.802778561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.989394111 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.741271834 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.790335569 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.799606214 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.969457121 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.030261345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.783595557 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.057871057 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.816579812 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.808633713 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.751492063 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.892001558 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.833102297 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.896296073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.801411993 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.823456309 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.970084981 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.900112797 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.821543066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.805069083 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.98572465 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.648903102 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.801012102 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.796132179 seconds)
  done (took 169.914541408 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.924142277 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.794387571 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.793670344 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794445417 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.799106653 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.792790897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91593278 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.916461842 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.245413014 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.307894198 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.794457517 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.843085836 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6229849 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.78996686 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.861364847 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.803923471 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.792053659 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.808209901 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.820213435 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.790191825 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.793220409 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.919082637 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.804423717 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.166571123 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.800711396 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.794000257 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799099651 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.149379871 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791442014 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798648152 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.038258662 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.790922877 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.794056796 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.692404755 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.181260715 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.796883201 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.877724335 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.792669022 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799852003 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.792154205 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.013248325 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.793315631 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.793097483 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.797136796 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.793960474 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974787756 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.787303431 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912360428 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786241568 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.292609629 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.787686842 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.78832923 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.471867489 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.472232997 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.78455229 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.784568983 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.787007162 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.78417149 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782739316 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.788871151 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.495144344 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.853790024 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.782216683 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.78765597 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789198936 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.782802444 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.983568376 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782845675 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.785918696 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.844953219 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.898969212 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.9042599 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.783348471 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852046706 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873753957 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.780388672 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.784854231 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.781428625 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.783043015 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.863292164 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.779196278 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.888062373 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787014371 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.782595378 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.834082988 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.850454816 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.780965151 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679540824 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.782949663 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.780748154 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.096127984 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84547491 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.777544858 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.782087245 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.78144207 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884438216 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899155555 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.569304756 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.780154323 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.537287071 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.954085247 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.96515177 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776365185 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.043320844 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.776569149 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.871780949 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.78140442 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.779443871 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778353574 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.77892117 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.780384639 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.811918039 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.77941206 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.841635785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.147084276 seconds)
  done (took 404.523481688 seconds)
done (took 782.881274697 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.434172566 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.396517911 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.523971832 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.426173304 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.402133877 seconds)
  done (took 13.884038236 seconds)
done (took 15.58607004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.87161397 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.870137134 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.804374084 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868668037 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800881912 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.86983897 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.849551446 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.804302582 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.832959411 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.803926272 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.835224593 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803206722 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789699303 seconds)
  done (took 25.509604487 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990561624 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.001522656 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.832220778 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.000762762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807548829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991300958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.923107106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.915357718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.913813932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777708631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773116379 seconds)
  done (took 22.62979801 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998229408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.999569492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834613851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001227928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807519913 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999270357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922964357 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.912382236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914498599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775208721 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774065708 seconds)
  done (took 22.64090714 seconds)
done (took 72.482373278 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76864776 seconds)
  done (took 3.467329884 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.793786863 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.925778064 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.775625156 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.772738611 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.767773455 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.76943099 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.77333412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.770223231 seconds)
  done (took 16.050700653 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.766028172 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.767041807 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.768156346 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.764649556 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.769878746 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.764659203 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762251231 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.761492419 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.761621858 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.765446468 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.764508328 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762753894 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.764757853 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.762095559 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.762251982 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765515191 seconds)
  done (took 29.933683682 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.76462842 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.760381244 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.760757672 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.761486315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.764130307 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.761589819 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.762079155 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.760543993 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.76240343 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.760581757 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.762915208 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.760640564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.761136373 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.762493988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.761931286 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.763683097 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.760437494 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.760282069 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.765864463 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.758207875 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.762031486 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.765074466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.760708204 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.760176452 seconds)
  done (took 43.983441131 seconds)
done (took 95.137812874 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.518958314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.267138248 seconds)
  done (took 8.480264089 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763670622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.762613654 seconds)
  done (took 5.260307645 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.761520646 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.761822715 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.76183472 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760275372 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.763252326 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.760474064 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.762312874 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.762064124 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.761103247 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.761060604 seconds)
  done (took 19.31133516 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.762589199 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.761915774 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.758456277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761256767 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.763859256 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.761146338 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.761467184 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.761906309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760523147 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.759929647 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.764268646 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.760125427 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.762216664 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759377305 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.762265868 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.760058438 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.76047066 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.760481475 seconds)
  done (took 33.398560417 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.764770967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.762343091 seconds)
  done (took 5.221920185 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.760240418 seconds)
    (2/7) benchmarking "second"...
    done (took 1.759688006 seconds)
    (3/7) benchmarking "month"...
    done (took 1.757685611 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759862282 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.759552381 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.760241494 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761769253 seconds)
  done (took 14.014124283 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.764046241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.920290477 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.985425268 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.447355901 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.760872394 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.766151459 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.711479265 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.766483183 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.767068984 seconds)
  done (took 19.583917699 seconds)
done (took 106.965790523 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.60157542 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.755741626 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.145343683 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.808229845 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.804630669 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.055528536 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797488827 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.983814385 seconds)
done (took 42.648073703 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.853936306 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.226158275 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.256114444 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.251918318 seconds)
  done (took 12.42764168 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741367553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.267875691 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.792132108 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352436014 seconds)
  done (took 19.865943356 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141293175 seconds)
    (2/2) benchmarking "read"...
    done (took 2.117568706 seconds)
  done (took 5.957117413 seconds)
done (took 46.800849295 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760643077 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759003986 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.758019578 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.76280464 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.758212725 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.757990089 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760700398 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.759367648 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.760429756 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.759553583 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.759919396 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760469482 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.761438622 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758476886 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761081022 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758476546 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760724883 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758875666 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758659122 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759332586 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.761717301 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761560809 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.758493747 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.75933611 seconds)
  done (took 43.928075089 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.761681609 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.762150308 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.76148917 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762705538 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.759220563 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.762070088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.763953465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759648573 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762459988 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761683357 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758229428 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.759313612 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76442113 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.75948319 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763283939 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.759184428 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.762724568 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760188026 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763122191 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.760344459 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.763208771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760594126 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.759959544 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7639011 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.759604723 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759365373 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.762716069 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.759298212 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762832944 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.762457822 seconds)
  done (took 54.536945645 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.765367779 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.768598178 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.762583096 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762163551 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.764625546 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.761518869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.761450485 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764224363 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.763317953 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.765480955 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.763417427 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.761361237 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.764099764 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.763598459 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.763145379 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.763924331 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.763155517 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.7612812 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.763220598 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.762763314 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.763507054 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766679527 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.762324847 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.763784557 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.76248026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76448322 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76586113 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.764836361 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.763574177 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.761561817 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.764016761 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.76347152 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.764103907 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.764046766 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.764358514 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.763503834 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.767312638 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.771685976 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.766500704 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.764018037 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.764408878 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.764110387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.765250939 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.767225093 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.764291602 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.765179734 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.763032388 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.763860556 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.7636998 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.766054647 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.764315524 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.76453738 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764649795 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.765621623 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.765677155 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.767838102 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.764817049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.764904659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.765142253 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.765793331 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766583527 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766138195 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.765469338 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.766797329 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.767865872 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765653618 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.767181361 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.76590669 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.765369906 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.765961622 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766057803 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.766260895 seconds)
  done (took 128.753751886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765413462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765086111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762309186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764145696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764832251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766172227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.763553503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765669262 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763773935 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.766452811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767695306 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765090688 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763132819 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766891541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766868368 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763611917 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770756319 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765861143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.7678868 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768486088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766305397 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766631116 seconds)
  done (took 40.547370741 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768854731 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766310174 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.765284889 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767808584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765411889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767812336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.765982913 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768321897 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768271727 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765394925 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764657243 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767052792 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76418687 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765740914 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766065049 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.766007077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767835583 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766077972 seconds)
  done (took 33.496775181 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.764995842 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.766381002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.767835005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765183294 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.764995913 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770045249 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765929517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767840988 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.770151878 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.765320203 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768994296 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769040873 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.767893554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767588143 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770040585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76703806 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.768270591 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765582681 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768467902 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766981148 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766215962 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768478471 seconds)
  done (took 40.585096962 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769222508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768678548 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.768717544 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766662664 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76515707 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.769367684 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.768526917 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768054716 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.768794787 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.76956613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767797768 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.768095706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767583709 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768630577 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.766604112 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768435564 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771123284 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767587913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771221068 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771952544 seconds)
  done (took 37.074073713 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771737477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769271878 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769316592 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772737769 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770362865 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.771795333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770228518 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.771005571 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770690354 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771812511 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77008696 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770340639 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771029147 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.7708345 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77129968 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774566038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771866688 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771805918 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768894515 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771313801 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772716383 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771609594 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771361358 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772044703 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770893318 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771210835 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773805341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772199347 seconds)
  done (took 51.30045402 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771097388 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771233643 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.767510275 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.77147863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.768304816 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.768899396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.768006471 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.769441913 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772389364 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770051827 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.77105694 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.770521717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772252558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.772315519 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775968744 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.772917602 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772961273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.768939059 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769930172 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76867229 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.772137314 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771586507 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773855061 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771381937 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769270915 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.772061897 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7697071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.768892821 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772831129 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770328119 seconds)
  done (took 54.830878476 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.791864173 seconds)
    (2/2) benchmarking "in"...
    done (took 1.791789834 seconds)
  done (took 5.289378275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.769161972 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772301621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77298125 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771466901 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.771150471 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774380102 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773639937 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770599462 seconds)
  done (took 15.883268732 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789369828 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.772628185 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774674657 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.774264087 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773240128 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.790886466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797585139 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.773524514 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.792247521 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.791172578 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.796755187 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.798823197 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.794213623 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790325609 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790867296 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790251563 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.775651494 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.775552518 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774473958 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.774149481 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77521336 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794576401 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793090757 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.771934267 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.793626659 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.804284179 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.797088058 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776471567 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791163172 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.798718632 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791959162 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.772114455 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775658872 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.77537173 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.775872544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.775907382 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802272334 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79265078 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.798528001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774641587 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77599131 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.772581792 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.793890171 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.797205703 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79228808 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.77644728 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.776488027 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.77433131 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.792014816 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.794378554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.781117898 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791643028 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773307636 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799310076 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.794342655 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801639739 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.775272108 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.795156264 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801663284 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.804988784 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.807094653 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799215178 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794686442 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.776636559 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801567644 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.81505109 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801166268 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.773911666 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774607212 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776704902 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.800700984 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807944369 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.802806805 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.776178115 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77662765 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.778108367 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794866929 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777454871 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80290147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.796956742 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.776677007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77887792 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802964135 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813957616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.795063247 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.779437902 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.778125436 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.777713905 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.795665432 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805101982 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.779384175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.77785982 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.796432828 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.79522789 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.799221604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.78110332 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.794404044 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797436536 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.775444402 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.778852924 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779460512 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799190159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.805240441 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78065975 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778508599 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.804228616 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.779010632 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795434295 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.804287376 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.778853224 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779675172 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.79704982 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.804285485 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.776420345 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799528455 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.804481119 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.78087973 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.798071462 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.779831967 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.780131236 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80479256 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.822498034 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.779383104 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.779133508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.801049133 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.791086609 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779178326 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.79905898 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.779351131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779494692 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.777917937 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.799251748 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.782064527 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.798986798 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78213954 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800205698 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.779077413 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.78224681 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782046499 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.79880271 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800932937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.799687454 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.799545349 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.802194461 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.78274002 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.80121423 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.806207507 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.798930192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.799497006 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.800612737 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.778520491 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781629539 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.800154231 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.781534577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.799239081 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781615823 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.797906758 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.782107953 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782833292 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.781580686 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78209094 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.799807016 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801599041 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.782144476 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.806309527 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.798019577 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.779697575 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.7824724 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.781167126 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.79976172 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.781005285 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.797870183 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.80219447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.790447942 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.78376952 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.784367566 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.803415968 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782756295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782328781 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78433974 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802467128 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.80772433 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.782803965 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.808150429 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.783011974 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784764464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.783024073 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.801109955 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.799428558 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784745223 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.801447627 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.7891245 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815248382 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808257358 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.801207786 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786226318 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.801623717 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.787790484 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.807011914 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.784357617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.784163991 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784300098 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799960999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784310415 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804207354 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785061924 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.801697186 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.784400216 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785254588 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.785302988 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784870496 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.803426694 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802829815 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781835378 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786971985 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785624708 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.801945847 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.782448045 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.800999457 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.802061377 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785529386 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785292757 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.81269621 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.781502747 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802514501 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803062202 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.801465375 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.800423396 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.784284043 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804859629 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.802711723 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809593457 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.803127788 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.803551314 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809385508 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.803066599 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.803062986 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.805472361 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.786284649 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784207923 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.805602018 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.79371207 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.78655389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.786675791 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.788395827 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804764096 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787039034 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.812748083 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.784066452 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804338906 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.787286956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.807636625 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.784862812 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.805347828 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.804450998 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.804527953 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80632049 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786687083 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.787665814 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806308966 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.787034139 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788274991 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.787865147 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80452222 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.796395636 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.810559844 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.805321679 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807920877 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.804340888 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792136933 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.805739598 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.787625256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.806151463 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819170404 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.795344381 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814907288 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.80726445 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787947408 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812046554 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.80391109 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.809293261 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805837071 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80384338 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.805532742 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.803850984 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.786308207 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805114355 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.787366095 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805874824 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806489244 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.791567128 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788507643 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.803593729 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.788300005 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.7898881 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.788970396 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.804476525 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.787556867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.811381039 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806752331 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.807236318 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.806914244 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814659929 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806760669 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.809590454 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.806235493 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.807529138 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.806222667 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.808808285 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.789807524 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.809010516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.796406114 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.809161314 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.816502409 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.807402237 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816420375 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.789749336 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.8083158 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.798495156 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.787439313 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80623642 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.808476482 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792175779 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.816533399 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.789976677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.808065148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.793658102 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790076231 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790313179 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.789481876 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.790545662 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790458773 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.791390299 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818314729 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.809181382 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.811463631 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810979648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.787540993 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.791092834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.790883096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.806730659 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815669046 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.792309782 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.809663413 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.807089054 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.809945906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.791886841 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.792794913 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.791737738 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790693845 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.791467876 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816990739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809249249 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795195049 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792347774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.818821328 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79171311 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.819116885 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.793708333 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.811004289 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.793442947 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794404799 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.81348708 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.809766281 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.812739149 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.7947022 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810645071 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79705865 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.794694499 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.814861874 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.809140664 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.79460845 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.810195494 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819293407 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814425759 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.812811564 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798516605 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.790718566 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.812453567 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.797094053 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79424221 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.809849917 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.812906076 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820125072 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799694146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.813809824 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.794676397 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.813005994 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795316059 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794545678 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.793195509 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.793923147 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.793544211 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.814233972 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.794535321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817552542 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.792068845 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.811850636 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813295546 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.810403496 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8224324 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.79269128 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.814615564 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795420417 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.795235153 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.814351182 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.811570581 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.795368763 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81408776 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795195394 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813031099 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818954372 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.818537097 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.81558249 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.812300018 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.795164261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.814272864 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.815284795 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796561585 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.798647682 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796008393 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.814573433 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.797404067 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.816223519 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811860175 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796675033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.813184312 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79664125 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815618796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.819718862 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812857347 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.792906983 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.794836091 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796772111 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.811108209 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814212094 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.824542653 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814795675 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82187255 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.821583062 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.800435751 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.816049784 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814491198 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821611009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.811611609 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.814035271 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.798073314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.817299677 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.81267314 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.816876159 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796736979 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.823546352 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.814956337 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81300631 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820306985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.813055403 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796785529 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.813266288 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.818816321 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.812567879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.793462507 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.795959528 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.810807607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823186051 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81566522 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796786506 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815807096 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.811533193 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.814082035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801813829 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796778202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.816150284 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.794210114 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.813759295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.797453535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798539959 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.795312716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.814679522 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.816525809 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.817729187 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822221466 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.795048777 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818086668 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813631853 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.816119814 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799603619 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798272551 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795581993 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.7956747 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.816193598 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798446345 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.817205355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.819237446 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.815202589 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.81470522 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.798742568 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798221714 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817188308 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.825117922 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.804246499 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796448129 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.815892498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.816645177 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.81810047 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798196811 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.799766024 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815988506 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.818177243 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799098766 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799920178 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.797886692 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.817926608 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.833471537 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.79940987 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81775011 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.81690501 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820720196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.79990673 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.798399098 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.799941953 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.818916723 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.817764578 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.80646531 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.799604408 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824014311 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815528023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815799447 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80291688 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818197278 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.824681298 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.821164853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799283731 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.800114547 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.820481446 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.833549111 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799798963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825182025 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846077361 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.816588849 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.8188614 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.80043627 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816765973 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.800369798 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.821424915 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.800984921 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.801721409 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80060612 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.800864144 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.817973936 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824005355 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.820246191 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.80155533 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.801602857 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.817774808 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.820808637 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.798558805 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.800896959 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.801942279 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.801457978 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.800938416 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.801225092 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817535495 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833202372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.829081096 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.802324362 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.80127817 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.79917488 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.824028674 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.820255285 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827994281 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.808949598 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.800999401 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.803855067 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.820883124 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800936371 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.800175756 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.820049259 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.820085432 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819540891 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.798244457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.834535476 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811248527 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.825937277 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.820801403 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803511036 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.804746347 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824043672 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801570062 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803302124 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.823370107 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.819584712 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804922804 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.803378824 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803066352 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.821567311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.80826968 seconds)
  done (took 1074.585793953 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80054011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799738134 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802126522 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800351581 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801268693 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800676674 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800557082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801470267 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802096438 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802279621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802071706 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801129672 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799577363 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801386087 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801389148 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801935963 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801474858 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802839565 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.800781348 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801704154 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802506058 seconds)
  done (took 39.564340074 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.803594189 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.801112018 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80245984 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805006886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802454668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.804915876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802609734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803547733 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804385948 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802235834 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804593527 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804851746 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.801192138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.802827719 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801087936 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805538461 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.805886675 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802695734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.804825787 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802572412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804232219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.80196385 seconds)
  done (took 41.414041318 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.805374225 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806008627 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.820968287 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.802549968 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.805519968 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.804057116 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.80506357 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.803540369 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.805729287 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.823056934 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.82119792 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.82199007 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.828966322 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.810288426 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.826720106 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.805296628 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949096867 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.805724632 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806697018 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808178189 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.803755904 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.830996591 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.803499163 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.801685381 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.822059759 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.805399525 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.806309882 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.807753878 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.807845258 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.825207668 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.810109962 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.807404451 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.822126842 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.82417822 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.821761669 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.823847461 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.81052962 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.806885539 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.80503285 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.805665016 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831467485 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.824320458 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.807961185 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.834359468 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.807449921 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.805920248 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.827266085 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.814541764 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.807210061 seconds)
  done (took 90.717366712 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808387465 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.808508696 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.805888383 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808592376 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.808127914 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.808356237 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809438704 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807049318 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.805843015 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.807481419 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.809818946 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805569283 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806179326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.809110772 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.809087797 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805582068 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.805470209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.80592416 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806460112 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806358835 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.80551348 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.807517209 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.809113923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.806890715 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808203917 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805705758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.805559688 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.807478812 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.806079458 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.806468332 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.80759934 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809579442 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.808519931 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.806577534 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.806892629 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.809187044 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.809658827 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.805767398 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808988999 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.807086311 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.808837693 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808899712 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.809816566 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.809124478 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.805885732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.806234523 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.806409471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.806179023 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.806451649 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.810016027 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.810976206 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.807900406 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.808005933 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.806846887 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810093382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.810233222 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.806035282 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.806995448 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.809678746 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.807100275 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.807170081 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.811651057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.80809576 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.811857098 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.811914396 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.808306855 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.808795999 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81086972 seconds)
  done (took 124.679004212 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812872989 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.812643496 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81153157 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812582281 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811317099 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.811467062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812459151 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812048453 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.812016303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812828947 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812232884 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.810620419 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.81160941 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811591698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.810607776 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812474154 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.812362303 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812163111 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.811903932 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811284914 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.80934327 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.811293779 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.813396594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81307752 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812920321 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.812383799 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8126608 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.81217766 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812916856 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.812508869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812955997 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.812312717 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.812958356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.813321149 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.81298214 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.814299897 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813065101 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814377888 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.812391932 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814547865 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.812965008 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813654812 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813856557 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.812223187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812978748 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.814554956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814098757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.81564553 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815654352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813256429 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.81406444 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813193661 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813560135 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816373321 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816852766 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.815332067 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81495653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81264519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813212131 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813280371 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815730539 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.815368339 seconds)
  done (took 114.154162682 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814250125 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813660297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.811270206 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.815235761 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815683763 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812069631 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.812664741 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.814902644 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815112231 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.815856117 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815206289 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813055957 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812971853 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813287347 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813425289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813162745 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812447674 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813859472 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814455955 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814081595 seconds)
  done (took 38.024064978 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.813667374 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.81660143 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.813723157 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814237902 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.817184807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.813196666 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.814578142 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816862759 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815477289 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816458353 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.816847334 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818024324 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814717618 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814497486 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.817458435 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815185753 seconds)
  done (took 30.795220591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814774161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.817817869 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.818593054 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.81824757 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.814699588 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.816041593 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.817960051 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.815592023 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.814596186 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.819219638 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.817687851 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.818090134 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.817448983 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.817587069 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.815324988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.816414353 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.815423106 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.816584957 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.818405834 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.819041161 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.815863526 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.814148652 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.819599943 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.818753383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.815480754 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.817772721 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.81578277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.816630303 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.815362827 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.820283632 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.817678477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.816121782 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.816690113 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.816966902 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.820481254 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.816431894 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.819003382 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.821389852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.818333345 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.819841948 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.819516115 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.818477745 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.819591763 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.819735238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.815811151 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.819767913 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.817478975 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.817701074 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.815875968 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.816906857 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.819801269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.820604148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.819731311 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.820859836 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.819416959 seconds)
  done (took 101.725929637 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821451495 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82027118 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.817210361 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820325835 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.8215418 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.817606177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.821849266 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.817589558 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81857297 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821460878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820685021 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819652719 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819077322 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821506577 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820081649 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821228094 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.815795874 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.818129673 seconds)
  done (took 34.508207292 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.817700088 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819482656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.820857077 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.819189777 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.818622358 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821173535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818953712 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821100521 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822876542 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819705959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81958566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822136524 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822363315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.820408601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.818078655 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819316969 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.820002382 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821889354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.820150228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818322211 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821831649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820449163 seconds)
  done (took 41.799223075 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.837335219 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.836388161 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.852907495 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.879127097 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.868987303 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.836945678 seconds)
  done (took 12.865513706 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821479131 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8231014 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819158734 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824588343 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822397367 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819607765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820919614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821752314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823906259 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822027965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820542001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821701001 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824133518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821314767 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823645121 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824375001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822433131 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821593215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821947429 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82253442 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821984518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824573865 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823092478 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82191775 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822080671 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822012902 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824274544 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821203634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822617408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825067961 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824355034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821397068 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825176982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82161691 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825001228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823209942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822621349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824216632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82377372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821929976 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82432959 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825050652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825236704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822039989 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826047405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822379306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822616863 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82206561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823469096 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826488528 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825140634 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822596643 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826399909 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824606108 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826386743 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826341274 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825019316 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823255597 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827094884 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824669127 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82265419 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826947576 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822082861 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822695694 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826541397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824746277 seconds)
  done (took 122.099243915 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824175139 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824751784 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823456347 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827183188 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82399932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824507707 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823162461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823667335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825704062 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824374294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827132351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824782841 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825345853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824835995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823629317 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825495575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82593319 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826290066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824756333 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82861011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826267744 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824778633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82392842 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82521979 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825332961 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827818444 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825081469 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824687421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825218769 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824101979 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825379622 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825226363 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826758051 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826315836 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823982434 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826496394 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826264219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82587533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825627383 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828544367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825410086 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827607979 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825174159 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82639611 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827368871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826425941 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826260684 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827162955 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827764471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828164532 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828944059 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827298577 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827881679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827596672 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826845889 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827252317 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828728751 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828632861 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827992822 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829175475 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826504262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827946251 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829040533 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829040952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82809468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828022902 seconds)
  done (took 122.290405902 seconds)
done (took 2497.141739592 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.892102037 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.8697064 seconds)
  done (took 15.523135697 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.009171739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958126237 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845887502 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.854642564 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843726986 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.865632256 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.859414097 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.84416282 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.846268534 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.845764784 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84545386 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030577346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.858687393 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.844147668 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.846089309 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.938939754 seconds)
  done (took 51.920720262 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.849849054 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.849669703 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859618739 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.850705856 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.848242237 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859861875 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.87907935 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.852414789 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.881775963 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.861070645 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.914907405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.85748264 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.847741996 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.8973917 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861734002 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.86410651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.937916591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.921586685 seconds)
  done (took 35.459248883 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.925890521 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.854266642 seconds)
  done (took 10.550428724 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.866940972 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.858808822 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.841095149 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.853391907 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.842271846 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.877883404 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.877018754 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.881298164 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.882265996 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.85375973 seconds)
  done (took 70.426789583 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.855553503 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.851196133 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.850728202 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.849577341 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.843478067 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.845845403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.848652093 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.842591015 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.53148937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.883266429 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.853417787 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.855178223 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.849767324 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.851610169 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.830965063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.872057104 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.966518558 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.832182888 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.830355138 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.855754694 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.850163754 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.941187005 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.864810156 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835998486 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880536071 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.53051037 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857183535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855863668 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.987206435 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.831562209 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.849457046 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.850305302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.852729231 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238991755 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.131750619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.84896283 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.8588521 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85936614 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833002629 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.019035048 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.851878687 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857500672 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.8438485 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.12021333 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.933388121 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.895810261 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.2089982 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.85403512 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.853125684 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.882573951 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.855015702 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.852759269 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.865752118 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361613892 seconds)
  done (took 131.583051645 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.848714136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.436325599 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011972995 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847839624 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128955841 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092644461 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.846082191 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89548311 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.85005853 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101066441 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02435804 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96553271 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845746451 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.848758487 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845345615 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.844739613 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002420375 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.916620994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847827805 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.846283714 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882488909 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115008074 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.974008699 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847430784 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.870149276 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075838514 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.973008232 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965253367 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.380132647 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.846806388 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914476391 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848213695 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.846500429 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846638718 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.01375679 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954694615 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945966209 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.847982388 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84678557 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846013665 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.513330193 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071938892 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959830949 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985394347 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097134762 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077488426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.495291836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.847747308 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.486425971 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.045992863 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.057188765 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.10547621 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.977812003 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.849393956 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.086411838 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.848026649 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848033596 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111132416 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078067706 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.961937802 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850675036 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847973222 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848275162 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165335254 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848887559 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.95886674 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849446146 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.846972387 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962095682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965332005 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078625434 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091141786 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879498 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.794891216 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.361170774 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.132737075 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920503816 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112078145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849968047 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848439431 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944066646 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.601523572 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.022611038 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.167577315 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.115502601 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892037959 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.453629104 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.849345989 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.104100336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.101208371 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.079302065 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095789213 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.016786461 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175421362 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.85099712 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.84958953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.069790638 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983395679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852686971 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211614533 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100486317 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.577878674 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.882392667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159737624 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988627689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.852052995 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.475166845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.851691868 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.055183003 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893372153 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.852287118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853071322 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.097362981 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.723691069 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850948936 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.639334842 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.917931531 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852883908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117073249 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852617943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094021142 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855097872 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.163754882 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.424178218 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895296252 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.042343891 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096128103 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.645981352 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120939224 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.165728258 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975476054 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109990858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.671756821 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.852178018 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136495867 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852777729 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.851623306 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.023858849 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852047614 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008127052 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.854463793 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114144413 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878537753 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024568026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855389688 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.127592754 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898405928 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904528176 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855550649 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970084058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855184758 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.901943465 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03675753 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855715676 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.852282435 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.426722171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.853923421 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00154985 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.151556716 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878207158 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926722256 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.380157124 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854094186 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949410764 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882091071 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.458375675 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.855413072 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.026402208 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.85557287 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.815657006 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.854170312 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.168126389 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078759266 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858550617 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.854641965 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.64658362 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.569717176 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855763338 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.032200259 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.097758464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.497682263 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076689316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855045509 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988821772 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857681453 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.932313573 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.203582373 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.853970494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.853305735 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.8547562 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.857135167 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.851999639 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084691309 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88389791 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.543212945 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992309324 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098963352 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16786198 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.116922396 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903440922 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.859731659 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.123518649 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.857581175 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.921722738 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.858865209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881067745 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105689481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857917076 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085969892 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.145431869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.912330631 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907352861 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.858601975 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857160491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.856020806 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003260373 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957861366 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.857655866 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.858032567 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976633079 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984450298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.046701851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.451382771 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.032127257 seconds)
  done (took 900.302350567 seconds)
done (took 1217.528264002 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.85802516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855433441 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.831213107 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856910817 seconds)
  done (took 29.178867831 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.85174065 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.864253828 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.84939405 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.864443516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.850252139 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.863959546 seconds)
  done (took 12.922498556 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.922757288 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854697037 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.859311722 seconds)
  done (took 21.415797541 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.933966866 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268809476 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.967387036 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.306318266 seconds)
  done (took 10.255969761 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.850613883 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.849307935 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.850645147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.850218794 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852418792 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.852923586 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.850874025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.851582233 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.853487702 seconds)
  done (took 18.443953714 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.909686088 seconds)
done (took 97.904878615 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.870483665 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207614394 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.028804681 seconds)
    (4/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.855052039 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.998169254 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.998451544 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.971001274 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.882565335 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.868600893 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.870408257 seconds)
    (11/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.768963501 seconds)
    (12/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.016120949 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.230480802 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.194373881 seconds)
    (15/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.413521864 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.860405445 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.221951925 seconds)
    (18/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.045739033 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.749243566 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.497272678 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.925738128 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.134344527 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196389627 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.861308255 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.048328104 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.316283517 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.054699412 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.864248585 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.137754004 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.767221694 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.916447071 seconds)
    (32/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.159484265 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947963359 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.949730298 seconds)
    (35/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.908445331 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.668707578 seconds)
    (37/309) benchmarking ("sort", Float64, false)...
    done (took 5.671739887 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.353582201 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.832546408 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.169071908 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15380676 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.92326127 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.958036983 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094290003 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.370287333 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.107823613 seconds)
    (47/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.832955469 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.968324479 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.729171576 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.822224323 seconds)
    (51/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.965950985 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.902998386 seconds)
    (53/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.985345787 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.307318581 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.566240359 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.102750494 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.766913195 seconds)
    (58/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.794853235 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.23287551 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.83607849 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.743137852 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.921668895 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.444674256 seconds)
    (64/309) benchmarking ("sort", Int8, false)...
    done (took 4.895487788 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.864385601 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.8729018 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86326971 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.005710173 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.867375401 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.288474109 seconds)
    (71/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.191273608 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.920384227 seconds)
    (73/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.020798456 seconds)
    (74/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.060801411 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.973891039 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.187167933 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.864528988 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.871357579 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.591193385 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.874694025 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.107989948 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.863431286 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.961283602 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.192646681 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.940345917 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.150299834 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.026297756 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.384099737 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.122146768 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.812165986 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.050197526 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.154211264 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.461333133 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.864077148 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.906228992 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.965056046 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.969223699 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.015506768 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.950338903 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.176053403 seconds)
    (101/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.182485059 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.682014085 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.868993578 seconds)
    (104/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.130212628 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.049229129 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.933594466 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.864044222 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.603580501 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.940598725 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.872264009 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.865593365 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.938083753 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.735217374 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929166803 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.240401092 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.318500098 seconds)
    (117/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197556293 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.878957439 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.138211356 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.128468685 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.081650488 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.133780912 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.866200558 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.869544951 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.974715951 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.909100643 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.955184649 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.863964006 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114050585 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.938402896 seconds)
    (131/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.34994127 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.417304535 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.061044617 seconds)
    (134/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.869615849 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.002658038 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.865972121 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.917611981 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014051108 seconds)
    (139/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.939330689 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.866030139 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.664200944 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.878914878 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.936926908 seconds)
    (144/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.98697907 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.893169665 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.964867356 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.087407658 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.158165952 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.839335927 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.853255631 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.977448887 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.87706637 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.868523427 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.136168541 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.210066929 seconds)
    (156/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.024238354 seconds)
    (157/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.921296228 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.876452429 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.877039105 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.556283762 seconds)
    (161/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.878513546 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.953349837 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.876421005 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19497587 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996859073 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.871368226 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.871802335 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.955818745 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.86963712 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.884215877 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.663036549 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.919818393 seconds)
    (173/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.840672808 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.804190075 seconds)
    (175/309) benchmarking ("sort", Float32, false)...
    done (took 5.650298744 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.965618105 seconds)
    (177/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.871354292 seconds)
    (178/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.938835778 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.011749842 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.16531729 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.839198662 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.696779568 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.974368606 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.877341178 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.956909442 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.520201619 seconds)
    (187/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.311517001 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.975131726 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.938378304 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.062755578 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.145942752 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.228680166 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.90272165 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.073445461 seconds)
    (195/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.948066191 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.53246645 seconds)
    (197/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.953319864 seconds)
    (198/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.872137234 seconds)
    (199/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.890485738 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8808929 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.904395566 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.075742647 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.267833871 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98908768 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.111037664 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.955141114 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.884741108 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.912185425 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.802145716 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.380395987 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.282949643 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.050129796 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.13976483 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.850887177 seconds)
    (215/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.077494924 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.159025769 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.23033364 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.583812519 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.377521446 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.165649208 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.845234727 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.203768495 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.223252275 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.034913514 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.231723799 seconds)
    (226/309) benchmarking ("sort", BigInt, false)...
    done (took 6.873896229 seconds)
    (227/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.14657194 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.925666767 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.841926104 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.888607032 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.843579214 seconds)
    (232/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.461546457 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.879578704 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.899879575 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.880395855 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.001693579 seconds)
    (237/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.058452484 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.890053976 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.259677369 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.877904846 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.782856179 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.87577174 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.235725139 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.088994323 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.481087544 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.28073736 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041968737 seconds)
    (248/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.365785285 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.46521395 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.842442248 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.933864785 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.870980789 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 9.055372173 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.461222585 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.161748085 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.972267287 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.971614142 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.518062955 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.369244347 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.271394769 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.844363632 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.740414193 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940149771 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.044282194 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.889810812 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.875898413 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.129100044 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.245601951 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.906638864 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.875094822 seconds)
    (271/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.02200072 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.997343744 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.887923751 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.957387881 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.670429614 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.95311872 seconds)
    (277/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.39073165 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.16766203 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.88168559 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.866780428 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.289918429 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.172334781 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.296960622 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.454200175 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.121409953 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.945664767 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.88442859 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.941757237 seconds)
    (289/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.55618565 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.054652364 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.975547763 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.01499734 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.874927283 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.389592749 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.994030319 seconds)
    (296/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.876976768 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.030832479 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.847093837 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.277386882 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.86948398 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989006903 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.254857246 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.909535679 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.232184186 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.454109036 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.794831965 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207660408 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.884344583 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.096014481 seconds)
  done (took 1019.413178348 seconds)
done (took 1021.205499408 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.897212557 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888412848 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.872130826 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.893177372 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984733948 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.90585104 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884164892 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.874648107 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.919905404 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.922443081 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.871755447 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.906078249 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.875035519 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874223044 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873065536 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888422047 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.181908604 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.899398209 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.891178731 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.883277608 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.889506508 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.873092768 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923283939 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.907606702 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.877781152 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.877227074 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.878124906 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893329112 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986353387 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.877595835 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877203433 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.886340937 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.181556282 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.897562653 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.868930996 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894416042 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.886855814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.884045903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.877277901 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907376971 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.318109098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.878877062 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.877321532 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.874496035 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.873833768 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.877926082 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.878012044 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.881424126 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887653729 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888756198 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.315746273 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.894668033 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.877728134 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.874261268 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.885507095 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.873441259 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877754784 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891657421 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893987499 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891390458 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.173565143 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.904186282 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.87868289 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.892675493 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.884655553 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.354190364 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876205919 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.880028933 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.31901129 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.885952985 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.354616275 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.890217661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.877637654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.891727774 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.909535766 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.183969439 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.894212923 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.877199458 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.886002936 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.877243424 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.887044516 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888218785 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.882153763 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.878288002 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891660987 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.911049962 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.886667594 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879826731 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.885087097 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.896345284 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.885837658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.889065275 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.881559473 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.872171302 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.887114995 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.881100419 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.881974719 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.881298865 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.882768915 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.888764462 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.320428259 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899026091 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876003214 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.874467718 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.877644101 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.893489667 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318463207 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.883259932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.899053437 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924784337 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.880572158 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.175759149 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.905896271 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894540709 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.887590863 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.882136992 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.874698931 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175936391 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342669586 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.899281288 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.880079036 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.878259713 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895219596 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.881021038 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.875791619 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.18660624 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.90564078 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893193567 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.00035774 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.890649965 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.911985536 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878769462 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.883280849 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909617516 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897489205 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.912930795 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.883853221 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896430408 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.89689313 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.877289872 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.892529917 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.891517232 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.881631619 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.888167451 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.875793606 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.909396823 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893265006 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893287633 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.902846176 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002903299 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.878346656 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.176762212 seconds)
done (took 295.067538011 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96334209 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.892933055 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.994677793 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.876360758 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.976755755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.977174667 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.874408529 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.873348577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.873821507 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270797717 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.874265153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.874424597 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88944599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.875841164 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.975055794 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.877309909 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874615114 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.235336039 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87848279 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.963983865 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.893399275 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.873909985 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877047622 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.280083212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.886249274 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.893683501 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.966515528 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.876225467 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.242321376 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887411036 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.890761544 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.241640523 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.986226653 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.897263526 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.88858799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.886069288 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979142964 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.88396515 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.97588961 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.975613227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.993417045 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.917767271 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.891556353 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.888706443 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.88060096 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879883534 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.875758505 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.90564585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.892635322 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.876839301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.258804693 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889454016 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.885646458 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.875220695 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.876981812 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.901115331 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876471385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879263964 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985715593 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.87937991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.959283896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.28067769 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.274742145 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.878798493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.890864973 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.87670632 seconds)
  done (took 185.452196895 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.962537116 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.968688618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.963551592 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.89867649 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.94622265 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.969660791 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.897822999 seconds)
  done (took 15.413768875 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.903630713 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880273848 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.945203168 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.946329657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.8809304 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.04579178 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87968448 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.907260876 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878323719 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.950078094 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882629006 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880409628 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886604293 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.892170747 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.943854676 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.908316351 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.01141133 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.897907508 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.881157824 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.05317266 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878192288 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.888041852 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.950358255 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.908799502 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.881682162 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.902631879 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.479863296 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879225647 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878760061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.880457279 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877534149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.940948008 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881010069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.892012229 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87765625 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.013462972 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882021806 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877094077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.881548231 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.892623714 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.880305279 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.8823559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.881505278 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.877742779 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.880280736 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.921504705 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88074842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.880945359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.880533827 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881377912 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.947874673 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881772782 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.877848461 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.880165916 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.953925337 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888407185 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.884307956 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.879057408 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882057845 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879330752 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.055297612 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.946466425 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.883245737 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.947591532 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883185509 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.881640404 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.881454019 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.883221242 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.953207843 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.88422171 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.94795354 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.881198478 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.060291488 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.924532141 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884544829 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.90274288 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.903045105 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885818863 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.897432926 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.905417237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.881470294 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.901437687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.907515744 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881131226 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.297788033 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.013299771 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.00976997 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.881434199 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.912752046 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.907327097 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.8812728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.953430165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.881531521 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.881028441 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.953310994 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.016172465 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.956854272 seconds)
  done (took 208.122355705 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.905988499 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.90828964 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.899919631 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.916234578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.899541338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.900938514 seconds)
  done (took 13.241475903 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.903463924 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.884718084 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.884184513 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.883658769 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.885658123 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886426771 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.885702187 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905074809 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.88767187 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885138864 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.886725774 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.886198375 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.887553346 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.888526208 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.885380813 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.886008156 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.885044739 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883062917 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.885035593 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88461972 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.055858846 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.886895899 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886519639 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.901582029 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.889253132 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.885571151 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.90721585 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.885633718 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.8841928 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.908628617 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.888383585 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.886549897 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.90462616 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.906432255 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.889436738 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.903906024 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890880656 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889151806 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883294938 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.886780942 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888062069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888095701 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.885082341 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.887503131 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.904093681 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906987664 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.892045823 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.909617433 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.8862714 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.889334869 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.887707261 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.887594856 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887008278 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.889294539 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.907275978 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906993361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.892388594 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.886892745 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.88684805 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.904884078 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.887877061 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.886965456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.904957802 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.891154354 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.883556822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.889441918 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.903313259 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891724501 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886694578 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.887276374 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.889660165 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.883925293 seconds)
  done (took 139.146838733 seconds)
done (took 563.197768754 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.128317938 seconds)
  done (took 8.941396724 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.971294017 seconds)
  done (took 8.869744206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.457360715 seconds)
  done (took 10.273093681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916819306 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.90984356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.905268875 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.898124035 seconds)
  done (took 29.456838829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.235951974 seconds)
  done (took 9.054861824 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.89342936 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8782962 seconds)
  done (took 15.65047114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.937609589 seconds)
  done (took 8.755441449 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.076613849 seconds)
  done (took 8.930881458 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.902453194 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.897603627 seconds)
  done (took 15.628892643 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.870153087 seconds)
  done (took 8.687264851 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.627160413 seconds)
  done (took 11.450826601 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.889225444 seconds)
  done (took 8.717417731 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.986924408 seconds)
  done (took 8.805200874 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.997959982 seconds)
  done (took 9.814476981 seconds)
done (took 164.852909214 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.900872304 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896679924 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.900278863 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.895875316 seconds)
  done (took 29.40910957 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.921862821 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.921973098 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.921913263 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.932257273 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.923834838 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.919809879 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.913980643 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.915512655 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.934986627 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.926820615 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.923216276 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.925901813 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.922939531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.914676651 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.925200034 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.923296937 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.932281922 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.923737565 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.916697126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.926936587 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.890489765 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.935363294 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.925747696 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.889758946 seconds)
  done (took 47.927056637 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.104505997 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.976831783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.060352823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.956674909 seconds)
  done (took 9.915132015 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.943124509 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.943497822 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.952118896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.994443902 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.028700227 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.953417223 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.919651502 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.910928128 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.899154093 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.942615682 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.01957478 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.959447352 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.026572471 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.890278567 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.074965835 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.891296352 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.889366837 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.941150472 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.996883534 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.007869197 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.891355081 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942182398 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948306712 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.960867151 seconds)
  done (took 48.7470812 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.891051505 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.898960691 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.897613582 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891922153 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891030271 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.890448349 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.898168814 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.892289425 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.913893804 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893656235 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.890615129 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.89224225 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.890653047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.89112631 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.891359671 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.903982189 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903616637 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.89129581 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.893240338 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.897577391 seconds)
  done (took 39.724970138 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.901761266 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.756362403 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.251806474 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.157258317 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.903914674 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.900973538 seconds)
  done (took 31.691222563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.921777655 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.971206524 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.914540166 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.965628692 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.043502927 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.914351294 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.908786287 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.975208084 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020682735 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978207963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.926670715 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.935973609 seconds)
  done (took 25.300412107 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.90431269 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.903342004 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.903700355 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.91690965 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.917712025 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.915087069 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.915201542 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.904249729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.920077153 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.925514097 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.917182134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.921231118 seconds)
  done (took 44.79003884 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974515708 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.930195063 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.897650627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582668385 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265530834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097762088 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509998312 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218169375 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.890631019 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163133426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80565027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989736085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145750227 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387279684 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919193172 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364108318 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178134831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088327635 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910450532 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511553521 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945428589 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.070827804 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.635427613 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939151964 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098569871 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.014290734 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.188480576 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888698412 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021597301 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927468247 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900039002 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889422839 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159191147 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261412294 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990770374 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895512522 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532051207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.600355367 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.944021087 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.523595022 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.526263246 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.994780166 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900568629 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888816413 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824835529 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047822806 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262628276 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.892738023 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.599639155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89147216 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902617309 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983793609 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.892524079 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.701920036 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826455367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.888642569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.887404002 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914655108 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464162218 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952517242 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068160685 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.862316459 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.998183055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602127312 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267415698 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.032845549 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.892732655 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895246418 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826186035 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.517396329 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941665651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21701536 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.90898111 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541136881 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179129004 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.85396744 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832259468 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149666001 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.426605389 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.863084594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11995876 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88761954 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826202293 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.83591653 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826420975 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14862309 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925527693 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.652465347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943709397 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226634548 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89766692 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912734186 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91406019 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113827128 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.776248191 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891621804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.593827156 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031863707 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911676369 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220014759 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824219715 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.895974403 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149767593 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.098083476 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.966714315 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.400151524 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043642395 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458537856 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.942401214 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.047344234 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938396484 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.154565589 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947180494 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957819248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937009139 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892068463 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176218889 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473350454 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.023931971 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.861181534 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020620106 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204059491 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918205941 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972833429 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903028865 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894398938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601630358 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439930192 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.891966495 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.89758692 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971691743 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.940247105 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.894905284 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839207333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.516699902 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.823696004 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.907117446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117714446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.467546632 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202476345 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826374092 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222928969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946546162 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.115698691 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.534523548 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.959755813 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156328441 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979325404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009645126 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942471738 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914407964 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99191566 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916859458 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.052099014 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187370335 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.899466029 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.900234048 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.6344764 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928216567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895134932 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.901311501 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.663109283 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156075068 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915375369 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900713928 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.785373204 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.910907061 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958139493 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901822135 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904406871 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.435476121 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622161124 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.90193457 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.479849712 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119291646 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908254945 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.616681746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006099629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.978082929 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166559181 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948250847 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.830935866 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.608642446 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.588064074 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897308932 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832017201 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.893679223 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906606809 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910585229 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.11266479 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163972027 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935064879 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.544965763 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.935144646 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90897387 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902788596 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898594187 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.411081718 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968411294 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090503057 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940986797 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04143479 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.90884593 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833337309 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902323025 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902068991 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901122325 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.900371492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93275361 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.538093852 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27915431 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159667075 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.528534219 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911161078 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.58836325 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.954896582 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.904076944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.475524074 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197610527 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.938210841 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927075098 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.912222649 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.623515278 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.605401248 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469454991 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199870035 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187716547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319738607 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.109827014 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92845507 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236304592 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835541006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458194097 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958164336 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239974235 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84360977 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984132937 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.540669096 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234481919 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911100476 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128346133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273985139 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.531917545 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024623268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112085945 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935956167 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.052678684 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85944842 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.424841735 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0463435 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.52052455 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091469591 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245415371 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.479978434 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.010106384 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.918304419 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564173593 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983079776 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.612399105 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07509487 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.094567835 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.733310796 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36352922 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907086225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.128565344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240008904 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.06944434 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.023267631 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836831033 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912768572 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.914306621 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.904713347 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.899896954 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.780358236 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.152649238 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911151674 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836717176 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.023604965 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177059968 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.797066288 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.907013277 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902016444 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195568993 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446814931 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065111699 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.002282053 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.419160983 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91006658 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837188977 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835101533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.594583503 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909835689 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880093011 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098332332 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.020440527 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832425897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98226729 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150933664 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160214506 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.916992519 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.169932117 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174100899 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619157866 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926322194 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.005293933 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.501826099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.997146891 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905488227 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14063043 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673784419 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13114743 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.920267541 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.852923161 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.921764241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118842663 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906956921 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.702474065 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116279127 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.628346604 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.907093551 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297371492 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975130572 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.758385023 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.934464338 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.013707658 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930320253 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986241904 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918955222 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913548345 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917692129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953692404 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757187355 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.014271191 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.922230686 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999366686 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974515401 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.428199516 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.910797604 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179561676 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246558439 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212095106 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960182858 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907469706 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907385288 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840436106 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055240363 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.133836116 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182475032 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.036147576 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.038470318 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931579103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.492935266 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110449675 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147292684 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183292005 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.802923764 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417433687 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948141815 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.908415901 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917620118 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.118311635 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110710912 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19611096 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052383052 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.997993518 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266313257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181510667 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.908987235 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909347732 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499627662 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.003508405 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.577540912 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.94648351 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737822705 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1662032 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919757468 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282590663 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929948293 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.066997141 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.682919562 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563935336 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19998306 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885037493 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.964095162 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169103927 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278396181 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217107193 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977493241 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921639002 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.02063485 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058501616 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.790294141 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910811845 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908060784 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958223099 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.615580987 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.920758969 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174546665 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213972353 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.906570646 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.797368003 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933627498 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919385787 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134308571 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161263675 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159450048 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918919449 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916213218 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.725991181 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174135395 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962395912 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84571324 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.912500616 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007948876 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15919507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9303761 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.364718043 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.619840027 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172322642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.908470707 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931320503 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07572984 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259759483 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216220895 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.440142577 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103934365 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494611597 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488232277 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210383282 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.914698965 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.071123743 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212759917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.911976618 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997253871 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947664402 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.169344089 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216936036 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.913787501 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559797645 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.875115803 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.251541075 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492093468 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845651099 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916828434 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.973864498 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907946007 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041148595 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917609013 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.810920535 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068131784 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692267508 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193229047 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.913114623 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.898343875 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.538023226 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.178398208 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960019566 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055257061 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910515253 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.619646032 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.265771041 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168051394 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.994365998 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.920477529 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.916736736 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916035193 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90146384 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107536504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.123845268 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175238752 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.013679271 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.948604944 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913310828 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.130168871 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125182012 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.717483727 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030207405 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994652265 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953635957 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.820610756 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.418745763 seconds)
  done (took 1686.124547963 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.934713607 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.945683084 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.990668903 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.007097208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97326249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983683287 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.010689839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935631428 seconds)
  done (took 57.626836738 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.930115546 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.149237229 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.936350102 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.929690099 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.948393543 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.930364016 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.110518291 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.946591849 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.955527198 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.939870151 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.933320743 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.946398128 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240754323 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.954319935 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.931730807 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.91768575 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936655922 seconds)
  done (took 75.500105558 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.931592352 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.974934259 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.936992434 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.92533345 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.11063536 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.92112368 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.025473543 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.945014168 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.92997256 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.078954438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.556992869 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.935420095 seconds)
  done (took 88.122121465 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.940837017 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.937801816 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.939165945 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.938926247 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.93951741 seconds)
  done (took 11.550088612 seconds)
done (took 2198.268880147 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.173018813 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125105657 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140527174 seconds)
  done (took 6.11412061 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.078490648 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.125055354 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.245140555 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.250923923 seconds)
  done (took 10.546830402 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.21882416 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.31668695 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.145637571 seconds)
  done (took 8.524627905 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.312819416 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.916184554 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.02192087 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.911925753 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.910259438 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.913360608 seconds)
  done (took 22.581121672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.915303726 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.918098911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.915383023 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.919197407 seconds)
  done (took 9.51261914 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.898118226 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.762973934 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.8984431 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.91186484 seconds)
  done (took 21.31596546 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.664577889 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.675407858 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.667932952 seconds)
  done (took 9.854317298 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.481249451 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.838701219 seconds)
  done (took 9.16444204 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.177999791 seconds)
  done (took 4.023325569 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.047967983 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.178478383 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384650014 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.413665776 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.471220767 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.797273377 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.238575355 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.178393245 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.316551775 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.358991578 seconds)
  done (took 25.231055698 seconds)
done (took 142.140099024 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.317056205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.175126058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.134432313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.271183309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158499486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.166029107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.13331555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.257519248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.783738746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.779647529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.271502668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.157460844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.093622339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.172838804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.097665877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.173952971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.157704085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.335547504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.965877583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.165863396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.134491878 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.912998943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.115231948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.92931619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158600183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.087783477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.508189162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.172727955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.127677854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.540053928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.117594623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.348696635 seconds)
  done (took 174.769275293 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.724387053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958502715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941790757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940579981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.449492698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.948348395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931161715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931676779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.153767533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.17121673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.949699481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.407134043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944530511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932173991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937934409 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930307193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.251003395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.75178828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.940076113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.942899479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950214076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.350757249 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.947961829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.389137508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.275803322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947993994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932170346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949392362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935484906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.91863319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939880147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932137796 seconds)
  done (took 210.468962895 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.934509957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933178993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930546395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.933662275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.933639622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934746295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931925059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930997346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.691869324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.685984726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.350617713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.947987263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.941143789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938978409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947226327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.940017056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.954258559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953285656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.952306156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.956089599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.957805824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.781310027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942689333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.787649756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.94635807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947920643 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.940638788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948675207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.954287626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.953607546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.950450163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.938764757 seconds)
  done (took 223.635881988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.12092593 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.93300707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.930608923 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.869405098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.93160863 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.929507774 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.926477584 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.121653538 seconds)
  done (took 19.636571562 seconds)
done (took 630.368577217 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.48513266 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.253282025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.110462442 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.953333681 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.199255905 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.00723617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.950325655 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.019718285 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.679425899 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.022393317 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.609025976 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.983580563 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.685469442 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.973806586 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.078857231 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.006428359 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.533815735 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.608208838 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.146969711 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.029423501 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.121363831 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.9540135 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.025576988 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.718543653 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.720432499 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.985746302 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.122878179 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527568106 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.959230711 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.114582117 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.68870352 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.33681313 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.97858662 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.964574046 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.00247615 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.98469694 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.295677599 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.978439445 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.093163406 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.720758898 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.005804953 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.555776702 seconds)
  done (took 106.048228272 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.923351985 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.923702775 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.920054851 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.923429413 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.9224099 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.922564708 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.922536587 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.919707239 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.923023184 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.920941636 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.921534889 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.923589564 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.921339366 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.922947175 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.923491802 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.923735832 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.924142543 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.925287184 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.921567432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.924364456 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.922304593 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.921540935 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.923280202 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.92133062 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.923390314 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.922267285 seconds)
  done (took 51.858896109 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.93664104 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097806265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.175564633 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969256804 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.962329947 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.95470642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.971031717 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.938111223 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.954314381 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.951707088 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.04964595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.937638193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.971091702 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.175167519 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.964726836 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.934237399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.934121395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.950440547 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.104482141 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967485985 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.972523605 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.93742326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.970454347 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.960980252 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.951849632 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950496962 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.954436781 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.386716036 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.957160818 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.05052394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.015989831 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970960076 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.344976959 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.182712066 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.008394189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.940786789 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.934180954 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05338418 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.953842298 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.949986724 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.968426397 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.955716191 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.178373031 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.452689392 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.964391523 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.934145325 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.39578128 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059711984 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.993062787 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960124266 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.179689794 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.967989973 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.936805799 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.95273004 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.987627099 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959149997 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.951713551 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.260880161 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.962656634 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970109899 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.938816964 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.952869341 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10724806 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.959951912 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.09698311 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.961626489 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.958092506 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.951569554 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.178475307 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96673312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.455369644 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.968479273 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.9393504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.052703799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.102327607 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.422700484 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.967186743 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.11246765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.365297922 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.978630542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.962070264 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378777558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.981984375 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.96226199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.942514917 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.942360228 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939914744 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.983476363 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.972571527 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.3915067 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.460337841 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.275928773 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.983371894 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.971422877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.957657677 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265418041 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.946872403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.941048234 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.17516047 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.47423439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.968569415 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.963471811 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.446006637 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.971622771 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.974973642 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.965180513 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.184203412 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.97206559 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.983981362 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.942610316 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.964154939 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.959355844 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.977539102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.964296444 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.941835702 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.435777726 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.073188167 seconds)
  done (took 241.239663202 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.955427126 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.952381817 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.9514307 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.961841337 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.95096238 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.95711705 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.950656955 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.951064131 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.957380269 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.95112831 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.952424149 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.954934872 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.953010358 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.956699049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.994801234 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.95994005 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.565514514 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.952980784 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.953809027 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.958974088 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.599371784 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.958560805 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.951067 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952112211 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.953046827 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.953269264 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.954219217 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.986885509 seconds)
  done (took 169.921898667 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.94360094 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074974338 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.957938476 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.986404844 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.951320526 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.941443008 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.982395435 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.974409954 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.963194397 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.941653823 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.942115344 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.018736365 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.952556308 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.041318589 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.98972345 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.972151985 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.063718911 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.949003829 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.940440714 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.943315146 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.987570258 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.940548169 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.018679101 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.083138392 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.959301248 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075150892 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.949051442 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.944134031 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.959319293 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.07537687 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.95759424 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.003944388 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.985592739 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.978106354 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.079184529 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.073864861 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047023509 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.972722545 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.965101662 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.942463223 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.943034749 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.934173269 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077184606 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.963109152 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.961807544 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.052145309 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.962646044 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.945591239 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.953127281 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.942661425 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.974633945 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.978268981 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.025614476 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.088975959 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.976363229 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.968989551 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.986615261 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.238017513 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.954817772 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061320728 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.938062865 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.062396191 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.962508612 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.933929631 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.94564386 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.951745566 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.973673201 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.97624398 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.064849655 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.969010779 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.062494246 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.979048085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.95250286 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.94410419 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.948181432 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.077709073 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.081439364 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.980430178 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.997019645 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.992068959 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.941390163 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.963505393 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.936490194 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.979577595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.949505053 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.061623397 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.083140695 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.953780063 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.948586334 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.947863845 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.948321494 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.988761239 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.084354077 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.997980793 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.043812805 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029706555 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.034977714 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.958466073 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.959284221 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.948550684 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025816446 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.9608075 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.958879464 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.285660129 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.033538885 seconds)
  done (took 211.207816056 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.057678255 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432449164 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.000780542 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.0193786 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.252762687 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.386485055 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.756331581 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.007339994 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.994808786 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.037593792 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.154527377 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.052873569 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.013505469 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.997023496 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.416838869 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.003357757 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.995340587 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.034769216 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.000297115 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.551163389 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.311854759 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.13015229 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.011116254 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.120827206 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.993111131 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296353051 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.334367027 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.409240269 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.049021762 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.35456625 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.335152198 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.695679045 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.214185071 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.23317815 seconds)
  done (took 77.535639474 seconds)
done (took 859.668734561 seconds)
SAVING RESULT...
DONE!
