cset: moving following pidspec: 21050
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.267968 seconds)
loading group "string"... done (took 0.561129717 seconds)
loading group "linalg"... done (took 7.07357045 seconds)
loading group "parallel"... done (took 0.166789573 seconds)
loading group "find"... done (took 1.131207063 seconds)
loading group "tuple"... done (took 1.718099601 seconds)
loading group "dates"... done (took 1.181416107 seconds)
loading group "micro"... done (took 0.222277689 seconds)
loading group "io"... done (took 1.010299503 seconds)
loading group "scalar"... done (took 39.004571782 seconds)
loading group "sparse"... done (took 12.849179902 seconds)
loading group "broadcast"... done (took 0.993490104 seconds)
loading group "union"... done (took 13.463310765 seconds)
loading group "simd"... done (took 4.565080807 seconds)
loading group "random"... done (took 9.217407845 seconds)
loading group "problem"... done (took 1.961434419 seconds)
loading group "array"... done (took 21.927011409 seconds)
loading group "misc"... done (took 1.988068305 seconds)
loading group "sort"... done (took 3.34469665 seconds)
loading group "collection"... done (took 18.604325169 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53888126 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139739368 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11560947 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137990008 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186996352 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1311638 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142229558 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083828507 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.929422554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159855872 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137352609 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.495883257 seconds)
done (took 5.037278114 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.214514134 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084915869 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096412386 seconds)
  done (took 0.966963265 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064817749 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124717248 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080640095 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066421305 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065323473 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080936621 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065121495 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064477506 seconds)
  done (took 1.339796456 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072785686 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06737025 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083807335 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066079912 seconds)
  done (took 1.080537718 seconds)
done (took 4.460096076 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.903541839 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234949294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187624801 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448825116 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146962291 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184944569 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681868843 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31162605 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208233542 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099065665 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103026051 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.375120112 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10565433 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689294654 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074770104 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105288294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170403671 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428986084 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081051377 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082132389 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103290139 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145213862 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100015079 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075855523 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166644269 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067828446 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146226955 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096569189 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066883887 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.238940551 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188237218 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.745372545 seconds)
  done (took 10.59297239 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095584445 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116658988 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067713984 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139225004 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.116854522 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069429616 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069557267 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082350174 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089544986 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157312978 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113464441 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103649775 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081351818 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068428195 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099718576 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209862831 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106134494 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08355514 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087017636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073726096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121298018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080754085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093434019 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075877418 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151729699 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195520506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111101719 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111050891 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067692241 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095884948 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129222991 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125320269 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068888884 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08235552 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.153792932 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094506902 seconds)
  done (took 4.594277746 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.06088405 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.172080553 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089724612 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151940422 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085472858 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126066418 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065562209 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100176176 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244488437 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.08234353 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112152982 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453925889 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127977894 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107346767 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.082691963 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084543582 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063507689 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06623801 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083856005 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.51501587 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144106221 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100088938 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102973122 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088086107 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069282116 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36666639 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066608577 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064798588 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08441024 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058252562 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14327975 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066600618 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208895155 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086483139 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087739304 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118089712 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184189545 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095393755 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121808077 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081776885 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066012813 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168179108 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071680453 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08341191 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086701743 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119796818 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118598003 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067338388 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081899355 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18083944 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065486083 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098917336 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.895973068 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166901173 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09011438 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065162172 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283220681 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082665901 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083811578 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063776983 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259213305 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150640717 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06642528 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083040756 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064994452 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066402574 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.755669655 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066715845 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74213326 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07417282 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076128256 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084996283 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066461123 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088463422 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071628497 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100423247 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06624676 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066415557 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083338849 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065191816 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079233812 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068244404 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098786923 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206665033 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066559676 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065457334 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082061281 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085376237 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11276256 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068892243 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082387647 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114347344 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068536617 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067029731 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119145561 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065578407 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101768232 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083958113 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113271493 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083244092 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125913195 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066660652 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110374361 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070965736 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114405286 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093468894 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072410009 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152535548 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063282663 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082035949 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066102804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063762615 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084796776 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067418912 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097318025 seconds)
  done (took 21.306115517 seconds)
done (took 38.341802647 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.299870299 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09264461 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091777257 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073467702 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09295577 seconds)
  done (took 1.516517006 seconds)
done (took 2.351515268 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147591609 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099479531 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080870277 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095078177 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062680522 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117949049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1146323 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079884054 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116545754 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063601126 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11318669 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06333368 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079079821 seconds)
  done (took 2.100849012 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081338504 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08280062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086371116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079691388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078933253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080933469 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078172517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104735782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079162219 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088120685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063059822 seconds)
  done (took 1.735228728 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08015371 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081446321 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085821065 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079493613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079603982 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080536573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077767322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101690232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07878119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089602473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064133549 seconds)
  done (took 1.735327968 seconds)
done (took 6.397259564 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077425507 seconds)
  done (took 0.90519172 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.714233827 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.602939726 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08231183 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.131287617 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.233360467 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151927274 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.439607675 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108574933 seconds)
  done (took 10.472226963 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09993989 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101593028 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067872499 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087064403 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068818303 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088394507 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072053282 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066647683 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088059062 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068748838 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087600849 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071513399 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087104426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068844181 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071177864 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086197581 seconds)
  done (took 2.171807297 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.102512763 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.102697837 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091882004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074515559 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09058073 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072121716 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093068287 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07411689 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087643618 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072110609 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092517056 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074057822 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089162012 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065027067 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091383876 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07552675 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087661263 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073741665 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092042987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073837311 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092316488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065244763 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088771734 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073760191 seconds)
  done (took 2.935422814 seconds)
done (took 17.314746321 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131819172 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076047187 seconds)
  done (took 1.039417072 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081540113 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098353951 seconds)
  done (took 1.020033076 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08173791 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081279952 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087020783 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094325517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065357698 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083324418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101482281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066746902 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06498143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083516823 seconds)
  done (took 1.649923586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068737184 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092743499 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071171805 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097282034 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073066605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081139659 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072600817 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084104154 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077234604 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078945965 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070810574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09940137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069767156 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100343035 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0715966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085530984 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086016818 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067833743 seconds)
  done (took 2.290031769 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066350657 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065873157 seconds)
  done (took 0.974248774 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067104331 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062436995 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083151839 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0647569 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079945465 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061894463 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079941516 seconds)
  done (took 1.341097083 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397675542 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107679492 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243683487 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089143561 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104174043 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272563626 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085540254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069677992 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08916867 seconds)
  done (took 2.338658921 seconds)
done (took 11.488569822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079727089 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083934586 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111087436 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42484596 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108584398 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065652638 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144842918 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.205196384 seconds)
done (took 2.064768102 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123849587 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.601876839 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398509655 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211790107 seconds)
  done (took 2.062690604 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37551479 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089994247 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074786493 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067435961 seconds)
  done (took 1.458630953 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066220877 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068537471 seconds)
  done (took 0.984095127 seconds)
done (took 5.475384715 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066701419 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11378408 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065967165 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06379517 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084690957 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063612384 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063085453 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085465429 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066230221 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06473598 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08463741 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066118176 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082391057 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064349418 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063753371 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082720248 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06429678 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063440528 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081510074 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06713445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0631712 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083458903 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064112126 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080758528 seconds)
  done (took 2.634536045 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086050642 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084098922 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072080098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087959165 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071834601 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088126506 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075174742 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065998459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089067713 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068140801 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087138003 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070138044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085254183 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071413521 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085079504 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070968911 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088035891 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067266456 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067756984 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087890194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070845991 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084885103 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069617711 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090637935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069682002 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087457108 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068511777 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084034346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072258044 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086475355 seconds)
  done (took 3.203690228 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070960643 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062991724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081525608 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070776445 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063093827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083838182 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063449503 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081101815 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065021913 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063509294 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082980934 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064466464 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063466485 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082717442 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064652422 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083860147 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081678766 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063483845 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082232388 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064889913 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066299337 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083096758 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063484385 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08136621 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064219121 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063401328 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081556272 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064603572 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063720642 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081773177 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066957333 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066254932 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082386952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07039766 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084997731 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064118644 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067210668 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080754359 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064620438 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062829221 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081318203 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063921482 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0802869 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071436295 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064107109 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084024955 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064093923 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064017975 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082348288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066855249 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081132299 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064422641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065196362 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082173612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067982397 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06261569 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082701408 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063618313 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081581736 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064033023 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063012584 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081097098 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066384996 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063889386 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096997194 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070359683 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080840469 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066390046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064276462 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084405251 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065099333 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094477572 seconds)
  done (took 6.053900155 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116040187 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089770481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084218769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065363993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079488938 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064569459 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066207175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08213872 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065745878 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087383738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06440047 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064569606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083717909 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076250671 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08180691 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066527379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086493888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063043685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063121071 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084695895 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064032526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084381852 seconds)
  done (took 2.541930088 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184560536 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088107635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107914514 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091356115 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066387563 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09070727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068309633 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088522405 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069320789 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08619142 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067766287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087905603 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067227583 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086217343 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067970374 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085760094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070230703 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085328141 seconds)
  done (took 2.418752839 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077645912 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06511225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107004894 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064447316 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085008332 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068184172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089462714 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073268204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08729631 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066719077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091383762 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069235283 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085917572 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176516343 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067063663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084011658 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068188892 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083939444 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074273923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089019566 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070621389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091604951 seconds)
  done (took 2.696662369 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08099959 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067334085 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101795168 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085401107 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06349148 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063818366 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090045607 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066603157 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089623069 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067551815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064654388 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082877227 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069420326 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084002527 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070729247 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083806771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067943415 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065401426 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086441895 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061759379 seconds)
  done (took 2.375554404 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086768054 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084852205 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067662162 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092440389 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067525024 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084610601 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075816737 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084658423 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067978492 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108770791 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067505451 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084920345 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075077186 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089717521 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067184268 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092672438 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074788957 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092405383 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066620729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085279481 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107590727 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068551363 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0922589 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068087595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066656225 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085758148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066638965 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090953534 seconds)
  done (took 3.13065776 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067297949 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066296427 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08157647 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065101806 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06414601 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08246169 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064754696 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063446058 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085215141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064000238 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06466226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084698452 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065601552 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083057149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066810242 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065893226 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08358511 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064361218 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062895773 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082100471 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066158688 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06522379 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084219715 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064708303 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080478299 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067122634 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063742649 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081019318 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066872862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063442629 seconds)
  done (took 2.996659669 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076279709 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091089504 seconds)
  done (took 1.036429225 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064924796 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079821426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082743024 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069717484 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088405053 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06679499 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091214731 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07093372 seconds)
  done (took 1.481456461 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081814982 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075903255 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086441694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077404011 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095142067 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082171419 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156023596 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08570357 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072637606 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082976331 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080792106 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064593083 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091643845 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066430436 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09037017 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073407991 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063273706 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090161457 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068388718 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084275887 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068195242 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095093806 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069756897 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062402265 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086930798 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07459444 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095586045 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067141067 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087805916 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073779269 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089073361 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06130524 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065834866 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085381262 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064834105 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093574874 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082560071 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086905958 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075983108 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066359672 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094672607 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060982263 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089658935 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072545138 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094353524 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066446266 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083849184 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062969937 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063893022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086693873 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062649297 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065858139 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079628714 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072205094 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087510665 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07649091 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083054754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069408723 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068494939 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088227945 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073532115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085796494 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069400189 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065408141 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091285404 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070799078 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093537965 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061948363 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059546168 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083465572 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075047123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106352316 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071630025 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085233368 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067167185 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081706929 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07002082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066311715 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091250877 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072510503 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085331168 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071615301 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091486984 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067111926 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068048527 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092484924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064479061 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087687423 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064440485 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100823485 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065708035 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081988353 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0658285 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075752179 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088877598 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066264379 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081997609 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074526738 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060708057 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085874975 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067325156 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085265988 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07787734 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089200459 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071928834 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093145857 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074911938 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065575882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089000547 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062737243 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084798459 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065894624 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071958014 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079805475 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069044327 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085371817 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067433196 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092378242 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065075273 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065668263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092962218 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071719373 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083622699 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064313581 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068242162 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085373265 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069913332 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09217192 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065197058 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079443538 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062775614 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068878178 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085141338 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070355581 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088921804 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070004932 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060572766 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083530366 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070294032 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093785257 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066271251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085985631 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073330849 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066639224 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084163403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072160866 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087444187 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066118189 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089656699 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068154134 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061105823 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088144875 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068896499 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082759525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070759725 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068451355 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087957271 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066588418 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083312223 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073014972 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084216263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066524725 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066045423 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084584559 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077119033 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086732706 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062963233 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064304464 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091945595 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065143605 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084284149 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066466236 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068509266 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085842645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065472132 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084018821 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068641093 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094013789 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071596587 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066274196 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090875736 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077372665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085306834 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069498634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083430374 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068384502 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066746801 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094513854 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071659181 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089655791 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06908345 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080768332 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073212906 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072788098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085169058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063986205 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082980813 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070121237 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071338929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089345594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06630264 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083387481 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066818199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087441598 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070034719 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065679283 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084468807 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070681468 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084064254 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072498874 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085423998 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076435165 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086738106 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063500682 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068227527 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083982774 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071939815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079708245 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065587767 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065604639 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085799315 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065878344 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067865395 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080559551 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072566199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092208575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06710512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064806617 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086052888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072769956 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0867864 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070443982 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087813041 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073455632 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094274821 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066946467 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069772009 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095755694 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066113237 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07841499 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072524688 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064714622 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084334486 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06522609 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082594403 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070396285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091450482 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074097356 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060282885 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087860146 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065848385 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06498745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081617557 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07046657 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088500644 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067863589 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091282981 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067793361 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066359027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090030858 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065620492 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085887277 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068648452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068556917 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086846494 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06870528 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08469841 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069783674 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064999475 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08335319 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067604694 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084852089 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067367674 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070137099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085810371 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066353348 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088092574 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067471974 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085109977 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0683603 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065669532 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088009475 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067087687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065559835 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088045337 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061563254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092721851 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065922682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091797558 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067846309 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062525931 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089989171 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068948137 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089287209 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067581375 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084656827 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068923066 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065655602 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088553769 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0732135 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082418122 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078189426 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092259153 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068404353 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069125578 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086595457 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068228751 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064865598 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08752096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067214422 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08574854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066755016 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088504082 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070197948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066275918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088334445 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067842111 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083855414 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069016904 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061598642 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084982643 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066956476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065776171 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095629494 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066607373 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085455218 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065230395 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086125233 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066229329 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06342407 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093833654 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074099502 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086866377 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073595057 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085111276 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068785253 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094883346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064793568 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064199347 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083781901 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064419525 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091457 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068236765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07466092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085537937 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065696294 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082184248 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068366183 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065325436 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080741911 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064330556 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08796155 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066552695 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065633815 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086421999 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070108415 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085390168 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076371857 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064690481 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08702758 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066295347 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083412117 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066259289 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064686764 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088827095 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067268701 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082348011 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064852557 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066225812 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086967181 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067495816 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084510786 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069250623 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072820268 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085629743 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068614875 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088349683 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061875636 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068586008 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08550335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066107682 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084600962 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070278828 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068541965 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088420361 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074585029 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085272828 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067924685 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085138327 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065174812 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065451967 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085459653 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066961525 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084158759 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069212058 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072820533 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084130211 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069409409 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084998609 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067939672 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072179673 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086798058 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068677373 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092537285 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066484894 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086500717 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075334678 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087371846 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070805115 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066916191 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087070223 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071830912 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084348139 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073929081 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066205044 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086744937 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067657903 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083076067 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067528629 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066113221 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085322596 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072329872 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086252811 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06651896 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065137152 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084799907 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067139801 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088590432 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074202121 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086654078 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070408372 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062191485 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082700202 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068185926 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063622517 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088272439 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069145309 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091690181 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069188755 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085212042 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066755262 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075182535 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092198118 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070178265 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083913528 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070917285 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06675068 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088323382 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068104928 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086069504 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068917929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070270801 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088846751 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065508822 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092528478 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07033482 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086032079 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069295149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066794892 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086593204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062293854 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086152696 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069529444 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071416873 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088798545 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066453338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095938701 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065272916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066069558 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089254429 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065178593 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090505007 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062371972 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08558104 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068643043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067287676 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081351182 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066485504 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063852288 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089310614 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065582821 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081111694 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077305106 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094906209 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070039185 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064758614 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085040227 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061872577 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081003783 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067913722 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066486122 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088108909 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076578823 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085475535 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066153078 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060836687 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086213006 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069820945 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088365208 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064852721 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061573771 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085728457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069120811 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091554226 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065701713 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066110372 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090324995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068390604 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083595768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070331967 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063042853 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089479446 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0785472 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087199646 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067772915 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091970885 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074013508 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085288644 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063551302 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066027839 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089571704 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066333352 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08617698 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067958422 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099720354 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070507362 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065917708 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084956439 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069190925 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084911709 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075665204 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067017458 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087461286 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070878177 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087798285 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074176287 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088443873 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074698505 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08818825 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070134016 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06534353 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086500673 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065661678 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064100946 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088318712 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067425051 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090340038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07283179 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086123145 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077399213 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095239544 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069221191 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062712931 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086019408 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065871638 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081516599 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06801259 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064151642 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084742289 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064634385 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084097604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068252813 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071413527 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087426541 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067411472 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085574165 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062692469 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068353141 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0890093 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068588009 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062570358 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086507143 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067654628 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089705025 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069660691 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083498814 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069151889 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067368947 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087047819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062379168 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091626307 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067162577 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068986654 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085489636 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067925442 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085125848 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071334805 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070933666 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087756857 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068757234 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095209198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069609821 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082599773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065134012 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071797831 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08508025 seconds)
  done (took 46.383713253 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105407321 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083999515 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061554437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081482701 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074682836 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083359142 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063392981 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06267664 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083327883 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065539697 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081157163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062680915 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088942088 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084865265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093385346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066256461 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083103786 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062896713 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081193359 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063762506 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089731825 seconds)
  done (took 2.535710074 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074580928 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090192244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072905009 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096394115 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066856041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091491857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07152232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090542534 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09409243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06809034 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094633829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071644393 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086440478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067705742 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085780852 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071668278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094563932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067954426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089950962 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072885751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090376986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073335031 seconds)
  done (took 2.694097012 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06762074 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065380084 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087832846 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061722472 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064377777 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081658548 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069387222 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083516457 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07029939 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064335688 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085410324 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065172699 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08726778 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065234677 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066501714 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084083336 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.139253533 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070328312 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065217747 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088149704 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061266675 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088039591 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061928569 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061463974 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085531858 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069295076 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086677913 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065095972 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064752918 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085569145 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066446617 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083408675 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068605793 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065619478 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084952052 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06592447 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064869798 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08674996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062059231 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083095952 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067223122 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061256002 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086620168 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067546612 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063478139 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084696858 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06708759 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085026425 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062228289 seconds)
  done (took 4.555335262 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083586911 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.140253538 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089249484 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122157799 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081273649 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09501917 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070157537 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122899452 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063359017 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086656904 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.101618911 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079925245 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086852122 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070595498 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092799796 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066442052 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085988807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065495721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088753338 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066418935 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088846196 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073774081 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099234434 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079757798 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090133005 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06522646 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085813108 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069914598 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099122605 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06996072 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091009038 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070897823 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100512977 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068096418 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086805627 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067657015 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102320774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085419057 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070594539 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06346621 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089130311 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070330784 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093169396 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081228963 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087366656 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070933561 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087074477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063321141 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099728518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067794868 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095029755 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099975728 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07077373 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085885797 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070949599 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100418886 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066139915 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083754571 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069490095 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098075225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063956832 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088590706 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080173019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088138167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07269691 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100262989 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071545099 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090460062 seconds)
  done (took 6.731613796 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074863926 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0918432 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080656217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100996756 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09182842 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073048721 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091991129 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072917965 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09236753 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076620552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092706338 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112590926 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067853637 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095491807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072507376 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093064053 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071630074 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093077342 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071073797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092766147 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090985317 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080331931 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09213528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078942098 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122005822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087730512 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073348604 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092020587 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079084972 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093012001 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103613462 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07228849 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0924937 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079648328 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.103951116 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091620586 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065300039 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091963323 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072893557 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09243854 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068360162 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099415655 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071402084 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088035424 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07219079 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09266103 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099666613 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083284301 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095461127 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096127171 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073167564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099831693 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071683356 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093040362 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098790379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105851174 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099716517 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099262586 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072435682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100084721 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09969925 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086831851 seconds)
  done (took 6.352313095 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087051025 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095943633 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075719967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083972876 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06462551 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090415005 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06423394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083344108 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075835614 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093870187 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076583774 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089549805 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071982974 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097153954 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089217828 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073107996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089355101 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069942797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094855666 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069076788 seconds)
  done (took 2.561579131 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075845908 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102775545 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068503493 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070833098 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091519678 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071270822 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090283228 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069185253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087162245 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070144643 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095771229 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076275966 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08700833 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072449921 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096112141 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071385583 seconds)
  done (took 2.222943912 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077698172 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097023152 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081004185 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088207087 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064859154 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083493228 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067211392 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061300508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084331939 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079333532 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088466951 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068252817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086759697 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065819216 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062813058 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09022096 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062635824 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084553252 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066948836 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100478292 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077282242 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085203352 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068065083 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067572988 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088717771 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070551569 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088444111 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064270592 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08579383 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067196441 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087160116 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074307267 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083530828 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066280409 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064073493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085321591 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066841692 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086648749 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070283647 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065093718 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085911207 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066266931 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086861146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068168763 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082702906 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067778909 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062054407 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092826726 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064048612 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086238432 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067204725 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088812251 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068303787 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075514202 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090890078 seconds)
  done (took 5.156629207 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079852709 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069101622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084117174 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063903599 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089086025 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069774937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068679259 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08973664 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067802047 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08482335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068172566 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08872932 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069295718 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068804334 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089063191 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069845007 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082768374 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068099573 seconds)
  done (took 2.302993282 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07322073 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065682418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094735788 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06640767 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086108715 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070687213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061786723 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086252237 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064963735 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086378155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067545054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067769391 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085923137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068901877 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086006242 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067668614 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068222878 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085781948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066570404 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082156588 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069726561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064113756 seconds)
  done (took 2.568822535 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072470354 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091914832 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163506951 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108803564 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082021152 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101196152 seconds)
  done (took 1.55352709 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090330185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099779293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066938932 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107523203 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074301047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087987057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069728014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087913264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077043097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102288467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06726547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097127688 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095882657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078516103 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093893218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073451206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088922747 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066963285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087951387 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084708982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089387534 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09608664 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068283286 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087826684 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06894592 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096471653 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075384414 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101629434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087730511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07632093 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093619638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068339174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096623505 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100129988 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071463742 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095887941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06903736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105199148 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072994277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096739223 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069035422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09456624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096089198 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072654396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097237303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068456953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093381654 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067599839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090015641 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111630512 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073847917 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097051348 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073678832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098303243 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095909147 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110754321 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081756696 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096404468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073293679 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101799171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096324807 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072928138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096343988 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101386719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073818691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096947875 seconds)
  done (took 6.652296915 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08133815 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10701835 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068747886 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102518985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096824004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06930944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088199821 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070137342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087941536 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069404539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129010476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067983112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097720041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096520781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069827168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088124027 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069204925 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096157697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067906557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112818634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088334677 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077317776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097099511 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095612751 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081785878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094358062 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068199378 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08898891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067666452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090415422 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072770263 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089439093 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096165877 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069111638 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096184753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069572641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088073685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074630027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089073921 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072995168 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09747431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106167519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06983697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088304888 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081620042 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090113996 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068167929 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089729489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068857209 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0890898 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080117796 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102483518 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102407717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076075428 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090969744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067542051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0903696 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067934574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090235297 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094315226 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076307685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08967852 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112758651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0697884 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088910006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077119725 seconds)
  done (took 6.567841474 seconds)
done (took 130.256296413 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216895357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188232191 seconds)
  done (took 1.338863047 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069594411 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09519087 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100037818 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128273116 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088365426 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099830585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119231707 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079584866 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065895558 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088569134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067432949 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088868145 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131781166 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066791295 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088000494 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069166644 seconds)
  done (took 2.386736174 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102152832 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195535402 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111548504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065407822 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100671607 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077876434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086779033 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078129314 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092750045 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067256687 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07655203 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096733758 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065574179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09669331 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07241156 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098665648 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065532695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0992166 seconds)
  done (took 2.593650819 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103551306 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146565021 seconds)
  done (took 1.192064143 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199913784 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124610568 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204332348 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416899922 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.2066397 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282953089 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179894686 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177730452 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156473653 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17588566 seconds)
  done (took 3.064172645 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098572388 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169547468 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313963795 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13815589 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086420251 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11509658 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138442416 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.108566637 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082550333 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102565583 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079465137 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098304209 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117991476 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075226772 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095420347 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077196443 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121132494 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073445342 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097541381 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07525303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118927505 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067023397 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09497695 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074554922 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098354573 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078008453 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086369196 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067060708 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074146608 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096556796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07760017 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112446393 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098686389 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130404233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101731771 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130617692 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077674315 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093018503 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075268059 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092422346 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077437176 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097055846 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.085268659 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09820463 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066567771 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097944229 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067161658 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066011561 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10113867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076643428 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101095491 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098108906 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129816599 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.077265471 seconds)
  done (took 6.291775435 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.741252414 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.132276492 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07231544 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.794715121 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110509859 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081299734 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.700170589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11691986 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204282954 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754972296 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086190456 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099128663 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198288275 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.211976011 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.919434332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262200198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.620336588 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10368196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129370822 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.128609943 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137133266 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148523873 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143223979 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429095593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096375029 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070191549 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132527261 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.097286189 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135532596 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103380538 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07255931 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149090745 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223435493 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.174385805 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073837745 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091214967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069599419 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.143294581 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234847787 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182428855 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.134751948 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090006395 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069678829 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135134293 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128315537 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090347182 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136802134 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.148737411 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.144678923 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093788281 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075184345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137293012 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.156384274 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.138805199 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078696711 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289301171 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276648197 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070181723 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119029652 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102375249 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2111949 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10187677 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.171667432 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134119067 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184568909 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069450923 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743784215 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.143754879 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06945453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095969217 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117499576 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072859694 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.157741536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.120921632 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366661772 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138119368 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094930031 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069302711 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220523179 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082201187 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091290086 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137596711 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074595912 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120326503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141489373 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163531361 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.144403077 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203769879 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139611921 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134398458 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09522599 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122815428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073102046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185930868 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.18776427 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.136521912 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.181523907 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158614141 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139582285 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.144930759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075102524 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168197172 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096307522 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101145472 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134609644 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.186203686 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121009251 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081015417 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094819647 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137107352 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124177479 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084245853 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.157446771 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.146082824 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.449386057 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14230715 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088857979 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085437488 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13700512 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136845859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096792988 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229635751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099580378 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164865358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119632623 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068572043 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118380458 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.137983076 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097326245 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098463735 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.15715174 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076581691 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.209956623 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187146651 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075088342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213422997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159950845 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074453231 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144799751 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118286147 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141702334 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098792693 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136027858 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073082419 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759731288 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139385818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120431762 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094263077 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169895258 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071397683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080026244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103795074 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067250719 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754294751 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10479085 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08021902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102929868 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073712613 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119436544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133009165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094786301 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13618711 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197201741 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075155518 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118109933 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103163247 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137385254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075166502 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104270619 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081632545 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105505492 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121433395 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071392634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104648154 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143181806 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.136273964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.188510802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.536329851 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092957228 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080681769 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195106742 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069094666 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256622513 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133398977 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194902219 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138811534 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099375007 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252949792 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138692134 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171825915 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105867608 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149255659 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066768386 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156338269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139698535 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069794336 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095728051 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139063138 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141844326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138410961 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928580347 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06882889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200470132 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09047696 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.145225571 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095016993 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077410856 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264517725 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070516869 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143842153 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161091914 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07410004 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103527581 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.66688904 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080950073 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159450631 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074729648 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190203153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139488797 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134407688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133462352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097421164 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137260319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182320521 seconds)
  done (took 39.89223346 seconds)
done (took 57.697445266 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273564298 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189032104 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.244904445 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147019354 seconds)
  done (took 1.891286825 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145044322 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104843179 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123475083 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087113118 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102083891 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088326969 seconds)
  done (took 1.615141946 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.413442291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293227641 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238162999 seconds)
  done (took 1.913510206 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.295973056 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.22762135 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447033764 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296830833 seconds)
  done (took 2.341466291 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.189564095 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114508275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066298478 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108880779 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158249827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255469372 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127060346 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186875615 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078770151 seconds)
  done (took 2.300831155 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.206215563 seconds)
done (took 11.231397135 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.154111934 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127584984 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.276408104 seconds)
    (4/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.222183596 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.150722002 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.203316962 seconds)
    (7/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.131953459 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072313458 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236155011 seconds)
    (10/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123568416 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156018634 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102598871 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074756382 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.17160797 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097132823 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.209298221 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080523678 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072443659 seconds)
    (19/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098322956 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095807349 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.113889326 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.153593347 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.271126636 seconds)
    (24/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098682819 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.280838277 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.251204173 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.279921194 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072469525 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095172924 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.074973041 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.212872713 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067362791 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09808628 seconds)
    (34/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074606638 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.189742948 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07397229 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199630025 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075822492 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.265969991 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17171429 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121212806 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.175833573 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190643002 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115484358 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104830885 seconds)
    (46/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.249858865 seconds)
    (47/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.182265097 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073091325 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.249449401 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.266409394 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074057383 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094819477 seconds)
    (53/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110602213 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098058963 seconds)
    (55/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063136882 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076208993 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.258933745 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096194099 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093751084 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.243122093 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07207542 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091812284 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078449053 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.27617199 seconds)
    (65/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094301107 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079074271 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.25469496 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069803875 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117786185 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.265467322 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069034078 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190013067 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052831436 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080102254 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12069395 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114607196 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171826669 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102425431 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.258621184 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072862434 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119999835 seconds)
    (82/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068082528 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052789162 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094312311 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074239527 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118665131 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097213973 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074907771 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069577027 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108354259 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077503954 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.067441964 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133991712 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066790429 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.142107804 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15706822 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14540222 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076915549 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053345986 seconds)
    (100/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065353437 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.130393061 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214820362 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.239961686 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093987111 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 0.127842976 seconds)
    (106/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116746526 seconds)
    (107/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074712025 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.122489361 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054440818 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071712108 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.240113752 seconds)
    (112/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053072533 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100448073 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096837168 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.1177888 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067123058 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053847461 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.24142638 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.099443275 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070383563 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073902824 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167795549 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164045408 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085236281 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169919909 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052181713 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097637788 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079680702 seconds)
    (129/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.238277446 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06649906 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197568551 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069726729 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101208657 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06620244 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089900354 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098207183 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.18582161 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109974426 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069251155 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075667491 seconds)
    (141/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.077024565 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 0.157217209 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076517572 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078061608 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.339530082 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07346237 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100634197 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071992923 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.258834874 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072658941 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076919349 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073538846 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.137642226 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052776429 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195446962 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052186061 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088339203 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07520247 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052262987 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.154463557 seconds)
    (161/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052374542 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128182174 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065845976 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065149208 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097634059 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076808733 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089379297 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077402642 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071306379 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14674148 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073073423 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.123599997 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162867143 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.212029926 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09015599 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062162011 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.169925627 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08875581 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115552297 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086022355 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092782574 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086666087 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165677834 seconds)
    (184/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052081344 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065523104 seconds)
    (186/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103793781 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053363157 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051226481 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.197882171 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089179217 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135652689 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.087583068 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081216675 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051110191 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112968228 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071173845 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09656166 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215247822 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090638026 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063120584 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135364326 seconds)
    (202/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079680437 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088965706 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066617858 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074855823 seconds)
    (206/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100680278 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067344345 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08940887 seconds)
    (209/309) benchmarking ("sort", Float32, false)...
    done (took 0.127068389 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097964318 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092306529 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088071011 seconds)
    (213/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.22496025 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157492356 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067793386 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096031701 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090076796 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115840284 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074152245 seconds)
    (220/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099433691 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074191684 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052445871 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.093281232 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067139108 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052539188 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135487898 seconds)
    (227/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051602559 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090243879 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072342179 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067520223 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091860564 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052673335 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111320928 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076807909 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05357258 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065016944 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09772177 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052811907 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064165475 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095658734 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.169578757 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053363824 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090265536 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114084397 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051998669 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069342856 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135084127 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06881519 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097921474 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065965354 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162181222 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052377814 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089027886 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 0.162312933 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054583948 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05227999 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05270685 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078428371 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090358904 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112431918 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066828898 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051888383 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096597272 seconds)
    (264/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209268848 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068021551 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051295275 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17103507 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095754882 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067212988 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067194101 seconds)
    (271/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086657368 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073819544 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094840973 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092699803 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054962329 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061853526 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099593937 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052537745 seconds)
    (279/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0702111 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090423472 seconds)
    (281/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061703914 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066197278 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105586187 seconds)
    (284/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067968391 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089620132 seconds)
    (286/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099528523 seconds)
    (287/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061705442 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076336217 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053537097 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061730554 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096162175 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066023469 seconds)
    (293/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079317182 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091066546 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065027784 seconds)
    (296/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053311218 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077744814 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072127395 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053456053 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09859333 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054282885 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063054344 seconds)
    (303/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143712471 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070998997 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.077138095 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062704765 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072009552 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099256276 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067585635 seconds)
  done (took 35.126801987 seconds)
done (took 36.102026153 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08210603 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11602302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076208542 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11592404 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08222446 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101028054 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073749322 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101203957 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082193026 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105444522 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080290361 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055479084 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09991783 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075661271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099176973 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093669788 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102799429 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073906408 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073149683 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090368548 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074744092 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090088867 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068367267 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055273493 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102297712 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073581067 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095919603 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07648435 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066202234 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09078281 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070220217 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072837366 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090189084 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078895629 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096231486 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074478901 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074393627 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101690071 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068444301 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090448169 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075455135 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065738008 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097194325 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073581124 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093492808 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07314859 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073363679 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104185622 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092516023 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093299842 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074531166 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10086105 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077744815 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072491909 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095400543 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074365072 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094822974 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094286029 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098478513 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06888056 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073650601 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099613193 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071523873 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098353619 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075151151 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075319086 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101462591 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071533774 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09991065 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072671011 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066019313 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099357924 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070105123 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088867252 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077728988 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076672832 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089273925 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073001168 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071838259 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096486454 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065835008 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091167585 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069328859 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072117245 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092260445 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056021923 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0698455 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096716964 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066576964 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07377897 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096858948 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07292122 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091423277 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078290019 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066234043 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095997187 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066940903 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065346266 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093306147 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070356831 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089377815 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069937468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074929264 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092333817 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073656097 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103099907 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067736354 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072184709 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089653066 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067765519 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104705954 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077410239 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065891629 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092715493 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067019715 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072640607 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090481435 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067435242 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064956739 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091129794 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072327626 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089142499 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069851315 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073579588 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103997775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069227673 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068394635 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092731692 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066302369 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095185414 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067868197 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066384148 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.092025809 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064832983 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068209053 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090700567 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074496039 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067850441 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099328112 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067627316 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098485277 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07185093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071765152 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096386656 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066022471 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059115558 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092556093 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069076921 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067177669 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091160127 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06817865 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089055362 seconds)
done (took 13.40647044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067711453 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17077435 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126999409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096240313 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112540041 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066933576 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101883861 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126723781 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070091471 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128661129 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088774374 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110095049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114354052 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091225637 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066886005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069441828 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093207596 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087974567 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127439648 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110403989 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141102226 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066936184 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120987186 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091072227 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113786203 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126708773 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06919819 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070196606 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093379515 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094035197 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11117113 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070174304 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066741099 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124914121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119160531 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084549712 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090503685 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084259348 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090697783 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067659837 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114482497 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098425042 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106111319 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105199658 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071026034 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068532422 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092920956 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086095495 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115463319 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.10423181 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089138803 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132874846 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092941853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083618215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06505132 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112275196 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106111933 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069802395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066939895 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094024937 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066528758 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069319047 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113158096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116988602 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070054501 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106780109 seconds)
  done (took 7.365376364 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086319535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1168106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085636214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108915013 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067509767 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066977108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092008456 seconds)
  done (took 1.655241294 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068110746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088602901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115118162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089789359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111810147 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08675491 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102888521 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06753571 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1093919 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070123511 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087815105 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129489283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092138913 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076033952 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090897064 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09265107 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090866981 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092335415 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071255349 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114934918 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071175947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110108566 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07049746 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066953084 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106847787 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067973978 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140803089 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072010801 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092823407 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072091071 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065719187 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141026291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105389959 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07913315 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067712979 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107456546 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082312674 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090308776 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084197284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096606861 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083290238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068232439 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094169875 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066969042 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071449214 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104060917 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068994225 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093628643 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071014024 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110113226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070270768 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081066894 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092609838 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071940826 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068205498 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098060799 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076869996 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093074319 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087845486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068371778 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110065134 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083465935 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108058411 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083813113 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095447711 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082182979 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1060803 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070581583 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068365381 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096079546 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083731902 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090460729 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069766216 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078154438 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094972428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091071902 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11674943 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070218412 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101981777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068699818 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067477206 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093068728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091274062 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095844242 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068649984 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07105219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095949937 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066155044 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089845368 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072533011 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065989616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093098031 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071465693 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068059514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094882451 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085202029 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092724359 seconds)
  done (took 9.468086493 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070272838 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069445966 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094321433 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069127038 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067995969 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094196576 seconds)
  done (took 1.507063521 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098467713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094469827 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082032309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096204552 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108678797 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107057433 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082918758 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107553287 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085649168 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10491012 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082910014 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108344668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087966312 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098625228 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083023506 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098447852 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084347314 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101435379 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080513163 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098112471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089114699 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09765022 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075508566 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108047155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072543216 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072524521 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103361621 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080006891 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104594956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082917501 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098546909 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07166116 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097455148 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082707675 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107423966 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072426059 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098109382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072394017 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101285875 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072586668 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107764821 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075314783 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.101183993 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073301316 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106415103 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074186494 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071476162 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101878397 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081801444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097558181 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072032356 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098827272 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071388842 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095694814 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073917255 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106610126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073012684 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107128477 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075553378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071935155 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096489429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07115311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108295241 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070260275 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105894968 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071919493 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097145602 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074475396 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098880023 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074023265 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09543542 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072271063 seconds)
  done (took 7.469283388 seconds)
done (took 28.485827813 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.659521964 seconds)
  done (took 1.699131613 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.807015763 seconds)
  done (took 1.848570514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.641220199 seconds)
  done (took 16.688727444 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.623137416 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.792726076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.797605995 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158053355 seconds)
  done (took 3.414016781 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.904730343 seconds)
  done (took 1.965579402 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237993388 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.24810752 seconds)
  done (took 1.532366272 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.758576852 seconds)
  done (took 1.810003698 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.292677544 seconds)
  done (took 2.339661654 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328730956 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182748364 seconds)
  done (took 1.568748515 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.517790823 seconds)
  done (took 1.573134881 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.771403833 seconds)
  done (took 7.831786027 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229947758 seconds)
  done (took 1.303136898 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.27013252 seconds)
  done (took 1.330325925 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.296919145 seconds)
  done (took 4.357818276 seconds)
done (took 50.310100911 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079683329 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081117255 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107174174 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077972592 seconds)
  done (took 1.401959418 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079827568 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072950672 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104226406 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072403545 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103856046 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073926044 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099605856 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078602134 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07189375 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101056817 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073547992 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098786167 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076551027 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099506361 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073138725 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075245498 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102882319 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07265329 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101964263 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074942421 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070663642 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100961218 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075804083 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098102433 seconds)
  done (took 3.121252674 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079927788 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072844147 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101153198 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073159752 seconds)
  done (took 1.388679827 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078906597 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117086493 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090943748 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101545133 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094367381 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112238643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071072566 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069140481 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097863446 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077462179 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093291008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099342356 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113490616 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076877298 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103858174 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067451563 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068418582 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11358492 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077657152 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103435613 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070874013 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101267039 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069822064 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089994015 seconds)
  done (took 3.228723487 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078521275 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102596661 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104921965 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088611921 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118272082 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065643166 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103408351 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092009266 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152456315 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065130471 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097278205 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06714157 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097223803 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067732987 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076822526 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136125286 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112131255 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09538685 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09692274 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09270091 seconds)
  done (took 2.981905431 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076690375 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070336388 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092013864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069595095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076922507 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099260903 seconds)
  done (took 1.554680414 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069980054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068228021 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092499424 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068644522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072220541 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093691348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067470439 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067208724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093525027 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06818521 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066355898 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092836509 seconds)
  done (took 1.988948464 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.427533828 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069880457 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093595585 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068413019 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070866988 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09230794 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080899353 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06752818 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117811889 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066248066 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092795671 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070326556 seconds)
  done (took 2.390829157 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259211386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078193585 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326012291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168034889 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138513098 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155462351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104046913 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140253206 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197740536 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137872003 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199493536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2211463 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134218717 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167618934 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116764035 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132781901 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18381866 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221526137 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130149562 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200703933 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206889846 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156874197 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178948597 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12895351 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134087957 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144637071 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071675438 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107746903 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231284766 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161301697 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200944909 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13779768 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118809399 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206949601 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2185944 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195979617 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163861848 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08493814 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157807135 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165935703 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256033203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115975808 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21834587 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108708487 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107970563 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171845979 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144972092 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146205147 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135348576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116481725 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173185234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235582278 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190488802 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088044447 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138129357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139715789 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142931019 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127830504 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244479336 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192641304 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185133086 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071991949 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123226664 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186294714 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158598165 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140243521 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179738146 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093883504 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193989807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186686872 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143634718 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200019505 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.160225163 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115623509 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147889186 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170195802 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153473692 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230409003 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153501864 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073009601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176093357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102086574 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109443966 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169731886 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077797104 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234672352 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124580726 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140616817 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114542175 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137877455 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137704615 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21901036 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176990887 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130792881 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066223808 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131189234 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149898475 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200456683 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087969924 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136569261 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145144951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105879066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164064372 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101145037 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15304291 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079761503 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151848147 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161625944 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102983275 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153102858 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128994597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101917596 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191153479 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191594028 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117629534 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108741432 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199776003 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154186904 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13180462 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202695289 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188897592 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128443979 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127547137 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175201797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239767233 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118677487 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223877623 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129391385 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08650446 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114415079 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156314782 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141602519 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149281332 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08358757 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152331653 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228269661 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.1021487 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095851847 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18951295 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08362059 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107555467 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140038513 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099701588 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123201746 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12884384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13423518 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169022905 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154091974 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135519705 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152479341 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126890666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220368331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115885008 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106408125 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131665961 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095653208 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165926579 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190393032 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10837366 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225449388 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155259687 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13038936 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14961192 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084450199 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168843709 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106314254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072399811 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197547929 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138725654 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111964608 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211249503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130212359 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155781107 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151779339 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161206408 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158671987 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188593391 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106629927 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115804234 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140816455 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153967853 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100217628 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094890024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110987493 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131878549 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120789402 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085796859 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169320094 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182117933 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099229415 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141185793 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125412606 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179990348 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105084763 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158961379 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148463331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122484851 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18440265 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216715869 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164323887 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128905591 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201646908 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073369593 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074459129 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117493765 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155094404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111925832 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084074005 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14399891 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208399964 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157655038 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162809068 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140128646 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15073942 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21708657 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072754329 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144762833 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177803536 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153584503 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159493218 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118638239 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101071155 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203997018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131112717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246180742 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144235891 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154708279 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182836224 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132660854 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106663707 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104666763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195028094 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13166353 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185492368 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1282529 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115665644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139070168 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082570948 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130437992 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155570029 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146900325 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191866889 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145513795 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162168922 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104263627 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14486413 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152834988 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14960707 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065537236 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149233987 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223534851 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123099084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146913038 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186076249 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10874662 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152066317 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238696976 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175256782 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112559318 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135604152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151007816 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160622493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147893213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170031902 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137157663 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165255498 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13924582 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112922066 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088469185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126983852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13510257 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122896383 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140350309 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146067725 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094869686 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187235859 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139697426 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136747027 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148723355 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100641936 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119296289 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097793235 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238829125 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150540543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233992298 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129736362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205412644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19986924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103467211 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079886593 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10873317 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171367496 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111181434 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162863955 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096798496 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133194617 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155702477 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199757611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095212494 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097413713 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139198804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163302587 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139894818 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126092438 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108128268 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223068649 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134268757 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079870747 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154273795 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13422156 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130871323 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235881274 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062947602 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125354028 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076940668 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108495349 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161274439 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21385935 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083941601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157897666 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151295497 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150910294 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158804618 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128321765 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124214639 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114892215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204892672 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157588178 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117846435 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141233531 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160149575 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214845262 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106984201 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123808858 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230254961 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18574716 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2235129 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1176412 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145412232 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144490524 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141773131 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171262743 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11236775 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225984965 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083973588 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193909521 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131479643 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0925075 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18393428 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099405898 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11777683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180258645 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148381462 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110961753 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105639397 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142750935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152628726 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103907651 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104199982 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184824708 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101963999 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167782927 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229258191 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083078263 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136187974 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124251406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081948835 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134786838 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131829693 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114983107 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122532998 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230882738 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119005192 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208996207 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171389858 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142822567 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194093761 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100584857 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664741357 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107434524 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186063179 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147057817 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265092689 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100329195 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150009898 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140379076 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150614477 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198901577 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132992588 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178561979 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189234945 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152893993 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08077724 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132207191 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139638482 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118601383 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135638334 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144813922 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144313487 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100548695 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176128683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158392853 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082006108 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124478947 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218330118 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14741967 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173799761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1707046 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114307084 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147672943 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197849817 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082363958 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150667032 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215208798 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137597032 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127421642 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082754158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133578468 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232665177 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074402799 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221401091 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153557312 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139635549 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143537658 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148264763 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190927092 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135010246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156059293 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095882663 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168597055 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144750808 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087062289 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106057268 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107711626 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140611263 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128228187 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130962647 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147481824 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187711987 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071281595 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122350094 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132341575 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172387648 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237847072 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118959436 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083785669 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145898954 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140828369 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172008263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15551991 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083128344 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111810662 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082776694 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.141832371 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140558944 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146604492 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104153034 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141563996 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2263157 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113168098 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225746098 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124212158 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138876314 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070595367 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108195989 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12383953 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097089145 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13286034 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126930564 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232203769 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099563105 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119832865 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120747943 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075588855 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110604693 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16175846 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139678196 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15090079 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125442453 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066099574 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135366587 seconds)
  done (took 71.608860789 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140113175 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108952152 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122751337 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178014116 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151045424 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242768238 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.186037564 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227623831 seconds)
  done (took 2.501478783 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07113005 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122212824 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102336137 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118438639 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094311956 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070952997 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300210955 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111284697 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067454864 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119590499 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120123652 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096369777 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470294668 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066201547 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095041113 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090430694 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069104522 seconds)
  done (took 3.321494218 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43645912 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.654689586 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475394314 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074248557 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.940144681 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090677085 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.483392969 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168704886 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074192052 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.443581995 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.763251985 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135827069 seconds)
  done (took 17.886902937 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07721881 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069257316 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111889872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084691009 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099547784 seconds)
  done (took 1.593295352 seconds)
done (took 116.021392281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081394163 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.361781246 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05383494 seconds)
  done (took 1.594878697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085357425 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085048957 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114606826 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083801876 seconds)
  done (took 1.524360923 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076369122 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07687027 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113478279 seconds)
  done (took 1.418858214 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.288578125 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167236509 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091279263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084884667 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077915672 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106500445 seconds)
  done (took 1.422327778 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074519906 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07524837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10201179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077316576 seconds)
  done (took 1.47427602 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078384092 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053720452 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055375964 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083909497 seconds)
  done (took 1.422939015 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091942645 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106753384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08291003 seconds)
  done (took 1.43126923 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109721592 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114457599 seconds)
  done (took 1.377357488 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083439604 seconds)
  done (took 1.231860597 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094078799 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142949923 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157837095 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139237271 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168054278 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138133658 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112206045 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08895408 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106097925 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115894014 seconds)
  done (took 2.417538145 seconds)
done (took 17.082704813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080198828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392682388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362885524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117639413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669057307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356691218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006258645 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120345308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108540532 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095942205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085458333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646684151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034673718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32068322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021270312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322024445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677013082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069739191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0676374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096911494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955702453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095177188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069671805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068882748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677014245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372033777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095872269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32387013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068073382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098422742 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356029119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09544123 seconds)
  done (took 16.0720252 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07218957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144727339 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075495137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083986173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099734364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070969586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100236483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070585514 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148847886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069076796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112960989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07032498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072351704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097845974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088284767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096198042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070504447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068065132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09742149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069289711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11465604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06964664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068260359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097137967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068709684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107581239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070331038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068342654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096971215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070623271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099051978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070419299 seconds)
  done (took 3.935034055 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115238509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153155189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075201422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130258557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111894878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099698237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170561833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093317796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152104009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068700451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113135692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068733184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129445407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070035517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114639564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070046423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069403207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097836775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068644249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096558227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088990948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067643972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096910538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069205756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096586868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082953455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068486852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100453743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068917762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09853958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072976403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069097566 seconds)
  done (took 4.21082787 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07446241 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075117806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111034501 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084774858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097725352 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074443063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073392532 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098810555 seconds)
  done (took 1.853194603 seconds)
done (took 27.215203806 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080873821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070115685 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102376878 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081349423 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100169904 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081109325 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067315761 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104153338 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075929815 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072946679 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105175211 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067735119 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099067253 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069750057 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074203947 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097336163 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080311988 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100309723 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080793722 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10725189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072412419 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07611193 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103311601 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081010789 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107049339 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081710094 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080326079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103074772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070043969 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099402455 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07804065 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111738112 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071311305 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079956323 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097476916 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069961813 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068068842 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09750511 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080667407 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103523378 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071905384 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103261708 seconds)
  done (took 4.776974418 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090621672 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091888633 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115345848 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062674991 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097058481 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063243951 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089803749 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089969631 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063392647 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117084418 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057223361 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058791556 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.087124502 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056338891 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059283412 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05709961 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089816821 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058210774 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058586766 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086299571 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.062673918 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055353997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060359894 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.088689603 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057321585 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062442227 seconds)
  done (took 3.102981238 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077180404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081903651 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117065246 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127923864 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134164164 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075574729 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108247256 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086652038 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114009229 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069066232 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071859427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126032382 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086462263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10362541 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069342622 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111225732 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084015776 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069883365 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103996184 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089301656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112490325 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0793975 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.088770213 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109564355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067859588 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099024395 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073569089 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081422135 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.102419904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077250516 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101063895 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072274679 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097739612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082046558 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072466937 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099258461 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088905483 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106834266 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078647513 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068787668 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101189795 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069923256 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117406335 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114498657 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095348556 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076411722 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075837844 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107520079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069056671 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114334631 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079199792 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068897502 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100909362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06827382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067967824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111381803 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069923303 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099032661 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078464976 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071181852 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.109291564 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072206682 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112917559 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069333864 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075231249 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097184933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069257899 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095181961 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091451824 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069420148 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136837153 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069157013 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09855606 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077533608 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104176844 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075615227 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067882053 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112388212 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078224146 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099608533 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078146291 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071164508 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10039078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086573383 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098092744 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071289317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069461394 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103077112 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071714216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069536701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11107509 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068177612 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100338216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085995629 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095297537 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071703517 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07366284 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101351591 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069539306 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10760354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074368665 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068538514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106039955 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069000188 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098663147 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079940166 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072105632 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096290184 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073735928 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101858425 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070951125 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069994786 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.1006076 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070849564 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077420099 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103991365 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072819665 seconds)
  done (took 11.495076618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191859025 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187291054 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072319767 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179150969 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07641152 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110189313 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180114576 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097060887 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097905378 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069984722 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06844524 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.136487817 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127294105 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11995888 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110151437 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068663786 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115806169 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107478265 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182980543 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177358328 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117742754 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077597356 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070341817 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.100768571 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070869403 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10705786 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086102672 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106016236 seconds)
  done (took 4.394384131 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083028156 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.126074596 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075284403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085893298 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120880351 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068949217 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102792136 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070149989 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109156525 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081871307 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096215454 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075821838 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075010555 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107222112 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070200398 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106129896 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078601776 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069924862 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101450604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073171065 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102670852 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082427667 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07156071 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.098203756 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074524526 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096521991 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065696683 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114599957 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069447963 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11533589 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067940608 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074325687 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.107937598 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070439238 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068002055 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.101179216 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071038512 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099435376 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072478194 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067436996 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096686486 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059558699 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067658881 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.11003467 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074830933 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089561432 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076469994 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074006952 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102803285 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066995169 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098620323 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073058093 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071122525 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104440779 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075035409 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072779723 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101530924 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067994553 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10252261 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072024394 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0656411 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094730384 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075060215 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065821949 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105797139 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073524699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094908162 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072103056 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073110671 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102966792 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071624122 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070517685 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096340119 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071002764 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10152417 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074486636 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071320027 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096152768 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068981312 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069295824 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085323873 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06953555 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054549013 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100502273 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068078629 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066638921 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100298691 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076843944 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109968201 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070340397 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102520631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070631978 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06688803 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.10061362 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064096972 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070600128 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111414668 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082373621 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098218709 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066698579 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110076246 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074482806 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067457726 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08763481 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075670009 seconds)
  done (took 9.97282233 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093274842 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091925735 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100122018 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081814788 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123445813 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092398982 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104734871 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075238724 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069733097 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114885436 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068899955 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105553949 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073700706 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077062759 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.121954945 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076309396 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099508103 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079025163 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076795058 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.133715556 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0813808 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112620009 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.078707269 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097522197 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074920359 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080204445 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125105211 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078787388 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106929536 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084376439 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078669849 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125440134 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.083171648 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102442927 seconds)
  done (took 4.36422706 seconds)
done (took 39.256353788 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.251366578 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.479051935 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.230462085 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.189470331 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.253232515 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.249918389 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.240196543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.230620328 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.762032503 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.229723842 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.471681789 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.9642846 seconds)
done (took 60.731172485 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.318029587 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368361304 seconds)
    (2/2) benchmarking "String"...
    done (took 1.512621197 seconds)
  done (took 4.05724561 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.577355406 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.226976022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.520271468 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.232697205 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.249565158 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.680961065 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.937045154 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.112590586 seconds)
  done (took 28.133137082 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.242243366 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.619455571 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.757936862 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.767923916 seconds)
  done (took 18.563841467 seconds)
done (took 60.825046374 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.244625544 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258072481 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.257501483 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.218781952 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.3445125 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.26206403 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.508530299 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.283024415 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.233649441 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.220479657 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.251850897 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.252724196 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.241136465 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.516802876 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.24247702 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.232758096 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.234825176 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.75627021 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62997848 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.237027212 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.254275418 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.304516409 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.243417282 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.235955677 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.239651395 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.234629077 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.23482558 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.246591684 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.608709464 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.234447826 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.337121282 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.769213211 seconds)
  done (took 191.544973556 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.2343633 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.301417507 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.462713759 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.281051032 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.756969695 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432242808 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.366265183 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.836745166 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.252199417 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.255750756 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.358252885 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.233344782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.417616135 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.219551386 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.243494153 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.236545734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.527758826 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.45734306 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.252731014 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.50752922 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.260508709 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.245394906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.192529363 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.361072656 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.25432554 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.287268768 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.274270145 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.242998568 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.424666149 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.448370189 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.282962385 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2850383 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838864185 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.092002669 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.249090424 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.24106287 seconds)
  done (took 150.790158295 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.528345642 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.235986193 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.236136757 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235869847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.266342957 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.236171777 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777539511 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777997322 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740243585 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.544988154 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.236551379 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294093387 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490650519 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.236429413 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.236644209 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330070191 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.236149082 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.246278712 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.238164587 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.250491789 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.26451886 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238256257 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236096812 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779752713 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.24919819 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.300624779 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.244614181 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.237531311 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268754356 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.630106343 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237449476 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267883771 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556663044 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.284059465 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.236091226 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.560112744 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.858890666 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346242683 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239642515 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268994336 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.237383427 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506621106 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.238428008 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.237814373 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.240690846 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827456492 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.237918974 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779847873 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238624655 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.143173746 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.238022797 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238212883 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.590534278 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.75779322 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.239408579 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.237599375 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.241214086 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.23859425 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.237973162 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.268933371 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.518057049 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.335969206 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.238905489 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.242333962 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269393944 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.238039429 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.386585753 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238636344 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.523591349 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292441854 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.34603372 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790060273 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.240621665 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332711952 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359376356 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.240195471 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.239172384 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239203755 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.238992 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.346207765 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.240379827 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.240269691 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64052012 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.245121674 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.241318838 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.299005092 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.333043075 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.239730928 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567354998 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.240500549 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.239559773 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939615633 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332723137 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.241003163 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.239398313 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240106992 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646663497 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79219077 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.448473342 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.242127846 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.511639253 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.242441075 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.658030055 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774808513 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.869912354 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.241531436 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347030168 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.244425952 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.24192799 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.241467332 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269732713 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.241206615 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.300344366 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241342332 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.638023138 seconds)
  done (took 349.681365485 seconds)
done (took 694.721309414 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.857485443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.844676052 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.961970384 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.841343013 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.81974291 seconds)
  done (took 10.505434797 seconds)
done (took 11.686736223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433332737 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.433254881 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301742329 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433840826 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270402677 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.451913591 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413064527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.261052311 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346077852 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.320697647 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345907333 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.292401487 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.269033172 seconds)
  done (took 18.753698659 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.56572861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.561662029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304580717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563092343 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280122533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.605840451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441043299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.477239719 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436976609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255028491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254263877 seconds)
  done (took 16.928812868 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620560211 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.574831716 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30679171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568774512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282268875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574777203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.446242006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.454629819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438644699 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255515367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253294759 seconds)
  done (took 16.959298473 seconds)
done (took 53.824085937 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.250758052 seconds)
  done (took 2.432625629 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.285224516 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.450050046 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266665214 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.25405538 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.252653184 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.251135318 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.255289661 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.251100128 seconds)
  done (took 11.450165801 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.247954184 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.249926144 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.247129422 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.246798446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.246829514 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.24886008 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.250369912 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.247747305 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.249726335 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.247946989 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.249075211 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.249547943 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.249160189 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.246713868 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.24923133 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.248875105 seconds)
  done (took 21.160222761 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.25017895 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.24758181 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.248002487 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.248570772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.248078074 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.247526651 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.249638755 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.248563942 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.247988983 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.247601076 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.249765893 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.247948002 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.24857279 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.247439515 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24839188 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.249288171 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.24851238 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.247427118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.252915431 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.248879576 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.248179538 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.248225011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.249490148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.248869438 seconds)
  done (took 31.154050849 seconds)
done (took 67.380484693 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.38752384 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.89023484 seconds)
  done (took 9.463177574 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.252292738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.251591948 seconds)
  done (took 3.689997989 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.251872654 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.25064868 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.251621331 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.251232754 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.251167204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.25154108 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.251298238 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.250652592 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.251188698 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.251096925 seconds)
  done (took 13.69727971 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.25188977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.251908007 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.248033475 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.252110109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.251646899 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.249680015 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.250767542 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.250895359 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.251852249 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.249040841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.252936955 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.250135354 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.252598233 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.25075394 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.252081662 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.250101491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.250822652 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.251010401 seconds)
  done (took 23.703745705 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.252988046 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.252543575 seconds)
  done (took 3.692185952 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.250404035 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250284458 seconds)
    (3/7) benchmarking "month"...
    done (took 1.250868868 seconds)
    (4/7) benchmarking "year"...
    done (took 1.250384024 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.251186222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.250363819 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.251645975 seconds)
  done (took 9.942297854 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.25444236 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.425128975 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508763633 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.844465788 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.254907736 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.257148774 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.121175048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.257366956 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.259070375 seconds)
  done (took 14.369817067 seconds)
done (took 79.745071803 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.260913257 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.245490016 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.146061922 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.263240376 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.263233395 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.588401809 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.272968435 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.369273649 seconds)
done (took 37.599857647 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.246482938 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.971104649 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.970242432 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.264002003 seconds)
  done (took 11.393746946 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.232078482 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19762842 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.250089601 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.280979269 seconds)
  done (took 18.149425054 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.87869403 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581894137 seconds)
  done (took 4.64957591 seconds)
done (took 41.629058121 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255171994 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.252837464 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.25476001 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.251598464 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.255364043 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.252963417 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.252483857 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.255101331 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.255190399 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.255087465 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.255412717 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.254839961 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255208423 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253049991 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253253621 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25665979 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.253382574 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.254001243 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252849671 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.255751263 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253424461 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256425772 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.252971488 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.253258053 seconds)
  done (took 31.290812711 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.256389299 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.254025831 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.25597952 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.256029411 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.253015073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.256191567 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.256395163 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.254376303 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.256023335 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.255995068 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254565034 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.253616578 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.256169817 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.255030061 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256808567 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.255363321 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.256376995 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253680021 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257264317 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.254315708 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.256708461 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254428088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.254843993 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257685665 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.254257045 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253470252 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.257180758 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.254940273 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257110268 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.254220905 seconds)
  done (took 38.853261131 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.262988647 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.264687756 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.25687588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.257722425 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.259093448 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.257100753 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.258320607 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.25743507 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.257855359 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.257674909 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.257993816 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.259642274 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.25725609 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.257825223 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.258517763 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.258458208 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.257578816 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.257685899 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.257999401 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.257564737 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.258966184 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.257777252 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.259393444 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.258821927 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.258985936 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.258790462 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.258803092 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.258223557 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.257791844 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.257902117 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.259090709 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.258768371 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.258784479 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.260174508 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.258688799 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.261230213 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.264488149 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.265733337 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.259041463 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.260082745 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.259242773 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.258728786 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.258845469 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2598513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.260103999 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.260143799 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.259328548 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.260553309 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.259544703 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.260082663 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.260273849 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.258975285 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.259787123 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.259319769 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.260462123 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.258730395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.259165672 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.259368477 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.260438796 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.25985375 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.260133532 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.260305929 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.261127882 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.261092504 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.260450506 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.260355751 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.26106743 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.260380252 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.260308356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.259663171 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.260596397 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.260764605 seconds)
  done (took 91.874599166 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.260913893 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257271333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.257118397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.258479065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257719718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260432975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258016255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26064298 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259291456 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260785879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260910884 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259482284 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257850507 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261901148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261344172 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258624861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260611495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25916719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.261214271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262293507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261867671 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259258214 seconds)
  done (took 28.909658464 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262102225 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262161368 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.259261867 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261824713 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259059699 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261676146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262640881 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262781106 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262236359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260540283 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260369328 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26251788 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260047077 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259252308 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25999253 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260667937 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262399105 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260590371 seconds)
  done (took 23.895315084 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.260247341 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.260235466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.263812738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.260831256 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.260152822 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26391091 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259702057 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.263936066 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.263214891 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.260614811 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.263385066 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262876012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.263632452 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261492399 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263294981 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260814144 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.262559622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26039257 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262699418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261069605 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260766787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262910045 seconds)
  done (took 28.959448672 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262920184 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263294348 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260762811 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.26113997 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261676953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263999562 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.263758659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.260547332 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.263328819 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.263493071 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262025473 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263495713 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.261616994 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262112956 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.261785291 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260829137 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26471183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262503456 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262671566 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26187482 seconds)
  done (took 26.445372239 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266882075 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265699252 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266162082 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266856684 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26631401 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.266723703 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266435228 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267093741 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26659824 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267482768 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266541501 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267174252 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26725928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266168222 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266605497 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267612412 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267121361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26731424 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267009877 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26693738 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267243198 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266417908 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26831041 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268077088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267887802 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267937036 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267809234 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267451089 seconds)
  done (took 36.675121708 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265437019 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265418109 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.264084921 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263635417 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.264241294 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264239138 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.263659377 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.264504767 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266936891 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264180964 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.267379627 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.266899574 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266865737 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.26626054 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266034978 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.266471059 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266857001 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.265161046 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264628262 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264870225 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.267007909 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266488626 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.266440327 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264050696 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264225626 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.267318222 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264252502 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265023347 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267828282 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265150367 seconds)
  done (took 39.165896133 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.287257403 seconds)
    (2/2) benchmarking "in"...
    done (took 1.285596159 seconds)
  done (took 3.773018082 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.265007394 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267489306 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.268217244 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263652958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26543426 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267839146 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267547219 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265007465 seconds)
  done (took 11.33102185 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.269098848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.268337245 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.268383321 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.268356207 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.268121105 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269351585 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276282047 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2861699 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270925332 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.27065394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.275590227 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.277498477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.273381246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269207172 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.269705931 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272101249 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.268498539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.269596522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.269914244 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.268930772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270445745 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273217314 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274312682 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.26582403 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.27225746 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.281894765 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.274905637 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.269713584 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271128085 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.273649418 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.271918073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.266940606 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270695707 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.271702967 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.269322258 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.270725247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279805997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289274454 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.277949918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271353261 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269364307 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.26791537 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.272714677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.272066979 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273506519 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.270771533 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.27170978 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.267318885 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.271552885 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.274178109 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.274707842 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271517049 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.267691954 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275351486 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.274098944 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27964391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288732215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.27598096 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.281580482 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282605135 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284902712 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280272193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274327814 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.272472398 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282480356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.29524723 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280441217 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.285972665 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.26844808 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.271691095 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.280406415 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284221329 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283087491 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.271994913 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272714275 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.271177222 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27415025 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272440418 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281136112 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.293981639 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2727674 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272754073 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282224288 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295147873 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.272910737 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.273457935 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.273205164 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.272503549 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.274949148 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284362764 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290367727 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.272964751 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.272920227 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.27409609 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.27608776 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.274592716 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.277886035 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274797019 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.270706954 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.273037346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274280273 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277521814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.283711213 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274177864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274249035 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.281344813 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273284352 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273284359 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.282175527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.273758687 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27389567 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.27584944 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.281094619 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.271129932 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278568694 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.283917288 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.27549652 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.277527606 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.274345652 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.274775549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28387474 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.301574989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.274661972 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.274304629 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.281148227 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286935561 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275204467 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.278071976 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.275131767 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.271908687 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.272520203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.277374246 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.276278875 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.276228546 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276017148 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277731114 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.272267647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.274864873 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.275727976 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.277488411 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.277699926 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.277234377 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.278110362 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.280082924 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.275755457 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.278433755 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.283385395 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.277131904 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.278577436 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278283127 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.273523817 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27526532 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.277619748 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.276209501 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.276633176 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27642604 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.276427332 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.277340255 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275829305 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.276506617 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275931653 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.277517858 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281135155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.277331854 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.281315083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.277560432 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.273655344 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.276104528 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.276341239 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.277069367 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.276599163 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275961704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.28022779 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284746671 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.276873563 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.277752833 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.280154391 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277612108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276878636 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278321263 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.281084324 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.286301368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.278193963 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.285071359 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278343245 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278493834 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.27703215 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.280052634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.277590956 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277992058 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.282645261 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.284451011 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291088315 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289293005 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.280196049 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.282924983 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.28057968 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.281410659 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.283994947 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.280033727 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.278285573 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277548076 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278230181 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280010172 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.281501691 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.279483434 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.280066828 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.279267987 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278437021 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.279572593 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278395779 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.279453006 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281550766 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.275691853 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278148031 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279843463 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.279392717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.275796068 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277174538 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.280369692 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.278087935 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.279489463 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.286525808 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.276710784 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282394158 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282931664 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.280477003 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.27991159 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.279586679 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282977663 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281319803 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287463487 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298715902 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280236674 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287689702 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.2987491 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.280875904 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.28320864 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.280299249 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.275948584 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284379303 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.288391473 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.279873672 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.281124468 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.280289956 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282661105 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280133179 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.287122449 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278308951 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.280441816 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.280835738 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.283321745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277937898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.282692166 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.28252963 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.282399679 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284689311 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280701224 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280958114 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282919913 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.28221946 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.281684018 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281784481 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28466224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288048411 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.28749731 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.282388252 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.285246411 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.283997111 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.28473519 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28361038 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.281140676 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.282214467 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29389085 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.291265073 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287584902 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285061915 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.281943357 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288002771 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283754124 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28743512 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284669947 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283714945 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.284453859 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.283523381 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.279490284 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283678443 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.282823294 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285291656 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.284789058 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287447235 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.281877428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.282703566 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.283332039 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.282997591 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.281868963 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.283551996 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.282594775 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.286971049 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286326487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.283496423 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.28382575 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290539272 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301707471 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.285468826 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.282749998 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.284436901 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.283624365 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.285214612 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.284119353 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.288610093 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292311808 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.287731491 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.293275207 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.286908958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29458412 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.284916746 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.288566014 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.291701932 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.281884983 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283910959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.284913852 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.284519361 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292828897 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.302238359 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.286417241 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.289396588 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284962221 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.285101693 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.284252986 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.285812904 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284202417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284783188 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293564074 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.304082723 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.289777263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288106719 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281759987 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.285122388 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283859936 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.285695438 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290166204 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.286071332 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287011661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.285054065 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.286278358 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.285753233 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.285830198 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285170875 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.282878307 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285246554 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293776347 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.30521808 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290799494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.2851646 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.294403724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285708435 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295307763 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.303413479 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.288726342 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.286782201 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.285810204 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289324967 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.287956369 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288956732 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.287515355 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.289853897 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289486318 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.287408091 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.290047435 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.28847223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.285914465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.28839417 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296919016 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310438532 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.289058708 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.291166407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.283711496 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.289007492 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.29160936 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.288417729 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.287661548 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.291175668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299262556 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294150892 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289053041 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286987661 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289269774 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288338516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.287603779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287457886 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.287941535 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.287028011 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.290300348 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.288367161 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291501999 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.287417932 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.289072204 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290281508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.289783476 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.299165834 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288069763 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.290116869 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287769876 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.288064825 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.289075544 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.290618186 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.289925176 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289980879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287909578 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.28989134 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295942903 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.295942785 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.292301792 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.288721665 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.289821919 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.289928608 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.29077014 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289298127 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.289330306 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289638763 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.29160823 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.289965583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.291172005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.288510619 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.289046296 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.291121871 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290071661 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292906751 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.296962295 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291025909 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.28661166 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.288369764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289094462 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.289492387 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.291270467 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.297904287 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293384877 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.301263979 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.299550903 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.295592311 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.291155114 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292874107 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.299757031 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.289080168 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.29283612 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.291343112 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.293500361 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.29195839 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.295438763 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290353854 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.297893988 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292971814 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.291841721 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299932854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.310296143 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29222381 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.293961437 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.296895137 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.292114311 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288435901 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.291131651 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.291406574 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299031077 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.312458406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291029536 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294471741 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.290596057 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.293814372 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29623888 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291050892 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.294475874 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289185537 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.293563385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291870057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292567377 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.290050944 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.293859742 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.292441197 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.295927595 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.300970894 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288879164 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294867362 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.293799572 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294286268 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292607015 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292276033 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.290240049 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.289603341 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.294380306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293469258 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.294114779 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.295985318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.293921576 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.295445244 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.294326381 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294262389 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297575538 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.303306641 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300459111 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.289711949 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.294293955 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.295585361 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.297150513 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293346463 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.294125543 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29538921 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.296662269 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.293915023 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293105261 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.293935302 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.297722359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311294678 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.31142971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295843403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.295082818 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298290402 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.294613222 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.2909703 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293735909 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.298206543 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.298795026 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.303967273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295073188 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301447543 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314575057 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.297305037 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.29776504 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.298468342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.302870767 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.299283704 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295206274 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.295618264 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.301825312 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.312457176 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294614274 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306510639 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326526292 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.313943626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.298055425 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.296471267 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.296208382 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.296909708 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.298371795 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.295575917 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.294988865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295414551 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.29646706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.297755181 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303375003 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.298542142 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.294490289 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.295574776 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.296927846 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.29737685 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.293202869 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.295841963 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.296897086 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.296982409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.297095712 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.297132044 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.297565585 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309194477 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308307941 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.296799821 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.29700325 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293429846 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.300060796 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.299340175 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308189647 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.304101933 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.296086253 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.297884717 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.29887941 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.296994726 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.294465052 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.298036697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.297702191 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298094031 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.294571738 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.309864249 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306690868 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.302764333 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.298339329 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298338893 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.297662887 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299606523 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298737174 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297728447 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29953044 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.299652701 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302801188 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.298211247 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.297299432 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.3031733 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.306186987 seconds)
  done (took 767.735192692 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29641422 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295443491 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29621062 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295482914 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295162648 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296291149 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295404599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295557055 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297481738 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29587243 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297075309 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295976904 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296400573 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295635768 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297033514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295134174 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295115811 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296020637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296387026 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297166625 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295906472 seconds)
  done (took 28.447724483 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.29870735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296364617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295713216 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297562884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296610184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298064839 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296418548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299315379 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298393036 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295814701 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299442696 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299406588 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.296985505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.296728316 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296976185 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298881412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.298790787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295278889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.299401539 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296436208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301171317 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296646842 seconds)
  done (took 29.780887399 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.301664185 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.299479166 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.300968942 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.296815413 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.29970289 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.297373145 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299869439 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.299718116 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.300997406 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.302430109 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.30071373 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.302167813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.30773163 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.306501582 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.303975066 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.301391965 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.446191071 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.301464751 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.302648828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.301536114 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.298389498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.307352577 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298655517 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.298319813 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.301017182 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.300626974 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300802818 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299891443 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.301552745 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.302914921 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.305964593 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.301189357 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.302510233 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.30372982 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.301805095 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.303549445 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.30595776 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.301938473 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.299289161 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.300768217 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.313578598 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.321955414 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.302958375 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.308995682 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.300897461 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.301614306 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.306620499 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309773713 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.300004232 seconds)
  done (took 65.209071367 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.301718918 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.301713749 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298987517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30080175 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301945277 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302187584 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.302130728 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302347127 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299974322 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.300094792 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302452564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.300021838 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299281588 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30281986 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302394179 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299438784 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299224424 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298957231 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.29927363 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300581606 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299179042 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.303257658 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303588549 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.300965692 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302976677 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300074714 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300308042 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302521302 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300012026 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300503175 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.303088042 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303054824 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303631629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302310899 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299918799 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303655716 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.304414112 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300324175 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302971446 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.300804619 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303795933 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304140222 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304099084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.304287421 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301499363 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302192086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301273567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301755733 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.3021341 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304118581 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304745533 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301998161 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304694466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301978394 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303828324 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304813384 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302397064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.302162432 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303797031 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302895685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301815588 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304157528 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302413675 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304738203 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304308035 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302728318 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.302122277 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.30480306 seconds)
  done (took 89.780243019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305961352 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.306963176 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306162338 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305979203 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306303999 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305721847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305525462 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305333555 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306289616 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306700163 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305380632 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305875512 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.306160406 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306868318 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305799017 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306651303 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306971753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306699831 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306902114 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306569406 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.30619822 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306759606 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306601471 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307017814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307102498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307030853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306403429 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307694625 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306836952 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306457056 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308823037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306559946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306759248 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307170795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307116178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306560166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307069085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307463619 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30708956 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307210038 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306889795 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307593586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30675777 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307416601 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308344914 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307082562 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307770196 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308172819 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306872853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307294201 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307700205 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308201908 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307880737 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308140576 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308134116 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307973085 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309557744 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308343717 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308674554 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309052673 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307784917 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.307548942 seconds)
  done (took 82.276974456 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308446718 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307297184 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305485552 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.30568133 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.307550397 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305098181 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30765772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.307618463 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30845672 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308703461 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307183854 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305908776 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306204001 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30868248 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305742922 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30547278 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305393568 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304500059 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30896751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306406719 seconds)
  done (took 27.377208721 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305914567 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308512048 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305474563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306156819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308285671 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306740231 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.31015687 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308395207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305938422 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309258962 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309364528 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30878253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307123803 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306738125 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30860331 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307415333 seconds)
  done (took 22.163618341 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308148883 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309341467 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309110799 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308998734 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306933236 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306677186 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309229166 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306971987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307371738 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309457597 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308513223 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308505854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.308132866 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308336983 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306496862 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310148836 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30560588 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305603426 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30783326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308793473 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307652638 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30641873 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309621891 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308911562 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306691095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.307118954 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.307531645 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.306910019 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306393506 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308662955 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.307067752 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.312996734 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306716299 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.307339359 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310530452 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.307403096 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310100504 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30953036 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.30880174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309125997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310350789 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306939324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309078784 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.309153783 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306470219 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309233341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307732413 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307072574 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307391974 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307564084 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.309245111 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309823225 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30906717 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310865635 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307868057 seconds)
  done (took 73.197082986 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308764057 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307599714 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.304518035 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307097372 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308499799 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.305706771 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.30658379 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304435258 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304889227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30693544 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304823961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307118237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304721876 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309383583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303618278 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304442404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303251305 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302737537 seconds)
  done (took 24.744582524 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303753051 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303921766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306146698 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302481239 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.301788681 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30495467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301938838 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304924723 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303831329 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30373123 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301586623 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304960539 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304779242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306120306 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30282817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303247647 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305705391 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30604424 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302841858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303205215 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305363224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306249322 seconds)
  done (took 29.928373193 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.304196059 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.305880769 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.320929006 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.347258027 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.335675554 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.305328119 seconds)
  done (took 9.156427327 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303903981 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306125413 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303496804 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307876393 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306474407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303940606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302973774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303980976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306658972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304304476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304194721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306963998 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307111225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305423635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307236716 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306805493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30428926 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304699978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304584338 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307737557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304908056 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307257219 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30504572 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304819779 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305980882 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304950061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307725944 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305296386 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30424008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307291312 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307505668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304709771 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307514828 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305947921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307867865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307201826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305879297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307810985 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308916347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305201864 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308757129 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307076263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308296595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30502897 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307315304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305417035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305611507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30578634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305701283 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30760575 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307886558 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305350557 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308550974 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307936561 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308499879 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309838383 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306628072 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306166632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308609214 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306144333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306847576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30897801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30644403 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307478282 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309201633 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305556931 seconds)
  done (took 87.462081277 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308086481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307342152 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306456766 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307752009 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306915867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306166117 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307366511 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306653223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307387777 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30739353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309285801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307978895 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306974492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307789123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307817753 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307956531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308662296 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308175917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307070519 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310477797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308373851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308399316 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307460981 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308123904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307602123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310483463 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307072128 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308086449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308674939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308540629 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308352336 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308636178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307663265 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307671925 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308128353 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307578368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30859375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308291363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307661197 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311256391 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307388505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311101951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309262407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309096071 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309487212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309070926 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308496056 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309298461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308131718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309302494 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309494864 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309162611 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309178715 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308606124 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309000709 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309355273 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309096449 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308619594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308432806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311316739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30928585 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308945873 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312278471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30895393 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309465355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310052229 seconds)
  done (took 87.605333943 seconds)
done (took 1787.228479411 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.354107253 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.418745234 seconds)
  done (took 14.016094805 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475551753 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42624584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311330031 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.314422672 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.311007406 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.33238086 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.328071364 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311874292 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312073505 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311759233 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312605125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504884343 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.314770579 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312157194 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.311524641 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405328339 seconds)
  done (took 42.848813829 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.339800929 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318304082 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433998773 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.333752276 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.338680492 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504901224 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371755767 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319203793 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490805416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35518498 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.969092163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341145971 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314936395 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.442420805 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334878773 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50559531 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571409227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.904028832 seconds)
  done (took 30.435051777 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.780151195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.313618353 seconds)
  done (took 9.339669654 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.330220037 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.310873808 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.315611791 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.333639011 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.333114513 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.363167429 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.332901356 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.331141029 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.329929881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.357351669 seconds)
  done (took 64.593063958 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.336221403 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31590683 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31766943 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.31395193 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.308857393 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.323207731 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31389707 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.308112082 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.047770621 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449441307 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33301041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322379493 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316381084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317639569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313484983 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.352576347 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.453668103 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312961184 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313442415 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322263436 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317503222 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417380337 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35949962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.314690248 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44680103 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.066331121 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.32122216 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323344671 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436602773 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.314020606 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316938526 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.317623219 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.319506628 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.884786445 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.877805992 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.326266107 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342745138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.325074211 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.313882627 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462763628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.318383671 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.323071108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.314159564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.848366572 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.479427491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435471484 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.648152206 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322589757 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320327793 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.380784721 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318849539 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320542937 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347275825 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.077281939 seconds)
  done (took 110.901513634 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.364875416 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.801677749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482284459 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33181639 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.181820279 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.951996139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312681109 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.604902508 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.322680351 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312535916 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59468505 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829184724 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.313680474 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.343315635 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.771604076 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325037173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313699851 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.232609675 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313510593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.312160423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743450859 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331094629 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312658052 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.549150062 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351390631 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78290847 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.792655231 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.851440345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.311347818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.311831347 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790838219 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321338176 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.332439779 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.317010627 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.590940935 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677816253 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650840488 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.312724043 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337941874 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315753116 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.332572187 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780252482 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663990778 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317858547 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311572256 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802211432 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31288126 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314785431 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316329674 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524631369 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.052495344 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312864707 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.846196853 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317138067 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.613657519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.375359118 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363946512 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812408101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314139801 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.448882963 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349786532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316411776 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314048357 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31705784 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317155033 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667807985 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.619711793 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319250442 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667463554 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.785160766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314277505 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859568762 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.188908474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325610905 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.369620195 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314739799 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.034484014 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813111907 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.337852998 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316041325 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655274945 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318708001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599563578 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329865952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334858774 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751681132 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.337855049 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.37405537 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.314756753 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.316332752 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.087683986 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315970753 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.587803126 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.381009685 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315055117 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.3155809 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.355847302 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316248163 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316702534 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.320186506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858113574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.318366426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.455788162 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337063211 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315860687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316831891 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.316727747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.318154888 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544115684 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.9573717 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319589526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315967598 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.31614276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325433865 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.513663083 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.320585657 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.632258895 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317514222 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319454522 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.316320615 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00295053 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.31836139 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316455528 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316902644 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.152596626 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.526737619 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.341345568 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.316882575 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318507833 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333304178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.711947753 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31754015 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.377939045 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317136567 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034796652 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345734998 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.352351879 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.716544509 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322702546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317833816 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31977742 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316612726 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629235486 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.599058471 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.555348235 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319689726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317982233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018545611 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337159646 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452792812 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337949431 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.460365632 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518157933 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.643667667 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.31855382 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.873488638 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317321729 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541092101 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318108851 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640653575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.822999616 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319133182 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323143236 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037469204 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.972818042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.117903637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.323833178 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.60201827 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.330273369 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.783469151 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.318483355 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.319902656 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902774816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322719808 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.3299395 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.31942498 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.319806989 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386875274 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.496368602 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.06405984 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324004327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787971291 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.355184138 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330043578 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325288621 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322252176 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673381366 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367176084 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.324620918 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.36332276 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319464166 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.323480252 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802303799 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.23306219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.324613591 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475186318 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968139639 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.320660029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322572305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.126217438 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.523847872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879772057 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339211923 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.638052193 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.323066599 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.362166512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.120000367 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381837764 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803453163 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322027214 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.322070306 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.949053323 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.320320371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369541511 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.321008375 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322269656 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873832491 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321417806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.322651871 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.716691003 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320873857 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576822398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.32159413 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.33992423 seconds)
  done (took 1109.51065668 seconds)
done (took 1382.889973006 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32266825 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32328817 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.311771707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326804989 seconds)
  done (took 26.544569516 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.332246591 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.327965315 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334018638 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.32814642 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.327900697 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327977324 seconds)
  done (took 9.238103606 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.421823225 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324756904 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325402276 seconds)
  done (took 19.331726922 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554050474 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.626359349 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709223889 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.585628655 seconds)
  done (took 10.737027929 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331581248 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.33032679 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330422394 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331476898 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332540455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334528287 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330332804 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331104537 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.333837965 seconds)
  done (took 13.244864394 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.39974377 seconds)
done (took 85.756850243 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.865549634 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.087602375 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.242916387 seconds)
    (4/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.696376386 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.331477067 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.32592906 seconds)
    (7/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.462091107 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.582047391 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.900508788 seconds)
    (10/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.96816907 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.326088583 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.364381017 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.619937963 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.396759972 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.349630109 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.712420822 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.480158096 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.350355029 seconds)
    (19/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.407606936 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.369371783 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.33299901 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.427862973 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.113847025 seconds)
    (24/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.988197211 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.325445225 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.744974771 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.756178792 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.334068229 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.169368744 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.515301627 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.31000619 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454451872 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.348788832 seconds)
    (34/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.408477962 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.32595963 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.472683387 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.324679904 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.343990692 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.33228569 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.570307432 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.022562779 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.938879876 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.326123905 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.373275132 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.31013839 seconds)
    (46/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.646532716 seconds)
    (47/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.166263048 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351585854 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.64218772 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.17869716 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407997995 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389021445 seconds)
    (53/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.687577746 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.326076582 seconds)
    (55/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.139843116 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335481963 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.557411573 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439365044 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604622027 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.314619936 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.796174774 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.433082632 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.339198553 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.732011154 seconds)
    (65/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.587107952 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.351442111 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.735073253 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.961761778 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.743572854 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.363312369 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386315056 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.406942787 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.755089575 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.414917806 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.985643533 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341127365 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.327997971 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.332799985 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.221365313 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350930515 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.263668355 seconds)
    (82/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337241438 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.974740639 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.447908366 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.352528474 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.273535688 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.518212569 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.313444783 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441442587 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.728420789 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.325196609 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.562469412 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.377032191 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.748466075 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.823051614 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.329413144 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.576953297 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.898079374 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.960003723 seconds)
    (100/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.41310333 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.709430297 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.495882322 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.93380846 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347061094 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 5.660982762 seconds)
    (106/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413841258 seconds)
    (107/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337449736 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.209786838 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.966893929 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.820824968 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.670636019 seconds)
    (112/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.869879061 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.444306841 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.377254642 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.763449132 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.034918253 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.319355121 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.628854372 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.526284449 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41024572 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.550270418 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.435536393 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.951628144 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.915666046 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.328516364 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018993645 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.331741816 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.071841318 seconds)
    (129/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.728044327 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.33219544 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.347835165 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.393480719 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.38825606 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.147556857 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.776241629 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.354000489 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.547740156 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.414463697 seconds)
    (139/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.329724435 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.503131987 seconds)
    (141/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314028447 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 1.843184978 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.351743007 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.689797629 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.587258075 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613213821 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.691922624 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.130952346 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.240124801 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.606589575 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.315271838 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357713583 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.337740046 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.241182772 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.345714075 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.953767948 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.452541535 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.43265231 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.942474825 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.428721538 seconds)
    (161/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.522247776 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.403053596 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119135738 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.740787998 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374399647 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355039815 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.950929565 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.330639835 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419202981 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.355173278 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352930238 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.723612098 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.333357951 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.979815944 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.236113996 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.814614902 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.451830599 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.878228079 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.384891714 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.738895539 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.4545944 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.758084862 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.371978795 seconds)
    (184/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.532498023 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.568707022 seconds)
    (186/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.672829118 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263897941 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.754476582 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.33288109 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.809704071 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.346698394 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.704891605 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.060038075 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.226938271 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.501871122 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121143775 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358083769 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.116311391 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.332816575 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.236759785 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.412342469 seconds)
    (202/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.582057759 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.333980169 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.211450207 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.374185821 seconds)
    (206/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421047449 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.331438783 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.372227657 seconds)
    (209/309) benchmarking ("sort", Float32, false)...
    done (took 5.364482822 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.333735855 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.881997191 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.389993024 seconds)
    (213/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.53035402 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.632237924 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.400878624 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120844727 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.980350587 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.200465554 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.98823527 seconds)
    (220/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391461759 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.552136043 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.551591564 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.359553778 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336763121 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.971392894 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.32713224 seconds)
    (227/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.476238683 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.334639473 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367592126 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.469085191 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.890528983 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.259345396 seconds)
    (233/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.323664776 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.947121446 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.402513256 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.253737326 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.360464341 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.831941603 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.377140418 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.463433807 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.864709172 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.795559495 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.845941038 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353621408 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.64945051 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.447638455 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.321800604 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.248639483 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37636229 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.755166104 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.350227451 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.219565914 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.985594076 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 4.427853591 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.935021101 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.690472981 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.26829005 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.335800533 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.202199448 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.424695749 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.322843386 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.830212478 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362077579 seconds)
    (264/309) benchmarking ("sort", BigInt, false)...
    done (took 6.335229913 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557485903 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.729561011 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.338478114 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.362199212 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.14566271 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.422475061 seconds)
    (271/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.920337087 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377316308 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.3855286 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.336976262 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.324350871 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.738755474 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.726835974 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.666533507 seconds)
    (279/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.41879421 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.012545855 seconds)
    (281/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.710894111 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.698107305 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.787309043 seconds)
    (284/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440903161 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.34092719 seconds)
    (286/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.993098929 seconds)
    (287/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.720591866 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.039010337 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.623300887 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.124104951 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42932633 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.41872488 seconds)
    (293/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.874747026 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.39077744 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.457219646 seconds)
    (296/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.325968292 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.797531008 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354486807 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.340967898 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.10735312 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.424249053 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.324086757 seconds)
    (303/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.338049933 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.379729932 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.662662122 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.890756444 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.381432539 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.361918804 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.325370706 seconds)
  done (took 928.775974334 seconds)
done (took 930.039781181 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.367408736 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361933144 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345395769 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.366841517 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457343642 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.37563008 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356405718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347151929 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394493891 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395702352 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.3461424 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.373529097 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348320506 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345921531 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.345500065 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360297794 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.401155175 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348213208 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.362861096 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356549682 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.363745142 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345543246 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396111511 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.374009083 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350437451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350127752 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350015781 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366853812 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.45833612 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350061774 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349901997 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.359628782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.401222259 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346701123 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342450176 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367291729 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358695683 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.357996052 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350673448 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380357846 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.818722535 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34794024 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349373875 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.348649265 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349530909 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.352192281 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350115429 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355896763 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361838918 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362697726 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.812164496 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.364194891 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352195704 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349507547 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358753957 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349954996 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.353111578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365875576 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369138675 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364303454 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.393653509 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354065136 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.351649907 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.365305753 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357093097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.852424069 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.345591045 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353443374 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.827692469 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.354128295 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.853001843 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.359211298 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351544641 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363742302 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382719047 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.409809603 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344097334 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.348541188 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.357597259 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348570107 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360521698 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362210936 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354576421 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350344806 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364037657 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.378994197 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.361377739 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350501526 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.359203011 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.370619929 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358705284 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362656938 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353105497 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345861805 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360633472 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353981296 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354223942 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353521561 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.355420696 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36234211 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.825554317 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368046211 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.348028339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.348510256 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351811739 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.365159442 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.828648052 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.351742462 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.373578834 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.399021271 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352334946 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.405836217 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354992011 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367801403 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361405386 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354424261 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347322593 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.407723257 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.825678211 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.367327716 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353452705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350643158 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368266963 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.353361818 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348467573 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.418373028 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353833749 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366061872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.473851196 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.364049345 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.384862293 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.351168771 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356107682 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381082597 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367948828 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.384610854 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356120077 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36776784 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.368356081 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348481564 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365198016 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36335787 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.354188407 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359773272 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347716526 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386110332 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36558862 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36726953 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.374314618 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.473901299 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.3512052 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.410268845 seconds)
done (took 228.485319684 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415629717 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.346835567 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438315062 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351454035 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455183092 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452008459 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349201375 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.35001828 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350067807 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730108057 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350574875 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.350745319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.347967777 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350475506 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43631331 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352644829 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350754167 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.693450309 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353912481 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.424141149 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.348769355 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351218295 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.35245933 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.73517377 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.346276383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.355010011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423751881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352961143 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.698103094 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.34902053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.345636395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.698809133 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.443429484 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379656039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363095906 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350820795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.45563613 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380529093 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.436796025 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437251531 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.439985248 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383775317 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.352129072 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354782566 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355783757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.355135437 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.351427392 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.380465228 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347793052 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352951758 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69525125 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365269292 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362539551 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35285348 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352486177 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376090939 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352477619 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355753911 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444444215 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356782463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417595404 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.738169811 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73422251 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355017224 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.349127284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351391156 seconds)
  done (took 149.771626163 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423532112 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.430231579 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.472571475 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.356110607 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40653467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475269907 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358122516 seconds)
  done (took 11.207754369 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361823354 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355490006 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406887681 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.405754843 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355378759 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.504613403 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356553447 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368452967 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353314227 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41018037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.356190988 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356680686 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360967402 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352850072 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405622314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368610824 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47178616 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357746015 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35688133 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50771007 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354565177 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36227159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409004725 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.36955265 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35771672 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36256245 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922650476 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357934993 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354124641 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357615129 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353728421 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.395899769 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35692494 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.35633504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353772722 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474144805 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.3578557 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355855715 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356436616 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.355687387 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356735791 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358420427 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356591327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355306259 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357165295 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38088433 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.358027257 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358407433 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357940716 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357795282 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409646821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359432576 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.355734682 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.355470052 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415160597 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365059516 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358548766 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.355211425 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358391847 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355654837 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510528404 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410382102 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357981796 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.406704194 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359413694 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358916231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358886405 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35907482 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413757836 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359370791 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408094706 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355867453 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.513677779 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382847431 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360296447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362212379 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.363449879 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359589177 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.35691466 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364938624 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356431592 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.360683035 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365850736 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355720591 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35641608 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462618633 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468731002 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357335247 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.373778571 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366765752 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.35717709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412227685 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360170847 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357516324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413716317 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.475281466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.414273375 seconds)
  done (took 155.609116233 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365873706 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369500146 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361568025 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.376904056 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360581886 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36202192 seconds)
  done (took 9.485721858 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364125328 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362315613 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36078251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.360782587 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.36250308 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361527351 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361721536 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364525524 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.364629724 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361811119 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361636789 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362645731 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36153707 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36140384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363138343 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36176953 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.36164632 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360175236 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362310792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362395222 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.458638941 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362458339 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362036388 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36448708 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364421833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362648279 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370753261 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.361890618 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361126886 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369890321 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.36500028 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362743639 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36471443 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368976836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367491743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364267102 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365743387 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363089216 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360340099 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362329682 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362881584 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362715453 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.361393588 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362665807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36647225 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.367875836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367389381 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370494538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363530957 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363960628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363785403 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.363036278 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362643138 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.36414031 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366272671 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367628193 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.367233059 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364465261 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.363511421 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365373272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363813081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362409885 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365235373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367366093 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370901724 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363787727 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364910328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368950793 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36451207 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363050677 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364574994 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361736824 seconds)
  done (took 100.597625971 seconds)
done (took 427.955478468 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.785959336 seconds)
  done (took 8.079751724 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.501577308 seconds)
  done (took 7.796380051 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.179827884 seconds)
  done (took 22.478340489 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.371087751 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.367548938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.358595085 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.357081708 seconds)
  done (took 26.748177057 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.448617026 seconds)
  done (took 7.741185575 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.357231709 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.356897905 seconds)
  done (took 14.010209195 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.473173949 seconds)
  done (took 7.767468274 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.477827285 seconds)
  done (took 7.776048268 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.362825776 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374382093 seconds)
  done (took 14.042796983 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.349487852 seconds)
  done (took 7.644390165 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.552683007 seconds)
  done (took 8.847074882 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.359105613 seconds)
  done (took 7.652993281 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.419374905 seconds)
  done (took 7.712986642 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.585093992 seconds)
  done (took 9.879321596 seconds)
done (took 159.471521076 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.358258429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.361659481 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.362641658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361494124 seconds)
  done (took 26.738242651 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398698979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399201631 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399561085 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409906733 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401192787 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398845519 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391626223 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390274958 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410385362 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.401860417 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401151968 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401102104 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399405558 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390842611 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.402014601 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40028223 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409754796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400200448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392363135 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.402317573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36718024 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410166013 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401439875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366902715 seconds)
  done (took 34.843284196 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.567718195 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43977398 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521497592 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.422338452 seconds)
  done (took 7.246751776 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417794519 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420088332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434669046 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474142877 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496530167 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.43021945 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391523066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387772122 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375152642 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420230042 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495104671 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435529304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505476902 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366693245 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554348262 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365817325 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365332965 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418670439 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470828587 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495118932 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366797631 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418014798 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424084615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43557424 seconds)
  done (took 35.661257256 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.366498009 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375401932 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.373263838 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.366565684 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366824869 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366630616 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.3723543 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367641714 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.387718135 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.368496837 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.365906001 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.36739995 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.367390978 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.36654607 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.365878632 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.379379961 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.381394588 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.366723856 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371064264 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.373939826 seconds)
  done (took 28.715054721 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363126526 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.21653756 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713571492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618706497 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.362959319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.364913202 seconds)
  done (took 27.937725156 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445326395 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578959955 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.36966202 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.751599627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.835473253 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.37128276 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368462164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.61765774 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943559838 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.962960387 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.429503133 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.441551523 seconds)
  done (took 20.415102129 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.370460782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.366403813 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.369709751 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.381003669 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.428010089 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.373766312 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377087409 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.362403909 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431146713 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.433764528 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.374739057 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42945061 seconds)
  done (took 37.997870993 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450602569 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418252986 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.362628784 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320668669 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089346834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575582967 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.282161354 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.834083321 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.367364243 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100769226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373517394 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453447891 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622664428 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364316064 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363540206 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.43134162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589137168 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899369571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364569232 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524070319 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390042448 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368069015 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.747031286 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396177574 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57492461 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347280374 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624719783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140983496 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664457884 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376359267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373761154 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364308297 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638776767 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040345398 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462228893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373543466 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302523258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.91305037 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.360069198 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.606101625 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376639529 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36693414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375525907 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364260298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300121292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379024775 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838466799 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.372354993 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.07718874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365161858 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376054193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45982314 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368044851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939480041 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531486905 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372138758 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.362854827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372191365 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938876175 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.999768253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381656448 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.299808103 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.918884308 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.605478924 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054731021 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.469841446 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36956347 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370344691 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30107815 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.580372533 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382570497 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504165102 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391344356 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029288606 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139894659 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371148445 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297899482 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963035405 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374068136 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.303736943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595722957 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14233739 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30627531 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.316570293 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301176254 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121204698 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375290268 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.803952676 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376553615 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834114246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.378369274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383116609 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389780619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59253555 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.252645704 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368672496 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.374458829 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484590562 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389298662 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836915433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303143514 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370628802 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625143663 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579951779 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368638669 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.44021029 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597836885 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384129612 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.382321845 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36808473 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379202214 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.018038632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381871359 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006920136 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385937317 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144475605 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159718347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373127524 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.471799992 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384383072 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627099469 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.194663918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269047926 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436211158 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371783835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368607161 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.629111617 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.222080723 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.270203959 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.372471509 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373597735 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380563208 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.370690984 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330928019 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.368501494 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370263649 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.148406074 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593806901 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369614425 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645875871 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304573746 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508478302 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385697722 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595419571 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.648188414 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.369975489 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631679145 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375194366 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377250911 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381652344 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387958114 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466239676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391610997 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.370279417 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630641474 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.375506131 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374140523 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.628484126 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152801891 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374504675 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376709202 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355111051 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025079712 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345417466 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377284391 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265130369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.384986172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438291383 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376840052 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380724397 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.310106919 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.430971184 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375177738 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.379123267 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596279316 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382102954 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.625719299 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452537742 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.599724993 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030083277 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386894797 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.305740685 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083757033 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.064897404 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372179284 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.563719636 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371705957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381646937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38284676 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.091086357 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026319349 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375545588 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.557310534 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378793649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384217286 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37793732 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372947743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.272191742 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021319491 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383082131 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.386488731 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515737759 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.386804242 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307256551 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889694972 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377038527 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373429438 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150098719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406808903 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.559155729 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875371764 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634380116 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.28275495 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38401958 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.680231021 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405548993 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372050711 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373383939 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378199859 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393117713 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381619779 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.384016368 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.56391799 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823363275 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944219848 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167871912 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971768795 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334439403 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.381646025 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276152553 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.848122464 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308509178 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045119465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579434127 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858973179 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333233864 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606556501 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.664738377 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177195821 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383411243 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604544874 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329192538 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.37758232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387025137 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587040056 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409706191 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378455659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306418302 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.67815188 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657185874 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375187687 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453921347 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850176914 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39012855 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15603408 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.37520967 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.788427448 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563623531 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925738479 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769885012 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375230332 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383977587 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875436003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38080843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904947389 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071841809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378002337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.603028314 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31584463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387190104 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387559069 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.37740206 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.772025154 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.37747364 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.633870015 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386992311 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310608962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376207329 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977785185 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.232867266 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383027814 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378169179 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172078727 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389188192 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679707328 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.378687998 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.273317081 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381140473 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312913 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311811452 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.070392805 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378962575 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348436352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916783336 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.879655429 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526538927 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408532706 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22918517 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636712197 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392151403 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038829187 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60549305 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.393921751 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399875137 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.479210665 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379954762 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.367554216 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261843636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613779652 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360947111 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602703152 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.382070045 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.294421159 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.377741629 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59014224 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26043653 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379220202 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636196739 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.089479958 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.391268909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179045292 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402920471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395296612 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39942165 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.932999885 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385250427 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449016707 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390450777 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389166721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.389973687 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56582277 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394397512 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38364603 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.392175393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473247489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.247215575 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.267913876 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.152636182 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04827008 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181427829 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045607828 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394193211 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380388044 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380507836 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314805907 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528162312 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909237285 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653929064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502868015 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.016043925 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401303849 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393783216 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395268731 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59465841 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655282699 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257290725 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390381443 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044376602 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.540836618 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39118977 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.591241145 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923516501 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981197064 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501336535 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380842567 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8555818 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654709141 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471472488 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38039185 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978570859 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39890795 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.802643326 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.387878595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389920154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530432934 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391026921 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064923296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.393490983 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.541549319 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.154739661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.72063884 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641348748 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.927911448 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394138161 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049440679 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.180237635 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646867517 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452378929 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392001223 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.486808558 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52801167 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.379812908 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.280056616 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381916196 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230509112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092936574 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.392456628 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052193358 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65066621 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.379909294 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.382845933 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405311723 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.392341222 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608359972 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146989433 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610218642 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392749228 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384418469 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.95694807 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051514542 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397163516 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317479269 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.3865619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638144472 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618918812 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408790174 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.83612186 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.095489532 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977801322 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358344481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405274348 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397390372 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18420096 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052075425 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.279341585 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924052547 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046100489 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395522174 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659840903 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389333532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393209734 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66106587 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388300974 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385320379 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399053376 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.052353694 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198090568 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403259767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656923686 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.323602727 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.613025969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160219325 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321374982 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394110939 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.588736236 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387601584 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504323844 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396439245 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.385024879 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39863305 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.133257392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666218488 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.391868665 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.385491137 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.375291383 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399325665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395056869 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670398984 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392031861 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059873405 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741835643 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643997957 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385004037 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.374442747 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.390810558 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387104278 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110723584 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364259102 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.107723382 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973854333 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.385574123 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.414458915 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39036332 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603390324 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5986478 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390477553 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400749599 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389338478 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403363894 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.292441721 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.159196853 seconds)
  done (took 1616.596712349 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439270136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.420515837 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.410294057 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.4219919 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41090705 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410015616 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.453861215 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450874451 seconds)
  done (took 52.739102846 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.399591351 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.543969932 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.419191026 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.391362 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.399215283 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.399753207 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.871179348 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.396446799 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.3967794 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.397741255 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.396204497 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.394615022 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.06084414 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.399600171 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.402035292 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.386702904 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.395692449 seconds)
  done (took 66.377839278 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.399589145 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.643692762 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.489078829 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.386408615 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.590344444 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.402865416 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.549189621 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445466388 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.389498505 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.528717631 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.071463537 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.411729572 seconds)
  done (took 80.632277697 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.39796609 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.396335365 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.397645646 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.397597361 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.397155085 seconds)
  done (took 8.309067176 seconds)
done (took 2045.508502333 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.632767018 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.147523841 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.067869175 seconds)
  done (took 5.538692007 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.538108596 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.587524113 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.739136964 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.716530687 seconds)
  done (took 7.905879355 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.680620508 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76220059 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.585058389 seconds)
  done (took 6.351641767 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.901106277 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.40578273 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.536258632 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.389490955 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.392459558 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.393715665 seconds)
  done (took 20.501408039 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.393865744 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.397143905 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.394214481 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396258471 seconds)
  done (took 6.906359843 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.375788908 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104226535 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.374583807 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393776724 seconds)
  done (took 18.573143537 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.140731682 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.154789285 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137585089 seconds)
  done (took 7.757887675 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.390919876 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.236595801 seconds)
  done (took 9.952766061 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696188356 seconds)
  done (took 3.021838287 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.525679219 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.663377499 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.621963327 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.461208406 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.611292557 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.564393907 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.185568161 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.721715619 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.446497274 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.762907661 seconds)
  done (took 29.890118827 seconds)
done (took 130.200377787 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.398200294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410816199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.593806037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.36800169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.624109312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.593945042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.672231949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.33677154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.877570859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.867768155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.368138026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626920726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.845336535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411062982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.848173977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416127602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.62432921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.441624476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.058473976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.293208933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.671312753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.00677309 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.199689998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.027764604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.623753431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.541729806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.588933336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417751731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.233599991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.6034507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.544704832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408495371 seconds)
  done (took 194.871155517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393251472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393582582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.3941996 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.401987132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.395732337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.394097835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.394236253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.393904307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.406250129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.39387049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409396374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411045337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39595663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409343679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.396569228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394595167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411170694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.395193867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394202374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409088896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.395043465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402697866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394494319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394481624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.394528414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.397035589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409619077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400374446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.394787299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.40719618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.395976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422754301 seconds)
  done (took 206.126348943 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.395393117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39537675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.395589869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.397146742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.404295649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.398991399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41531159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413218106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413236165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408528911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396053064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.399682924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397284866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39571928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.398512626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395734756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411457404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.399889307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.398221481 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.395822119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396366801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411127729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.395972034 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.401053215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397102765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.396144176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.396708692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399075277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.397410005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.39657981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.399105627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.397789423 seconds)
  done (took 206.141172218 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.592957977 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402793514 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.404342023 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338472728 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403550707 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403103489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.403698734 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602805398 seconds)
  done (took 14.882918698 seconds)
done (took 623.351522322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.910221563 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.59916048 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.608962801 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.42497541 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.284924879 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.424841479 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.423664512 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.602829345 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.37634858 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.608106982 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.690950656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.422686113 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.833625712 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.422551329 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.682414875 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523042631 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.321437411 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.4361448 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.750313741 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.018030564 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.688547656 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.905059684 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.601466418 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.368565978 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.84072954 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.908152974 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.209967441 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.343176807 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.425450115 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.75469134 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.174244243 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.462042979 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49054874 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468836619 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.522630551 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.503536534 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.446687766 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.468368403 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.608397932 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.665702747 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.047975768 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.174037467 seconds)
  done (took 95.7773077 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.393918967 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.39314262 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.392790484 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.393948458 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.394719155 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.393707533 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.393204101 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.393702762 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.39343387 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.393312171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.394508304 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.394896035 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394475039 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.396502942 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.394013907 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.393913123 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394950092 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.396774186 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.39411367 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.394660341 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.395039375 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.393813517 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.395413237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.393654751 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.394746977 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.395078358 seconds)
  done (took 37.586261195 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.40782093 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.666525967 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.844135749 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41502498 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407411666 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.41237008 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.490457864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.408772455 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.410302927 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.410865811 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.565262667 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410378522 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44287036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.85471463 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.413278189 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.408005393 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.407172906 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.408173851 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.6785118 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419737195 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.493883501 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411171646 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.492223127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.421489326 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.410934711 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407992383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.412254943 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.936936255 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.413304809 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.568192035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.260872242 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.491678579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.887381137 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.860000338 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.262219636 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.412221491 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408219664 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.573370408 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412221889 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.408929127 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.491995145 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.412852 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.855558644 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.05481058 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429906707 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.409134446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.955888483 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.572047379 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.673753807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41982188 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.870102752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.413297172 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.410205355 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.41221996 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.676488167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.420012186 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410445553 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.963047432 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.417191541 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.49266557 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41073079 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.4108116 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.683371588 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41311868 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.674398688 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414456769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419000481 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.411387592 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.8573605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.415596632 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.073061689 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430456944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.409912963 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.568930954 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.674168347 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992022301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.417039629 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.689737735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904033993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.495740663 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416433455 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.922440317 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.496360083 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41626783 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412603638 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.411823512 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.413549773 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460429576 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.490939655 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.992872728 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061502138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.974202984 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.496353925 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426011896 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414454721 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.959328365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.413494609 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.412269356 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.84461944 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070950161 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432102071 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420354629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.053759541 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.432192296 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.495796805 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419155418 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.859277671 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.414016141 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.46481164 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.412540525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.420275616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.417195906 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.495599123 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.417918415 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.413092124 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046749719 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.594199374 seconds)
  done (took 185.410561786 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420115578 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.406570958 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.418994426 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.40787188 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.406696573 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412330893 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.406914487 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.406857127 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413513815 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.406353496 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.408340455 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.409643978 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.408173898 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.44703897 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.416997491 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414970121 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.068089118 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.406805195 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.409388165 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.40904206 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.225183226 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.410898258 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.407654254 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.407824254 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.410048843 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.408562792 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.411688053 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.410014866 seconds)
  done (took 154.337779855 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.415482176 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02915255 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.418951078 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.556280488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.437200226 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.413601975 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.55049743 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.479634392 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.418006768 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.412309099 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.412525059 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.734686483 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.416337043 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.9796878 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.621771197 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.554162841 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.959175792 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.416297262 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.413247467 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.412714189 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.557252677 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.424353753 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737128845 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.015278159 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.416939077 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016607644 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405044527 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.415204059 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414839689 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039879236 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.417071185 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.74049089 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.498850855 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.480006353 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.019093182 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983960218 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.987665646 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.571506581 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.415448364 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.41304258 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.414141566 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.404240219 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.046701898 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.420042851 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417451271 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039897292 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.436297198 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.416393987 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424865336 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.414889973 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479876503 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.482977916 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.752319296 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.045906907 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.499140304 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.437855414 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.555258343 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.821341038 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.418194502 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973055447 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.406343402 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.024021851 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.419398031 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.406404545 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.41717335 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.420906502 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.575225195 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.556742587 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.963992024 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.41936922 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.963585888 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.575651223 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.416283349 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.41525549 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418565354 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.023510128 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.96565014 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.575879555 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.559544527 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.627788538 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.410098325 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.417480187 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.406950046 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.499681694 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.416188581 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.021867948 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.965508829 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.418956799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.41754343 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.419083436 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.418558668 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.607575389 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027907014 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.500639832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.962501569 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.76644237 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.745974721 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419756576 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.480704627 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.419268474 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.744123343 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.420302475 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479426463 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.892676394 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.743110909 seconds)
  done (took 169.442812769 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.67661605 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.695180655 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.514378291 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.539183507 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.019297682 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.004556063 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725115421 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.547781986 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535821533 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.674039539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.647311564 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.508054766 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.604338493 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.497576556 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.15867123 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489663829 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.515323556 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.545543843 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.51731064 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.477402916 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.071714064 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.712199868 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.59558602 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.450830619 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.517334971 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.249264795 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.978490318 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.951571533 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.601523422 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.770192767 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.98120989 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.553188912 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.417855217 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.118728568 seconds)
  done (took 68.209609357 seconds)
done (took 712.097865614 seconds)
SAVING RESULT...
DONE!
