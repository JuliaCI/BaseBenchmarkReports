cset: moving following pidspec: 303
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.265404072 seconds)
loading group "string"... done (took 0.561914444 seconds)
loading group "linalg"... done (took 7.017268806 seconds)
loading group "parallel"... done (took 0.162533654 seconds)
loading group "find"... done (took 1.12690702 seconds)
loading group "tuple"... done (took 1.955126842 seconds)
loading group "dates"... done (took 1.24503671 seconds)
loading group "micro"... done (took 0.232834973 seconds)
loading group "io"... done (took 1.05266146 seconds)
loading group "scalar"... done (took 37.973379023 seconds)
loading group "sparse"... done (took 11.961037813 seconds)
loading group "broadcast"... done (took 0.952154733 seconds)
loading group "union"... done (took 13.072888695 seconds)
loading group "simd"... done (took 4.386586924 seconds)
loading group "random"... done (took 8.854111443 seconds)
loading group "problem"... done (took 1.856480805 seconds)
loading group "array"... done (took 20.985165146 seconds)
loading group "misc"... done (took 1.877666131 seconds)
loading group "sort"... done (took 3.213693793 seconds)
loading group "collection"... done (took 17.872614744 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525011692 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134501058 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113795969 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133272204 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.176031399 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1271106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136587085 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082622002 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.821744765 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153303102 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132684856 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.459123691 seconds)
done (took 4.648710627 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.191908678 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082685223 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092896948 seconds)
  done (took 0.776264524 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06317379 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122606817 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.077176082 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065584193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064930393 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077352288 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064070227 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063924544 seconds)
  done (took 1.143308136 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071513125 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065585661 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080413511 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064508439 seconds)
  done (took 0.889992859 seconds)
done (took 3.678640423 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.872497827 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.227994501 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184741447 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.433850093 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.142342652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178644058 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654686573 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.280566845 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203561912 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095653465 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100166715 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.363495571 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.103664413 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.660789721 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074787431 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.101854063 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15397117 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.387103156 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078583642 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080273777 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100108939 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.137479827 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.097713941 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074137159 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.164761355 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069999462 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142096822 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.091041259 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06590092 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.234275486 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18595488 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67386402 seconds)
  done (took 10.059486602 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093514044 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112547752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066226342 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135157744 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.114286439 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068852961 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.068452885 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079809985 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086744814 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.152809044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.110170979 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101414243 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079317444 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068324119 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096556962 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205605636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103049146 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081791572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083734067 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.072980959 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11763057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081279331 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090447691 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07472886 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.148831819 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188440001 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106481675 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.107773764 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067484635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077219751 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.128637555 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.138792917 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068360373 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.078563421 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134065114 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106496998 seconds)
  done (took 4.311517232 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022973795 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.166712159 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088037565 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146153408 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082365655 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.121565348 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064866753 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096588011 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235444642 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.060740846 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.13523354 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455013714 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10881177 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097164564 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064906906 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081632817 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065427082 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45676858 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139427095 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116121895 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081219028 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078716305 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071929901 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082712657 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065045379 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063430104 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081813853 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.098711327 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309806069 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.137977156 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064948342 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.161416935 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10212798 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066438804 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113792302 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178491938 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092220387 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117753634 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079189275 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064443968 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162049616 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070806444 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079992114 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085696557 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116335621 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114478387 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066305491 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078666322 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174937469 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06386973 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095749379 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.829246987 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.162756404 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.087561214 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06343673 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275279213 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.081640685 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080195704 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06223502 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.210051173 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.14320321 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064341231 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079948463 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068077751 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061117032 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081830956 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377988476 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065887441 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.728277364 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081250951 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074430675 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.080405766 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06562377 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069510433 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085290722 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083213873 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079001817 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067391078 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.063704186 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080330769 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065572482 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096776823 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197505907 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067921046 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07770992 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066049622 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062226364 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099007399 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106546077 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06948807 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062754792 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111927978 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065903007 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080657529 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.098104866 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080495887 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095332853 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067696695 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125188857 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066143222 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100610024 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065873924 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105663286 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069438972 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11144404 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.090814753 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069604432 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148082444 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061641611 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07888834 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.064533479 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.062561641 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081457726 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065644077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093906539 seconds)
  done (took 20.146501569 seconds)
done (took 36.144768201 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289663613 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086149573 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085280791 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.070857432 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086768775 seconds)
  done (took 1.295431413 seconds)
done (took 1.943450588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141914547 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096379556 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076091746 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092910112 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061456373 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112615996 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109394227 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077633596 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110264171 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.061951297 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107217187 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.061649369 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074960878 seconds)
  done (took 1.862097694 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079504835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081609322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081715431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.077892352 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075123286 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079051889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.076049867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09924037 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077126235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083920338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062090645 seconds)
  done (took 1.518058312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078039741 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080509719 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081749146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.077511613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075060285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.077988428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.076976745 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097207233 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077659776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083680225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063078918 seconds)
  done (took 1.519956876 seconds)
done (took 5.539220491 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07557438 seconds)
  done (took 0.716767824 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.672833906 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.202509135 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080041182 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.126538584 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225778745 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.144706008 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.411259581 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.104180152 seconds)
  done (took 9.789908496 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111398756 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081851758 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068986724 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081859309 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066061175 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083959006 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067017196 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069074665 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.080880061 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06642657 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083141684 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069268882 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080820209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068608298 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067695347 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083207774 seconds)
  done (took 1.938868737 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100635871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098485751 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.086526151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07429245 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084845641 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070163096 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087453476 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071843326 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083106331 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069739193 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08688936 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071605574 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084576452 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064154355 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08557465 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07450032 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083067715 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072657856 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087021822 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072757995 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085986241 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062826381 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083732886 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072617221 seconds)
  done (took 2.665452417 seconds)
done (took 15.75663837 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.123964576 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072303503 seconds)
  done (took 0.845901576 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078109361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.092774284 seconds)
  done (took 0.828922699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078207494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.076986612 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084771697 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.088584414 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063726113 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077830102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.095908971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06404271 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064088069 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077957808 seconds)
  done (took 1.429925024 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06599774 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088644549 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068409595 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.091959003 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070162705 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.076073607 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070792762 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080306193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074831822 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075207556 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069382196 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.093321513 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068414111 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.094658801 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070668506 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.080005978 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.082632188 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064601082 seconds)
  done (took 2.045535008 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062909841 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064819448 seconds)
  done (took 0.78708385 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064830078 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061983483 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078682674 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064342237 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075200117 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060838997 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07569268 seconds)
  done (took 1.141434578 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381254946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.105819503 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.236198768 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084209182 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.098075263 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.265334922 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.079174554 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069142577 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.083522764 seconds)
  done (took 2.098896625 seconds)
done (took 9.831035476 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077398882 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084084507 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.106562771 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.406094811 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.101654512 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064475354 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.138829335 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195483385 seconds)
done (took 1.832950631 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.121055683 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.577624684 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385444129 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205245242 seconds)
  done (took 1.833774225 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358907002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087951457 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.071150312 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06457293 seconds)
  done (took 1.250360571 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064178464 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067864274 seconds)
  done (took 0.799841815 seconds)
done (took 4.668458828 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.0939281 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079910646 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062027397 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064278384 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077567834 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063596182 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062182749 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078100656 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0648138 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063829968 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079070137 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064930816 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.078544406 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064969896 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065157088 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076283218 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062230544 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06496626 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075867101 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062088304 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061839595 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078349122 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061843275 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076610234 seconds)
  done (took 2.383094469 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081378005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079426194 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069222469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084539908 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067567333 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084243353 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069620942 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068322492 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083619963 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067949378 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082181861 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068299015 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08098214 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068608667 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080785101 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067653044 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084016301 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064706272 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066731658 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082933633 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069122532 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078742117 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067884419 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083562866 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068083718 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081790535 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066865757 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079603622 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069205043 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082557206 seconds)
  done (took 2.91830908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06839533 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062004092 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078247374 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068566697 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061778956 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077910595 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061967468 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077173884 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062105063 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062170809 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077759084 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061819377 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062433209 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078025177 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062649908 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079952335 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078017045 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063046734 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076821762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062743611 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065812352 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077110372 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062404451 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076868951 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062646771 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062235898 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07685457 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062466685 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063002639 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076938375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065158852 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065547131 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076757355 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069427839 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080547118 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062205943 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066527037 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076473023 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062956355 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06241471 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076695152 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063235797 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076569963 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068722882 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062911177 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.079014855 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063183779 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063648075 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077156341 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065055356 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07647896 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061985244 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063934549 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077300694 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06743953 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061211085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078428555 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062759924 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077819219 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061793495 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061915423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076181798 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064450738 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062462423 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090930401 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069320655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076574989 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063275933 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062655552 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07886038 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064408592 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090342838 seconds)
  done (took 5.676164742 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11006217 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086627259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079429771 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063870677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076037151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062504118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065298741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077339421 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064316764 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08195051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063084414 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063996518 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07884683 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075013817 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077276775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06417069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082407284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059987203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062850914 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081090289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062387923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080015342 seconds)
  done (took 2.28967961 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174732634 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08446365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104693978 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08564879 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065660456 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085716613 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067976636 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082689138 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067948947 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081202629 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067082173 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083097576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06627645 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081362966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067271488 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081270347 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068710355 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081301658 seconds)
  done (took 2.168947661 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075528559 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063934229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101994708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064055306 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080593282 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067419975 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084167438 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072889388 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082066283 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06481334 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086698977 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06807081 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0818939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.163947492 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066970672 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079428247 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066928684 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079205448 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072834516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083910716 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069620502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08617598 seconds)
  done (took 2.436252211 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077906417 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066464404 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095976232 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081763776 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060201839 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062866646 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085716378 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064688161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084616245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065945559 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064762041 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07971369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068691647 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078665467 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069358178 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07904386 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06708893 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079778381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066686041 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061174641 seconds)
  done (took 2.135565585 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084113567 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080585057 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065969696 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087317532 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066797069 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081510383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073650065 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080536287 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066170998 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103310423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065574813 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080748345 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072386662 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084459817 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065890201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087452452 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072176212 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087033716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065642136 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0808254 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102926732 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066158676 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087769268 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066402976 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066057544 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080348895 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066365009 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084775386 seconds)
  done (took 2.850886871 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064429672 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065400577 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077392366 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062595873 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062930222 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077680068 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062430104 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062563203 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079472171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06287841 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064318199 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079728268 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065110926 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080513131 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065024201 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065032751 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079847966 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062110565 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062644872 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077033173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064797012 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063750014 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080177564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062617901 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077571676 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064906799 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062779831 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077693896 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06541238 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062466503 seconds)
  done (took 2.738228176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074009191 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086761597 seconds)
  done (took 0.842572685 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06210242 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077844591 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076936411 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069316996 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082885354 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066125054 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087327909 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068784918 seconds)
  done (took 1.269733702 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079490146 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075312404 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081414632 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075550771 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090381872 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081503154 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14897966 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08113406 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.070778592 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078693724 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078072798 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064202118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.086652718 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065935346 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085139149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070564127 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062616863 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084514135 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067580652 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078724379 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066300706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09002657 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066995944 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061460797 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081081199 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074051715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090427216 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066225828 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082883445 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072397973 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085092092 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059757101 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065041514 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08000796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063431281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.089616096 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079334559 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08306541 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07399543 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065887904 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089490285 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060351925 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084201758 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071534654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089615804 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065449624 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081408036 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060103514 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063419764 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081972223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060295714 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064497301 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075112512 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071128872 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083352159 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074834617 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079149051 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066076027 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068257465 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083277625 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071295041 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081968408 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067634037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064639971 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086160532 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069470115 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088172483 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060502478 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059010515 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078240513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.073857403 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101621331 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070666405 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.080852056 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065910603 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077982845 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067862538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066203038 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085323242 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.070951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081214063 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070551912 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086292154 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065425897 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067460944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087405348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063908859 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082291543 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062870471 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095724993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064039514 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078123402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063022276 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074322266 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083721691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065200303 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077922976 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07161674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059622687 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.080732206 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065915578 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080688343 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076104381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085162208 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069677192 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089076662 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072584595 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064293283 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083144135 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06210336 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081221093 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064793358 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07084983 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075731191 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067420441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080308992 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065448616 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088608058 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063265082 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065183583 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087481842 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070330188 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078791365 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062143159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067656823 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08078876 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067737065 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08808381 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063664092 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07552524 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060006713 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068046191 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080692715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068748539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084601221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067920095 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059277591 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078919871 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07000926 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089076134 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065774189 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.080562079 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070740064 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066477267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079134942 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071535707 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082823201 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064895439 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086052932 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065734277 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060773816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08398954 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067734691 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.07894131 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069092088 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068298693 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082961942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065637258 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079261796 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070211999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081072657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06467032 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064929382 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079505452 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074925846 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081933163 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060698741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062304876 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086947611 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063637604 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080088352 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064185693 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067630644 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.080788517 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064254712 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0797915 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0671354 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090208427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068704783 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066374284 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085349054 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076565395 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080163344 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067592302 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080269263 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06670786 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065513336 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088655267 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070130923 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084295075 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068014829 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077692326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070131703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071125851 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079188598 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063515346 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078962917 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067444908 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070118642 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083772817 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065680545 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078897001 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066350213 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083424236 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067943901 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065072254 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08033392 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069742322 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.07925706 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071567 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081174597 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075317726 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084136036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060650528 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067434164 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078651685 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071325689 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076412889 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06269007 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064888377 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.081189382 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064367756 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067543588 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075231888 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071181242 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087670811 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0660427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064091746 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08145834 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071364217 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082315938 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069208203 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08402165 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071178306 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090679829 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064045594 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069206247 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090301977 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066656941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074877525 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070571237 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063990379 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080420235 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064853696 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078714698 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068939741 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088329599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071368303 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059252042 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083082454 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063569304 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079356857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060427036 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069866302 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082880655 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066573353 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086285583 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065529867 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065414456 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084428348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065232672 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081657108 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066050875 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067407621 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081817662 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066809699 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079876666 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067860699 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06372888 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078630767 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066748727 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.080955623 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065079202 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069589995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080823529 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065544502 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083078424 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065863394 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081185071 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066002974 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065504858 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08389103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06677168 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065216555 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084143888 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060897691 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087476086 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065602698 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087746018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06604953 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06279061 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085128837 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067465587 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085039961 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066052456 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.081920464 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066659848 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065175417 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083212943 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071775695 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078946296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075002659 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088136284 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066421402 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067504683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.080875786 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067127584 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064369991 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081845927 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065292898 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081782972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065542249 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08548419 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067485622 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065175449 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082374113 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066270744 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.080538851 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066111419 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060220059 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080253009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064995134 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064325357 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090571287 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065403968 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080543694 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064446018 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081338218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064098207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061700263 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.086696805 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072873532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082998769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071626708 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080266713 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067021795 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091022381 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063234558 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063304654 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078878291 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063628238 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087532344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066304778 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073916762 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081819373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065432112 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078312421 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066106773 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063373921 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076027149 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064231418 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08396169 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064552736 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064375834 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08151978 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068652267 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081724834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075165273 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064012612 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082029314 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065692573 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07854378 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06536714 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064267826 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083879295 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066378337 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079338473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06267584 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064249557 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082022988 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066779077 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080691015 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066999808 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07158854 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080366241 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068535974 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084199194 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060691773 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06798746 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081074971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066263517 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080299629 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069144608 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067460916 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082627936 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073348817 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.080662114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066080227 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080760514 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063636339 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064830182 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080695162 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065886938 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079693094 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066486304 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073035625 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079444913 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068222399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081153627 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065671758 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071138367 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.081742295 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067923678 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087283549 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065980032 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082270307 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073221789 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084213297 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068003827 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065652166 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082716935 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070830351 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080162694 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071399498 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065619203 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.081687517 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067861967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079530882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064984117 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06537345 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080086616 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071456965 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082721139 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065012633 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064256725 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079971661 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066715913 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084543099 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07268557 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082893407 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06852569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060682415 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078449902 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067018335 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063053673 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082857137 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069378332 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08647843 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068120956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081322058 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064583002 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073494486 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087104635 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069358699 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078835499 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069502844 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065644219 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08339122 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066119225 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081640916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067725906 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068042407 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083337159 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065223632 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08742025 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068351256 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081456958 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067473234 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065830192 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081386769 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061440752 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.081299744 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067005981 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06915974 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083337807 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06559419 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091230505 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063743327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064931413 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083991691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064308666 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08596147 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061602731 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082801416 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066107615 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065827906 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077062927 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064941718 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062490327 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084339885 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064599957 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076553257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075352267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08957339 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068418565 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063454935 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080909286 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061639538 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07693257 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065184869 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066577969 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082797475 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07524691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080148227 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064543878 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060633953 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08157949 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068157111 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083725078 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06310207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060449271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080515929 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068234995 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.086352823 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064992266 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06491203 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084837852 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067721959 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079213831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069070896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062003447 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084730032 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07749148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.081877035 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06604375 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08645502 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07253235 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08179348 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060679537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066063152 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08380871 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066097285 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.081935983 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066623151 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095647111 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068657732 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064108118 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080587003 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067738838 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081760603 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072763425 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066116571 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.081961037 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069238479 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083064529 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073315421 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08358983 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072987167 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084131745 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068606692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063773961 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081287145 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064076825 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063072029 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.082985468 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065873978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085369659 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071954061 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080923281 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075477408 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090539688 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067968368 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061570299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.0807321 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064394177 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076356288 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066441937 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063219854 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080294196 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064000333 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080425666 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066655102 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070144421 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082491234 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06644208 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081550202 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06012545 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067895863 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083624095 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067868012 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062150152 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082271511 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066529946 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085750953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068189426 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07915786 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067603212 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066930831 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082555655 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061329034 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087849351 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0647336 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067654279 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081047666 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066147434 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.081658128 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068617469 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069754732 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082590258 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067433724 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090007751 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067516535 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079776459 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063237329 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069686307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080205187 seconds)
  done (took 44.582324055 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102088034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07864592 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060560023 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077342326 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071924123 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077940835 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060793235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062867351 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078160188 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063953883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076577257 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061277916 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084875105 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082586914 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088901039 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064857009 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077945998 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061734774 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077104437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062087548 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084500898 seconds)
  done (took 2.274536138 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071712494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085168628 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070758482 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090223094 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066171531 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085640656 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070715016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085305331 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090046541 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065451458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091101287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069736676 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.081472451 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065794952 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081652967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069620961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090492104 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066886372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.085406062 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07074839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084853714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069993072 seconds)
  done (took 2.426821753 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065732402 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06472456 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.082803399 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060142338 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063835859 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076670384 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067893842 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079421857 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067957544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.062877156 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080671005 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063658382 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083231739 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063582117 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064537456 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078889848 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130698206 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068316463 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063501781 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08283828 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060330104 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083258461 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060777575 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.05993148 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.080546951 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068386699 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.081702522 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063101841 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064328309 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080683941 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065153144 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079643311 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065902449 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065180563 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080337383 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064597569 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063595161 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081330404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060837971 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080359612 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065104851 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061304697 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081714536 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066723491 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06184472 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079805414 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065998705 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081185527 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061034369 seconds)
  done (took 4.22980569 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080486196 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134095928 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083905114 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117183499 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07903635 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088309141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068741888 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116476555 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061546419 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080757253 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.096914704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078719389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08181043 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068906279 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.084953108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064877707 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081137583 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06363022 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067202298 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081122261 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067149973 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087856817 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.095199651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077124975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085172422 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064190058 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080327757 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069419912 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.093049732 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069613336 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08571346 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069715707 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.095184572 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069693901 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081727227 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065939841 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.096355283 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.081401221 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066553879 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062950535 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083564415 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069391331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087606334 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079537573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082212253 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069784911 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081755142 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062225166 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093573242 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066596951 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.089384576 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.094948901 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068362539 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.081682955 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069020246 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.095991236 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064142164 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079864468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067381651 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092801089 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06296011 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.084074764 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077007004 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.083528296 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071277301 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09401473 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069832345 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085251798 seconds)
  done (took 6.299169106 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07253162 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.08684509 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078462533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095644606 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087428108 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071737624 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087090557 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070154525 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086899741 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074812685 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087875018 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107142254 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066550881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090035703 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070944307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087452291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070463777 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087842465 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071030025 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087764525 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087386539 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078355094 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08752869 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076482211 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116598893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082702775 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071137166 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087390788 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078499136 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087599463 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098142542 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07160428 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087135645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078145513 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.098613361 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08644634 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064395298 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086793577 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071463649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087382596 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066664011 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094507359 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070029254 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.083034105 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07100009 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0876018 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094368221 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082345358 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.089987139 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091976443 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071318907 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094846899 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070559793 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087445618 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0958566 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102560738 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094837303 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094647049 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070323182 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094646886 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093853285 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085069934 seconds)
  done (took 5.942902682 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083401786 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09006813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073677919 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079383035 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063034981 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085366376 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064311684 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080496665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072488774 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.089454337 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074957494 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084278515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070853003 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091674348 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084639865 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071120722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08450278 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06868301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089592663 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068079068 seconds)
  done (took 2.307772911 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073991191 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097670343 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066223742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069741448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085579254 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069400863 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084837827 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068493053 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082243154 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068344791 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090365052 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074700253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082149241 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071651352 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090288501 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069893755 seconds)
  done (took 1.985003757 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075535173 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.091562595 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078884704 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082819766 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063379423 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079868649 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065283025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061064328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079058643 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078559893 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083378286 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067661823 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083496121 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064273064 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061768865 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086169089 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06174624 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.079745299 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066762033 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.095928489 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075984929 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08111609 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065541212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066056505 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082702823 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069088414 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.082554859 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062581536 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08019194 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066395848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082268961 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072167613 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.079125331 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064106216 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063623181 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.079744249 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064825393 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082072115 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068454658 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063869436 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081415869 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064513063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081590877 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066657359 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078138545 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0660922 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061555646 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.087820635 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063561447 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081766951 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065279086 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.083520078 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065611171 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073753716 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086003887 seconds)
  done (took 4.807619129 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078652593 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068033585 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078867083 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063044095 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084633987 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067095833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067482988 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08435048 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066218407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080817589 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067193508 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083968037 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066843581 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067694965 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084204031 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068596873 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077783288 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067508383 seconds)
  done (took 2.065531947 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07006395 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064765083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089181941 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065497954 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081622594 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068653972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061081756 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080804681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064589396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082163102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065990546 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067901529 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081364933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067415558 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081471654 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065978745 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066789612 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080960006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065396131 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077880344 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068034392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063194894 seconds)
  done (took 2.323956397 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070622503 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090144039 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.156507144 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.103491651 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079923786 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.095128762 seconds)
  done (took 1.339888658 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088211969 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093842646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066183908 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103323435 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071897407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083662368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066735886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082810658 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074661732 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095483118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066010132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091978008 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091000333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077298049 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088696484 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071817647 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083673695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066329963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083056709 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083576074 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083889221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091068669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06738893 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083697126 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067434892 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090419561 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075670574 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09679508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083391067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074582319 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088320691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067013287 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091628137 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094987676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068223457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091154817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066396224 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099611078 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071298682 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092074552 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068342644 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089709986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091937339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070567748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090927806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067032426 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088251674 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065703051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084570666 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105715364 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07231647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091388249 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071449652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092382546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091996128 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106676408 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078751916 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091591895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071495665 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09715788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091415191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071267784 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091660652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096593802 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072442819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091492964 seconds)
  done (took 6.224405847 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079024002 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102533094 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067106744 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096354959 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090885492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068147546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083635509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067952952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084131566 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067057603 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123948507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067190135 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092371223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092233887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067965482 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083711222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067231053 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091023153 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066866331 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106131339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084634881 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075606723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091664106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091706598 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078669702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088841419 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067010775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08356599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066667192 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08355531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07210914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084952413 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091413277 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067457546 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091523055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067630381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084141473 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071675305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084804896 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07286186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091593618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100777117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068052538 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084196814 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078521524 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08476849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066511231 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084131809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067269969 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083821539 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078734574 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097100658 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095795558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073330651 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084560935 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066373039 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085033289 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066646382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086028323 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089116651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074770723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083949397 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107398132 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067172392 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083936826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074861852 seconds)
  done (took 6.13935173 seconds)
done (took 121.323206911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.180727695 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.160989869 seconds)
  done (took 1.08709464 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067727609 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.112999867 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077244563 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.122212069 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083566663 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096315857 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11284869 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077245924 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064822987 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083535817 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065671872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084453875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.125873417 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065267895 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083681412 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067809282 seconds)
  done (took 2.142665407 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099209828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.188816002 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104694653 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064686168 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094715255 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076429759 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082310284 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077196868 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087682647 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064709141 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075104947 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092104455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064272797 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09222911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069895864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093960883 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064169811 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094050171 seconds)
  done (took 2.340799293 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101110855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.137235005 seconds)
  done (took 0.989217835 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.190003533 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.118571045 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.192660808 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.397827385 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.193932708 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.269003467 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1668619 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.163522365 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.144406197 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.162204443 seconds)
  done (took 2.747125398 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096569475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163238007 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299706561 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.131711819 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.084780049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111183951 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.133067882 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104823206 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078998777 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.097228662 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078785446 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094140639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112898954 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073724952 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.091217149 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075752613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11586502 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073555539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092851819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073097742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112655327 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065365536 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.090687007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07283693 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.093416323 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076408118 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082475321 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065469985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072251641 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091425385 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074581966 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107624918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.093705289 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.124580789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097738329 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.123683439 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075803603 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.087877697 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073957757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087828106 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075814913 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.092059733 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.082865094 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093024642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065661151 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.092827606 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065327273 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065145406 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095544831 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076035629 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095141543 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09309779 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.122644571 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.076397715 seconds)
  done (took 5.896860165 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.727927974 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127075001 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069746676 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.777708183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106711402 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080376001 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.69010555 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112363254 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199282038 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.742246264 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085895102 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095767099 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189249094 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.207290077 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911499825 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.255674208 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.612451734 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100010672 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125850951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.125299711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132180753 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145153812 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139562155 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423028061 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092914136 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069542911 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128384746 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093290255 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.131675323 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099732511 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071798909 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144981312 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.217972295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.168375395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072957524 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088953 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069967759 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.138774449 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230109091 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176789531 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.133946729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086116058 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070377173 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131107887 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123079348 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086373273 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132888477 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.14382392 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.139968021 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089542053 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074393674 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132899943 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150797507 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.13403433 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077727786 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282414595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268506199 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068759514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114992867 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099118519 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206448687 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099012037 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.16676795 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130666746 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176168109 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067606085 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.737730196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.138775711 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067590942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093444276 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113133575 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072730012 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150805479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.119107521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.362963662 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132260103 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091222879 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067732575 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213636177 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081467851 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087314423 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.132257383 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073269374 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115686934 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134317667 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15542159 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139744309 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.198890376 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134127772 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13012095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091590679 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117035843 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073263121 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.182412586 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.182053526 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.131378609 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.177218812 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150895355 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.133327144 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.140593337 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07371448 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.160680323 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093165028 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097546623 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131496845 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.178004657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117442534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079946664 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091181508 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133424629 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.120202559 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082060574 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.15151831 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.141146725 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442759784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.137251351 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08590375 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084269085 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130610966 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.132645658 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093315193 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220755947 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097165845 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157822045 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114499539 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06752183 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11449702 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133096837 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094727816 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095505407 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150646632 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075656463 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.204532258 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178119362 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074550466 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205634619 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.155791681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073650654 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.141434258 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114504162 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.137976193 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094975924 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130925835 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072049774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750358653 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137016251 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115045711 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091119252 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167107494 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069397242 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07926023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100861751 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065672649 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766387826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101512644 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078776708 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099119249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073235373 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115884356 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128436575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091378493 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132841312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189905775 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074299195 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113525853 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098066113 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.132196125 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073663598 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098949027 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080256824 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10134344 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11672926 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070478217 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100412344 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.138814923 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.132118412 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.18126935 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531347071 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088844133 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079579865 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.1874165 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06759238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249487384 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127908486 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.186450851 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.132569528 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09570983 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.247883846 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.134261778 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.167036847 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10090426 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144553649 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065408064 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.149097033 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.134499433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068994015 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092096264 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1323991 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136372287 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133738202 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918409987 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068590231 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.193654785 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086847225 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.140721638 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072593097 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094495983 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252277879 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069716271 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137591993 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153204315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072095137 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099884339 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.666243624 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079634826 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.151117824 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073591787 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182518544 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.13424716 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129784722 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129342494 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09397666 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133057686 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.17887838 seconds)
  done (took 38.754122903 seconds)
done (took 54.707072415 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260227761 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181338535 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.231959028 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.139816593 seconds)
  done (took 1.657965355 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.137917496 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101825606 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117952036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.082657492 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100270924 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083771767 seconds)
  done (took 1.394298551 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.388185975 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255002204 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.222549614 seconds)
  done (took 1.64216967 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283650184 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.218233149 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.435689311 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283906624 seconds)
  done (took 2.098649134 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.181683056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.10901294 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066060506 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102225248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.150602913 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.239091195 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.120985016 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178396833 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077553664 seconds)
  done (took 2.043791405 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.187875809 seconds)
done (took 9.798290748 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.174451377 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.328079468 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078176977 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109868232 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.297617381 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.177903657 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066339398 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099676409 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.219913492 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.252845785 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100994962 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.233055639 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.256620785 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.131025728 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096815534 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136276914 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095805639 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.149692373 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.240087533 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 0.227053626 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.12691998 seconds)
    (22/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.122264469 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11435597 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.160357356 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094258554 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.213656993 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07482582 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.177242859 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051617437 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.277135071 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092557785 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070763422 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.228089636 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070884063 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128034515 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05179244 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091940858 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131624775 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.14564286 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09518339 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.175732881 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.283078332 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.239587847 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085600556 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.111562556 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07214404 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.258749726 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070641113 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.173330348 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151267565 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.228320704 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069620737 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.246703764 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072746476 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.242679333 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10990369 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.263767786 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073486745 seconds)
    (59/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075684803 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098917572 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109014299 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120181619 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075576789 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093493228 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13000705 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.16855808 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.192955468 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.238365927 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087600414 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076080325 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 0.158440029 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065478389 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.152506438 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065877189 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.110747711 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053407303 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.11841222 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.21324874 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.118650966 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073508924 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094959957 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051831651 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.250546913 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074039819 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066815357 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.159562749 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051516695 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.085859713 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062857104 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066963766 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095698168 seconds)
    (92/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053245968 seconds)
    (93/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060027093 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173240061 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051210812 seconds)
    (96/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086550912 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065173783 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084892754 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.15746569 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117546734 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065315222 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.125655354 seconds)
    (103/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062219732 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107606182 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091416522 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051395482 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071163095 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054039442 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068170153 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.072361842 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163698293 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098156581 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071327292 seconds)
    (114/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.137305149 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113615252 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114199196 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.110646736 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.214398263 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089449615 seconds)
    (120/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.236325908 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051736233 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.233048062 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108949851 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110554736 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067145982 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071934711 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090582831 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142718961 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.250800422 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051571193 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097815504 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076053232 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094008913 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069787939 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126645465 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07214354 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.152468226 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072832181 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.444119482 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.071573137 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074192529 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111445752 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114581181 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131069076 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065603265 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091931161 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0723525 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095298982 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07173298 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05309687 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090617941 seconds)
    (152/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062186038 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074590459 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.094176924 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051840627 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071502776 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093171918 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086959747 seconds)
    (159/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086119005 seconds)
    (160/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053825081 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065486066 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.107970972 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083801218 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0712218 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065353003 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072328248 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.156403049 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109411911 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076706041 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093166114 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089800915 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.073880332 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152661539 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050192783 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092920434 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157937252 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065109614 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.244046829 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065548702 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.085541828 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051124656 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069756789 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.250815976 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051991624 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091686091 seconds)
    (186/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100021227 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065963307 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085574594 seconds)
    (189/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.105657912 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07081228 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069064318 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086641037 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070633096 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051989389 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07320069 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091147385 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051343457 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051553346 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085159933 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051729317 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074243412 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088878086 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101093428 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092463585 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051189727 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.164087563 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073193629 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064063829 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192794745 seconds)
    (210/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051820785 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105222047 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065704656 seconds)
    (213/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081716391 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05107286 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065461604 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109957284 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07483393 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07178983 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091270979 seconds)
    (220/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053150673 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.117157831 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094277649 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084998423 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070843333 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065479242 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086784972 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050959747 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060838539 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083276625 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079857603 seconds)
    (231/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051966651 seconds)
    (232/309) benchmarking ("sort", Float32, false)...
    done (took 0.145008733 seconds)
    (233/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071738145 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09929213 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079501083 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107052381 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08988151 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072995244 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072699203 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.15601346 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077409147 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064714404 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071415682 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118555492 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085275655 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051133322 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051341052 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088976368 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170627566 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08069282 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103686861 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063778746 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08469651 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051358196 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085097087 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090939871 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071217008 seconds)
    (258/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072022033 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108911606 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085858706 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064600153 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0724474 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071401327 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05272273 seconds)
    (265/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064833454 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165238782 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065383801 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111776769 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052943497 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08825608 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088875643 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191003914 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067328673 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073272817 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081709742 seconds)
    (276/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.119910117 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051301307 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137727151 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163783592 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073214357 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072851521 seconds)
    (282/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110806576 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064715887 seconds)
    (284/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062389186 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085221936 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071395723 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064710624 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071647493 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051079507 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068577874 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.091696057 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089957515 seconds)
    (293/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096713514 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051171797 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071356002 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084661495 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128365838 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085579616 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068001671 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070066014 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084657469 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071237999 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0644025 seconds)
    (304/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072586614 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051917717 seconds)
    (306/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188825989 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07757853 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074039849 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064497914 seconds)
  done (took 33.873184007 seconds)
done (took 34.652853818 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079860045 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110629716 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073704946 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.111006182 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079963615 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096037763 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072415643 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09724878 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080098531 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101325063 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078211998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054219273 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093984309 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074372471 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093554739 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09155873 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097968079 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072009641 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072525538 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084415453 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073028591 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085500921 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067183771 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054533729 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.097128603 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0719741 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.092347719 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073347203 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06452491 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08588158 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068937261 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072198463 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084838061 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078441923 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091012204 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073994924 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073838392 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096575716 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067177916 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085164908 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073051075 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064769087 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091717227 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073026276 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09109538 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070401487 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072438698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098042531 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090399614 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08830599 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073954504 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.096191336 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076388432 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071389288 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089595169 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073749289 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090283504 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091190655 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093691742 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066837306 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07358082 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094881858 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071031505 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092961348 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073038994 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07480816 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095929287 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071845448 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095430724 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071401093 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06457614 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092886091 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068693335 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.0856023 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07485952 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075696095 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084017323 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0709627 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071506507 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09072487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065047328 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086799066 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067227665 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071216006 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087721863 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055113419 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06912523 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091017086 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064481192 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072962345 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091767602 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072118414 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.087330962 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076506798 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064966544 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.090352688 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065711756 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064285416 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087227736 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0697699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084471543 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066841663 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074563983 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087010861 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071654895 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098499841 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06477377 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071420856 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084604372 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064367013 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101445598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.0746255 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064985813 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087439185 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064766051 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072040476 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084875632 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065712197 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06529446 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085541805 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071416198 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084786796 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067184853 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072423683 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098062698 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06791147 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06785136 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08754919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065825778 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090796082 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065085538 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065519566 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086926398 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062615522 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067502378 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085477257 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072974389 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066483847 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092801656 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067190407 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093243062 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069614177 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071625603 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.090238815 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064829799 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058693262 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087617985 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067463401 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066074173 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.085344273 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067592502 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084640206 seconds)
done (took 12.780434688 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064898533 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.162758024 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.120802713 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094336526 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106053163 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066024173 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.097326197 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121733489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066806489 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122614817 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086541786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.104222004 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111724315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085094888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066268526 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068394255 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.087277528 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087090704 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.121580419 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106646532 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134198654 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064064212 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.116420409 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088846121 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107071102 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.112147719 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066728798 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070212197 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.088785539 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100444764 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10608376 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069792962 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065288198 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118113016 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.111727694 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083649409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086009328 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082472906 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085985789 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065595203 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.108634296 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096990427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101585803 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.100880065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069025032 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068203949 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.086745313 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083317999 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108989424 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.099711362 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085926739 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.126860996 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.087740826 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08173094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064300341 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.106467895 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.100336277 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068163138 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065491636 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.088225043 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065494767 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06850174 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108017878 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.109421426 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069626166 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099909869 seconds)
  done (took 6.915296404 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082994394 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.112111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082746475 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.103380085 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06594671 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066053509 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08686637 seconds)
  done (took 1.435000473 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066573477 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087281806 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108724527 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088826235 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.105807898 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085993044 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096900272 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066550372 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.103403257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067796747 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08648673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1230535 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08809589 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073033012 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089511603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088636447 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090230665 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087322223 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069811662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110005369 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068847449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106737323 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068094371 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066467296 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101121933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066854217 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133874382 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070711808 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088194785 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069759097 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065109181 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.134116844 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100791398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076952743 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066043955 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101691058 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081051961 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085684606 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083191787 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092559696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080967083 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067165442 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088617873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065995584 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07031398 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098640527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068097489 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087778551 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069350341 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085890559 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088308763 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080394145 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087454709 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069848515 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067528944 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092679754 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076425131 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.087395551 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086786219 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067409905 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10452516 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082169509 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101847705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082365163 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089738511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080132648 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.100480601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069757439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068123715 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091248203 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082595662 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085147659 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068097488 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076940678 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089374678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089621148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.110674251 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06853244 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.097630075 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066599312 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066559036 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0875547 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089919415 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090643474 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067071217 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070070365 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090943842 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064939194 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064859903 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091519592 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065730696 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088424029 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069563785 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067878996 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0901949 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084123859 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.088282377 seconds)
  done (took 8.9822801 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067176212 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067945312 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089569685 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067315513 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066974818 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088715431 seconds)
  done (took 1.290894332 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095293669 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.089463061 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080406257 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.092917389 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1040103 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101884789 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081264342 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101666398 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083894241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.098956495 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08120583 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.102235472 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086087021 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093346968 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081627845 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092948235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082093438 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09638252 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077811823 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093912122 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086431981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093232899 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073294658 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.103861774 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070100135 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072098372 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097274476 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079141317 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.098771044 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080611256 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092967673 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070033277 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091969385 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081115918 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.101796151 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071513376 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094305619 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071436604 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097008223 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070021793 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102194678 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072701268 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076189007 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.091185611 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102506656 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07157317 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070296666 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096105756 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080730013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.091351209 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071983533 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092292166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070039415 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091492634 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070900828 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101465461 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070362067 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.102588213 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071966068 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070866587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090108518 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069650282 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100914318 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069175612 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100634544 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070672525 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091996139 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073223188 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092759052 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0721289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.091262456 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068944914 seconds)
  done (took 7.020243219 seconds)
done (took 26.465446566 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.636644315 seconds)
  done (took 1.478332084 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.739620179 seconds)
  done (took 1.583389474 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.762990971 seconds)
  done (took 15.608570783 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.585409672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.731825803 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.780482561 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151171053 seconds)
  done (took 3.089982576 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.862369761 seconds)
  done (took 1.724486438 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228294835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238779793 seconds)
  done (took 1.319151943 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.682672268 seconds)
  done (took 1.537783787 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.265220724 seconds)
  done (took 2.114532233 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.313283605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176342619 seconds)
  done (took 1.35208647 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.503824761 seconds)
  done (took 1.363629006 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.254113095 seconds)
  done (took 7.111936939 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221536844 seconds)
  done (took 1.092485388 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.260585882 seconds)
  done (took 1.122027782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.056366927 seconds)
  done (took 3.917963958 seconds)
done (took 45.263431098 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076451777 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080970345 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101497197 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077958302 seconds)
  done (took 1.19013617 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07694054 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072950837 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097241803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072269446 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.097849373 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072436475 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095306795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076501619 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071479442 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095130407 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072407373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093253819 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075153972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.095606911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070098013 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07466659 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09654055 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07285706 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.096701291 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072867179 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070095451 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09581548 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074914629 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092207795 seconds)
  done (took 2.848198648 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076446093 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072384236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.094870981 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071157628 seconds)
  done (took 1.178418502 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075940182 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.111480583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08868017 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.097446377 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090905179 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106661238 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069532844 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06847756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092342707 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076139162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.088876657 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095589504 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108280854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076907442 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.099352525 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065933389 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068278574 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107169554 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077380795 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.098399834 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070559348 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097118864 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067513807 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08828465 seconds)
  done (took 2.956103922 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076435469 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10121204 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.099036822 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087432773 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.112121653 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065156637 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.097421214 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090231101 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.146051229 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065088668 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091602897 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065617872 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.094723002 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06603152 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075956523 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.1299479 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111124902 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.090014822 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095572719 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.087352902 seconds)
  done (took 2.718654873 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074193044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069210712 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0870187 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067877282 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075323999 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09340881 seconds)
  done (took 1.339837939 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067342382 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067505443 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.087835837 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066467445 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07167493 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087742796 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065454161 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066337147 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088582518 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066160384 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066399676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087103779 seconds)
  done (took 1.758722001 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.404065167 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067888136 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09048559 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065390199 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070263574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.087906432 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079679261 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067428028 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111775102 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066555036 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.088089463 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068308313 seconds)
  done (took 2.142039965 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246881409 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07636545 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30677658 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161864016 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131794016 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14787851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101193708 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134525986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186086861 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13178493 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190214498 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209870176 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128779055 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161809889 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110458144 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.127290814 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175488524 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211460165 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125608586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19155007 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196416277 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150936317 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172460489 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124704153 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128903091 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13882052 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070641374 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100974151 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219690774 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154079211 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189460807 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132125286 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114932488 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196180944 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207498327 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186653215 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157268903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082769843 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151068183 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.158868554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244044513 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111005702 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208392732 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106343227 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102597206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164773443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139720739 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.141131268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129944631 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110765684 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165861954 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22513321 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.181648978 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085814548 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131886244 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133275805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.13616101 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123270233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231354183 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207166339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152853934 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070163157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118551466 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178069575 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153518517 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134282799 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168244232 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091146562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184559634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179905581 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138536547 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189129775 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.152286203 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110592008 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141321989 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162904321 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147850179 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220468606 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148249985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094805742 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144163315 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099519877 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103140834 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166152354 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07513766 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224208756 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12004474 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134835497 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112161741 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130334994 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131256474 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207660277 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169845888 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125456825 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065209992 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125131109 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.142546558 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188903337 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08591379 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129648096 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140292697 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100838891 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156816746 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097619301 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146469667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077447525 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145566549 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178123 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075652247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146426361 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123124216 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100602641 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178407965 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185486118 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111967057 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104389623 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192891193 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149167128 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126144384 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191469369 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181848326 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.123341116 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122072017 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168509415 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23047591 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111551886 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212979487 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125901459 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082660809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.109678905 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148692098 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13467455 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142511877 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081962862 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146849407 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215409579 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097347556 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093611126 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181646781 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080952506 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10377025 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133306508 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12090633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094491023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123334275 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128185347 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159629047 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148338955 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128687624 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146262702 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120518277 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210048324 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111580678 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103579013 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125040751 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.092087494 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.156930092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183131407 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10163452 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213418249 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.148962179 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125888279 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142677622 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083077316 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163341695 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101299249 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070480934 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187446943 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134143552 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108428449 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200798027 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125374096 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.147998973 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146517527 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152784559 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151948631 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179248302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129659415 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086792223 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135005362 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146604248 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096487536 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09134623 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104170438 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125323531 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115852482 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083747485 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186548966 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147782637 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097291975 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135161892 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1197856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172946222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.098914428 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151903613 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.142013569 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117065824 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200473148 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183370346 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157436668 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12277475 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19188218 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070384866 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073151379 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.110344486 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148028423 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106526192 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082264646 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159980537 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174825686 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15057958 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157750442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132405671 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144489386 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205420235 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070329456 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140328841 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171225701 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148332659 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.149004235 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10985835 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097207511 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194296379 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126608761 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233937466 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138571253 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146991983 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175073514 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126313031 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102529993 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10140729 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18390867 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126400017 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173479972 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127810804 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111201369 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13289882 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080610568 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125392959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149182821 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138995831 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182166386 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139526237 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154976563 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100813178 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137646282 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147339398 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143598736 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064070409 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14234322 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211682764 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117919584 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140753018 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177157121 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101371177 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.147416084 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226900517 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168226671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108069862 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129900426 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144946524 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153558023 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143015453 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163652528 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131349686 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158287495 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133647785 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108689407 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087307205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120219413 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129918568 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.117205939 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13392884 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.139671655 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093436929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177186016 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133688996 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134757124 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141815563 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097956208 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115511937 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096247142 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224815606 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144582414 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22272229 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125720393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196951216 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192836601 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099236041 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07847072 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.103955164 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163635427 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107830476 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157499304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.119070412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104521154 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149870654 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189740722 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093680269 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092713754 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132946503 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156047715 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134250458 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121729991 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103629099 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212681202 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126844386 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078532224 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147492589 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129207006 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126113514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225235189 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061319375 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120746414 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075134798 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103610523 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153255838 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20536155 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082483066 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.148451501 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142373644 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143216466 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153470538 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122925212 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120277435 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112113306 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195405155 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151666268 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.112876387 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136085073 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153841576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205374348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128497118 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094595244 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21922369 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201602485 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.188328326 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.111949614 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139550357 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138209536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135067355 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164186219 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107946884 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216261659 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082263361 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183843163 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124593642 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090573189 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174722707 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095600099 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112076934 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171588968 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143018828 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10527026 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102296947 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137114229 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146207898 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125445628 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075327444 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176434401 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096529544 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160436205 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219242556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080483249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129467864 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118676483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080802876 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12726579 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126021236 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109764582 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.11762315 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216610902 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113642962 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199279002 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165363811 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13660736 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185324735 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099479222 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.65815712 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102462149 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179254562 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140027405 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250129723 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096972164 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144419513 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135474426 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144782606 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18989524 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127720549 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17711224 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179591255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144732026 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078419405 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125614365 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132619352 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112272936 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130295452 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137367969 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137613711 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121271391 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145283482 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149477595 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081345894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117938827 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208543126 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141154085 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167245119 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1636845 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108844761 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142988429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18793047 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080638275 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.143856103 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205481509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130805309 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122835051 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080337655 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128272662 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220692286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072765073 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208357754 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146992643 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134557284 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137345551 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140992502 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179539009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128764458 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148879868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117088337 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.135357536 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138749815 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083878972 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100255399 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128884775 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134815735 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099441158 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124784634 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137271515 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180154731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094524278 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093603906 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125925253 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165424019 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226058291 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112701353 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081878991 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139867355 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158358267 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.138438807 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147996325 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081289094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106945189 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081341135 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133090922 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134057424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137713628 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102021116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134177889 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215318325 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108411214 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226760404 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118051151 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132669497 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069455663 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102581919 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119754125 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093836134 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126230579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120940447 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220251677 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096627636 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.113610887 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114489353 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073124885 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105902875 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153267823 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132829727 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144444372 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119177695 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063382492 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12886922 seconds)
  done (took 68.409844001 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129624351 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.101479437 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.115239722 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.167134382 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143346498 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233993359 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.175574485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220379306 seconds)
  done (took 2.226671978 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06817163 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.114336369 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099940814 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111764132 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.087977608 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067584118 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.285837133 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.105931853 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065666789 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.111130497 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.113690228 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.089598382 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.445287773 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065016891 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089104966 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083436764 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06686596 seconds)
  done (took 3.002747621 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.419927096 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611828075 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.442464261 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072565217 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.729419716 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088415155 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.232791694 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.156569894 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071730534 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.415122158 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737860026 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125016206 seconds)
  done (took 17.043112458 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074696173 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068442911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107135513 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082962212 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095703393 seconds)
  done (took 1.37662629 seconds)
done (took 109.041248074 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079346311 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.345491254 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05296076 seconds)
  done (took 1.37284333 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082167473 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083991709 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109450895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08231426 seconds)
  done (took 1.307954856 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073791929 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075161809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108093037 seconds)
  done (took 1.204712154 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.272982882 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16362274 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088163354 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081585849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077193274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101671799 seconds)
  done (took 1.207130389 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071038806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074211329 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096700367 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075138077 seconds)
  done (took 1.257841689 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075444555 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052130496 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054701167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.079384124 seconds)
  done (took 1.207688325 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088042389 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.102763907 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079386465 seconds)
  done (took 1.213545292 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104974796 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109542488 seconds)
  done (took 1.16196916 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080743872 seconds)
  done (took 1.022858119 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090593565 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.136755536 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15060816 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.132838514 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.160794665 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132803628 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.108728555 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085340666 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.101410427 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.111061048 seconds)
  done (took 2.158721333 seconds)
done (took 14.654692637 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077205798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.197259736 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.351354821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115102474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.64953905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.348146984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.913069857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117060382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105684794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091440429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082702645 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.62878794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.872929525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.131593856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.860954557 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.130109218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654847447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067534621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067059048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091831312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.874576522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091390148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067076468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067662443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653952649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.362199242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091724641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.130500916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066382067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093787697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.346150008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092118432 seconds)
  done (took 14.432620639 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070070884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140587617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073473471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082663739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094471686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068796971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.096081679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069132595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143035714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067187676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107950629 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067741851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071038059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093330581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085939566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092494043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068481345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067638813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092788908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068011372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110198931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06792319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067310299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092034209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067705288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103317222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067722338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067216215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093147151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070386524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.094951872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068872809 seconds)
  done (took 3.64618028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112898977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149057152 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073952368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126638169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111082091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095336321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.165999636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091551583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14629425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06766688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108998983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067746669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124294702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068144923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110306969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06771975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068200909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092574445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068501739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092429793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085566852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066802282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092551156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068620086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092214291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080768796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06793256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096131206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067467767 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094053503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071034669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068499818 seconds)
  done (took 3.923206287 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071682713 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07453466 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.106296454 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082754826 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093916809 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071711938 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071650733 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094753762 seconds)
  done (took 1.630488485 seconds)
done (took 24.572756706 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078556155 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069377215 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09787504 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080393438 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096978215 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077973869 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066817331 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098810789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074780305 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071605811 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.100168818 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066727022 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.095836568 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067136138 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073272738 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092476222 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07894681 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095646868 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079491979 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103659737 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069689013 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074872735 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098122475 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078896288 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103490113 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07903734 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078389767 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097842499 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069020006 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095286809 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076440691 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108725646 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068977354 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078819472 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09256585 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067747563 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066991924 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092824393 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078728995 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098891015 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070718554 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099507251 seconds)
  done (took 4.466390255 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087465943 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091786758 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109933141 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061484261 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09289309 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06222342 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088029281 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084733242 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061804457 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113149198 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055862141 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05780391 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.084513746 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054189889 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.057958721 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056502748 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.085349921 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056283357 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.057178309 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082641181 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060728246 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053515951 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060024145 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08385698 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056656177 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061209832 seconds)
  done (took 2.836621773 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074551551 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081319411 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112142883 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126528877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130028754 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074753107 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.102634138 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.084576942 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108887018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067367594 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070719227 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.120837927 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085388086 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099074497 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06728058 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107222573 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081295756 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068754775 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.099665537 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087343874 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.109105044 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07768017 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.086397264 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.103868435 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066454636 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094887891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070746334 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07937134 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097096118 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076387489 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096157548 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070825624 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09456092 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078624475 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071209466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094314519 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086326367 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101974459 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077261948 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067730396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096163643 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068603998 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112410349 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.110975207 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091813352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074093465 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075150767 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102152521 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068088316 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109905946 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076550204 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066922808 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.095716797 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066913753 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067226259 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105619602 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068621801 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103740096 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075738813 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095390097 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079645838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070658583 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106993722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066441406 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09924677 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066426331 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06729922 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.090836036 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089082839 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09331565 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.105446504 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067582489 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094026163 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075287257 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099088347 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072498219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067363121 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107033346 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076950301 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.095268734 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076047991 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095494794 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070335226 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084897624 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094889678 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069095087 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068275787 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098206301 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070055241 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093924454 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08037066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067760786 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095909483 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083478901 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09191055 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069122055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07197174 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.096611317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066740013 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103703984 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071798551 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067099264 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101823521 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067783376 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09473734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077442358 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070638363 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091179124 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070925984 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097509102 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068801377 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068165204 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094617588 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068390824 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101755089 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073948417 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071524362 seconds)
  done (took 10.949673261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.18453184 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.179024456 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06932541 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172007609 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074628046 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.103664941 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1739479 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094573459 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093432473 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067855766 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068080154 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129120137 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12264844 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105265135 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103472897 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067892413 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110014304 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105082234 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.174884245 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.170055684 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111428033 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07568623 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068633308 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.093883268 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069568646 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075667869 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.108378029 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100456545 seconds)
  done (took 4.051094326 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080431434 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120579399 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073087322 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085001795 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114778578 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066904592 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.096643321 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069187242 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1043979 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07867077 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092736385 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072415346 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07341475 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.1017069 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068707821 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101189447 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07577781 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06806798 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.095062348 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071880639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.097933988 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079026631 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070143609 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09173147 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073712731 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091739707 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063812025 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.108710157 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068083319 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.110899997 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065771755 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07362325 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102326717 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067973243 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066946564 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095527132 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070026576 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095198061 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069215256 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066794264 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.091597524 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057614075 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067047783 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104169177 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074487549 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.084928776 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074133406 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072839951 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097637849 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066234323 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095660184 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070159124 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070728531 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100279616 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072852499 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072585135 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096039772 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066113209 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098991683 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070423547 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063930745 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091295027 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072591307 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065424136 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10052931 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072256846 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091872285 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069511434 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071903467 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.098614152 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069645432 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069771191 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090810456 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069135749 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096915357 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071892244 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069977066 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091452802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067394827 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068080871 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079942344 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067063924 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053425331 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.095667533 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066143401 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065798306 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094393036 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075821916 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104379432 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068623473 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097961653 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068895306 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066173582 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.094871302 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062248532 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069295843 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106514029 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081540036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092944617 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.0655656 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105155049 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07180903 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066511422 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081620559 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073840389 seconds)
  done (took 9.458917181 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.089435434 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091340019 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094620971 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080512992 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.117851037 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091854091 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100418909 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073703987 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068498733 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108924567 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067845392 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101231285 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071580259 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075541607 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116108366 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074948786 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095370392 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076854615 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074937618 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.1279567 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080361715 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106931893 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.077839431 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093849982 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072306484 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079019876 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.120054361 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.077571773 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102968081 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.081669239 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.076986377 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.118804627 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.082134405 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097020167 seconds)
  done (took 4.056678923 seconds)
done (took 36.772178992 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.04290488 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.234452906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.021265772 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.862774104 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.0741298 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.045221239 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.034325194 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.023890273 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.062429235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.02190577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.262165035 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.541361892 seconds)
done (took 57.204103732 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.118865722 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.163710511 seconds)
    (2/2) benchmarking "String"...
    done (took 1.29718165 seconds)
  done (took 3.435361217 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.370182249 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 4.990669881 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.31222832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.035876947 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.024585718 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.467076479 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519331461 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.815614917 seconds)
  done (took 26.139477397 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.033902114 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.384073582 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.3296114 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.333003939 seconds)
  done (took 17.056418779 seconds)
done (took 56.09523757 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.028024526 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.080256444 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.047665463 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.010801288 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.147604846 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.058591898 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.394031885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.950125639 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.024865158 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.01528815 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.034251308 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.032386057 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.029366892 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.306865399 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.03638924 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.024805615 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.057386276 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.256989736 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.405238117 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.047948027 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.033558373 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.04437322 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.039337496 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.025305712 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.060369686 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.033671283 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.029899688 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.034272479 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.190545293 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.029012528 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.113046091 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.512062246 seconds)
  done (took 185.109946993 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.025607862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.025576779 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.112778039 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.076118405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.433213993 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.225200148 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.142716606 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.492938615 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.041109974 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.034407395 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.260675005 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.028202524 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.322571982 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.009850555 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.037344262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.111931093 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.217322612 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.302737036 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.043641167 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.298097202 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.051569574 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.281656703 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.289932017 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.198224352 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.045510528 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.132199744 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.054071284 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.069119834 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.217470826 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.160003739 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.071018387 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.054764164 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.591461216 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.885695958 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.027398226 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.063957476 seconds)
  done (took 143.412538001 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.29187992 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.027756003 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.026300582 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.02707297 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.056125667 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.026592665 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.537043908 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.547885471 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.534762097 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.651538246 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.029050079 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.084673516 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.21025626 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.028894016 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.116537016 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.041820253 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.028597306 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.04255782 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.054264602 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.02990349 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.027721923 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.027004806 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.545875996 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.041699599 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.035679538 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.02804479 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.056368913 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.420619847 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.241520577 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.027504425 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.056727933 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.339566323 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.071159432 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.029535343 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.23905335 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.232953649 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.134877211 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.030004881 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.057621383 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.029968585 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.29252494 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.028015827 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.028824126 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.031891518 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.578410827 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.033168922 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.540227035 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.028841882 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.889464519 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.028392656 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.028378248 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.036842635 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.397083826 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.029613676 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.029644417 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.031825226 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.028809571 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.028839797 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.058137701 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.054776242 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.127263923 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.030864432 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.031925626 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.058847583 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.028891438 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.029535149 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.210188083 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.0291653 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.17621415 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.083997903 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.141016597 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.551013361 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.032052473 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.117770171 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.14646882 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.030192315 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.029561288 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.030457965 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.030505553 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.135214364 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.03000317 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.387536851 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.035436361 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.032315128 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.029978957 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.089253276 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.122274023 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.030364724 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.247948854 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.032381489 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.030267783 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.675289018 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.117830333 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.030586386 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.030514187 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.030013151 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.38772657 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.553598164 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.197854947 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.03276832 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.076694465 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.033928644 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.401157653 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.535492533 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602259794 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.034134196 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.135756832 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.035429969 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.032460684 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.031375708 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.059823006 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.031895714 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.085708649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.031083963 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.425817685 seconds)
  done (took 323.691335698 seconds)
done (took 654.483230256 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.644259277 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.632412451 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.738316011 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.627623791 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.614552726 seconds)
  done (took 9.238924134 seconds)
done (took 10.221494007 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.211034804 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.210318237 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.08861782 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.208685309 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.058666721 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.22532567 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.187937188 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.053068345 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.129231391 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.104414539 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.128657247 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.078656235 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.05756352 seconds)
  done (took 15.724389655 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.33597022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.329308883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.097057721 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.335380839 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.072980107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.372972052 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.226403196 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.242096182 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.224321386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.047836324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.045654823 seconds)
  done (took 14.313459612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.340484933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.337058235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.099746168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.343989035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.07427046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.335071223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.231668043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.238934178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.223256751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.047473944 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.045737268 seconds)
  done (took 14.300562244 seconds)
done (took 45.321931892 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.045999488 seconds)
  done (took 2.028759142 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.076228921 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.236430131 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.057036854 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.048466648 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.042928752 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.045970706 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.048572444 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.044908366 seconds)
  done (took 9.584425598 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.041169328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.038976933 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.0430583 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.039593268 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.039091725 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.041275836 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.039229913 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.041565227 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.041734359 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.039754009 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.042477757 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.042279563 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.039884135 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.041856923 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.040164495 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.042107192 seconds)
  done (took 17.638361925 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.040887636 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.040936112 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.039739355 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.040629671 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.040273259 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.040513743 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.04083364 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.039375593 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.039471938 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.039471877 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.042558443 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.040123846 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.040783247 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.039878668 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.040263292 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.041586258 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.040004857 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.040947473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.044363948 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.04059284 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.042096468 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.040863927 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.041011577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.04149619 seconds)
  done (took 25.965395521 seconds)
done (took 56.201180917 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.763293431 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.400041136 seconds)
  done (took 8.148351859 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.04322056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.043034159 seconds)
  done (took 3.072743363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.043282 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.043507448 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.043614404 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.044363095 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.043767285 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.043740754 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.042917631 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.044266317 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.043829761 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.044135473 seconds)
  done (took 11.423407468 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.042830721 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.044207642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.040782814 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.043499568 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.043421414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.041227325 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.043281193 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.044158106 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.043522277 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.041277023 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.044660148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.04154975 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.044116764 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.04130605 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.043858721 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.041280079 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.041609259 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.0413867 seconds)
  done (took 19.754353358 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.04434519 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.043871784 seconds)
  done (took 3.074353366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.041542009 seconds)
    (2/7) benchmarking "second"...
    done (took 1.041879185 seconds)
    (3/7) benchmarking "month"...
    done (took 1.042647849 seconds)
    (4/7) benchmarking "year"...
    done (took 1.042099437 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.042438699 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.041912764 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.041803118 seconds)
  done (took 8.281038297 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.046907038 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.215374402 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.289780394 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.637341559 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.046758398 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.049015479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.917505209 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.048821652 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.051474569 seconds)
  done (took 12.290057708 seconds)
done (took 67.031237235 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.031417752 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.039087404 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.824301537 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.046795238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.056695971 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.382147651 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.073319883 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.159034548 seconds)
done (took 35.601928902 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.051550481 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.691309875 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.729068112 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.038693624 seconds)
  done (took 10.447052218 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.028425862 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.9083464 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.035042432 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.028384516 seconds)
  done (took 16.988874917 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.618685832 seconds)
    (2/2) benchmarking "read"...
    done (took 1.370571926 seconds)
  done (took 3.977097307 seconds)
done (took 38.454320485 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.043136264 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.046104296 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.043932389 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.046765154 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.043383403 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.046559083 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.044267637 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.043904281 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.047203064 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.046271298 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.046895713 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.047093049 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.046764125 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.046950275 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.047168113 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.044374067 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.044046431 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.047338443 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.044838007 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.044350942 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.045063175 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.047159109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.045110272 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.045336015 seconds)
  done (took 26.082788569 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.047144999 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.044971769 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.047550087 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.047422487 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.04448773 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.047587173 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.047459733 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.044716839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.048279544 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.047545268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.045669294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.045579616 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.04713216 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.045496071 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.048093531 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.045359946 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.049349659 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.044803998 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.048857358 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.044965554 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.048454558 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.046170785 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.045539783 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.049058459 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.045965974 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.045825206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.048541214 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.047552799 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.048404746 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.046709259 seconds)
  done (took 32.395073481 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.052925881 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.055048843 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.049631716 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.049075139 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.049434969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.048890049 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.048757981 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.049688738 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.04876978 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.050141949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.048806637 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.049328245 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.048940304 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.049194015 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.049276993 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.049429387 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.049535264 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.049680034 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.048948463 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.04932638 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.049572907 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.049492178 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.049283496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.049562417 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.049719806 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.049464501 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.049567508 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.049788716 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.049389057 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.049530723 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.049200535 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.049410796 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.049537066 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.049846366 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.049763812 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.050060442 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.054106543 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.056581255 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.049540422 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.050326833 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.049906091 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.050057692 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.050659472 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.050604373 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.050578847 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.05038935 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.051524143 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.05053373 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.049721645 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.050690135 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.050375463 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.050701443 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.051046233 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.051822068 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.051414015 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.050997455 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.050998074 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.051484161 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.050596094 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.051558636 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.050846518 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.051245298 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.051113627 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.05061274 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.050955914 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.05091488 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.050984052 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.051066837 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.051424791 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.051748085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.051294022 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.051471632 seconds)
  done (took 76.621692019 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.050779752 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.049558983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.04902505 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.049092392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.049554534 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.052395781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.049812046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.052465263 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.049995043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.051966018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.051871168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.050470161 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.04968408 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.053009599 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.052751574 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.050102442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.052841076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.050135117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.05345633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.052832215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.052822488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.050069138 seconds)
  done (took 24.119146674 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.052760559 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.053560925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.049838961 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.053083762 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.05044709 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.053146059 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.052787733 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.053429722 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.054144171 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.050519114 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.050780003 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.053320045 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.050598818 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.051573127 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.050893152 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.051947694 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.053194684 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.051045744 seconds)
  done (took 19.932644566 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.051116449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.051268986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.053864085 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.050683148 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.051262642 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.054177799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.051311904 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.054249108 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.053665583 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.051282019 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.054324797 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.053701897 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.054255519 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.051235915 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.05443782 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.051887747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.054209136 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.051412921 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.053835407 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.052441311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.05200498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.054249551 seconds)
  done (took 24.157216799 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.05373132 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.054991414 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.052241626 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.052503282 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.052294492 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.054887683 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.054695351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.052365472 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.054820048 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.054630422 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.052232891 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.056087359 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.052519796 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.053290885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.052413974 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.051934778 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.055311886 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.053805535 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.057470566 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.165041519 seconds)
  done (took 22.18409714 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164819544 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.16783587 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.16695763 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.167548163 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167168326 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.167497856 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.169365486 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.166856358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.167143239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.166835632 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.166875107 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.167252828 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167015618 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.167314027 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166672833 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168869045 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16531711 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.164630809 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165122603 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.164321359 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165392095 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164912097 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.164690142 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166278837 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16452617 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.164497295 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165050537 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.164183642 seconds)
  done (took 33.760755985 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163407255 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.163016371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.160788946 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.163796011 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.160737456 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.160869298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.161049164 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.161646137 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.164264563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.161220063 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.164603248 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.16465802 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.165026066 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.16396231 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.162691211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.163774109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162995037 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.16134864 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161967982 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162526868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.166249463 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163913177 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.163376878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.160712655 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162073239 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.164078252 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160265784 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.162114071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163677941 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.162636818 seconds)
  done (took 35.986752873 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.180373891 seconds)
    (2/2) benchmarking "in"...
    done (took 1.182159255 seconds)
  done (took 3.46419001 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.159452853 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163436167 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.16364048 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.163151207 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.160996982 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.162498187 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.16350572 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161077699 seconds)
  done (took 10.399070475 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.163785568 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.164247957 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.164265087 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.164813142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.165401458 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.163191336 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172329234 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.179487165 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.164196843 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.165294656 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.169911033 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.171124457 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.167578652 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.165162563 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.164680651 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.166026632 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.165104673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.165193038 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.165580228 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.16439067 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.165673591 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167987242 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16823521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.161714477 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.166315473 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.175630723 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.169835684 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.166367371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.16482873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.169924543 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.163124343 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.162914295 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.166127095 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.166673309 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.166089396 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.16699964 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.174424637 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.180631253 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.171160603 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.167371801 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.166522394 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.163076826 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.167366074 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.167099817 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167926069 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.167801906 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.167088239 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.163434218 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.16584896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.1693849 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.171180721 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.165626111 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.163623627 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170261151 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.167651302 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173786626 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.183644 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.169465559 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.174812929 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.176673052 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.180063097 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.174404195 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.168669605 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.168825322 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175968365 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.18896649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.174289098 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.180297521 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.165220656 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.167503689 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.175249234 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.181222184 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.177015511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.168994487 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16776048 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.16690103 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1678196 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.167118389 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.174663181 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.186820884 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.16818085 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.168160836 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176352144 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.188098141 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.165935469 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.16808524 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.168504117 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.169126902 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.169392719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179341464 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.185058844 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.168597035 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.168346966 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.166790049 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.169197857 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.169115538 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.166720661 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16893307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.165189529 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.168220912 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169314957 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.1725872 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.176703451 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.168517027 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169235607 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.17559597 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.168299148 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.168782562 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.174885253 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.169447651 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.170010822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.169243562 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.175284228 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.166577821 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171510677 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.177089414 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.170461516 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.171105566 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.170244337 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.170149536 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179565382 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.194799233 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.171614603 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.169348026 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.176114529 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.180878355 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170104684 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.173117548 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.17022639 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.168354563 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.167858282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.173144132 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.171558171 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.17083071 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.170999246 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.17103683 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.167491219 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.17079693 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.17120592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.172357784 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.172563107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.171578528 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.17149962 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.17382996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.172084496 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.174071279 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.177352407 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.171902535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.172438082 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.172170057 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.168549156 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171426075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.17264926 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.172599449 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.171392126 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.171837538 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.172093402 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.171022297 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.172022017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.172030659 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171502266 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.172609757 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175600626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.172062761 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.174537609 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.171049704 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.169295631 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.172385236 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.172788219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.171925038 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.172253495 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.171149587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.175594338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.180522874 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.173081449 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.172925322 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.174473373 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.173423036 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.172575202 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173485429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.175795191 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.179611874 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.173479293 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.178982788 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.173404756 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172905465 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.171867283 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.174329858 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.172034887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174102227 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.176186637 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.180253714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185221731 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181091244 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.174233269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.176545826 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.175682227 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.177458201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.177821917 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.174569478 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.173601799 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174959197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171622536 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174222709 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.175406166 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.174752275 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.173462967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.174080816 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.173534584 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.174866067 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174404909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.174818091 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173419676 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.171932279 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174963398 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174441003 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.173948621 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.172063962 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.173421735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.174269629 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.17513454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.176195647 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.181255954 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.174072385 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.176701086 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.176686613 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.175238251 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.173348186 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.175368222 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177453175 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.175618041 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182122969 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.190783525 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.175375487 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.183320943 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.192311712 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.176087503 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.177626752 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.175873047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.173707172 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.177404003 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.183693364 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.17603177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.177141694 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.175780137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.174658008 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177607898 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.182571456 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.173966237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.1760106 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.176469788 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.177116561 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.173899001 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.177296388 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.177671487 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.177243802 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178646727 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177253278 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.177513029 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.177541899 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.176562039 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.177145646 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.177394075 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.178964419 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.184848024 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.18175808 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.176250916 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.178413481 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.176923584 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.179997624 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.179133411 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.176583409 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.17629528 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190075956 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.185990907 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183733273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.178373554 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.177025721 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.183632794 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.180144732 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.181307681 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177500067 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.17753204 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.177758572 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.177239533 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.174508109 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178173915 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.179521564 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.179736122 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.179025518 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.18286943 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.17865355 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.17812576 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.178252781 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.179359552 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.178983579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.179154104 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.178456021 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.179649238 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180898654 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.177711296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.17928442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185191271 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194592557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.180333225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.178326922 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.178139325 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.177911563 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.180332604 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.180630607 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.182538023 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.187004988 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.18220582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.188586292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.180530665 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187095397 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.179203614 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.182587398 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.186737639 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.176973093 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.178403689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.179455129 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.180461184 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185704191 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.197306518 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.18102633 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.183993556 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180480733 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.181094558 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.180287017 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.181930572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.18087432 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.180833738 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188570005 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.196868255 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.183563871 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183225407 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.177972265 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.180461283 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.179685801 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.179849964 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184516038 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.180704492 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.181981552 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.180840506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.181406925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.181093803 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.181942837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.181445339 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.179289261 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.181150888 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188063376 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.19779378 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185901343 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.181817545 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.189530548 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.182716478 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188378861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.199077311 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.182000705 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.18145062 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.181760397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.183470607 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.18059576 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.182342725 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.183268613 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.18264784 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.185732081 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.183294187 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.183359157 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.183254219 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.183455766 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.18271389 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192014146 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206318106 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.183976763 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185197968 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.180805903 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.183802567 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.187445628 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.183868123 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.181743395 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.18608443 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192711652 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190821809 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.183405511 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.18311727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18184624 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183765402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.183216445 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.183253648 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.184102962 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.183270841 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.183631975 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.184402691 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18596084 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.183548834 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.18479071 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184252113 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.184261686 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.192834896 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.185040437 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.184888405 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184107197 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.183343895 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.184501785 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.183381329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.184059199 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184252222 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183941144 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.185350008 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190799297 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.18974163 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.18690918 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.18306897 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.184028139 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.184200389 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.184753734 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183777434 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.184956029 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185160421 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.185934122 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.185291926 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.184955949 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.18339222 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.184752186 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.185060008 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185661277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187996293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.191427278 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183643187 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.183169822 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.185624228 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185955868 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.184569774 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.18501806 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.19288095 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189137917 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.195143351 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.194107247 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.18893261 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.184924636 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187850834 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.193038908 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.185011653 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.184853258 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.18568372 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.187638186 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.187471227 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.189111425 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186328457 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.19228353 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.186867922 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.186278893 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193180354 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.203017045 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.186799042 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.187565508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.190433255 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.185769416 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.18365416 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.187462855 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.185750927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19337683 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.20382849 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187579268 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188288034 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.185313441 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.18817751 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19238873 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.187999668 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.188725617 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.18423214 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.188501565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188343905 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187975838 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.185484663 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.186014951 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.18700945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190162489 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.193660882 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.184979398 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189310315 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.187385125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.187900119 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188746563 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188666932 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.185731827 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.185885376 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.188229243 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188680849 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.188163559 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.19082731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.187385984 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.188476602 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.189071798 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18903122 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190875476 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.198182339 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.195714238 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.185631646 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.188115762 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.188662481 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.191481862 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190747594 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.189281087 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.18935212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.190700305 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.190025521 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.188166091 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.189429062 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.191775249 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204831347 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.206267872 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189391702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.189754163 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192330601 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.190648607 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.187963887 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.189706927 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.191674555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192664873 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.197767941 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.189878115 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196664739 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.205627674 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.191521757 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.194674698 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.193612316 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.197749303 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.19302925 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189886038 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.191290112 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.195167434 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.204791731 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190711484 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200175328 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219000171 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.207473642 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.191021837 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.191577256 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189318847 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.19106273 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.192708182 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.190977958 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.191564473 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191645108 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.192103137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.19160499 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197826964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.193765019 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.191105086 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.19200318 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.191274957 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.191754995 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.188156131 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.192139265 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.192307418 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.19260227 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.190975809 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.192520241 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.19117255 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204816863 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.201771413 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.192566849 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.193613046 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.18920985 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.195377431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.194221333 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201537371 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.200511703 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.192125335 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.192101335 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.194260865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193773158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.190642495 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.193035253 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.191910955 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.190999895 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.190209232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.205497986 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201974433 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.197990218 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.194142518 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19403516 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.194999275 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192847389 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194144612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.193060207 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.195080083 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.193675482 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.196984808 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.193103174 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.192732109 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.196694481 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.200761553 seconds)
  done (took 704.963858199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.191005854 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190611775 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191774462 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.190809572 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192055208 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190432343 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191985079 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191705908 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.190502769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.191106226 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.192308154 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191254305 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191152358 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191138334 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191545976 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.191469733 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191862141 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191252657 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192378561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192037413 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190839274 seconds)
  done (took 26.149981699 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.194525834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.192004699 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.191408537 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.195060339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190718185 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.195046285 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.192300105 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194942925 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.195675322 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192817091 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.194761707 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194265142 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.192637945 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.19258519 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191558165 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195914474 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.19609647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193319522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.195595837 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.19288189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19526337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.192933498 seconds)
  done (took 27.39325988 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.196599627 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.196992731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.194243611 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.193056358 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.196278424 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.194699358 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.196939189 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.195644517 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.196202746 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.196016293 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.194728814 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.196445184 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.204006046 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.201695354 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.19807235 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.196571996 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.339425777 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.196363055 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.195456661 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.195833654 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.193874127 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.201093269 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.19414212 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.19426658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.196092233 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.197469152 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.196662122 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.196613241 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.197212552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.197520377 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.201284757 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.196534058 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.197247085 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.198272848 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.196633951 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.198388796 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.199974205 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.197791816 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.194971518 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.197673183 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.208235817 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.217595265 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.198525887 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.203600944 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.196899547 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.197550665 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.201410463 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.205537747 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.195189389 seconds)
  done (took 59.976874319 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.198174359 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.198151144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.195546587 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.197716453 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.197944375 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.197875179 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.197673873 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.198651189 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.196474529 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.196417206 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.19785382 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.196136504 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.195590214 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.198063284 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.197995565 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.194805144 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.195608571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.195937527 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.196124891 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.195626217 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.196802359 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.198705959 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.199620491 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.197930867 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.198902264 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.196080187 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.196687348 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.197685113 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.197431985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.196402659 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.199426035 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.198830986 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.200034617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.198243686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.196854247 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.200015255 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.199540207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.197180213 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.199191816 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.197253191 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.199616652 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200585874 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.199072892 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.199893605 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.197276762 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.198411544 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.196046488 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.197790423 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.198446593 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.199832694 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.199999566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.198027611 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.201331524 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.197646854 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.20048052 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.199943134 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.197872233 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.1974582 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.200977114 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.197882853 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.197972435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.200787768 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.198369141 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.200361088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.201008219 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.197294365 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.19854327 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.200152352 seconds)
  done (took 82.610815305 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201243172 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.20174605 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201760224 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202454177 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201464854 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.201902947 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201658613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.2022876 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200678867 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.201449569 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202921864 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.20090526 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.202930859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.202006746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202328363 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202778328 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.201988808 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202622588 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20210948 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202266028 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.202759969 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.202841818 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202474965 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.202197583 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202863358 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201728547 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202134894 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.202887571 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20258814 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.202724813 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.203127615 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.203059558 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203571702 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202882572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.203697026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.203060263 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203334294 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203264462 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.204129029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.203744759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.20347726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203617694 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203387356 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.204206017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204335956 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20211385 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.203942138 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.205010277 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20326983 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204361196 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.203640303 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204426391 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203751233 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20487082 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.204841846 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.203561036 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204627534 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204627148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203914582 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.20282325 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204368714 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.204342242 seconds)
  done (took 75.725974273 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204662465 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204445607 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.201457654 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.201719913 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203325972 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203234863 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20453065 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.204068163 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204070187 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.20444839 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205013784 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202338309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202621707 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204655695 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202252214 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202566814 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202615826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202306225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204930433 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203721704 seconds)
  done (took 25.209941687 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.202685835 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.205190227 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.202362445 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202272212 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.205517551 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.202917824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.205382564 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20570475 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202953123 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206304363 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205966853 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.206572628 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202618725 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203914009 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.20563551 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.202948928 seconds)
  done (took 20.410317813 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.202314913 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.20542793 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.205520772 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.206422508 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.203213449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.203225221 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.206231358 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.203544173 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.203495809 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.206744388 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.205893097 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.205514458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.206546888 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.207316571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.203524584 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.206197648 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.204818268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.204351286 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.206722349 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.207762291 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.204680916 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.204373924 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.207017355 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.207018219 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.203636866 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.205960722 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.205650961 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.205607931 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.204908469 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.20758812 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.205320649 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.205442595 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.205849687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.203503641 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.208303917 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.205600635 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.206611258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.208515807 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.208600665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.208237356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.208413457 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.2050712 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.208007697 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.208106831 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.205608347 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.207746494 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.206244874 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.207648574 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.205394423 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.206944383 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.208437536 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.208583295 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.209934765 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.209344948 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.208781298 seconds)
  done (took 67.485494535 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20886632 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209403092 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206621626 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.208955606 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208937919 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.207419584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208386087 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207066322 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207023306 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.20866957 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.207026209 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210214884 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206213343 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209227955 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207978428 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209165195 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.207260968 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.20644457 seconds)
  done (took 22.888626935 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207900841 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208464467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.209193575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206850851 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.207069108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210487789 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207631714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.210244884 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209702419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.207310872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207727151 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.209660503 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211011457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.211080798 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208158644 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207868771 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.210115303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210513185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207991384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207584005 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211402924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209723381 seconds)
  done (took 27.74299744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.208905597 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.208334955 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.226610034 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.251818743 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.241028281 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.20889979 seconds)
  done (took 8.491983242 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209058121 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210730798 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208101621 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210783139 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211433366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208459353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208285775 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208677547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210248919 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208896522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207080384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211480675 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211569256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208199015 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211381065 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211300096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209197104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210055094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209132506 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210801809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208406129 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211118743 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208440086 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209726786 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209553242 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209123711 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211635149 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209341065 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208870609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212318602 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211302149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210001052 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211720853 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210724208 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213135051 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212334591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210318618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212957786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212494299 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209790441 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.213250878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21256164 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212642676 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209984543 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213314005 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21066746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211012542 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210832754 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210622817 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212603241 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212379332 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21052924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213751568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213730116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213764123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213179098 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21153167 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211612918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214013365 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210746684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210636056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213555525 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211014143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211791707 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214361214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21132647 seconds)
  done (took 81.072550999 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210455246 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210787301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211669048 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212857124 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210880611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210195085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211403137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212824118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211569245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213246941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213695949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211236989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212484945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211656513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213028074 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212110342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212499717 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212524734 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212021131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215671214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213031132 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212147471 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211838816 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212202577 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213817223 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216409759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210813239 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212779893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212800265 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212008275 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211934167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211661725 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213144751 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.212040229 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213055389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212936461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212773515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212829936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213081777 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216029308 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212895434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216823641 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213562874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212738419 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213465574 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213165112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213131183 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213174066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21254738 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213916016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214248456 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214144836 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21475147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213991696 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213476939 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214011772 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215011792 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213630497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214751407 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216281764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214314871 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213671604 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217553174 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21356842 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213724809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214946502 seconds)
  done (took 81.219245744 seconds)
done (took 1621.435522575 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.32856547 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.228559669 seconds)
  done (took 13.708685098 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.377556281 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.331511049 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.215774425 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.244574407 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.215755703 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.237551328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.233037028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.215555021 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.215162615 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.216047794 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.214274717 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.402188069 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.212170917 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.216544039 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.21580845 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.309434432 seconds)
  done (took 41.237931882 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.243751255 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.222711207 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.330435841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.237955965 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.243507177 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.398641504 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.272563603 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.220387645 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.383892478 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.259822701 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.726223604 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.244185605 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.221313229 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.289754758 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.236941004 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.39835348 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.457189315 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.727941706 seconds)
  done (took 28.269068685 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.652581089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.244057754 seconds)
  done (took 9.050243059 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.216688999 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.224751249 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.224931647 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.237439064 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.241468989 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.238573969 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.226785225 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.223488493 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.246101276 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.225599343 seconds)
  done (took 63.470127253 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.239596055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.221870706 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.221559443 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.219318637 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.222152701 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.211065561 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.218974828 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.212780757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.752691889 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.344980366 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.236527339 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.228604239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.221556224 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.221508163 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.218091483 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.256824177 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.35650163 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.218501751 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.217437247 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.227005473 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.221479792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.318012188 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.261272186 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.218147159 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.343375556 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.775432027 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.222681501 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.227341089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.339560676 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.218830645 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220203008 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.221189241 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.221603181 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.77653772 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.741690746 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.228460005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.245562145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.229977129 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.218800603 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.361781779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.221558302 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.228878053 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.224880842 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.697930512 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.377969387 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.33252678 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.446546907 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.224527119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.22347758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.284609452 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.222836911 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.223732071 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.250722895 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.961573039 seconds)
  done (took 104.959046578 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.245443159 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.702663647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.384864979 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.23163901 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.064398737 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.840826987 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.215692022 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.491980012 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.231162962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.216397895 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.490103245 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.720211664 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.223551919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.246478035 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.594696322 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.296607053 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.216851141 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.151364641 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.217636329 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.217727651 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636988655 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231487143 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.215582415 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.469844948 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.255069372 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669799458 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.624967158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.728047103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.216568312 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.215751568 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.684530957 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.220797015 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.228894424 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.218395923 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.485903315 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.564316621 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.538807379 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.219410806 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.257841515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.216213019 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.235768327 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.668545175 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.551806605 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.217662627 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.216415002 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.672385074 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.217601936 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.218248886 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.217622261 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.425699233 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.960157487 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.217745613 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.677144675 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.220582459 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.494667317 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.30006078 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.249562347 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698746373 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.217541271 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.371968232 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.262025424 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.218134353 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.219421244 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.219299515 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.219482821 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.555746724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.568261876 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.222061462 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.560062661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.676866394 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.219515423 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.741183967 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.051580993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.219813139 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.270536398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.231168091 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.933140558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.70303281 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.222761691 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.21885749 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.549826646 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.223559004 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.495063039 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.231857282 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220360813 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64680506 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.242798725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.274280842 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.226993277 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.231160503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.005878385 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.220087485 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.483315346 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.285914783 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.220067814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.219075427 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.228194055 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.218577104 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.219430476 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.219986237 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.741737737 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.228385156 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.353323247 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23950836 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220166558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.219959467 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.219875844 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.220694787 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444303071 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.833915715 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.219898465 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221247991 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.220443699 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.220448827 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423554931 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.223721434 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.526045693 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.223961595 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220455357 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.225293882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.890023629 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.231792374 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220551425 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.224410299 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047919497 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.426653878 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.238092888 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.222505457 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.222084407 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236381498 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.604194515 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.22417238 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.276930211 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.225393872 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927055103 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.236538872 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.25417242 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.620563537 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.22772112 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.17580704 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.241780048 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221429424 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.524377082 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.492450727 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.513673588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.223058247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.221822375 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928025366 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.265295621 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.354958128 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.239345796 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24175396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419940722 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.483204643 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.221615498 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.794960038 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.224326072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440640887 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.22210445 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55365939 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711377084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.224708233 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.229510061 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927239934 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866948312 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.014417119 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.227234982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.496664545 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.237346525 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.678297722 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.223034829 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.223204132 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.803066203 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.226660411 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.226211913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.223000613 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.224835268 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.287164958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.399072094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.632066771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.229231358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.675356579 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.252218329 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223920216 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.229422465 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.224919327 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.576396294 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.244530848 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.227680934 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.267055427 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.225459935 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.224963787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.694459141 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.07538074 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.224557819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.3773706 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856908525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.226954901 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.227439168 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.016658533 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.490842364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772696053 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.237836043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.537668503 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.225749346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.264160183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018721059 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284157746 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.697324389 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227652113 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.224719704 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844878985 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.226424207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.275242571 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.225096331 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.224556263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.753023094 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.226060367 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.227110013 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.551924524 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.22531604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478565989 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.226163372 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.252304823 seconds)
  done (took 1086.421135765 seconds)
done (took 1348.268007162 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.227319115 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.227110815 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.216109082 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231464409 seconds)
  done (took 26.06996781 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.242649364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.235548479 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.24133559 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.235289751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.238628417 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.235519567 seconds)
  done (took 8.600993347 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.410580732 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.229297872 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231004061 seconds)
  done (took 19.041632638 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448544575 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.477074755 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.600422931 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.369345055 seconds)
  done (took 10.06670165 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.236525268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.237135742 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.236984941 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.239579292 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.243394856 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.243102582 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.23916967 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.240795231 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.243745513 seconds)
  done (took 12.330605001 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.131288245 seconds)
done (took 82.40919045 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.532605016 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.232114104 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.232226191 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.290560824 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.351602938 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.43201512 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.329132502 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.317552785 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.997914339 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.801934078 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.47976683 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.827480829 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.000190648 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.334364862 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.286011982 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.068767845 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.25750021 seconds)
    (18/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.37864479 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.235903325 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 6.231442712 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.609236566 seconds)
    (22/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.247710721 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.309735821 seconds)
    (24/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.015104662 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.371452495 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.522697539 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.31734522 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.246098709 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.443824892 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.053675112 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.638551666 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.240693304 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.23327014 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.995714069 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.23140681 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.997735958 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.376935109 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.577678817 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.79691309 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.230795953 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.351507487 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.654707684 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.597150039 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.725503762 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.086664122 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.353653943 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.535527158 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.691686182 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.993371838 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.235326111 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.868763173 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.298056388 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.067689997 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.345115237 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.460557442 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.495229219 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.431521673 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.277358703 seconds)
    (59/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.241661692 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.432318496 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.219701877 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.316588294 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.25737295 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.289571241 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.039104199 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.117872966 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.234394587 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.224186026 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.331611452 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.243912359 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 4.249412182 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.712327602 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.235417283 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.655908549 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.718160668 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.796395626 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.856922887 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.513059633 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.886064025 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.260305713 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.299951514 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.615032 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.581761793 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.260628279 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.219238647 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.234705443 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.527205537 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.435367576 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.649795791 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.355786817 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.320830268 seconds)
    (92/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.754702881 seconds)
    (93/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.625277698 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.256814912 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.518389755 seconds)
    (96/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.33510731 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.585666847 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.255047432 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.223958748 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.835035868 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.869366503 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.603206524 seconds)
    (103/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.518097167 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.252055379 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.560972653 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.451025707 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.597616206 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.260020911 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.810450686 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.222049464 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.236415202 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.268598234 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.617385641 seconds)
    (114/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.236020294 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135689052 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.221806156 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450774256 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.530478193 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.238265366 seconds)
    (120/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.567547729 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.547432553 seconds)
    (122/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.566840545 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.543640881 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.682195989 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.846891573 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.263085514 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.261895689 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.236522507 seconds)
    (129/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.223855293 seconds)
    (130/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.868570837 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.325722453 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.240899201 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.341586183 seconds)
    (134/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.256479145 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.237618122 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.079938153 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 1.743759275 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.259379925 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.434058745 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.748001349 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.255675523 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.544487022 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.310630826 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.23295981 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.237812712 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013267185 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.517795753 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.093854851 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.345297499 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.222723777 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.365678965 seconds)
    (152/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.50407787 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.29564318 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.322484038 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.516481127 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.34383037 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.264073458 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.646180865 seconds)
    (159/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.366428761 seconds)
    (160/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.25805276 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.254629774 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.257911777 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.776089059 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.892824522 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999327355 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.264078324 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.862717303 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.324076983 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.836012347 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.249052868 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.740465097 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.592436179 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.357754578 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.400483671 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.262333459 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.346399376 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.157247177 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.896981294 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.242735933 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.240126584 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.483811145 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.450460358 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.834169613 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.246571615 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341549638 seconds)
    (186/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.226956384 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.480793373 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.986237861 seconds)
    (189/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.503098567 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.64625926 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.30604152 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.189161424 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.659092523 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.607777771 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.26495346 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.266491311 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.816025837 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.722475677 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.249652654 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.583554989 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.282513104 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.293292342 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.314425987 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.265850913 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.076083074 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.241006746 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.250472385 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.297210456 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.240544445 seconds)
    (210/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.850123163 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.642731001 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.895392727 seconds)
    (213/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.289289573 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.52749852 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.646344582 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.270949934 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.885679725 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.459126512 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.973446264 seconds)
    (220/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.816852486 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.065166312 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.290995704 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.2493538 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.265209375 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.243807574 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.348934895 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.013426411 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.70459426 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.300332007 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.610732952 seconds)
    (231/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.429103909 seconds)
    (232/309) benchmarking ("sort", Float32, false)...
    done (took 5.257572552 seconds)
    (233/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.368454092 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.367528013 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.19337085 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.852705958 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.252975963 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.23854536 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.251756048 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.242414868 seconds)
    (241/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.478085494 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157853347 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.820139079 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.267256415 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.653264255 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.741805408 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.598092598 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.327115827 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.241401536 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.666005996 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.630396623 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.497867375 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.466565027 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.021729153 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.243490773 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.309246688 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.268465378 seconds)
    (258/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.295767868 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.257972993 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.896480524 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.325270184 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.627856823 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.769779578 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.245801014 seconds)
    (265/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.637356406 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.244280987 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.070766064 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.586827465 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.130959771 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.276251285 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.277839916 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.246128385 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.413669223 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.263194267 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.658977315 seconds)
    (276/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.623835548 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.562728476 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.347101514 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.351090797 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.710670964 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.342007747 seconds)
    (282/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.272988282 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.327742496 seconds)
    (284/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.018663496 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.994354701 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.271131626 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.355405341 seconds)
    (288/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.434159136 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.080768433 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.309558363 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.003961251 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.104220634 seconds)
    (293/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.988522017 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.385070408 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.28998954 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.16296777 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.367673097 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245213567 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.325981069 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.270717182 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.327640251 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.267975232 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099029362 seconds)
    (304/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.815405324 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.044782851 seconds)
    (306/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.258736512 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.95780851 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.232895797 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.886695396 seconds)
  done (took 893.012995728 seconds)
done (took 894.185554908 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.278966601 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272724377 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.256989942 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.278971293 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.369189721 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.289194378 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.267857821 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.25867925 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.305588645 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.306668179 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.25661997 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.288835247 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.259132099 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.257938382 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.257348872 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272066171 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263480234 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.256964441 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27434405 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.267407561 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.275871606 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.256785835 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.307198929 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.293290563 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.262559547 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.261905843 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.261396562 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.277117895 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.370606685 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.261973449 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.262478704 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.269791635 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.263055487 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.257231021 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.255165299 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.278044713 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.270109477 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.269021269 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.262152198 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.290057446 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.660649397 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.258188634 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.262529052 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.260936699 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.2606307 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.265224089 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.26144727 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.26749459 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273969389 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272953243 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.646638298 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.275287807 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.263164567 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.260534604 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.271625664 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.259789618 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.263412261 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275300638 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.280040174 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275693116 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.255217751 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.265205782 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.262514404 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.276210681 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.268193003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.688517084 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.25555693 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.265789261 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.663571777 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.266495762 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.689976086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.268922876 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.263181875 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.274878174 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.292967342 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.268174499 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.256069468 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.259403882 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.269208332 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.258985554 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.271502361 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273704719 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.266377726 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.262195085 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.27452178 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.293218748 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.27190618 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.262994383 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.269607896 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.280730188 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.268912542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.273246288 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.265380548 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.257405766 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.272371684 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.266980425 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.265643172 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.26575649 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.266821022 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.273782791 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.663151204 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278821367 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.258819692 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.25928202 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.26137298 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.275815249 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.667887207 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.262489507 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.284713536 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.310856323 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.264635421 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.26348464 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.267004215 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277752884 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.271421719 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.268087539 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.258904349 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265342107 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.659315608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.278077335 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.265512944 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.260458186 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2798496 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.264912141 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.260537988 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.2759231 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.264420239 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277006038 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.384926533 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.276136343 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.296376402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.261368137 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.267285522 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.296210855 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2799321 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.2947392 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.266551331 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.279756786 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.278991898 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.26144352 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.274577114 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.274916921 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.265207826 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.270892304 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.259424551 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.292965165 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276258356 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276395601 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.28508792 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.385138117 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.262369558 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.265837378 seconds)
done (took 213.904852659 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.322206953 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.253502966 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.345545641 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.259933817 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.360314727 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.357435894 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.258614527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.258543533 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.25813646 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.636895822 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.258442515 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.259171031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.25810469 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.259045405 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.342949551 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.261086879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.259312969 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.602857155 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.262362002 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.331336425 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.256440991 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.259207864 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.260008132 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.64125271 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.254877992 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.260965533 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.331200392 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.26105365 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.604965455 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.257982582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.260349652 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.605667764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.350799967 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.278347117 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.271234331 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.268731648 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.364023063 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.278824895 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.343438985 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.344419774 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.347771139 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.301366234 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.257517352 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.258303289 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.262893128 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.262910292 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.258669545 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.289478074 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.261015308 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.260134595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.604503548 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.273206532 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.271079689 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.261077892 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.261651703 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.283577896 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.261217102 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.26346564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.352092691 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.26378117 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.324886806 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.642808792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.639894935 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.263318764 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.256006342 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.261250495 seconds)
  done (took 143.599576095 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.330072664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.335981924 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.375373549 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.266767107 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.314707967 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.379824429 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.26629744 seconds)
  done (took 10.465299859 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.268419715 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.264574399 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.312765095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.313419436 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.26353604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.409950282 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.262838571 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.275123721 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.270947483 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.31649803 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.265636879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.264530546 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.2708608 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.2654138 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.313124192 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.275399543 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378694166 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.264766966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.265662667 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.41550005 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.261865272 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.271580086 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.315262479 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.275106067 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.266661037 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.270908214 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.834222543 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265799398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.263060666 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.26521436 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.262956073 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.303105887 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.265613034 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.26479114 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.263178032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381367003 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.265671076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.262852699 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.266323197 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.262604823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.266154 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.264615624 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.26612875 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.26408624 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.265787118 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.28871632 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.265154406 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.265877588 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.266397573 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.266208416 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.317005351 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.266026133 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.263938289 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.264935974 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.321013051 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273681178 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.267213768 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.26417548 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.266581414 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.264159098 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.416795239 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314548101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.265978905 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313985798 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.265530891 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.266664932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.266482148 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.267011911 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321677083 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.267122999 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.314538166 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.264285024 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.420160009 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.289620663 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.267900763 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.269230377 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.270059326 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26705534 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.265475256 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.272266515 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.265608337 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.268469716 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.273576062 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.265658172 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.265805066 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369615523 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376751625 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.266444803 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.279689866 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.274345848 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.266325901 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.320780375 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.267387487 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.265079224 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319733109 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381435129 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.321277704 seconds)
  done (took 146.589425068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.273071652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.27661099 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.269210188 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.283929481 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.268591728 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.269094435 seconds)
  done (took 8.842890271 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.271186346 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.269693836 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.268281704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.270010749 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.269249122 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.270726331 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.269456392 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.271329112 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.274279056 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.268717616 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.27135852 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.272142233 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.27151157 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.26969793 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.270039702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.269383745 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.269993889 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.267104498 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.27000667 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270306385 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.375531862 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.27042385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.270962688 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.270503231 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.275874636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.270316813 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278291895 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.270287483 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.270338323 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.277062708 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.273395798 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.273310872 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.272558512 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.276010696 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.275036099 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.272534853 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275179148 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.273982695 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.26754492 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.273112396 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.273372954 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.271066366 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.271348703 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.27493748 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.273871924 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.276562571 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.27583846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.278214251 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.272378567 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.273259535 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.274108235 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.27125549 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.272391854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.273938829 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.273790792 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275122198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.277830387 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.272740405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.272172289 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.272218223 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.273149057 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.272832494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.273681534 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.276221589 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.269804025 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.274707623 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.272605692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.275696245 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273233002 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.272776324 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.274624126 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.269266687 seconds)
  done (took 93.92668476 seconds)
done (took 404.617403373 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.635149945 seconds)
  done (took 7.841496738 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.37299576 seconds)
  done (took 7.581170953 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.802719001 seconds)
  done (took 22.019079439 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.266493453 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.320031754 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.278683778 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.269053302 seconds)
  done (took 26.341354455 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.805122075 seconds)
  done (took 8.012295099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.277086832 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.270918092 seconds)
  done (took 13.75484244 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.797077057 seconds)
  done (took 8.003612287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.881373881 seconds)
  done (took 8.094798719 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.288041177 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.295295809 seconds)
  done (took 14.044766086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.252153934 seconds)
  done (took 7.45827676 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.256565854 seconds)
  done (took 8.464061038 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.2790457 seconds)
  done (took 7.488057743 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.301749393 seconds)
  done (took 7.508987333 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.28443855 seconds)
  done (took 9.492248571 seconds)
done (took 157.311397101 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.266614891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.269017999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.268478804 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.268286312 seconds)
  done (took 26.279410502 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.307873726 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.308156319 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.309644674 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.318618384 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.310111506 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.308137461 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.299355944 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.300372975 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.318235845 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.310363479 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.309700875 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.309994348 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.308550757 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.30083837 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.310255105 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.31005412 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.319889326 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.310108725 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.299362186 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.31137605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.274926095 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.320342624 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.312000712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.276663013 seconds)
  done (took 32.574198303 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.473046666 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.347905886 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.427895887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.327209497 seconds)
  done (took 6.785453551 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.326910028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.328922827 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.342986732 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.380778735 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.419155134 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.33856432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.302271267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.297774424 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.282808903 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.329443488 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.405908272 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.345100855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.427565908 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.275736181 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.457469407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.276487047 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.276614117 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.327870423 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.380283227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.396934795 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.276889901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.327790263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.331708408 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.345226646 seconds)
  done (took 33.411599941 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.274267772 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.28445935 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.28071096 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.275209943 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.275524269 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.276366567 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.280809701 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.276286665 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.296206615 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.277349284 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.274682009 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.275527815 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.274875338 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.275600397 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.275824065 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.288183674 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.289514743 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.276271421 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.27905389 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.282351694 seconds)
  done (took 26.799690913 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.26916165 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.12799859 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.622385016 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.526163639 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.26922446 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.272087335 seconds)
  done (took 27.297490392 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.347557224 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.473723729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.276792948 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.646673259 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.728383105 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.279744586 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.277459487 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.519455532 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.835550238 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836747129 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.33594815 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.346945817 seconds)
  done (took 19.117650903 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.272207691 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.270652798 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.277760642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.286730834 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.333883118 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.283968439 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.283528525 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.270117807 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.336416746 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.341004187 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.284913172 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.334576172 seconds)
  done (took 36.788489184 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359084457 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3200883 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.322406817 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107327127 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003692896 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485877503 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.153964175 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.712253278 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.279993796 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546787299 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734250332 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363688391 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.530301855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273748225 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278232565 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299515995 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500008831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759758094 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27637589 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.259824172 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299176741 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274703414 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.344205711 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.302584744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485140313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257198771 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.534076813 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.049040734 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558759412 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286845879 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283836687 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273284115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546838783 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945999604 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371249649 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284061794 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.137810971 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908436312 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.261012294 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.253300374 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242749034 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276314068 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284534324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27368935 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207866814 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28106883 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712456818 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.280722531 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.986789423 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273996454 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285585542 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369514299 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.277807244 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.268049878 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406425646 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.282487212 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.272864231 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280862276 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846667432 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.704537022 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277987877 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.212894659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.746687011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.330823128 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892126999 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.37833084 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.280002022 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278423377 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21002996 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.304722962 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291940985 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412141979 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.300732912 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936916259 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995881632 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286453118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206908189 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820696 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284125462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.213182568 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505518267 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053815883 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216358315 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.221969994 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.211804859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008371017 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287787831 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.690802533 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288184127 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.708132582 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.288122799 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292506215 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299741557 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.501985845 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.162507414 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27605227 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.226332688 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408676126 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298412101 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.709509601 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213594188 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.280267848 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534131771 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.489418218 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276717877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.309346493 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482636715 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286100783 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.295120605 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.277656441 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.29004266 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.856796141 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291518972 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.718239475 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294225351 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.054702432 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047940729 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283854666 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.381725668 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.282780087 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527333713 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.078109118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180040439 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34556124 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281685671 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278929215 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.361652414 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130334331 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.182752143 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.280819165 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28240279 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.29125592 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.278980994 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241678759 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.274866647 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279534695 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.071577979 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.503923898 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285863965 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557294615 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21439953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418037269 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296286794 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.50414791 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.490950575 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.278134971 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541474069 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291206507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291673608 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293152269 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297721074 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37654286 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300954646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.292162872 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.540948903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.282839933 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.28376324 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.354694632 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.060202855 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285048751 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.285355958 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.18593839 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866929207 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252105089 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287191424 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175441475 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.294532475 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347732137 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286197924 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.29044405 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.135767957 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266086924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.287342769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.280352805 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50496517 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291696009 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.347688493 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362415142 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.478924019 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.871429096 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29450615 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.216780475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.992514051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.974471724 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281671614 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.472784139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281044522 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289904449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29184937 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.931900646 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.867087324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284193795 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.277335482 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.288569596 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293326466 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.288174544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282988552 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.105357112 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737630606 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284042846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.309968143 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427086258 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.295991753 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.217486781 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.799823029 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288202565 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282622622 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.059702186 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31677891 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.279895807 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772957312 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545224691 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.104869413 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298579109 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.372618915 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.313140807 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.28517034 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266993761 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298994567 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.313345757 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290723958 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.293879971 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.286954832 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.734088923 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852301817 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015099934 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814237236 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227767855 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.297063814 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.188355502 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.72109653 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220066583 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94411129 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476142546 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723679993 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24358186 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487783231 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.497390585 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058496975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293241312 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513304735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223945286 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.280583334 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311345051 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496114657 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318843366 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.291882708 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216399044 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.588288219 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520029599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283499743 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364605487 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719926474 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282265758 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.076877015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.284085198 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.686944607 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463953674 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920625171 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.680830603 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290276403 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287393432 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767149888 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293129918 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.815312816 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906840231 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286997516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.491389217 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227633947 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.297491521 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.297021955 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.287908088 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.637146273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.288980064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.542643343 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298810644 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220950218 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287500082 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819175187 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.144742708 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.291084473 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286968669 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061087537 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290178549 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578352412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.291039421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.09427706 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2902056 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.221794235 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220982126 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.979871046 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.289477312 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25563989 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791793274 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.712084254 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.368143012 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32084755 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140407062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.545255291 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.302729712 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.874557056 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515092144 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.225728696 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312787055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.388217358 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301696756 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.275061278 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.190791136 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523387942 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187868654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514870008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.33940982 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.196687333 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286643326 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503004537 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187859484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299196545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534523308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.999162635 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.29170978 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025348491 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314203931 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287337547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307982576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.762439213 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.298353382 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358761547 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299986856 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.298839694 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.299704872 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464848183 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295618165 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291585925 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.30333844 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382493002 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.828619739 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.099943158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.062009461 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883565952 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03856518 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885884938 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305164418 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28989259 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297715466 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224495653 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438312301 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818251598 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563114263 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409649473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.845998376 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313386763 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292456695 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292511005 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504901541 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564197553 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166203113 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290729066 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97085618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.186301202 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301390928 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.502729469 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801433064 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867323762 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411539854 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29400089 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.728388563 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566194494 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383476561 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291057721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88780627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.302289706 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.712706951 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.29916868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291080767 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439076807 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300677106 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972672394 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.301772961 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.451413766 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.064841433 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.412208473 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.551362494 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.788579584 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.303226146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884985892 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001544752 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556330369 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362121963 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30306873 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.410528209 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438258333 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.296650048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183711977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291279819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140936356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.00310912 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.301509818 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8930679 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56015297 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.29020732 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.29604483 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314231752 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.301812446 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.516809229 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038234141 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520648966 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.302591303 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.294967044 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.285130709 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891828002 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309073774 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228182764 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.296344665 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542394031 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532782642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318144032 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.745563374 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.003222834 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883746032 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.271435955 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315519941 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293873537 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030327274 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894585357 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.114753676 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806860042 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956936535 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306522599 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570657964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.298709751 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300058958 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572758317 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.297305054 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302660278 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308060737 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.897856338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080181728 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.29802847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.366302726 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.233593449 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.523716238 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987258633 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235689669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303577672 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.486002652 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29821469 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413904012 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305697975 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.300449986 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301237115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.030458472 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575023625 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.301583241 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.281395486 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.283267759 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309791246 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304553514 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533956761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303294681 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.971087396 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.646647925 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.554620697 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.308653726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.282025254 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.299436967 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296545909 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023495911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274561452 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.958761788 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878877804 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.300491394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.309072717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299671061 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.513391232 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508787221 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296575479 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312339726 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296915694 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314064462 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.204332569 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.072372653 seconds)
  done (took 1565.437542389 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.298597911 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.305416404 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.32996593 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.356024933 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.325087624 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42688927 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.367231265 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.307330207 seconds)
  done (took 51.951996711 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.310533761 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.453679286 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.328671934 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.308695311 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.308989918 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.304622605 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.746831782 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.300416104 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.309767504 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.30739763 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.297449532 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.30391257 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.928114837 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.306471208 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.298347512 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.290806077 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.308776642 seconds)
  done (took 64.657313455 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.307518592 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.371821086 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.398867462 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.302817852 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.5484479 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.308232251 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.52575187 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.316475523 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.326886572 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.667403105 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.954796591 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.32840874 seconds)
  done (took 79.595689356 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.305866933 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.305776083 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.305534867 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.305785813 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.305832999 seconds)
  done (took 7.765776093 seconds)
done (took 1979.670696291 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.7229443 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.007915595 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.958653081 seconds)
  done (took 5.204813964 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.445952459 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.495844271 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.661934574 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.629803694 seconds)
  done (took 7.470975244 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.587784186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.669921765 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.4937618 seconds)
  done (took 5.989586751 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.753724757 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.314932246 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.425836326 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.296562898 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.300853391 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.300133949 seconds)
  done (took 20.136769064 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.303578913 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.30455407 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.303310641 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.305756693 seconds)
  done (took 6.456406392 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.2849722 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.018306323 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.285802406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.302449745 seconds)
  done (took 18.12975824 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.050679185 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.071682477 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.047907809 seconds)
  done (took 7.409872381 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.306711872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.142952061 seconds)
  done (took 9.688411908 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.602889842 seconds)
  done (took 2.841768359 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.434227279 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.572798207 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.385439298 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.302009204 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.377200494 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.224959867 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.982387257 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.547800898 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.28376878 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.528360943 seconds)
  done (took 27.878793564 seconds)
done (took 124.662732783 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.419920276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.328103758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.50053652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.141962403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.52616796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.499443522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.785719516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.111294889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.652765401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.641111335 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.147244472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.528047086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.522912273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.324058059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.523763345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.32594787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.531656217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.224718217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.876465775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.040464389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.795941651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.783290916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.977276547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.806925238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.528606467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.453599794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.367482544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.32679026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.049027142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.388487722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.455696751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.213201333 seconds)
  done (took 190.038925408 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.302031131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.302721487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.302997646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.301407799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.30297502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.302010906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.311347709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.300750273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.302269897 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.312608012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.30128407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.303072615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.317884525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.302965152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.315389988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.308916701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.317371315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.303008529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.302017701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.317449425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302095165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.316867078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.322221077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.303161319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.303211256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.321093275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.303721183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.301379217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3036968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.315957987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.304871631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.314333919 seconds)
  done (took 203.085654812 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.316118691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.303192757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.303818405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.3029641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.318549145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.304730128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.321204859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.303463058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.308665923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.304273373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.303112707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.317828056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.31516573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.304284905 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.303682733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.317977491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.313792962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.313428187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.308151212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.308853261 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.306673575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.31894948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.303137127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.326466544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.310616821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.307552877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.312091862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.304615116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.304149035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.303818362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.311532193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.306267619 seconds)
  done (took 203.152963315 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.508545873 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.313580841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.312516771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.270761726 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.313775954 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.313043915 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.306769678 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.503502853 seconds)
  done (took 14.086337569 seconds)
done (took 611.603205969 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.66060585 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.363526639 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.513454656 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.332154273 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099553485 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.333965715 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.333669641 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.507317016 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.233138252 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.508814489 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.568100983 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.329896549 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.710432167 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.330814054 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.5832016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.434114962 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.211529362 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.325351941 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.645987888 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.881679516 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.588975294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.828720117 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.505251696 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.243406689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.708708467 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.807279935 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038737917 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.207723612 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.332395683 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.648926116 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.039706516 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.328778588 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.396399806 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.373363749 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.428354332 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.411139385 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.30830874 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.374815707 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.514140615 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.544448905 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.867260382 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.050582665 seconds)
  done (took 90.701702968 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.302261724 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.303160079 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.302122041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.303678049 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.304113948 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.302968967 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.303565342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.302964233 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.303008161 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.301845025 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.303053763 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.304358075 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.302501199 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.30393003 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.301664058 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.302716447 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.304353873 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.30531112 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.303093323 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.302951928 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.303397345 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.303282056 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.303962978 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.302955747 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.303895851 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.304348195 seconds)
  done (took 35.133867331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.315842328 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.565354701 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.745456673 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.323817624 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.315721063 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.319700246 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.393781261 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.317520873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.318064193 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.319534033 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.469996513 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.319697548 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.352070228 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.752555987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.321478658 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.318106923 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.316451629 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.314139257 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.573184532 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.325996439 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.396767102 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.317005426 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.394419503 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.32679995 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.320065069 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.317491845 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.32177919 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.842666249 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.318097338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.472371262 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.119487926 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.395340491 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.796721391 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.753819352 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.122290036 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.322058172 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.318561054 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.475662994 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.319256947 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.317430259 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.396111206 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.319873752 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.753198422 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.965225961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.337726661 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.318161592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.863793365 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.478733045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.56855964 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.326300373 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.775218154 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.324577666 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.319862078 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.319778523 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.570481838 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.327257772 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.318476256 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.867860797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.322952988 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.397071658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.320112413 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.319344108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.581297961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.319316295 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.569572856 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.319314399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.328569364 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.319506158 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.755668779 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.3243295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.981778955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.337079379 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.319467025 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.472031661 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.570971566 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897384382 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.323000727 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.584931548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.808675895 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.395344871 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.323096903 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.832102098 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.399912297 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.323631338 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.321890439 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.321877189 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.319876703 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.367246821 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.395927316 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.895912696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978113083 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.882171147 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.400874699 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.33385152 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.321405373 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.86517597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.322247857 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.32149525 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.743315933 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.972462045 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.337273177 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.329608522 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.962328119 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.338193018 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.40201297 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.327986126 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.755241614 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.321150268 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.368540034 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.322809163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.329340692 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.324587737 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.400170542 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.3245119 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.32382476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.944169775 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.496904878 seconds)
  done (took 174.18901601 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.315739583 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.31435558 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.313874258 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.315553412 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.315022625 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.319635388 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.314397208 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.318048364 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.320370964 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.314818786 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.315635207 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.31705082 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.316435091 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.316166063 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.326365969 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.32246952 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.928828812 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.315986967 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.323495938 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.31600258 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.119234955 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.31969789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.31686776 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.316313077 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.316239507 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.316749449 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.336562506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.31847474 seconds)
  done (took 151.574791357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.322451657 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.896435043 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.323863185 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.458102377 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.345321321 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.320480231 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.454552924 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.382366887 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.324255423 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.321512152 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.321329622 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.630178547 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.324247855 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.844527915 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.51762962 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.46313995 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.848223443 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.324514915 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.322309573 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.321685615 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.460530751 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.335348857 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.631033191 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898043885 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.326077877 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.898082082 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.313422995 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.325352989 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.322654986 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.900841612 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.32226567 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.633449658 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.403971653 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.386264326 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.899759149 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.845696449 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.846875367 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.475495226 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.32669339 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.322729616 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.322833288 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.313549236 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929750456 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.328634158 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.324752701 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.922270257 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.344863415 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.325584638 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.332504152 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.323287658 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.384006916 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.385197144 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.651047425 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936265452 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.408463141 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.348837239 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.460696993 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.717563374 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.328615228 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.845576001 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.313455644 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933978297 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.331477534 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.314824078 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.325475668 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.330985129 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.481033133 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.465322511 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.851697306 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.326792941 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.848409894 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.481211533 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.326626287 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.324075101 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.326869819 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933278668 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.853410331 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.481021196 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.468518574 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.52815696 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.319640565 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.326142632 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.316101799 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.406528394 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.328378078 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.936838833 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.855126049 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.328528792 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.327009489 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.327962436 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.327972541 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.507294341 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940551016 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.411288566 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.847716132 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.667659607 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.657121586 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.331411623 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.386622474 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.327750124 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.655350474 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.331293467 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.38480601 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.78007895 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.654728124 seconds)
  done (took 159.065985948 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.589696113 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.523075295 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.418135877 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.443097537 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.950994685 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.901091459 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.611391467 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.449988132 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.437283022 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.577448647 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.498468277 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.417919236 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.50108204 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.40804728 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.052971707 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.39551387 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.418357276 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.45522597 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.425516462 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.359076644 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.975782874 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.621108697 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.498731986 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.361578057 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.423127904 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.095098525 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.878955573 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.908111686 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.50647107 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.645990988 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.868211383 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.457046309 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.322728566 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.99750089 seconds)
  done (took 64.655502628 seconds)
done (took 676.565925625 seconds)
SAVING RESULT...
DONE!
