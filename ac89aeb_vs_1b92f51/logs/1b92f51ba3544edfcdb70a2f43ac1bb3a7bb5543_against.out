cset: moving following pidspec: 27660
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.711845214 seconds)
loading group "string"... done (took 0.558398232 seconds)
loading group "linalg"... done (took 10.085289511 seconds)
loading group "parallel"... done (took 0.189951115 seconds)
loading group "find"... done (took 1.504355822 seconds)
loading group "tuple"... done (took 2.223210167 seconds)
loading group "dates"... done (took 1.524089084 seconds)
loading group "micro"... done (took 0.213075174 seconds)
loading group "io"... done (took 0.591882191 seconds)
loading group "scalar"... done (took 56.645611453 seconds)
loading group "sparse"... done (took 14.930670919 seconds)
loading group "broadcast"... done (took 1.278143482 seconds)
loading group "union"... done (took 11.157842765 seconds)
loading group "simd"... done (took 3.404527178 seconds)
loading group "random"... done (took 12.918677379 seconds)
loading group "problem"... done (took 2.363451557 seconds)
loading group "array"... done (took 25.978335482 seconds)
loading group "misc"... done (took 1.215879638 seconds)
loading group "sort"... done (took 4.021514445 seconds)
loading group "collection"... done (took 21.967118405 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.67693331 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144969091 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.229764968 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.358869049 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.226987539 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146799653 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.149722371 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.276821199 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.254495559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.223652319 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144073046 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.536034108 seconds)
done (took 6.101970351 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.246095673 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.250944777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17169848 seconds)
  done (took 1.094433404 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068483405 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169880621 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089984908 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105335056 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105301037 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089359011 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.104280832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106019817 seconds)
  done (took 1.444916981 seconds)
done (took 3.534210178 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.549403936 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.859753887 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.571509288 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.159614488 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31288127 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.322770162 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.36394448 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20053538 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087384922 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102515695 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172011383 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427622199 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.45097288 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.036653296 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087743038 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109431282 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.126545217 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.791595322 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.074214947 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130373826 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.564694844 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191161581 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.108857245 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112654783 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193817135 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125972535 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171442501 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084440252 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668040587 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.125683155 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.199224418 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.075836207 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172089898 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.237773105 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214140853 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.086331421 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670586721 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196404019 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095370794 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094900113 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.702256533 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126607359 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.16262646 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099086395 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086650655 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18263475 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112589545 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088101772 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095225109 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.095566288 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160041557 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460524637 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.087219863 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.151419242 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.101383865 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693895245 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094125823 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274657175 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131075528 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.100130998 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.069845051 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.099021353 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154177313 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089583104 seconds)
  done (took 20.456425974 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.158537322 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161415343 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07157552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153302786 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138081948 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073853384 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094447908 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071639467 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122197151 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241712186 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134499403 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.161654947 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085407863 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081119523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.136506934 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245577965 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115115162 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10506361 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095673924 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085969786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138121374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.106053524 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089828758 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106437708 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164004038 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199157199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104138336 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115910133 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094714224 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0959744 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136261793 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157389135 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084629126 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07902751 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188507137 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113870993 seconds)
  done (took 5.203697924 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219054855 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118029023 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213195952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187713499 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142779065 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167232077 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139476535 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309468606 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.228510896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17419099 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107773818 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106776996 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071037897 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096615043 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.089992601 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.559328214 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180681828 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145922784 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.144936706 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099561484 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096316644 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366625948 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09626295 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092793822 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080472295 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088459666 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199079201 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097211584 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.164102507 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095908169 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083499288 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127022967 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201054794 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.188519935 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127238188 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118218006 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098094107 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093813844 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214299695 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108751824 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071567546 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124150041 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125465577 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112434064 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097960882 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103270501 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220788484 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092076642 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121440901 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.09037758 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201674836 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.11210909 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094141628 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317030173 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093554094 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100411818 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075418495 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303635522 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108674848 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091547734 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072505945 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095916091 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088837603 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.425213254 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107707337 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.977300536 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07836423 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160007294 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099712057 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098771141 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078743911 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097023982 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110744396 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072665019 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089213044 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073626731 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.087501073 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079357847 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115147262 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.078180661 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.090560754 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139530006 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.106015081 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091771832 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122040227 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096810846 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072390648 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121948501 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092774738 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073516347 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09452928 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074006455 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163644543 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103023611 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115835785 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098411269 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119583649 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08945695 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228448029 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075893238 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120541445 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092440649 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106179032 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.108963935 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091911497 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078172531 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089670632 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074292437 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093781068 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073603401 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1555947 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085751406 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094026853 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090971865 seconds)
  done (took 23.337602699 seconds)
done (took 49.670753786 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.523574269 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.11742985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098414821 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11730749 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115202949 seconds)
  done (took 1.732137812 seconds)
done (took 2.463043029 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.392167711 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202429175 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115282509 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195371507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099030126 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203374793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190525042 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.106811512 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218753106 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097850515 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.199997662 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097735705 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099110562 seconds)
  done (took 2.975026634 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092262436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121637836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093418413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107506777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072216957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108643384 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089958845 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123444398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08950917 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099915998 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072871272 seconds)
  done (took 1.798599003 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088356961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115797993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081727567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105466495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074396795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104614142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088552969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119757162 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08818166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101249198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073125437 seconds)
  done (took 1.772716213 seconds)
done (took 7.270068672 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.148559136 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.863240676 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144107124 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.216590471 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.385290424 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.231504024 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.622965416 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.161725325 seconds)
  done (took 12.670154487 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.17220882 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07910798 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094253477 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079907831 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098133185 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078966113 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096408378 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078135707 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0941883 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078574396 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093727767 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079389616 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094499258 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.079953203 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094138258 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078412932 seconds)
  done (took 2.269340541 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117325273 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116045328 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101126999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104723781 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082998124 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098886479 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086733422 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099219572 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082133434 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09789866 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088672739 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102800299 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101694341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082107633 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101284677 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089398101 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09786447 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085385301 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102433932 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101968678 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088566962 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099413547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085789228 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104043314 seconds)
  done (took 3.162923257 seconds)
done (took 18.836479196 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168234748 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076964319 seconds)
  done (took 0.984635372 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142293383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144622703 seconds)
  done (took 1.032158593 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105967788 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092008991 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135079623 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111747838 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079100601 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09300397 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113738374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094759593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077833744 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094424671 seconds)
  done (took 1.742859975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08193701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098620663 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089369107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.142564165 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106233964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081944486 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100088322 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097500969 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084427889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094093059 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087861761 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117682584 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100075743 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103821189 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099588524 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102152892 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091427933 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100545719 seconds)
  done (took 2.526914129 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077058102 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079558346 seconds)
  done (took 0.902331408 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083500207 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094136486 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083056967 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099011491 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079583584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094781964 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079118459 seconds)
  done (took 1.361102467 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.561917322 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267571217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.402124557 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.114097887 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.13663202 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.361553301 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137023162 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111875284 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111406087 seconds)
  done (took 2.991326545 seconds)
done (took 12.285801322 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.085067851 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222339692 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.640158331 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.100492754 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094696475 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.138908671 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.311623703 seconds)
done (took 2.343245939 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342065558 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152887564 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086199484 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076542433 seconds)
  done (took 1.405116512 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073821595 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102819203 seconds)
  done (took 0.931478519 seconds)
done (took 3.095835517 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076655339 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128766725 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075843277 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093143034 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076195962 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09252669 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.074832297 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091704099 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075682274 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074500807 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09175482 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.076101715 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.091216161 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075252512 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09056472 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076594428 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090179871 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075768424 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090996111 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075689242 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090969576 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075581937 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075745868 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091059971 seconds)
  done (took 2.817594838 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100436878 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094996381 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082385309 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098621002 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100219559 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083793466 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098323344 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078942724 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098082723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078630596 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099082079 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.099196147 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.079535422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09935566 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079736138 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100084713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0830466 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095103161 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078256527 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099923112 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097897649 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080365197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10027034 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082354227 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099571289 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083897903 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09515119 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080148925 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097987837 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099583413 seconds)
  done (took 3.50095645 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085860243 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071838101 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092833158 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08299052 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089514314 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076938842 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089166033 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074539919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09472062 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075574795 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094496643 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07612654 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089133647 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077727821 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093964316 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079483505 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.103499885 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074321673 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089072555 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078710866 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.093787968 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074021142 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075901447 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092780762 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074872688 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089017547 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076669304 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092081973 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.078067637 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092665808 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.079269831 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095788085 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076039589 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101982131 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079678397 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092369066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081933094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089367834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078556066 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089120319 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073661099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075938008 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090490869 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083987586 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092294439 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077379655 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089314225 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078406788 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094525455 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080422137 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088894875 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073234658 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097047514 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078889107 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097018585 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074441344 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09389574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072615976 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093943743 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076591679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072823288 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089928423 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080398059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093591597 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110525837 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084432273 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089261686 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079953996 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077663304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099186279 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096529146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089580421 seconds)
  done (took 6.901055091 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091568377 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104841589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078689153 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095201609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078346687 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094033584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085669399 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093517775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07978821 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10326719 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077686142 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094801648 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078458242 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095043482 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078128713 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096490567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086907452 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094011795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077475977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09543656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078287361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103190752 seconds)
  done (took 2.724044353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233061202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101120365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14563896 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09397095 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11774646 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111080634 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098911345 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08451425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099185803 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089962265 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105944924 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085142976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117573448 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105331424 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088940611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106473213 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098142788 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090847872 seconds)
  done (took 2.737427702 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096000474 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097175473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104844485 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096947645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080427221 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097338184 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104209831 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096080266 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095868044 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082152605 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107079831 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079971786 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097532761 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081094872 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096380813 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084323158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097354078 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096798371 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090914854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106285355 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089332621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106363235 seconds)
  done (took 2.850339898 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096893477 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095539052 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112721734 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10051822 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079042063 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096418666 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102154635 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081572537 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.102625479 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.080034578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097223438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078439291 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105767393 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08054557 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103642805 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08085734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096327814 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080341753 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095960236 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078130031 seconds)
  done (took 2.613431466 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171619369 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095431985 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112467023 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124987327 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095784764 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111811935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108551711 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111026285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111083888 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110551194 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111070009 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095157977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123606043 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11966273 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095367712 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124511354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124005183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124835051 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096153671 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111803492 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127831327 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095803022 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124847331 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094961316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111632384 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.230736438 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095526527 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119440768 seconds)
  done (took 4.052285186 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076991168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076207784 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093804831 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077261252 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09401352 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077174728 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094026342 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077385677 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092373155 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077386913 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092521276 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076764902 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077012445 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093211781 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076627278 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093347623 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076613946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09420616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077591432 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094073235 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077880445 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093091258 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077799518 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077158419 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094084292 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076809692 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09432728 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076802036 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092985716 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077211197 seconds)
  done (took 3.298685558 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089191122 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103630703 seconds)
  done (took 0.966741706 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087067371 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115302795 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077021531 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094531413 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08712217 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094955391 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089863672 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104585904 seconds)
  done (took 1.523625465 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.157582445 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.145407088 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.101017319 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107307379 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.125987136 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157175372 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149359264 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101401973 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080630171 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089155877 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139711572 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.074192961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09970591 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080473811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.117757111 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088618924 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095609544 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089197644 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10308817 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080403818 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101129865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090077584 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102167286 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105540165 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075619568 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103059154 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08716736 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.1077645 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079636205 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10306142 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099369088 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095707884 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082403403 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100172246 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07996107 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.143098491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10970125 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097822619 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100970488 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101190711 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088609591 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095925392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085439336 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.097449774 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0857023 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101854244 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084759642 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096566052 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.075978532 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.09288734 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080378763 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096141343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079070453 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101188415 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083978631 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109427478 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081069597 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093511475 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077897549 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095385754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082196613 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095778102 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102364807 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082639209 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096339014 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082974723 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100712216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079693359 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098392515 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080976442 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.100619029 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110745521 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103321879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084532707 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102737475 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080484781 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098250014 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085297504 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099680342 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.101416266 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084346629 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103629738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081544191 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095056353 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079456153 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103145393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080629142 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09854302 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072174027 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110677173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081336567 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096068836 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075806437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098635875 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.097634217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100543644 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075699804 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101825049 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078036399 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101891447 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086407364 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093263922 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.086413341 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102554704 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086160626 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.100559927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1394276 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081232463 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096318268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083118074 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102993205 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.076633651 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110813679 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078987767 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093696954 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.079100574 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102520703 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084544151 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098833793 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084522846 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098015158 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086051798 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100190614 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078458124 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095266497 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083556831 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105501242 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.103329081 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081358648 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096529805 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08009136 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101719009 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08414157 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0980955 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085324906 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098498303 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07850473 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097168182 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085590811 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101453229 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079995406 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101165429 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085407265 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099930946 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082563872 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103270529 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.078846123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09260418 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102001274 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.079126624 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096353451 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08955959 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09732383 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080980367 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.096550964 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088637621 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.097310133 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08449258 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098700985 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084384196 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102405454 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073868304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098059874 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081336014 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.104608757 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079280883 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098518057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078669087 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103192763 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077010156 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100607528 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075129059 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.094121814 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085320505 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097538265 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083306028 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096567496 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096590555 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111406832 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085898236 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101511105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082331567 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100906955 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10038149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083475459 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102552281 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085176088 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.100452646 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081689738 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102632633 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076886887 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099504323 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083009334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101988118 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.074257301 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096607611 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.074045588 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101375186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086889314 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101381825 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085638286 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098777778 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081973906 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106302932 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098074744 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101656716 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0758728 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101629511 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089830934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103803677 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086059466 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.103428487 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081977982 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098180273 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089394141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099207301 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.083161355 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09875765 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077241447 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.094334452 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086589976 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099924416 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.078627218 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096319097 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086292047 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1032196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09977475 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076301779 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102334631 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088731178 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096225626 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085138333 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097471883 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082753158 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110716495 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076689178 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09642054 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087569749 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102362058 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078487314 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.098671057 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081787779 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103774655 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08269386 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099487284 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081756575 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105381411 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089174717 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096554909 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080456473 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100121729 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077216125 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098804056 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.083982757 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.098834196 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079730346 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107025435 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105041966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08596213 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100544917 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084557764 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10329696 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086607249 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095319354 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086239902 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.097640955 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07710894 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098399625 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074559853 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097590042 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079539894 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110358544 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08243249 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100285308 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084400107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102805453 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08124234 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10439905 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113609198 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076515919 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093537754 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081924167 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100655725 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080451743 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097434106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08062099 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103059538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08489064 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104778017 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077313948 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096581219 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084907027 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097066536 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087128728 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104196988 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086509319 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.098080377 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084797022 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0984597 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089165559 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095674232 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083536438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100644445 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101539173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080714994 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100342637 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.079842269 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.093971516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.079941364 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103846071 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077176646 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10172625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.081663205 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09845317 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077584347 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09759081 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086397037 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095077695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087120212 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0966554 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.076750073 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.094748733 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085643118 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101764635 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085225155 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096786466 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08362418 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105069898 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082953134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096340635 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089313235 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105867271 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086109829 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107855283 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.075389294 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09965179 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089638151 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097309236 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081775553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100135607 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077544911 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105640818 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086745527 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103048265 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082513357 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095339645 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080928369 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104908816 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083236455 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101764537 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080830646 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103642948 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.078141161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101179574 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.0869468 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102792882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087676038 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103523604 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102045225 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081516062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104046365 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07992153 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095275147 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077429941 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.099948988 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087480325 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092689444 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084446019 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084136938 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.098159565 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099554386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085373553 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096978651 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08190255 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101629937 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080155116 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108048606 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081048733 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09775838 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084481276 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102422146 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076987631 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098247215 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079625274 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104731107 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083620266 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103260867 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084053858 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103231523 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081984509 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102834003 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084901212 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103133836 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.077002823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105359484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088269632 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099856527 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080708521 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099575659 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.077025758 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.101639099 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087037639 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.099331276 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089139364 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104490454 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082480975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099305677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086016028 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101761517 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087658776 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096539456 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084245539 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095444012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.104940177 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083256278 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106109503 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.080792785 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095972727 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085628754 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102692363 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083980425 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105740697 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087571844 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095411975 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077760162 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099660619 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.081490188 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107984319 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080766713 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101060491 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083315462 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099729046 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080533577 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105194704 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079444227 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098618582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085182098 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101985961 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.078141654 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.095213218 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084154173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.101875709 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084043689 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101882624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079257442 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.100770817 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086971581 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100815269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.076172895 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099447911 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088001193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.102188547 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08009081 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095925412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108606359 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086843888 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105790237 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079038249 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103350982 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081051467 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101262252 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087434604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100062468 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084182655 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100985017 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085426937 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110397896 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.07697243 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097744659 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090821077 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103476188 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088310708 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101072715 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082476558 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105668228 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105633783 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082486791 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.094914118 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079384913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.078755121 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096361273 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081855675 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10908766 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.102447073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.081613063 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10203771 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084339215 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101660927 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082505358 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096014995 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087861284 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099831299 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08850128 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095334202 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.075917389 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100149313 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085975572 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097883056 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.079885376 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08130241 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101602224 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078123125 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099453524 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106519136 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084245407 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104081777 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084372102 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10052356 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082256358 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110175609 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080565589 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099442755 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093042861 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105208278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084627976 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10312273 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088433218 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105286487 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082477948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105379856 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.082042237 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096913216 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087893524 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106745171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113788013 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083144689 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094417721 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085095408 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096808246 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0778535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106978109 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087439394 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106521515 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084302929 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098615433 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087867629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100489348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084465115 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.100430957 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.082129376 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103187941 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082267349 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101876738 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081033724 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106841884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086941369 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104886816 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088727796 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09511457 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092765399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10588033 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087357391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100499731 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07820441 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09654312 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082345665 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106313078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087442119 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102120443 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08404239 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103658801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085932225 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102848812 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081927801 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106262774 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085931596 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099857572 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086923454 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097801916 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080140942 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099335018 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086444999 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.1069054 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08609981 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109632852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105704847 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083617066 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.100466819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086086448 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10179993 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086479745 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102060231 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081458922 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096354065 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087052328 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107597902 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08436782 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108022274 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090507718 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103194921 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.08736357 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109996301 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086325208 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100375609 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085796402 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102175342 seconds)
  done (took 56.295601449 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156702461 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08965293 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100779576 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082645381 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130642993 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084035023 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101166136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083423379 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102616946 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114533734 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082748864 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082587588 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123634897 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13261784 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129298194 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116482996 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082437904 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103653494 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083452659 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102406528 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123859458 seconds)
  done (took 3.031296446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105745768 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120796127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119435098 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102410734 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112085649 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118382029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099448792 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117323784 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121836943 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114149337 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102678847 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117384336 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115578872 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094830385 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113227479 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114842593 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103078316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112167524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119913895 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.118936094 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094538781 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119619965 seconds)
  done (took 3.280770197 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090706894 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085007644 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105988304 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081487391 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103957301 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082233205 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10993265 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082062406 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109320994 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.099945439 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080056422 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.080422693 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102558817 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081471109 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.099482941 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082004758 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110105212 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086743297 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105358893 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082520199 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117514187 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100595575 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083204707 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.097477268 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096183834 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106724376 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082836621 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104290074 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.077992199 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103974589 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083278196 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103625483 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0855312 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098894016 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.077941813 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103840263 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085805414 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082327218 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101507001 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.079696992 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102005681 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08736214 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108440977 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.082456757 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100705522 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080619152 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10400352 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082010563 seconds)
  done (took 5.308396438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.119856823 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160336526 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087405985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149586636 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125800288 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096722989 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10757011 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148398912 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106463178 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086940746 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12797909 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126688386 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090016073 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112653626 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091067859 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108227977 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112222084 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088326493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116272795 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088603278 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115775112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110528817 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103255092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123632333 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11234306 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08967747 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109208587 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093570536 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123437849 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11767467 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092932795 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114040514 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126322027 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087773055 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108567508 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109675479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.107109152 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111360415 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090627245 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106521879 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109555199 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094149708 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113151437 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127339063 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090976581 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113001536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089533953 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105644937 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125377308 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090112771 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118640319 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127169049 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092349409 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111397575 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093412693 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124361602 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110730883 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087740106 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11050332 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124541865 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087414817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112172644 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.106385293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108366044 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117290556 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12702472 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091258449 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111750655 seconds)
  done (took 8.396061804 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120436692 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113991889 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127134483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106397442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114599979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112879592 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093316969 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112505958 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092563454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120706208 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113554097 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200788379 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088856799 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119433551 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115150518 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093635663 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113330413 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113156952 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092685491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114226619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092727354 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126577955 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113592077 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12588354 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109140241 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110003767 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093899723 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112345856 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12707736 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093195123 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127690156 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114283446 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093769722 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125703449 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129411512 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113717873 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085982998 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113565305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092633798 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113680513 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109351128 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105688795 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113953529 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088798951 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113982958 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113906897 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107326074 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128278111 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120099138 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121204294 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092686419 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126598731 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113904778 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093426267 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126726942 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137725235 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128110143 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106950489 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114595711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126976414 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126274497 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.116279448 seconds)
  done (took 7.862588589 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083321224 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082841127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104328098 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.08242952 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1043142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08360051 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103764587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082779749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102516584 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083430113 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103920693 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083456543 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083553684 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103303002 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083108734 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10416126 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083322401 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103711225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082717697 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104189992 seconds)
  done (took 2.689238936 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095923414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127484212 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087618429 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116246865 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086644956 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116526655 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106761563 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087358603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107677993 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087358788 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11934917 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119387601 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088583723 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116242288 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09936869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117193187 seconds)
  done (took 2.518192711 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111104375 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128773902 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.166798368 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110540892 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088228032 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115848861 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087001475 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108861653 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084751399 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113816253 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090472121 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112133991 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086704591 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.107688751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086678385 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111905203 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086011916 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111754486 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087213385 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.164575401 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114578814 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111790319 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088388402 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113511208 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089967674 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114443534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094953481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108855312 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089037791 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108035871 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.092430952 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117258233 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10728452 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.092313867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107563439 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088553089 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107124085 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088205021 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111565717 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08654396 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.108533776 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090162287 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108550214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089519526 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106368882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08803698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105709103 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094679484 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110314489 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089710828 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107419232 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113640797 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091866382 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11861376 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.096304443 seconds)
  done (took 6.55509732 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100426989 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109013247 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101071301 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105883211 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087714656 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110772737 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088598685 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111373919 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089485567 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104272166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090621116 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109808215 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090320079 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108850116 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109926098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08879665 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10486512 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0895286 seconds)
  done (took 2.649222659 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092138716 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107925297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093112357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108229153 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087216492 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107728352 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085415368 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104650056 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085562237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10833237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087064933 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107914783 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085670467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.107419254 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087724334 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108014544 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.087726666 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105381643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086754728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106118936 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086766039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106271628 seconds)
  done (took 2.992583665 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103222594 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.166209287 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119558789 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18003854 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108644375 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086072867 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119495773 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.086809892 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129836462 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.08655881 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106543117 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107472358 seconds)
  done (took 2.246070875 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114741321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14745058 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088261663 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107830551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121354257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093448358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114935594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093250514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126034501 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130748271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114239693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104861395 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125321714 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12831908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099808676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119706509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114758811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094614629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110772285 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138578109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094244987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126382455 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114541677 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093704287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115201899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127920355 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105775143 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130693674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115587868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104147923 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121024032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115579521 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10433617 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130410847 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108996985 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126716329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094325419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138602379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122403704 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107431974 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109525029 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121294394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106692359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124489867 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126489578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094065193 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12266821 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114749963 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094445895 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145209553 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122407222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12880344 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100560436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125285038 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12830305 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145871678 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131499534 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107149816 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121423112 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132022769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128309273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101583928 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128488428 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131788675 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121278264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106989873 seconds)
  done (took 8.557794047 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132985169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111014758 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115257212 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109963331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128312744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115168677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09427144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115606256 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094827619 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110427728 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165705548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11547024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110771733 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12883738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115587743 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115262266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128981957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089951658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146222743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115501118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128578795 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107479212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127448036 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132335844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121442497 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095232876 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115620869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094624965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116597656 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124560358 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094999017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128447323 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110951596 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108761286 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116439027 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116273853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102884527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115933988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122340858 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107896561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137603725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116322622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094698282 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131873858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11673651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095528122 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111970513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117058817 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091312315 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132782427 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132549781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131805101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108196427 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116394289 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116389353 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09562187 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116884326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094400772 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121583212 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129758722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095309932 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146367464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115993937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116739226 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108662162 seconds)
  done (took 8.494484886 seconds)
done (took 155.615230341 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.128285987 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.170513372 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147922792 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169626607 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081250442 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139113826 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116061671 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148113817 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103425673 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081663938 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104258373 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085872537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172817761 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082560287 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103222041 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086717017 seconds)
  done (took 2.773453505 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183601395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337956693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122623632 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.091052502 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114238274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.085845327 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112399994 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114832023 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.0867409 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118534752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085517575 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107396196 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118549357 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085761564 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108231285 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.085110642 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118572665 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084392643 seconds)
  done (took 3.026580079 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11049227 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150010374 seconds)
  done (took 1.123853959 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120960731 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189893381 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318575581 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156008094 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112667152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130306626 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158776346 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122048571 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196399331 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10538559 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127865172 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110938787 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114601106 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118031069 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.122675344 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088455326 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140349995 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.099051398 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11975059 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113470333 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.110143887 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115282823 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095439344 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120549483 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186072477 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128102729 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093811871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115145442 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112862214 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098616782 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112983843 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108536618 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127026627 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197077016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09378293 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.192281966 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099708214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110787986 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09825191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111139234 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115199888 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.093870043 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130286252 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088137037 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11446575 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121465079 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093643492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11543919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093493985 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122613688 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116136752 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091445779 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.192589128 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101513187 seconds)
  done (took 7.642292281 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.813065162 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152783388 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08787627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.965506817 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139012905 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126058445 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.812639267 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110610013 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.270851638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.817900007 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12678078 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123500567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250689493 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.266983947 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175493985 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362629884 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691932296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125624285 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118171369 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159950771 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121567515 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139418698 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134162053 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427673812 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090061148 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110217894 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119095182 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101358984 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17134643 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110181429 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119557221 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196636643 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.276355042 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227600273 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110643288 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087343772 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108702659 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.178186026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295135192 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240937503 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178390951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08468547 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1078557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097387947 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133471171 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105803354 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176064274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184667183 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.207401126 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094154627 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123450292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122303898 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096253147 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172073094 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107263296 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363054714 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365773369 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108007668 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099935074 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126050802 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.287782316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08819532 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24799903 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139530767 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.23451844 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087622103 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837758022 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.199838507 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088120904 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117012544 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097890748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118078756 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117961625 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175152981 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.385176689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101193627 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116306083 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087369773 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245217439 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087075311 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108947269 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177654454 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111656235 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098306175 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125076351 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12222192 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.183614293 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260330095 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122761574 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120871228 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094793048 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124617847 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111138341 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224423429 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23921737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171147259 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226880171 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120161035 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176758867 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.201092695 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095993662 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.205355209 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098044968 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126506682 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118469269 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236724545 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14896924 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089335451 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11575734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09997485 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151803238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112116144 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099244944 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.20267057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.467972917 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199134417 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084500048 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113391368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100770334 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173698284 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120181425 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285500282 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122061697 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.179287325 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119012397 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085199393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120834874 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17820867 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120321559 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099969757 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119540838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123813737 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.264878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244367813 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101532142 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258923525 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182617073 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117277303 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188010728 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121759965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184035118 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122075749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097547643 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112350543 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820008336 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125856083 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09855246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116226449 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200565096 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087498715 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111423434 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087596946 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106062831 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826532405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091016577 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084942041 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.111561731 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117598121 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099222164 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120143302 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094793337 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196441929 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256720765 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125314019 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098638224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10904444 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.173759034 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090228016 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110563954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087151418 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110809957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121367673 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094447654 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1108299 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187342027 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170737622 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.243911281 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543152651 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109605387 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089085967 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254848011 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08629078 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330425051 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121139421 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.246597426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180193077 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107497532 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361848021 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182467062 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20100696 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11313133 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.184492331 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106986736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099609334 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.195511365 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088102089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12018803 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171336552 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126275787 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102116179 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.185003369 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110498293 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243225735 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107136103 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.181726812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090750041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119313554 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337035665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109230633 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106851217 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196653511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095104978 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110000393 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.632377242 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110479834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100883511 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119320096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.245959035 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179377268 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122207737 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122256087 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102632308 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.197146548 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.224289168 seconds)
  done (took 45.548108921 seconds)
done (took 60.976993447 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307903413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277653275 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.337742261 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204977078 seconds)
  done (took 2.094318896 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.233250896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157488998 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.188650198 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108044547 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.197699996 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085217435 seconds)
  done (took 1.860141578 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.521840113 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.403296681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.364867583 seconds)
  done (took 2.18327531 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27101719 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293089265 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335031083 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.48305199 seconds)
  done (took 2.379698948 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258517781 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138856061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.103322053 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.181181179 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.241397524 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.188824668 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150342773 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.161811707 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133374784 seconds)
  done (took 2.493011676 seconds)
done (took 11.901245308 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136487467 seconds)
    (2/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.370658843 seconds)
    (3/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.360985139 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.348944049 seconds)
    (5/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.171447926 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.329915878 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170723199 seconds)
    (8/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.176705517 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093688719 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.368177026 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.172924086 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.308022075 seconds)
    (13/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.252419927 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.128384698 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.205058888 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.219857688 seconds)
    (17/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.240539993 seconds)
    (18/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.192720481 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.103396369 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.198989912 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.152374085 seconds)
    (22/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.247897851 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117770361 seconds)
    (24/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.157857829 seconds)
    (25/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.112024957 seconds)
    (26/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.256406095 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158492901 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116937606 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092388367 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158007317 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156230818 seconds)
    (32/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22577501 seconds)
    (33/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.151158332 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119347427 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.240617277 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237335707 seconds)
    (37/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.289275691 seconds)
    (38/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.182181926 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127170876 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106780084 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120498932 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195550678 seconds)
    (43/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094966147 seconds)
    (44/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.182149185 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.22614862 seconds)
    (46/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099731136 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203473021 seconds)
    (48/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078671737 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104615913 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08745089 seconds)
    (51/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116924147 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.20442841 seconds)
    (53/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.265202994 seconds)
    (54/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119811624 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080818203 seconds)
    (56/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.229120278 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.207520287 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.150929329 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.20593208 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.157249501 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119448028 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.161732497 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.159407007 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118164106 seconds)
    (65/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.206376444 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112246565 seconds)
    (67/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.103782774 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078809771 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078349425 seconds)
    (70/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.18385124 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080652107 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118871215 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092423033 seconds)
    (74/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.22311462 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135027377 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095036644 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226059623 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.158514592 seconds)
    (79/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103481287 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.104313833 seconds)
    (81/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079736478 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118087021 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096867702 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111841306 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09532552 seconds)
    (86/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.107830289 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095597679 seconds)
    (88/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.102165349 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078747758 seconds)
    (90/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.245331887 seconds)
    (91/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079086427 seconds)
    (92/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.243217913 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126401367 seconds)
    (94/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152479169 seconds)
    (95/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118233633 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079524838 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.123586087 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205771242 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.140854147 seconds)
    (100/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11733554 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08077138 seconds)
    (102/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119454049 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097290719 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.229129949 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102828254 seconds)
    (106/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079644631 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103108612 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.158383148 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117573541 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079889139 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079310404 seconds)
    (112/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.103255434 seconds)
    (113/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096231567 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111556051 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079638735 seconds)
    (116/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.113614564 seconds)
    (117/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080454807 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.181199219 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080869559 seconds)
    (120/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095387542 seconds)
    (121/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102527328 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091529734 seconds)
    (123/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117196396 seconds)
    (124/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086378815 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.116588544 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094245605 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.138930423 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113791774 seconds)
    (129/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.10306988 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078612984 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128898134 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096884903 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.177498717 seconds)
    (134/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.16518073 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079987942 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081006479 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118632688 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.224603078 seconds)
    (139/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079038586 seconds)
    (140/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118934335 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.0796781 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.109417783 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088500592 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.223761625 seconds)
    (145/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081074514 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187153494 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120218121 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099167317 seconds)
    (149/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.206857686 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104767168 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089003242 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081758386 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.106976071 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080455304 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119214122 seconds)
    (156/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091449759 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119996038 seconds)
    (158/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093620602 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103752464 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088766704 seconds)
    (161/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109697689 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096121512 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117563009 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080177584 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119893295 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114280506 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.20848911 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081500489 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119513898 seconds)
    (170/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079396675 seconds)
    (171/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.114150202 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096417967 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.105051387 seconds)
    (174/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079880513 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081214496 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118717964 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088693058 seconds)
    (178/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.108655059 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093772299 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116820129 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088549158 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137144942 seconds)
    (183/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079077966 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120242072 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080530777 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104843594 seconds)
    (187/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080482034 seconds)
    (188/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079677122 seconds)
    (189/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.10255398 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079720025 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121114124 seconds)
    (192/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079262292 seconds)
  done (took 27.518132028 seconds)
done (took 28.416782459 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223677175 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103815842 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122062099 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097592281 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.181120922 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125490249 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.132100516 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10048946 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127697273 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094936244 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.111827126 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104561423 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121803706 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.181466072 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.101049723 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115061431 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089855536 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.127973939 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131237318 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108070049 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.180269478 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116032661 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104349945 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.114511341 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179913636 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091597118 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121888573 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098416053 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.130194797 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09653743 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121412819 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091584693 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130847469 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106950398 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113352557 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09565165 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111974828 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08821389 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118945627 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096351054 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128975628 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119342233 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.099146731 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.1154415 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096570161 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118425538 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088758686 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126033278 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088499786 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121353003 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091716814 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132718728 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095240878 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11162831 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089579895 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114212817 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127458522 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088994321 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12917509 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08775743 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114859437 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089143616 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122062474 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089012918 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118288418 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.089682258 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11910186 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098889433 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11784801 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091881504 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111919663 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095299088 seconds)
done (took 9.180251122 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095126714 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176437425 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.180831145 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.187731735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146693602 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133160154 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.111485863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144033547 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107553576 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140389052 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148397569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142498137 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.192207646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103750385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133245151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097070131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128042459 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.123835575 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188550903 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.115301173 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149161139 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127142389 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1259013 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133654138 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121279819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12922915 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121920221 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12190375 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097848036 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128672633 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115310293 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122076354 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121433084 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111482259 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131733915 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103064748 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134097898 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121541953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095508203 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119463209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110323071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130533555 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096285228 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.134076147 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120652961 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107311024 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128057817 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103715714 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124446332 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122704587 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100869902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149790191 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.104716959 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131848905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127202182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10267408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126742325 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103298582 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122201283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.103011146 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119552149 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121951129 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099686555 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146896391 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121957395 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104411129 seconds)
  done (took 9.22694426 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116962496 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155197343 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131205419 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107098872 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126542239 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.086963394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110773733 seconds)
  done (took 1.784087506 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087371304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184814757 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183339428 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185039669 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180751369 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.193876883 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134810975 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08897979 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148897862 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1253267 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184181718 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214628256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095391561 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131941456 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186849675 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.113215505 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187014579 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088267843 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124921306 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183765165 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103846509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142935625 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.12904456 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088902716 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.17863762 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090728096 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264621232 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105467118 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119262155 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099420674 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125631879 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.199038775 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177541638 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129400094 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093827827 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182075742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178091913 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126614179 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.193877072 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092928722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.179111734 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.125472541 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126867683 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.103076883 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124874542 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.164916723 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.105728155 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127888234 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099330226 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186491026 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126560251 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181806203 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098142141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125080691 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.125985735 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102674759 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132306171 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.10082306 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183942994 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128644311 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180483027 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.181016589 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.179290652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180243239 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111671098 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.180444542 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178584003 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12350579 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.342295269 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126154088 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181951037 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124426908 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.102983409 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168215577 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129646164 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.180798581 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.179340809 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098368097 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127805624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.093948192 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122812752 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089348286 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.167705653 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124505018 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097189332 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134923627 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103886026 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.127578519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.118979028 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115293448 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124591155 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.103167291 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130767019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123850543 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1068123 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.183668877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12730133 seconds)
  done (took 14.715469976 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09346947 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114367698 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096016343 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116087896 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091011363 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115599815 seconds)
  done (took 1.592075996 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120161776 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127410553 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113098903 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126966656 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183748102 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.188549299 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.189836222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123557161 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.119360712 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136891617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.187421393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191906588 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.189012154 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.106113738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215937318 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105967895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.188034249 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125696055 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111477012 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125131292 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10902367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.1307902 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123201254 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.1772086 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105082131 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129692187 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101493963 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136845172 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.13529044 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.099585664 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130736821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103859006 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119975089 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123716181 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.189123985 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095037058 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123078178 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.107405362 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129951812 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129711858 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191109899 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099097688 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136044314 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10708784 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124314579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119460262 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.108583204 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126446661 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.189205958 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108925601 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133131146 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128696899 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10531777 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133550801 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096408792 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123812169 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133465871 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.189344563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1065974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121106844 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103977536 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129938012 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123967702 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.107890922 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129318096 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.108100585 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120237996 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128478682 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099003429 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128831571 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.108401091 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.128830134 seconds)
  done (took 10.440015801 seconds)
done (took 38.702661043 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.137027965 seconds)
  done (took 2.101557665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.903337266 seconds)
  done (took 1.869650248 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.809142939 seconds)
  done (took 18.809080799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.551378954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.629602102 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.124985431 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163348856 seconds)
  done (took 3.436769392 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.987122731 seconds)
  done (took 1.975250114 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.338881954 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.251354351 seconds)
  done (took 1.564326598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714614474 seconds)
  done (took 1.696489401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.570200795 seconds)
  done (took 2.54209802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.370784311 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191861665 seconds)
  done (took 1.549432187 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.662973475 seconds)
  done (took 1.642680707 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.298262972 seconds)
  done (took 18.286394352 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21312881 seconds)
  done (took 1.207310134 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.313263662 seconds)
  done (took 1.302877194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.582066837 seconds)
  done (took 4.567808026 seconds)
done (took 63.524937002 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101101642 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129945683 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104385637 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127696392 seconds)
  done (took 1.443336216 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107077998 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125879081 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105640562 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125275232 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107847764 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126925275 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102233376 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130340724 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12606299 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102922966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127175049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099510429 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129263996 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100738408 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123227029 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103614243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130917073 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101767792 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12803438 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126743023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101821784 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127958058 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104668223 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129865998 seconds)
  done (took 3.784509055 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099584815 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119259757 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096472251 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11825907 seconds)
  done (took 1.424902872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110388007 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140740049 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114165041 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134197725 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140975356 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113564097 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124367208 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096685753 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124802373 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110774693 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.14365738 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139931496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113758465 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.129420112 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112844924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119725911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103091463 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142314961 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.136493444 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.111216038 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128774973 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108966952 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132249687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110278412 seconds)
  done (took 3.934232513 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.180433968 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.14077168 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.15050622 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174799244 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.132142589 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.124595666 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152968802 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.10708523 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.133209106 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.103510836 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.129646138 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.17664083 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108564571 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126767917 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.127546812 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106471944 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.138817584 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133247252 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.146662053 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.132251917 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133768236 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.115361436 seconds)
  done (took 3.976222218 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107617069 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120469858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090580004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119708862 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10828926 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123177331 seconds)
  done (took 1.669914115 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100310851 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113168817 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093787278 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.090343326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.119302544 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087580194 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11245095 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.089241514 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.114026749 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.088458909 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.115398255 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087570571 seconds)
  done (took 2.207598461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.286058561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118471305 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122132158 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093339796 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127109224 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092957558 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137244039 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092953096 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.259826809 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089289803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136510802 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196787887 seconds)
  done (took 2.753936162 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220527442 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102269467 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321288571 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403273001 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167094241 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176239238 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286657286 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176902161 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201598188 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148577309 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207263611 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165589047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137796474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192673919 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147596392 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.19412778 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187148595 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214992108 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158072316 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219304655 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174103614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180260387 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193169606 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160419169 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117925355 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160386545 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.128049816 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109505281 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209274317 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179131242 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186030122 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155774341 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12389178 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239325063 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198876857 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190927602 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323885258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137644797 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203064578 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19540787 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262780341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148340058 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209211318 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164767292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135407386 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195462786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164525396 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.19609394 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113349832 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149781391 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194667518 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186516382 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194482778 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144136526 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334066381 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130770686 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157231882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192265952 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198494691 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202390162 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180298826 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129488619 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199916787 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194264802 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189966473 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155718198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181287399 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133799144 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18471852 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208774356 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195394884 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17522259 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.196271582 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136914495 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17110742 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180081396 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162701882 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190243664 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145459763 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127649967 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159581431 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117403343 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133636902 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200810073 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1023723 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242827306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116508812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.382808249 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220297271 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167368937 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171822005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173758011 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174959908 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155566968 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102666143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155422023 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.170173778 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166983083 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144770912 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139457408 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150306734 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141146633 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161720964 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102728259 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172912143 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159392988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177105071 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173168065 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111903907 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177781178 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15942818 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165138968 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182305884 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197156007 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110848326 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140387081 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199407616 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16773055 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142594679 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186262135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200767263 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174045141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117954108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174245281 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205282585 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151263984 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200993739 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144234755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113891779 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165690865 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173208044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167003811 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16297068 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107508847 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163307895 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207957202 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134438951 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144167823 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182869732 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11659054 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133950949 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148662228 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116220155 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1512528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155834258 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119253523 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165651144 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172748903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166564115 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168395068 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143819735 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184734881 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111987477 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171445942 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156120286 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099190841 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193955547 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224518222 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109051252 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209993547 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180215813 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239343208 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172359782 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112854483 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188669234 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134946336 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100333055 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171914135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169717936 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173297088 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197610027 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23481736 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182147712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165856037 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130116088 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178376051 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186239098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166759818 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153402279 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169456803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181422524 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100528047 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.134088964 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136649893 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122995272 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13741724 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112503827 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219635844 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174871464 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204971217 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1703289 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149547081 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193843818 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.111277753 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174860696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.186662524 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147253634 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200415375 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193221252 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18214209 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151388642 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171313918 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101278342 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132410073 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116655389 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177802463 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140225808 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141386646 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124631728 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1953396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184756948 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158688362 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245052169 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179177816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206483601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101076563 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174149329 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181103716 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168569713 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193951563 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121452333 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170547426 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188835697 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145783149 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203128778 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16903758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176657766 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210690154 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167722583 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137203673 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130216037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175485795 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148623611 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17430412 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155239417 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110485507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163450106 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144783867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107262235 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220333762 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125275538 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190368784 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.165992045 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184941167 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133363381 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151925307 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173118412 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1269895 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.128673597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183736813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200652213 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153556796 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16817608 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185493272 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109301929 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344158486 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226440744 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196963651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114035856 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151344995 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174562572 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170323101 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17425546 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190956408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123798941 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191758407 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172567376 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.151535051 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138351023 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128426961 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159888294 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165679075 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143117713 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14240512 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.151896649 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195963893 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151266026 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171519966 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172960794 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128654249 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.165891394 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150985032 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209419674 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169227555 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191457671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166756021 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178217935 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213268047 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101874223 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13866786 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.143643059 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190818287 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111688042 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173164173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196981517 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241667192 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173710879 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175951375 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118334262 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134847562 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167702243 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130063654 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241612735 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143700625 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1208971 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20279788 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163271478 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136879089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17373545 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298081407 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128566301 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182980748 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.139071839 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290174588 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134500746 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111999005 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1704821 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182325901 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144206714 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167717901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168517019 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152669179 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170364379 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145870025 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204760651 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22454124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176545487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187160606 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152338758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167195077 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173773284 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187169598 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150932917 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128027498 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172043499 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195923308 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197327944 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143923741 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170909171 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171124466 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13986285 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212176719 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114561308 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210843786 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13993386 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17285241 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147499671 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105880326 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16971916 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197341006 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141106486 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187004088 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170853189 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113139945 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136517692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155314682 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168443241 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116908954 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138127799 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192821342 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135969177 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146748227 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193847584 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137875039 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166644746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126523961 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140596503 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151131821 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152938926 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112117132 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176518437 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19418941 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113051425 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213867956 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174686224 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147235688 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169278205 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152913024 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.674529415 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108729866 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194086545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157470754 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198310618 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159365171 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175727266 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169445372 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131976445 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173216601 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160431972 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238641728 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172551951 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.172779812 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110717954 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153386711 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150315212 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.113923863 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160472034 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171746368 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149838092 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119720955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170826982 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154519102 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153820494 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119068891 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196199672 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158598873 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195009874 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192674519 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145106918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17465302 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187783089 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140489237 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.174365428 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182974052 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121333159 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157290936 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140645863 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120435081 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19438115 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130835966 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143568994 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173579705 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170612323 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172074575 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145898713 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175481752 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122629951 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172818263 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136659979 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165448818 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141411018 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141043628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136354271 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140307939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169292912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166842402 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135640081 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152061074 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19041353 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.130953195 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113244525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322293053 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142650711 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231168133 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137370151 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142921324 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151790504 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137887831 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169806636 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172150747 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138440314 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110817392 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142739241 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193093457 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167785928 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140833226 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196886099 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171784736 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212835026 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155103595 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280949959 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147451442 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140443547 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141032562 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139771039 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122871204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142159677 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146215613 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206766598 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190473732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162624918 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124966255 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136994236 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1044697 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141030377 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172539563 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163715773 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142342077 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153959563 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129405327 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125054783 seconds)
  done (took 81.384875261 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153129746 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142376669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154039267 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204412905 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173060297 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265365515 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212344644 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236161587 seconds)
  done (took 2.632431201 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103887325 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139639447 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145318374 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128743828 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129047377 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.41268599 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140673753 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.102402447 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.186577897 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141007555 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.125119899 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.614863006 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12708165 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.127377855 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122402088 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.10212649 seconds)
  done (took 3.927751209 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.463299339 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558600324 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.147286758 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.239765527 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236474272 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182573322 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.765173753 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.173152608 seconds)
  done (took 12.856171672 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132722882 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149266976 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.29362219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.252270973 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1389714 seconds)
  done (took 2.059466733 seconds)
done (took 125.039200958 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104917633 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133036196 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106266984 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135059316 seconds)
  done (took 1.558750989 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.154358309 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117522507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093062756 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08787778 seconds)
  done (took 1.542579536 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.500787143 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118521625 seconds)
  done (took 1.741436826 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129327788 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153674441 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125520762 seconds)
  done (took 1.502405496 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116047989 seconds)
  done (took 1.213655254 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112392894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127342873 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.167790295 seconds)
  done (took 1.503656363 seconds)
done (took 10.161045813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105275799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.437620921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392478665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14671657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729686516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382011453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045063126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16432391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.216324826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093113517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145264871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671603993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035538182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372853286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987767238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370229441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675387597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120790676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103703156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123304031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.992463313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121576265 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094974104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121413418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674622814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449221391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093038552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3840542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121222912 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102115128 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408655493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094202049 seconds)
  done (took 17.060240132 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102675913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193609835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105826915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124195889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102060929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123960358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133670328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110349632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202358718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121549177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117942485 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122685041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099442508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122478362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119168796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122171599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094812134 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122671434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104499029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12574347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145142918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094117441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1234288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095331345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121526156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127068117 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121878085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109457044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121494473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101792454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124276178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095245655 seconds)
  done (took 4.955936276 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145486512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.205356363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13570651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131550285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182486666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124102069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216341221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166407401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205536656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094936643 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147274558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093749943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169772748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094263356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14946847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121550919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096477089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122000521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105277238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123822572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11740845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122000714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096191682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12217552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09492875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157176993 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093626879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139045752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121378607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102962526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124984126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095707088 seconds)
  done (took 5.324543807 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106656737 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133577387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120429594 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148097487 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101418503 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132849727 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107001937 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128257695 seconds)
  done (took 2.085487058 seconds)
done (took 30.526348168 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121657311 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141958259 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115079497 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135992798 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.182588586 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098164892 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.111121993 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.126855878 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107792359 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145643692 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094404056 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.128488053 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.113709515 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.133229315 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185446753 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107951952 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190330433 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187250563 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129290616 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109173943 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128754555 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.19093382 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10640925 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.128879063 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.166473097 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128004179 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.18003017 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103955882 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13292449 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102816915 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185111367 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134538242 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100279432 seconds)
  done (took 5.551146771 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.165119451 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.132071805 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099943047 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128871659 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.101398716 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128281304 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197439742 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099103819 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127780096 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099573644 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127731533 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.161828825 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.135968123 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.094673699 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.133233206 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.101419593 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.1971019 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.131014216 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.095364036 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119192443 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.096236871 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098977793 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.206462992 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.125006448 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099842404 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.129424394 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.103603314 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.134234746 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.102836277 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.130281569 seconds)
  done (took 4.918954663 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107829371 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147327657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125631336 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201057046 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161509211 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.112018129 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.156310994 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116245261 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158195338 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.095947668 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142223372 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159297053 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115854412 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13785342 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100948108 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142885275 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118144037 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125611895 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104553148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144728845 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146933463 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.113399678 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.155900474 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.105347176 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.124285054 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103880699 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135627214 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112632755 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137375999 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.120354723 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131352336 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099700901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128647886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.166497669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101703948 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13500428 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121220314 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138691375 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.110486963 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.155152637 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130312795 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.107139604 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.153855988 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157002763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.127803267 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.108321463 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.139496902 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.112861347 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126922245 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114937707 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.180052376 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.124151179 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.115130069 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.128466888 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097022042 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13821119 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097945421 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129497786 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.116973954 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129802807 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.118454781 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.133228786 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109040458 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12818238 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.108287551 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125613959 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095277385 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129341269 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12651969 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136993071 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165178823 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097374771 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135181033 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110195715 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135158021 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109729984 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124589867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108233862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136034234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10321044 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140878754 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10082022 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129548811 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113722761 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143576478 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.106795261 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.178019149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135967293 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100745056 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127124779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114680269 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127705686 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101692286 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.145624155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096631657 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129761917 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108015111 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134505051 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094757156 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15085283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102494665 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125022624 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12169826 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.138618144 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131361003 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106274754 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.177795111 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095829909 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.134464343 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.107333525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125750379 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.103897094 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130357806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095605414 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142030105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.112040446 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.13360153 seconds)
  done (took 15.872260162 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.287524573 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.309362145 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209772452 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.368857347 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.113120927 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.235459392 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.277590946 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.276557869 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134055699 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171760436 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193520061 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.2486041 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128205448 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.126792541 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313658395 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.373137843 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159140995 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174713427 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171796526 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.113499516 seconds)
  done (took 5.509156476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120158218 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167578028 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.153285126 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128635067 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.134269075 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110112988 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126740345 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150847848 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105491649 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137041221 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101829776 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141108843 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10584925 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138741323 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116460603 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.175430658 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135861867 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104040138 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.152102374 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.103290132 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137019699 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158349729 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.108095528 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.150596343 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111558682 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138195903 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096063641 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.133155571 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100370165 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130030784 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101841514 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146976323 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.132781224 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104033683 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137051412 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110135849 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127896556 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099846803 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130801476 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100874425 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.14160746 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106360786 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128985306 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095949943 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140666369 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10064464 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.109076589 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134591976 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139280496 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111379363 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134306248 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108554462 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131438045 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.117413638 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.127944075 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.114130183 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.138631387 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.108541059 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132941624 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095765493 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124178627 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100710945 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130498947 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108162383 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135751844 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149496269 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111244804 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125867293 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.103838967 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13111741 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101344328 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142754583 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15239984 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1025555 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.099900716 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140667518 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101011654 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120632134 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107315892 seconds)
  done (took 10.912701607 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125922838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131590983 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117387932 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164441803 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107014168 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13404579 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102653911 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.147686721 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.110135011 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.138233222 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108947322 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143428417 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.1517739 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108560537 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131033774 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11699856 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136514301 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.137942182 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14659558 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158370416 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.109121652 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133264657 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.11025494 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.138892151 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.159180466 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.109893084 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.158575495 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.107349015 seconds)
  done (took 4.789598918 seconds)
done (took 48.65760773 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.238188011 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.436157244 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.198942065 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.198525467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.219788132 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.206929856 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201345268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.203255761 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.220594475 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.190865237 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.200427373 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.196636393 seconds)
done (took 27.842460381 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.269805745 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.736538326 seconds)
    (2/2) benchmarking "String"...
    done (took 1.467398356 seconds)
  done (took 4.328243125 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.203764626 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.194322312 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.413201306 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.194565653 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.211799166 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.210699832 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.197455755 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.198363366 seconds)
  done (took 15.746349147 seconds)
done (took 25.678520018 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.244332074 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.394669667 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.444188561 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.214927585 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.221394504 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.204898089 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.197497089 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.223907678 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.208473597 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.210007629 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.595302705 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45656053 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214300928 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.583187259 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.198234815 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.216299274 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.214478115 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443080576 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.198303618 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.242275401 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.188781325 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.215103473 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.202552286 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.208584806 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.202734331 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.213858997 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.254445246 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.209354862 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.387196586 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.219206804 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.242011486 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.199099484 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249763827 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.199469256 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.198550867 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.205611605 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.391937317 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.205046385 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.192986841 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.211183912 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.398303477 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.213970084 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.206667335 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.211904505 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.206828231 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.238108862 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.196571499 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.306205988 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.220816185 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.208709466 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.258951527 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.58942831 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.202386993 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.207923735 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229195278 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.419144139 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.212057574 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.256469261 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.224922231 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.208396478 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.222670778 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.208569214 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.260510763 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.218377269 seconds)
  done (took 143.778616309 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.196986162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.204185815 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.203411692 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.222683881 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.203581361 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.205394296 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.19912438 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.199388719 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.204266001 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.228384302 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.203733619 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.20195614 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.203024021 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.147183654 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205321748 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.221787688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.205580017 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.20422495 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.204938161 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.198552653 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.20477517 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.204397721 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.216362806 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.200022183 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.23964047 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.298174684 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.243008295 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.229396183 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.208225175 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.199782536 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.248236645 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.225830221 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.808562425 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071394004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.20035911 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.22168811 seconds)
  done (took 80.212151272 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199553248 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200606875 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198705121 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233554885 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200996964 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.763697487 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776389269 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.916975154 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.575383162 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.558940143 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.453396261 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202192814 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296049384 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215148349 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207728581 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217909916 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229308809 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201427851 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202302795 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779210615 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217814041 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.435681242 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382067445 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.219430568 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234072662 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607724316 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202372771 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234340422 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533966722 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253111841 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202512163 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.556248785 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.382860145 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20105136 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314364964 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204111552 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2344318 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20235201 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482388054 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203517149 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203128783 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207316295 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.857273744 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202283412 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.764786577 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203007714 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.14565646 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.202476494 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20141938 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.159992993 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.812350769 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220935376 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204012031 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205004732 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204517831 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203793693 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235678034 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.162701793 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300427913 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205887972 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.2078365 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235271059 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205391399 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372030511 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206126941 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.541141037 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.280009827 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320116453 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784003783 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209785673 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301117657 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325114865 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204556667 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203518322 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20511006 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204180855 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314281413 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203678195 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.61957348 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378871333 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223282825 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.569809859 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306707905 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205898233 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577203013 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207347764 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203930129 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942568967 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20667186 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301786117 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.205205414 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204500063 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205869121 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204939955 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62283919 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783517164 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.464320028 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208734565 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.36175205 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209351977 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.629663574 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763750914 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.850021762 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207799456 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31914755 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.382416434 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225289392 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205810861 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.2076139 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205822276 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.579922386 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21064011 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264601755 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613017297 seconds)
  done (took 367.177414441 seconds)
done (took 592.29888695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.097265898 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.06171107 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.193548284 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.080898104 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.04648392 seconds)
  done (took 11.615916364 seconds)
done (took 12.753898766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400084609 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403854818 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272302378 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402188648 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24504865 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41666938 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389581967 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230727717 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318809203 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.286660646 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315388102 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258678113 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240109221 seconds)
  done (took 18.315117383 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478139014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213188815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275716345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451726854 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251677647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4706682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510401218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.21335656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.359769814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226188707 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224062997 seconds)
  done (took 17.812769392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476545922 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.214184121 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283033236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488839328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255787022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481926943 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516656632 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.212993329 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373151949 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22616711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225297179 seconds)
  done (took 17.891545662 seconds)
done (took 55.158610576 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252110529 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377779331 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241511939 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227400642 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222018208 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224275524 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228539047 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223113071 seconds)
  done (took 11.13424462 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219438913 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219785238 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218951231 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220428241 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220203569 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22070529 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219203279 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221712094 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220824853 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221446349 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221548457 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220620531 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22056231 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220210263 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222578383 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.221747677 seconds)
  done (took 20.668066279 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223146329 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.222098574 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220675263 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22149196 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220709211 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221896304 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220397429 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220298659 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220312889 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220484404 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221783547 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219578823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222137098 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22101672 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220711196 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220573551 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221254907 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220528632 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223918199 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221785858 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221738541 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219630388 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222147644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222702682 seconds)
  done (took 30.450497561 seconds)
done (took 63.393521784 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.211958392 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.235201791 seconds)
  done (took 5.5868946 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.284390802 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285324435 seconds)
  done (took 3.711781118 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22361816 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222693483 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223623182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222833515 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222096527 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221130295 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225089152 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222524047 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223324423 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224197334 seconds)
  done (took 13.371651856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223525753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22454829 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224214389 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.223561968 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223906662 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223693811 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224455383 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22248638 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223503766 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223480232 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223369286 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223815708 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223642384 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222662123 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223814173 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222719234 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224365413 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224441737 seconds)
  done (took 23.167425449 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.236279094 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.245792306 seconds)
  done (took 3.623455416 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.36374871 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263722645 seconds)
    (3/7) benchmarking "month"...
    done (took 1.341280375 seconds)
    (4/7) benchmarking "year"...
    done (took 1.331932067 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.266088286 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244242792 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.266991402 seconds)
  done (took 10.218280555 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225771469 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.427686878 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.540703444 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.797469313 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226523162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227433979 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.048525081 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226500819 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230651198 seconds)
  done (took 14.091690028 seconds)
done (took 74.912114802 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.225769424 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.259326244 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.247546759 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.2550043 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.568467592 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.244724221 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.230486888 seconds)
done (took 16.175468351 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.216738849 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.211484075 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.215290532 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226694428 seconds)
  done (took 10.012634946 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.219951259 seconds)
    (2/2) benchmarking "read"...
    done (took 1.506873315 seconds)
  done (took 4.869415761 seconds)
done (took 16.026721956 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228171155 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22622613 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22621249 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227635838 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.225903236 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.225887722 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.227308325 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225839493 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227821479 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22791708 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227096458 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.227183136 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.227124532 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226593632 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228097025 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225976435 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226879151 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228250288 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227359734 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225909117 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228048707 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225522373 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227497066 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22594327 seconds)
  done (took 30.589984092 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229164118 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226786993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.2288656 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227261824 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226937891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22760604 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227295518 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227604872 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226571244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227346376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227257563 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227064066 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229306712 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228886025 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227750682 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22841798 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.22758973 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227450471 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228004183 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227161997 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.228318004 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228503458 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228678197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228121021 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228808485 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226809764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229317369 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229207973 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229185635 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22847995 seconds)
  done (took 37.983917393 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23399911 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233407789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229359982 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228020358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.228952592 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230597335 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230102661 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229646775 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2299429 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.229618865 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22946424 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229994643 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228703888 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230032079 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228715592 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228893593 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.229942848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229194408 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229083121 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228752292 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230502255 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231308035 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23011957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232084027 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.229457205 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230423845 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231078161 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230183763 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229289301 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229672125 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23036892 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229555707 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229941749 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229522905 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229990262 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230278145 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233807416 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.235350752 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231581985 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230793362 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229731227 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231678743 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232985111 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23224085 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23060441 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.231029229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230914574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231790554 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230303649 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230823919 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.232139011 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231875121 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232098859 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232020165 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232900888 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.232654612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234625716 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232175437 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232804135 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232337218 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233488069 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233939067 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231631856 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233168269 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233340501 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234169789 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232833318 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233798265 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23411816 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233291509 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234212066 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.233387327 seconds)
  done (took 89.799453897 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.232983275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234359783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233521666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235750949 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23390805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234315795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23625637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234077008 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235445649 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23452126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235569499 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234927609 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234782775 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234804745 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234294001 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234398648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235226231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233822527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.233961067 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234851011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234881421 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234212743 seconds)
  done (took 28.309740482 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235725294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234837911 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235052143 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236873141 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238372537 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235618139 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233725712 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234851792 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235176127 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23563267 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233899005 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233893503 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237450905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236095998 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235289712 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237146759 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236990361 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237837696 seconds)
  done (took 23.394559737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236172115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235788975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235781955 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235877336 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235150884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23644256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236391658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234776125 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235755933 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235147525 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236227815 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236312353 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236229614 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236993996 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237581099 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237260262 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235377401 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242671445 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237493985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23711462 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238200315 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238119901 seconds)
  done (took 28.357552412 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237833102 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236536661 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.238110826 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237536724 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237544783 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238085421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237270357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236565066 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237626676 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237493127 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236753291 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23766591 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241970029 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237267422 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237160843 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238462949 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238755518 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237602986 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237117154 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238326262 seconds)
  done (took 25.907745141 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239359807 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239229836 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240320618 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239801737 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239957041 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240722833 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241339979 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240656715 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240735039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241712764 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24139611 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241812106 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240247522 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240126723 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242780687 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239283158 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241202904 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240188167 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242136671 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241563781 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241599528 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241905939 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241945183 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242423807 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242479947 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241412935 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243055312 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242755274 seconds)
  done (took 35.90615652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238883406 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240562862 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240271665 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240855355 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.242430098 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240913997 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242301726 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.242482728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241826441 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241485385 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241254175 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239517194 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240084896 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239806361 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241589426 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.24070396 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240872378 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241858366 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241700106 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240190056 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241008363 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242603583 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241849737 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242042177 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241263325 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240923182 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240993746 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242826955 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241309351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241108133 seconds)
  done (took 38.391820793 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.289269539 seconds)
    (2/2) benchmarking "in"...
    done (took 1.293691045 seconds)
  done (took 3.739657896 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.241832401 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243214933 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242139884 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243197248 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242459615 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242813984 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242039016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242661423 seconds)
  done (took 11.096714075 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241279699 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244034237 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242050937 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243076753 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244007941 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240066636 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248020185 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249185075 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240045727 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243029503 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245837848 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246476727 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.24413028 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243781357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.241272277 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24481603 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.24621955 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244943456 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.245651161 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243786511 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246097318 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242583837 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247362458 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.248525665 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241175218 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250283997 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.249740476 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.247323622 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241194872 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245288165 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243881768 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246705056 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245657685 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246202695 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.246378157 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246099729 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253327307 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265320025 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250124572 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250458729 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247409358 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245738361 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242709522 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245834668 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245249885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250068905 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.24590723 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244858827 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.242792653 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245432103 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24982363 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240847258 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248099353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245680401 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.246636595 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252170247 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254143896 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245495067 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24937878 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252524885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.260613793 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.257133917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247314516 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250629447 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253035147 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262932306 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25417847 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251813729 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.247694038 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24712059 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253332805 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261409271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261981865 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251280475 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248318563 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249461167 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245435092 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249533828 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25338028 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.253430629 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252211224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249951001 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251776372 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26231522 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.246827878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251556521 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248948834 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249536722 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.246507558 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255711083 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256072714 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247589729 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242295185 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245806934 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24662432 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250731398 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245599707 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246085321 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25044136 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251380357 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250735466 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248982175 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254398515 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251811828 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249855285 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25323007 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.253645029 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244271515 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253990758 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.253236338 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250171091 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24624537 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250788911 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.251644739 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247800934 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252922828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253351114 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248242555 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251547192 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250014776 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25539507 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.2676878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254267254 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250382328 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251882646 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.259065845 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250617997 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252058829 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.253428027 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250937474 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250270939 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249728579 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.253763357 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248952493 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255953477 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249291081 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252348443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251972536 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252593436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249090078 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252226087 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250276647 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.251630819 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254136145 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2546286 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251066852 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.257904881 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.252178428 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251606902 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252071306 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253075433 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251692575 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248467268 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254734824 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.249121382 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253827847 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248926844 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254714133 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252333021 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253051288 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250435255 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248784 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253756353 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255759473 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25324545 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.251859358 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254758651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253858963 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253266903 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.250533834 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255113025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.249722305 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252818142 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260599358 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254302477 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25379275 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253002201 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256293037 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254869441 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256600394 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253617438 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256670865 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.256061481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258240583 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258401411 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255646276 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254718372 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251540716 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.251503959 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25570366 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.253674434 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260292362 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263607137 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26634736 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252968096 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257300473 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251178755 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257771492 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255751708 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259076506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255443085 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255283635 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252352826 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258614569 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.253385507 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.258422758 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250878298 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.258886922 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257303806 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25753985 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256923428 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253699362 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253647469 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255187686 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255816709 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256917938 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251559867 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257132319 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251875596 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.253889127 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257049923 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.257235264 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258216493 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.261232354 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255496324 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258235883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255941574 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255185082 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257440029 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256374586 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256102894 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262590808 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258206528 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.255600652 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264868555 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260347252 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252772875 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258802362 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260758346 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257575645 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257344219 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264724985 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260177267 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260567421 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259458923 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254636729 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258705073 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261034485 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26334674 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254789688 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259599812 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256752296 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258636277 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257229169 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.257247728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.258638416 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260584308 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262654002 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259272626 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255803883 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259773042 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259336488 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259809745 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258222649 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265078257 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260377635 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258906585 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258999304 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257547582 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.264654591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.255055297 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261310843 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256025347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270662925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275091562 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263667829 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260899991 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262362724 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263635318 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261838898 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259510926 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258044547 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257930491 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257446747 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.258101866 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.26281799 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257712046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262579468 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258798921 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261118267 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263645983 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261705013 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257486708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263481149 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262286778 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260871776 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258386985 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263139389 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260529123 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262141656 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260255713 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259256128 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268695812 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263104155 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260733854 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259960699 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260337772 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258386145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261918835 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264069535 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260876189 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268953923 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260910254 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265378165 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262248233 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268901318 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266143337 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260823707 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.269315483 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.263423684 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25813899 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25847067 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264386929 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267254091 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.269705437 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259836728 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267539217 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263810629 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263492098 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.263583679 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263284206 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264675773 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263630535 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268570938 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286044005 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262318411 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264801624 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266170402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263716475 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263831858 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259993763 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26506946 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.267837592 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261915021 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263108282 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261183631 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266752063 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264269283 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264746048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.26643618 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263704433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270353448 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265953166 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267747527 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264204792 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268396186 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270648056 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269026628 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270729922 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261711366 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267184829 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265851279 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.2627641 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261315879 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262330727 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266807204 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262172283 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268730014 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267332713 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264569849 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265948525 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267535533 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261496469 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271387153 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284223582 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264511243 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270777137 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26699513 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263337088 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.271070359 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266860832 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.262416133 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265045627 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270476544 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271921783 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263074482 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269568649 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263678087 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270436691 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267847852 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267355915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266609005 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266349671 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264938492 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.269113784 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267473369 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270368205 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266574575 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268501308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26553112 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273129935 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.274131773 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266568966 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271475166 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.2690104 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265937262 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26810918 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271284779 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267694901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269402966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266289581 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270404089 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268185318 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269199446 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267377901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271149399 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26593246 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266454713 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269565539 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.269818259 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268502978 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266911327 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272066061 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264504492 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265355407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.269036736 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265265 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27226046 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267899087 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271246193 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26701467 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.270744809 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269815977 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270311339 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26631233 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266147335 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274574008 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272933641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273309076 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271422346 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273727119 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267873849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268487983 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270517921 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265035496 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.264898656 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272506508 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265960655 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26664777 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268258992 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271443397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27484824 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270663709 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266672502 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278593727 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295443016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273269499 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268248061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269773281 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268289945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271206922 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271463627 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267446956 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276928006 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.274230642 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272820178 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270735277 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269866776 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26997368 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275909807 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271731517 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270059879 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273798136 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271350485 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273487892 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273005937 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272881794 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268653429 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268423368 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273343503 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.274056364 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273909112 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273815029 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272975635 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272819639 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275551798 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272275246 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.273640189 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273623182 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268185325 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274241314 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26988253 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274593313 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272932996 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27280352 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277887351 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274992875 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27234534 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277425547 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277799245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272501838 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268333884 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272745524 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275267314 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278061896 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275799235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269666302 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273430673 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275574539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275779118 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274782442 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272658806 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286249715 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299859466 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272210001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272714686 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27581914 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.277133454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275147564 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275753034 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272532931 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276557322 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28188325 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276863808 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279573004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276575388 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273532496 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277155969 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273838679 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275600175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275183608 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278908031 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275465775 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275999074 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286827418 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27927611 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280595387 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299346371 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279229952 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27577414 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279525913 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270975574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276554232 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27477272 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278128454 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.276471654 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277677601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276023678 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272846333 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280078378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278968401 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28127755 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276488874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272830149 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274813487 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276962511 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27901366 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278984853 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280116465 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278185998 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278886165 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275057365 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288997182 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289971312 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279722687 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279945337 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277615928 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280094659 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280199917 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282201044 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283857638 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279509214 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279965726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276426325 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282036411 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280945967 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274580591 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27664498 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276475511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279556715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290241933 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291577967 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28259155 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279649906 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280471326 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279552177 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275988301 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281921653 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280519106 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27562146 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27864838 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28366062 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28077358 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.279683722 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278789994 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286662943 seconds)
  done (took 753.635489373 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277976034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280463891 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279262891 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278520969 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280128645 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281160654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279782891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279988193 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280550633 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28220171 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280512898 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281266235 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280543191 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281342518 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279805434 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281481438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280873095 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282100844 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281017256 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280672387 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282271599 seconds)
  done (took 28.081077782 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280995903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280755014 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280788998 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280589747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282308525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280363972 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281273074 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281847853 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282046055 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280773577 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28116183 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280393298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281911533 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281622903 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281918381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283831609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282310356 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280869546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282232468 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280764881 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28164959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28070118 seconds)
  done (took 29.38252426 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283412771 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282718174 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.276042267 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.28019293 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281276846 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.281060261 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282545775 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.280432426 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282254755 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.278177157 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.276656801 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.2788435 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.281594565 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.285123098 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.279316009 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.28168685 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281797405 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281626708 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281737157 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.281511205 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285537474 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.284326726 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.283812277 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.278527686 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281656677 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281708931 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.282379274 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283854755 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.280017407 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.286350344 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.282155766 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280577015 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283558926 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.280318209 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.27983787 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283981712 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282783841 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282755408 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280578568 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.287419711 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.297900136 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280767664 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284563052 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.28628308 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.28119809 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279304736 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288206882 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.282505243 seconds)
  done (took 62.743143316 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281636183 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279297545 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281681659 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280565878 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281348802 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281882697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281345036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28184873 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.282223335 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281485147 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283149274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282184541 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281063186 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28279938 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280711888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281477478 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282595025 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281278905 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281174536 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280077596 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282240626 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284098296 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282288149 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280684119 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281357558 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280062044 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281157252 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281840037 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280408698 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281214263 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280205176 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279863756 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281702035 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281469882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280439859 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281244419 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282629203 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281218174 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281780608 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281327844 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.281277174 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282130365 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281568293 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284050676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282331649 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.282373622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282539799 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.281293464 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282003556 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.280951359 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282927109 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282397476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283339165 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280869291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281146085 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.282923687 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282383072 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281533633 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.282081286 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.280792019 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283516878 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283185563 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28196876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.282495429 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.281846604 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284579459 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283062376 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.2821025 seconds)
  done (took 88.354124995 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283295141 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284129248 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283197379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284284593 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284026653 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284200131 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284226914 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282919356 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28286996 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283584146 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283433687 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283406927 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2833453 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282067411 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283095272 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283716827 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283404571 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282742082 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284335872 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283114493 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284864523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284733673 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28476476 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285777962 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285245433 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284547395 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285722173 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283475855 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285222224 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286979781 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286019853 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284961661 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285256274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286018007 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286448972 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285244736 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285546359 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285591765 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286253977 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286099293 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285114687 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287319789 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286346729 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286412033 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28548454 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285369074 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286820996 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287214331 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28561662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286174828 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288188947 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287144475 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286272265 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286518869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286452117 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287539255 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286386471 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288096227 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286476565 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28741008 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287564163 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.285729414 seconds)
  done (took 80.877529453 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287412527 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286382197 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286122021 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286977993 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285621881 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286530374 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288667454 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284840428 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288959339 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.286831428 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286658061 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287445713 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287310804 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287464717 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287520512 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287878368 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286348137 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287603597 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288772325 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286971739 seconds)
  done (took 26.93672785 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286228309 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287975553 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287346501 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28724508 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288251068 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287215619 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287067104 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288027072 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288895029 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287588753 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287525953 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287138387 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288461443 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287838065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287727231 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288507869 seconds)
  done (took 21.797595229 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287036836 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290817375 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289261876 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289673961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288163377 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287755034 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.288380394 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289543012 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288615802 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.288861096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290245717 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288804326 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288998883 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290315665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291213598 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29024766 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289032644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289749338 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290108495 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291697076 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290722062 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289977027 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288628447 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288178207 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289201451 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289727472 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290150227 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28881334 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289265125 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288618654 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291275084 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290526253 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288855214 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289498736 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291622959 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290053732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29016671 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290314795 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291202366 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.289819653 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.290113291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290101806 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291079508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.291495991 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29068857 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289616853 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290319849 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291538855 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.29134621 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291538987 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.290346576 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291030332 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29240872 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.291036636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29177271 seconds)
  done (took 72.147893524 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29194018 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291839354 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291337158 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291399769 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291324821 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291455916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291480065 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293590095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292562 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291942215 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291544286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292215754 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291706958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293779974 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29183113 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291965905 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292687777 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293240277 seconds)
  done (took 24.456663052 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291183652 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292241628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293595345 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292617624 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290976609 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290844589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29319641 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.292755173 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29242658 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292476649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292468436 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.292239552 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291079605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.293263286 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294549266 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292232668 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.292416443 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293825826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291327895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292017088 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292009235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292347841 seconds)
  done (took 29.632841136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.2870818 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.286668278 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.287680313 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.301280496 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.3013235 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.28765468 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.287499941 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.286526582 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.307536228 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.328421159 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.324244693 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.301948962 seconds)
  done (took 16.787770727 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292029614 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292719196 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29223903 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293030876 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29284825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292842587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291625047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291859535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293592963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292143383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291875578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291859605 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293243081 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291048603 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292403084 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292688622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292531733 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292814093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292744857 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293480518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292765172 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292357671 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291212242 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2922411 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293233057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293038804 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293692297 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293934592 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292426092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292858894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293058033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292753542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292177842 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293056342 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293515309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293088724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293655434 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293695417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293606726 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294670462 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293212781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292365371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293966492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294378809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292316459 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292040764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292341733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2920614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29270676 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292347481 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2940386 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293287943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292074756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292457536 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294646722 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293434497 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293036941 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292985106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293086092 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293155223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292904026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294435374 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294333645 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293629599 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293852142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293894977 seconds)
  done (took 86.535046928 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292031562 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292509333 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293566437 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292718635 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293828139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293712306 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292967796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293849342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293313195 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292376478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294060428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292726734 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293008386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293237483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292528944 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294441756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29350864 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293674512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293208868 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292609595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293497622 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292005182 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292535192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292994511 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292735503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292113243 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293121778 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29423296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294106777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294176761 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294716595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294228179 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292720428 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292945395 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293319449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292459656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295098969 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29283776 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294799205 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294002349 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294216262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294722662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293791001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295389445 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293991103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293656652 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293045304 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296280437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29492808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296412438 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295640561 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296259287 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295287753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294136142 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294798482 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295104148 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294277155 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294442516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295914806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294591893 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29372278 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296104686 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296170927 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295256551 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295189654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294840396 seconds)
  done (took 86.602754851 seconds)
done (took 1762.594617839 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.457973126 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40931377 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.290244656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.304322327 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290794682 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.286928302 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.301681792 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290970889 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291331256 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292640482 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.291205519 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.480525088 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.287532422 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290333424 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289797158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389102952 seconds)
  done (took 26.445970378 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318702166 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299799093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.409866621 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.313126581 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319540319 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.479590455 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353662877 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.296794167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.462390129 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.311871938 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.29065418 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316671821 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29581978 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.29322636 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313768887 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.477767356 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.539569946 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.292329938 seconds)
  done (took 28.587609949 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.731894391 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.295833743 seconds)
  done (took 5.230112643 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31501563 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295999088 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.296621776 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294486972 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.289005004 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.286854215 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294991456 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.294426139 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.289206121 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.420228224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297658115 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310208892 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312891032 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298155963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29970138 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340695875 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45601859 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.300076464 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299454189 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.303187973 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295572366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.386360165 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.336431818 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299599275 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.418252555 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.303927399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302578681 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304437734 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436340853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301684266 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.29688193 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.29780534 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297977471 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.296370791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.747540919 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.31011984 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322649387 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322183305 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301227886 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459165387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.298495807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.305167487 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.290272733 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.739959661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435525146 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414318686 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.307009771 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.311705771 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298768246 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360029734 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.300046469 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299674141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356729518 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.112176878 seconds)
  done (took 83.368449082 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.295562855 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.289356899 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467993426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313539169 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29142867 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289516174 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.307050352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.56667549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31331824 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304199203 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.571941543 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856354349 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30966865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.347302519 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.208410675 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.358788584 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292325349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.289479639 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.296065333 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.293067385 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832621638 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29440297 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289635435 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.399294176 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325967961 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798406458 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300251277 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.303600793 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.291852358 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.287789322 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807332838 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315210573 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.353093296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.289599176 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.554852221 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654087616 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612850575 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.296427928 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342725712 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28958234 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.291807579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769691504 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.634843607 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.291752576 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302400511 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783799785 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292809997 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.292056157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.29181951 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535312669 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291517817 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289468837 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288609318 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.289310984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.287548813 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.306932127 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.370442724 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78770972 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292188448 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287257217 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325439123 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.290058107 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291528113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289211282 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305969101 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632621041 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495000855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294788957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.629496571 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7906048 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306273839 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850681896 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306311094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.309944957 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.47604476 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301107374 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.290391349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794252452 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.301057889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.288591593 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611031468 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293399849 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.568504679 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307883909 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316805821 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833690095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.294553477 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.291475893 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287111203 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.29044731 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.288541118 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291122907 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.555521383 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.327472882 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287129793 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.288833384 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.315103213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296749989 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.28810199 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29161664 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847963725 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.309934824 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.288494163 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290166349 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288020827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288810502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.288831985 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.288222383 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556353067 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287794998 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.300361013 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290234208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289654438 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292639352 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.384127799 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.294749457 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.576599475 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.292348684 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289452572 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.29463812 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290558419 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347789063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290847845 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.29388937 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.167660611 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.580885125 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304598494 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.290155494 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290756113 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290399861 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289900224 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292278303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.335275284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.294525648 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051372341 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334429487 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.311905436 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291147401 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298809299 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291627502 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.298753825 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290340572 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574517017 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.556442074 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.477131398 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.290850764 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29083124 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.043038538 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.332389917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469823429 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308372714 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29170521 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538707252 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512442888 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291632204 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.291829046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.291659411 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550115059 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292568734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.590424279 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818049952 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308052661 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291955141 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.063955401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.008436069 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.293378045 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.296912876 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567545801 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.308125739 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293585524 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.294347007 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.294740303 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309016865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308978066 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.300943253 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.292144076 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.29280504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.58803948 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482454723 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.308651229 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.302335202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.77779206 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315063035 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29451321 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299600537 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.296562614 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293355239 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36492003 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.297044609 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.30858521 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293593687 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.29622853 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832283338 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.298326399 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.295876128 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483300182 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966061563 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.31283033 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293932788 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29500547 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.204907079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806812612 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333998682 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.578556961 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.297365834 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330805017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294860501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.38700651 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804779311 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296834739 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296525543 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.937009167 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.310100503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.733765369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.29592155 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.297480657 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870302177 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.310921806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.297783595 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295552915 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306621989 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593925538 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.294732593 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.310661113 seconds)
  done (took 488.678937199 seconds)
done (took 633.515420271 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295059935 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.297164715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.292793309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.299875161 seconds)
  done (took 10.394343504 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.310359738 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300094609 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.305886757 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.299489792 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.308481985 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.300308798 seconds)
  done (took 9.034121261 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.294787132 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.294906808 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298755662 seconds)
  done (took 8.097272256 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.489038369 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.316381818 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.627785077 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.319685875 seconds)
  done (took 8.963973095 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.307934671 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.307377522 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.306510907 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.30925135 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311867522 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313346136 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309217063 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307882497 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311429925 seconds)
  done (took 12.992898419 seconds)
done (took 50.693835546 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.325646924 seconds)
    (2/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.039394186 seconds)
    (3/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.069106969 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.306555757 seconds)
    (5/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.372161349 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.293254544 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.358701412 seconds)
    (8/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336126411 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.327002618 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.309102068 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.397635948 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.453614437 seconds)
    (13/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.288946239 seconds)
    (14/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.365183511 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.184726442 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.442881286 seconds)
    (17/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.28980612 seconds)
    (18/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.377538482 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.349778016 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.49934301 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.402003434 seconds)
    (22/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.358559995 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.326597732 seconds)
    (24/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.438750949 seconds)
    (25/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.290021798 seconds)
    (26/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.462628061 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.299112248 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.325570598 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.298402917 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.374379668 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.298508379 seconds)
    (32/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.296671427 seconds)
    (33/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.365213456 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.332457152 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.981879696 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.545989766 seconds)
    (37/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.29058143 seconds)
    (38/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.036915524 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.357318642 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.385118386 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.491996965 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.290393403 seconds)
    (43/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336026886 seconds)
    (44/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.441088545 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.070198438 seconds)
    (46/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.219235568 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.461568329 seconds)
    (48/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.374991082 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.101958521 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.387673653 seconds)
    (51/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.333817064 seconds)
    (52/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.036573642 seconds)
    (53/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.291430013 seconds)
    (54/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.346877397 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.303646297 seconds)
    (56/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.304339997 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.166284589 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.443946795 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.291944822 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.453167052 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.451212982 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.403546523 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.304832322 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.454726568 seconds)
    (65/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.946021362 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.376995904 seconds)
    (67/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.292269044 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.311365106 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.397023011 seconds)
    (70/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.361101723 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.077138934 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.404673837 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.324581674 seconds)
    (74/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.005315464 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.373641557 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.396468085 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.293573701 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.379748736 seconds)
    (79/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.337847277 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.074606819 seconds)
    (81/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.524121971 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.411640487 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.302895802 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.40657525 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.331187563 seconds)
    (86/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.444790893 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.412198345 seconds)
    (88/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.379012037 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399512504 seconds)
    (90/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.947474438 seconds)
    (91/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.442260671 seconds)
    (92/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.98582327 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346391857 seconds)
    (94/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.394488047 seconds)
    (95/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346815643 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.442574806 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.318378349 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.520942357 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.436065456 seconds)
    (100/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329188945 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.481253977 seconds)
    (102/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349353602 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.302405975 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.038866656 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.475483804 seconds)
    (106/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.295379343 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.232877387 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.378329203 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340440841 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.295229293 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.113527096 seconds)
    (112/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.295273664 seconds)
    (113/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.340274282 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.46053971 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.036197313 seconds)
    (116/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.299361817 seconds)
    (117/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306749582 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.441735029 seconds)
    (119/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.295168205 seconds)
    (120/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346496939 seconds)
    (121/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.340452841 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.313050459 seconds)
    (123/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.356318808 seconds)
    (124/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.469173045 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.462452875 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.353994524 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.43484784 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.377251559 seconds)
    (129/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.435538393 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.319675793 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.397646582 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.327999169 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.358879919 seconds)
    (134/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.355984377 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.989206949 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.301076353 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344985297 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.494425398 seconds)
    (139/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.355852179 seconds)
    (140/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.355227513 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.05847633 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.372893085 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.373257173 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.951592885 seconds)
    (145/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.434449628 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.29871321 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.45084762 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.307426407 seconds)
    (149/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.412342406 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.991402072 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.405090903 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.290705949 seconds)
    (153/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.298835369 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.431639447 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.390377372 seconds)
    (156/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.317007725 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.387859823 seconds)
    (158/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.321657025 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.283624917 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.359152626 seconds)
    (161/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.546835236 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.299651738 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348551002 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.286080136 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.421327402 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.394836403 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.41471113 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.28660825 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.366051106 seconds)
    (170/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.981060232 seconds)
    (171/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.278984245 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.367808335 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.452198659 seconds)
    (174/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274627366 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.298255146 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.419657278 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.373134524 seconds)
    (178/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.38489279 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.320418091 seconds)
    (180/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.323459493 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.338603159 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.513218856 seconds)
    (183/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.415954189 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.4076097 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.488869202 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.277051979 seconds)
    (187/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.279706977 seconds)
    (188/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.937995413 seconds)
    (189/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.323059499 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.427448239 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.506138434 seconds)
    (192/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.364445243 seconds)
  done (took 329.839034058 seconds)
done (took 331.052480666 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319096643 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.348827706 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.303331065 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.302067026 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304260116 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.295808598 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.31061116 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.303232104 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.302115154 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.301626611 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.292791243 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.299268927 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.315463939 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.298500915 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.338698175 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.305787833 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.303683183 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.297002232 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.30324854 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.30420081 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302662483 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29775298 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.305553254 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.298509413 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306033042 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305277568 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.30342002 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.29328937 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.301578789 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.293603091 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.289278488 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.299383273 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.294672744 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.29297138 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296237224 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.286546372 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291931603 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.336574595 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.298030462 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.285926 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.282525936 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.291145917 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29705475 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.29570175 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.287777734 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301088953 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30008046 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.306765313 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.282812934 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.260992462 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307731834 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.288836448 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.285684382 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.26131283 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.292473178 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.306489428 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.285652999 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30885603 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.283697227 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29320405 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.326120002 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309922169 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.288169152 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300139711 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.283642449 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.306363467 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.286944845 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.293853448 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.283950371 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296488162 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294989278 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.285160099 seconds)
done (took 102.709034388 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404763392 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.281491862 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.420602446 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.285181257 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.440407935 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.426290069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.285575013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.286354648 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.286144598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.099896329 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.284347868 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.282520125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.280389683 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.282529553 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.404496083 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.283619314 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.282292078 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.992631588 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.283237563 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414378519 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.27620072 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.281682697 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.280809478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.103196621 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.276614671 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.271479993 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415691492 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.280475135 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.003175389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.270816361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.270932085 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.000883281 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.415286771 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.297008199 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.288292677 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.286918351 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431710823 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.294529577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.394143384 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.395654566 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.414578321 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.318517906 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.273277888 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.272548549 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.279995991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28055279 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.27869849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.309534285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.277319116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.279875921 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.994084036 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.288684563 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.280293745 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.282026722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.279423723 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.308795682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.28003551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.282076334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416412429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.281766673 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399326445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.105113345 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.093524752 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.281628364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.275203059 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.28056455 seconds)
  done (took 104.8559025 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.345652274 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.356416325 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.380618804 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.276579385 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.328355433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.381683617 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.278495486 seconds)
  done (took 10.538271048 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.285892816 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280355198 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33147872 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330025911 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.281749935 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.434802821 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.282908121 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290666335 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283510426 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337841911 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286135449 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28303274 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.292401686 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.282113079 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327098855 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.29292993 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397075981 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.28265851 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.283758168 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430791459 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286432408 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.29373047 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331245215 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.294797033 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.286520693 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.290813097 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.10249274 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.288076679 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288740671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.288095836 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287182393 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.337886031 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.28634685 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.282695718 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287525878 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404456257 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.288317693 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285645174 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.28654534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.28315561 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283950308 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284092613 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.285607258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.287547026 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289307265 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.30626055 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.285249084 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.286695431 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.28873613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.28804498 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.335283944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.286289555 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286959985 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.291021179 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343528008 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296805291 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.289261743 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.286691592 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.281921916 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283674264 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.429773018 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.326456412 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283922628 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325128143 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281307601 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.285129879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.280019562 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281265246 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367573172 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.279012496 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323194609 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.278240275 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.464543686 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.301088144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28127024 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.282963714 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.280742807 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.276387899 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.274339777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.284333946 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.281129692 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279443709 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.283993083 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281042391 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28061628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440651953 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389310473 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.283462873 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.292592196 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.281945176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.281471096 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.333333088 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.281736442 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.27901446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328050235 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.39244149 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.333586584 seconds)
  done (took 132.648957116 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291895383 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.290078027 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.280532904 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302907932 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.277532799 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.281747239 seconds)
  done (took 8.91590213 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.28187998 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.284747048 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.282966226 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.283628815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.285254606 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.287112699 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.286346603 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.278613664 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.28734263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.287465087 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.287340568 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.285881256 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.286488549 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286347659 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.287602644 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.286310071 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.288404033 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286333005 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.284960107 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287798015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.280242446 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.285241273 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286346134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.282586658 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.286193921 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286948059 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302856017 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28797264 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.282522595 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289424626 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.306944129 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.284265654 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.281631679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.284006118 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.288712099 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.28215971 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28936406 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.288488896 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281342203 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.288939018 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.28956849 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286959572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.28716855 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.285653005 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.282729018 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286964594 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.290345072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301071702 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.28822595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.288268691 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.289780132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.283852929 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.288703803 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.286519125 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.285434524 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304832289 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.290077983 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.288573744 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.287313706 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.284927967 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.286059384 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.287704916 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285070796 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.291797432 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.287247808 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.291159313 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.286840636 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291216542 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290803813 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.288810585 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.289174732 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.288211444 seconds)
  done (took 94.896406644 seconds)
done (took 353.049958952 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.033734242 seconds)
  done (took 4.224390759 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.360640268 seconds)
  done (took 3.55862363 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.41453549 seconds)
  done (took 21.617260902 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.352351892 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.302522331 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.276268277 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.271867452 seconds)
  done (took 10.385321309 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.503861276 seconds)
  done (took 3.692710539 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.273262574 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.270639143 seconds)
  done (took 5.732437278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.454266944 seconds)
  done (took 3.639986125 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.457220715 seconds)
  done (took 3.653875145 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.298963949 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.283441266 seconds)
  done (took 5.777803254 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.259128618 seconds)
  done (took 3.44426773 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.121017055 seconds)
  done (took 18.307848123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.28417192 seconds)
  done (took 3.472712439 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.29734544 seconds)
  done (took 3.482399777 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.650075086 seconds)
  done (took 5.835284354 seconds)
done (took 98.023059916 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.267971903 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.271654978 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.272325525 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.27000151 seconds)
  done (took 10.27108026 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.329670046 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.329036832 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.336705586 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.330230265 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.331020052 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.330567001 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.302726033 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.302632742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.328969285 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.328808943 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.336883927 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.331958527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.329571765 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.304303974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.327590578 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.335619367 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.329367483 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.336145274 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.303919013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.329517074 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.279592638 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33025614 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.330855114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.281792673 seconds)
  done (took 32.929732152 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.791323501 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.343743722 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.426868006 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.32777137 seconds)
  done (took 7.080238629 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.396055816 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.408055015 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.410205226 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.450937781 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.489840554 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.40863257 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.307672734 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.301532202 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.287770053 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.409097496 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.413227019 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.354057353 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.497394623 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.281891143 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.560907558 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.279900008 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.2811933 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.409744903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.450429664 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488363875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.281677442 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.396483322 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.40880715 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.356733236 seconds)
  done (took 34.518555768 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.286315052 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.300684326 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.279759345 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.296939276 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.2817784 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.282825582 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.283778084 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.289516321 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.280503074 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.28254029 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.28187914 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.294990186 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.281281857 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.281912882 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.287140081 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.283708585 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.285279508 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.288837848 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.289364432 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.282960502 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.282740925 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.291418956 seconds)
  done (took 29.4889786 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.272101559 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.273022813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.622012378 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.526700396 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.271583699 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.271002334 seconds)
  done (took 13.430120887 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.341712881 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.471455515 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.277417395 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.609743934 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.692491559 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.277739573 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.279618057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.508031534 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.807697224 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.789483741 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.3303125 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.344397568 seconds)
  done (took 18.924534868 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.286744053 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.274774332 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.284957971 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.291792196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.331169776 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.28248525 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.28702113 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.271791729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.332471735 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.335060355 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.284805373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.329164455 seconds)
  done (took 20.789031823 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364894385 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277603845 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275953895 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290870874 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280650453 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12148559 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35284311 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005259368 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.308814915 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554196056 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276674132 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36409087 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52886163 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277694875 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28220776 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.246228604 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508807725 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735418737 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277126715 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27645057 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309408326 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28176484 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281364663 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.489684798 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124651788 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277398067 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.541020608 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27702759 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543933897 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290343446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287844244 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277627679 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552621536 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922735309 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397741189 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474332521 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281646809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282468553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.272594792 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.283707746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28293226 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280407402 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289271615 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280410745 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278579792 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277078774 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981870276 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.307503931 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.280018223 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279634771 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520218897 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378476328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.284606912 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280247231 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309813866 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285435775 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.284905444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403460404 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859487963 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2830056 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285587204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.283886709 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279568795 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299858543 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854647921 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.289541932 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.287643468 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287116225 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281232936 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284974255 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305923878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282137901 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.3031655 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28158539 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962801219 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283277913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282553819 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803869351 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287879026 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.287203813 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511024203 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282897832 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282382801 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.281226547 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281805129 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950762377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292830035 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.276841628 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328100933 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.001303296 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.501127943 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299542511 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311647292 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.504842129 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.26960176 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282955288 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.293004821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28515471 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303376232 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.973667976 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300445239 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.288085866 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539509927 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.492342311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287661421 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.274587065 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741940343 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308438656 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.30914339 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286848376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.48391345 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.836903069 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298545812 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281192893 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314920061 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283254417 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002658762 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29450141 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.293681449 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285086406 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541995048 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.045151957 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289732418 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352270808 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291576427 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283787264 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285891334 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286390933 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283242931 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.47593416 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307375705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297722063 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.284751256 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285849925 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.294721517 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290800525 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.287170208 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.50548463 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291293969 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565874693 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285078974 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285486257 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286609093 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.508138175 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.286365467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.292380454 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546356427 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294247307 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297329034 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299575436 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317526627 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395192454 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315677431 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.294165206 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.544543536 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.291050952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.29261668 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289596501 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289425633 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286097268 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.294136496 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296322082 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84282647 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261032676 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291195184 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286574751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.302136276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355642248 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29341813 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485437135 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.288380836 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296284845 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.295922225 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.298313671 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510178114 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29543364 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.288070343 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365285024 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.747480731 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866581609 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303824202 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.287902987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.287119049 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.287769505 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287721132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288877815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28836026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484524347 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303105791 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304099163 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84895765 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290870652 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289016858 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.296442449 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300053676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.297196842 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289306233 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.298280795 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28936972 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305216529 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.30310475 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423942039 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.306975071 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290555941 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.808572038 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296619481 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291108246 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.289137825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321048091 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289356918 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078376053 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548266595 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285208695 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531799467 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294898388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.30752011 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.29075537 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290111095 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309570092 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.301968573 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31480261 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.299754715 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295679883 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293555621 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84789868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993576601 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800085198 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298591922 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.307646855 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296682969 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022302687 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313835939 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292436122 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514619742 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983775425 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309715558 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754810653 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.314216088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023211813 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535125291 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522626282 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297821588 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.293455548 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553126371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50418615 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326755443 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293376617 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297831612 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.282090853 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82787861 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311772166 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372747806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986546187 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311014575 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309965714 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.347202242 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.299405809 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679268694 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314636833 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293631823 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300822996 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298884325 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083949984 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297282882 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293266727 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870812081 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304002505 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.755908651 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315463737 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.493705834 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.304176795 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.29698527 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.294659821 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.297391819 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.547683188 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53902529 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298318615 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30722924 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809190116 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.16857601 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.301376658 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294488211 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006827079 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297035007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568841279 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.298643319 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.299430986 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303805775 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295948094 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295720112 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.295015051 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301609291 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26731968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754953471 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.293719804 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294066608 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297789146 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318981095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.549895998 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.312362168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855247716 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525475884 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297986623 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327656747 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.302152379 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299018938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.286785861 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297181312 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296846409 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347676134 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523027514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305398218 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.288666208 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349192439 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511307413 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296320151 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307554055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525540067 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.298231359 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.311761601 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014984563 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328849774 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.305216979 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300330147 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299382326 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356317503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366054007 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498669401 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.309311541 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.307979786 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682260467 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330896451 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301196793 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.314164535 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392883121 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308300114 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.300949039 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.092937992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862416649 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998307358 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862375741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545865295 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.300513473 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304257194 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29891635 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435603519 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299397198 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573267639 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300516416 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.301091353 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338800686 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303560584 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302733869 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515440647 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576781332 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300631882 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300257392 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304706614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.30046969 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309904639 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.508587043 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764064319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827085905 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302731302 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299056775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001109428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595116785 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300670234 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302021413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301673761 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.317989522 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320369071 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.309039766 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300145532 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45331482 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544291697 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944323062 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.332301803 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.338710253 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.81894027 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31217931 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554990566 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301680525 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.503649014 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865859994 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.969767494 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566599151 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371325555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504156674 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.303122637 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438966254 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.303504016 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.306901398 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304151251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302736234 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.30276656 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.311900897 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868510516 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568886732 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.308957846 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.30430115 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336885111 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.312582257 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524235922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979532483 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529297371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313415873 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308671353 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303803975 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869173547 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551929572 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304644398 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.309347033 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530994087 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304492082 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332265803 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.823150453 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.304546099 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825711107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.194716841 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325973829 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319861081 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.973369588 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867825891 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.309991651 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768776718 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306471493 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318838829 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584284284 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.311922202 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319611312 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584436533 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.310326508 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318123175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508727323 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.865007124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044976895 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.322084489 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327832632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.308044863 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305178786 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320961265 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306653425 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314437872 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.708832384 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329894978 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306886641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320390198 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.31991043 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306224507 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.309573621 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307210964 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314543747 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.31300836 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.304945812 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325349833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430174759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848398442 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336089231 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.985266475 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.637389812 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.561556266 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308148897 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.29820427 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.314225663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309343418 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308230135 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308609805 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.304755553 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846795402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.310716982 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.318972698 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313020602 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.518928904 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520323959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308783585 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528743798 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311217783 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332366505 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.296802813 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311012403 seconds)
  done (took 934.08006072 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356689391 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.324070715 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.349759166 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.336762102 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.322515637 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.398040455 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.36407377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425572557 seconds)
  done (took 20.098523693 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.312256007 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.314453287 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.310461858 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.314286553 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.317113878 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.764131048 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.324516809 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.312722897 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.326374008 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.30986912 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.30752382 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.963834993 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.329665567 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.307049506 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.308733525 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.315017605 seconds)
  done (took 31.368333081 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.311013691 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.462698462 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.17131455 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.333646525 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.312618209 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.306423331 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.520423749 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.335441884 seconds)
  done (took 25.974984812 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.319499674 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.319205656 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.322367532 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.320297871 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.318532154 seconds)
  done (took 7.822004413 seconds)
done (took 1187.963825143 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317704067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.316550848 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.317044326 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.317212608 seconds)
  done (took 6.490324477 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.299781046 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.302667884 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.301945043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.316689813 seconds)
  done (took 9.443030228 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.982822705 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.881409716 seconds)
  done (took 5.08554887 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.829015233 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.832697086 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.83120461 seconds)
  done (took 6.717047407 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.600446433 seconds)
  done (took 2.825348383 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.266466499 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.310558123 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.006323296 seconds)
  done (took 7.806594959 seconds)
done (took 39.589426432 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.308374576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.558065324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.463298986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.307216734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.484979731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.464654115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.042935126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.307530649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.33345097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.31846339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.308666786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.484687407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.024189953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.558773129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.028280746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.558203718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.485723989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.320183367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.309771787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.326003075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.059386697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.314821296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.307802148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.324396989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.473836825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.478764037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.314800744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.557895934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.308490088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.311439548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.459182471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307599934 seconds)
  done (took 80.43547637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.312661331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.307292649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.318568191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.312402607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.315246932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.321135195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.310093452 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.310361749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.317368403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.312180093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.324943457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.309838009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.311375895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.321101308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.309806881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.319648929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.321585729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.320158186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.311163241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.326349716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.312591271 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.325315133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.31064451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.310936895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.322154274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.317950387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.311210376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.329759325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.312229699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.312267223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.337975887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.311961525 seconds)
  done (took 75.351757205 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.311196274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.31170577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.311861476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.321301472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.312566489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.316601698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.312105103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.310995977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.326209859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.321742461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.318300186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.312751352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.314522605 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.320911172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.314083062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.322424211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.312301259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.322132416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.315810622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.320923921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.314390542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.315233021 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.313161756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.3279435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.315695688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.312865462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.322010242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.312488245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.319467789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.312583181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.332712644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.317366272 seconds)
  done (took 75.373067648 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.548727141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.32445406 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.327150642 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.318061618 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.327181161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.322458611 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.317907529 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.555071958 seconds)
  done (took 14.268067156 seconds)
done (took 246.65077352 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.318495258 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.809323919 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.365603433 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.319415443 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.343843115 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.344629312 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.535142641 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.362765135 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.53528455 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.33806584 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.356767606 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.320947494 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.104975224 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.469453361 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.166442613 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.281855639 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.182021285 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.319426588 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.858833795 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.596274346 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.347619593 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.321159772 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.156724169 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.198761343 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.313251796 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.417476764 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.41401022 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.538106582 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.476153525 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.396430364 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.818144381 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.32521909 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.319517222 seconds)
  done (took 62.201256018 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.32137502 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.325758146 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.326368831 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.326207023 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.325826336 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.32709066 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.321739402 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.325910641 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.326186484 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.327100575 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.326543589 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.327857156 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.327897227 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.326946201 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.326257316 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.317555594 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.322251715 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.326848386 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.321614032 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.317921926 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.328851553 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.327537621 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.328210682 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.327254673 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.327704726 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.327365893 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.327290691 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.328584722 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.328191284 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.32738608 seconds)
  done (took 41.004542781 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.328643652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.912487436 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.033620909 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.334304191 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.323471116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.328388798 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.596509774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.332942831 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.326801524 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.327230174 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.794115922 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.335691191 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357497849 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.049836704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.33182228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.331088255 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.330576432 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.325537696 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.920871817 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.339967853 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.612734929 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334194849 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.59790275 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.340685231 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.347515074 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.327633027 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.331403139 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.122879222 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.350916717 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.798401541 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.06172285 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.595757065 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.063503953 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.089585099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.071379494 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.33727232 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.331277714 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.797662627 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.332446654 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.32797128 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.598212788 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.334735399 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.039270238 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.996872282 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.349232838 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.330708067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.135398613 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.812172035 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.559592674 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.337706638 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.060909651 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.335618239 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.334574953 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.32936226 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.553797566 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.335203185 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.329440924 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.161049496 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.35497299 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.599972529 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.337598425 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.328848713 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.900488762 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.333906795 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.889692707 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.335115221 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.338012385 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.347519035 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.034700516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.336709777 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.004686914 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.351085477 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.333083905 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.788842104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.883553936 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.197388395 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.335648378 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.884221116 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.087533398 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.618307514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.338188103 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.100370603 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.621711918 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.33772129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.335338681 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.336312412 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.334745425 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421394634 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.596884936 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.946319416 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007954365 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.155888002 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.62115338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.341708575 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.330906761 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.147325777 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.353050811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.334737095 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.036092528 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011434302 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.34790681 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.338798352 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.015409839 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.35115219 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.603342041 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.342039195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.086181897 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.336903442 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.399147804 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.336008979 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.33950401 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.354577795 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.60279792 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.339432904 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.336931576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.995522082 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.827005073 seconds)
  done (took 186.587653661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.325027279 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.340587211 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.325558 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.344536136 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.326700259 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.334374341 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.326292247 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.327477733 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.332538757 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.327166386 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.327014586 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.333923765 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.332677303 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.326634861 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.326279568 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.327522202 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.327456462 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.347853898 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.326564212 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.327418821 seconds)
  done (took 43.852647604 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.336300444 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.868865222 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.837822551 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.342895246 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.336734509 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.333129245 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.385881224 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.342295758 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.337276491 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.619710962 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.499760778 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.343530572 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.337007757 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.338938925 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.832375037 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.333899199 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.621387212 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.872853753 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.342778808 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.869199334 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.333665706 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.338923657 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.333203095 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.870418131 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.63009653 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.608036816 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.392739849 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.875197747 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.343503615 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.338971738 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.869278599 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.344455111 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.335143909 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.870869189 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.360265583 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.353278108 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.338597954 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.389939765 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.39584286 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.627842897 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.882263526 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.615287853 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.355825066 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.513553199 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.342812145 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.330367043 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.877322283 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.360676105 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.330553741 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.341780242 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.344354477 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.843181848 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.357524701 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.84321762 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.360821158 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.341260543 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.868033326 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.845742729 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.859970926 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.501651094 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.340455979 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.60720147 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.346198007 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.879660156 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.362753484 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.340268846 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.340306759 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.498506085 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.874707161 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.607820812 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.627191588 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.623321487 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.340949975 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.397273836 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.363474053 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.622330824 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.397112894 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.745187109 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.624676051 seconds)
  done (took 121.379810065 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.594305598 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.449377262 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.707810801 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.910695527 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.824423521 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.470683038 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.443087424 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.589410386 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.35132382 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.432254978 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.96743324 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.451655217 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.034756941 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.421751531 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.444377478 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.47829029 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.724041506 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.322514535 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.006996747 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.935752148 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.352516717 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.439158661 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.844129997 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.536145209 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.336906857 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.857710665 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.279770107 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.848717476 seconds)
  done (took 51.301454432 seconds)
done (took 507.555637127 seconds)
SAVING RESULT...
DONE!
