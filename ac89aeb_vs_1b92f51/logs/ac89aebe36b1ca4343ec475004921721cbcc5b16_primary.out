cset: moving following pidspec: 20938
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.71713112 seconds)
loading group "string"... done (took 0.585334229 seconds)
loading group "linalg"... done (took 10.443691146 seconds)
loading group "parallel"... done (took 0.193361328 seconds)
loading group "find"... done (took 1.493094337 seconds)
loading group "tuple"... done (took 2.262988343 seconds)
loading group "dates"... done (took 1.511368382 seconds)
loading group "micro"... done (took 0.21484114 seconds)
loading group "io"... done (took 0.606114762 seconds)
loading group "scalar"... done (took 55.980384342 seconds)
loading group "sparse"... done (took 14.980605881 seconds)
loading group "broadcast"... done (took 1.390192589 seconds)
loading group "union"... done (took 11.293263107 seconds)
loading group "simd"... done (took 3.403922843 seconds)
loading group "random"... done (took 12.996257451 seconds)
loading group "problem"... done (took 2.326925172 seconds)
loading group "array"... done (took 26.106658319 seconds)
loading group "misc"... done (took 1.384546341 seconds)
loading group "sort"... done (took 4.026461679 seconds)
loading group "collection"... done (took 21.890695152 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760273746 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150210276 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.254277653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.354238285 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.249409867 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144340768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.151777838 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.353659034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.032343745 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232650523 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.147588075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.56845582 seconds)
done (took 6.108034589 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254809686 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.323400037 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171934803 seconds)
  done (took 1.146105947 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088060895 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182779738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108344537 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094508793 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108657038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108923606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111067229 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108567498 seconds)
  done (took 1.475532095 seconds)
done (took 3.62573202 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.551258502 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.883465092 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.552748837 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16457694 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.33513629 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.400787106 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.354523366 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204520887 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106276826 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105874389 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170227991 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400523155 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.487164303 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.998131283 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106085424 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09227695 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128583338 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781602878 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.074547588 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130714275 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.58015285 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212924204 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.108377117 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112510846 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.196045478 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113070556 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176599141 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102286453 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.653712196 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.126448266 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.19847697 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094159615 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171178239 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.228522118 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.245252732 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088265732 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671166659 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197030409 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097313814 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099366045 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667995961 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.213162222 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166185053 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103074132 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089051355 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184246072 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114524577 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090272711 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111732903 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083658147 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160558562 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463825012 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089533604 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167425414 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.087662669 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692441667 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09597855 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277382649 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131703349 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103685079 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.071679565 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.101337358 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154570495 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.105804228 seconds)
  done (took 20.725097001 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165368741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165062877 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095043734 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137729975 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140558473 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09208143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077958272 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089650663 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124817105 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242738426 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137756971 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168906684 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086407523 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081554355 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138877096 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24923021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119279563 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103357612 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098619988 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103040122 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121769775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109228237 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106192552 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10666328 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165535236 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199524804 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105297908 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119496391 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096880508 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113090159 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136176762 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145349785 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.08731319 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080479686 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189881941 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118239363 seconds)
  done (took 5.294533424 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224728842 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119397985 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.238887404 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170254147 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14605663 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168134247 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156138058 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.310322627 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.241429201 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178477005 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125376266 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092182052 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090617073 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080813852 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.113952644 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092173064 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.651915103 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182650077 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148235757 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.150890846 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101960542 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085726997 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379333644 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09492665 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078665461 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098762647 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073429398 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222471876 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099589781 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.212073477 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.079617533 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104642462 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126655608 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186839612 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126680577 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140249587 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07856795 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095249881 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216379442 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109710973 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.090652248 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108298367 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129731554 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129054528 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09778616 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105557115 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224031215 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093394131 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123398421 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.087113447 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.208382447 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.117562269 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09577439 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323983294 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111204665 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085411888 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095430319 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282718576 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129078961 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075803266 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091502018 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078328188 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089564683 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.423083018 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106847637 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.057284576 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089797067 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162532295 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098192298 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101180395 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096306486 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081506443 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112308934 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075796736 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091214365 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074702637 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091557125 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080211482 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115532684 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09725164 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07576089 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157158248 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108501719 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094048013 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120235358 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099467693 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073786547 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124137069 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091265835 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079406778 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186567594 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085129378 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095385011 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116072393 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098530651 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122066957 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093060577 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15543211 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196481275 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090517651 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121292379 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.093223257 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106723486 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110840982 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091186622 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078736561 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089565863 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074675232 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158300374 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076385159 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09182371 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098979446 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07774154 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108633587 seconds)
  done (took 23.791295049 seconds)
done (took 50.461748332 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.569550685 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.117733119 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.118231934 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118420313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.117380283 seconds)
  done (took 1.775869793 seconds)
done (took 2.482140523 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.381625058 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184134475 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122378962 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182789223 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102039334 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189285828 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189557824 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095432226 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21920711 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096870487 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181931499 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097353187 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08460391 seconds)
  done (took 2.862948864 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093845052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128307109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094467825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110918935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073619415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111705408 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108300094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107601062 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109729764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086238482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09093518 seconds)
  done (took 1.821875771 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089825428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11930167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082516447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109406943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07415419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107476659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090235463 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121897943 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107591844 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086722645 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091525071 seconds)
  done (took 1.785807461 seconds)
done (took 7.167535052 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.193272601 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.953574138 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148232627 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.216769303 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.393937412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.252770779 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.616472884 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.184277373 seconds)
  done (took 12.856759461 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11671964 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09827979 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.144262164 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097650478 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082526304 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09674809 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082210593 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097072329 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081233461 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097024625 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081907883 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09783696 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081828328 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099051745 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09829121 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082330548 seconds)
  done (took 2.311184745 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120740644 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119698945 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106029365 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108984347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087341084 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104179424 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105814167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089129658 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100774569 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087455106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108152526 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106228587 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089945735 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100669747 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105111275 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092125975 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102119158 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104521275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091551554 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10528942 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091821612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104143061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105139591 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093260652 seconds)
  done (took 3.252483549 seconds)
done (took 19.125263447 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17218281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096530233 seconds)
  done (took 0.981997612 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.147384236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148043377 seconds)
  done (took 1.015896451 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109145913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094213462 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138280906 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114411118 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081040591 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095256938 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132939338 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080567799 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095154621 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079582247 seconds)
  done (took 1.742411141 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084482896 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100026407 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.092550266 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.162237914 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092250339 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100911199 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084981131 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100773976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10061465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082019462 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10535622 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119030224 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087777396 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12271109 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1006821 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089040563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109711868 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103166339 seconds)
  done (took 2.563297535 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079630828 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096262556 seconds)
  done (took 0.895703465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08528865 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095668595 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086071166 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101645756 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096031825 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08060117 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096188699 seconds)
  done (took 1.361387218 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.693013747 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.316911555 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.55690385 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.118859605 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.171781566 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.519186234 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.189486386 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113575306 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096811177 seconds)
  done (took 3.539736412 seconds)
done (took 12.822291937 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087969756 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.227023377 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.700605979 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104130684 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096377641 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.139930346 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.324349793 seconds)
done (took 2.411375485 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340339425 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.156851829 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088305316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093528696 seconds)
  done (took 1.402407152 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074528378 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104487314 seconds)
  done (took 0.906752893 seconds)
done (took 3.046658992 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078328653 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076249826 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.093244004 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076564884 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093913531 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0766156 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112147812 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09368293 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075848611 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095323681 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.077121881 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.094454864 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076312429 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093928753 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077790828 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092405928 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077897803 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092801664 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076663753 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092317917 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076629653 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093522797 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077651747 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092236522 seconds)
  done (took 2.848857951 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102568083 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097772164 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100673115 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085490818 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.1014324 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084873846 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100718348 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096693616 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084531376 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096746047 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084574456 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101935548 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095999411 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084832404 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09684689 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084750854 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100821962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096515407 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080423275 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101366718 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084594342 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098686664 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101072913 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08474219 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100749099 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10092813 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081818945 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097059093 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084481372 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101271976 seconds)
  done (took 3.549779578 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087319123 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090353291 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079220598 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099888344 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07600963 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095222108 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075613322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091427455 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080445912 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093505792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080485884 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093962447 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075109436 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095110254 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080388165 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098280395 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089909179 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091894078 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074355063 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096339895 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.079553768 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092836184 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077791544 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093998909 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077516983 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09164616 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07902412 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094225851 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079981308 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093451044 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080276372 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097434433 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077834376 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103832901 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080817968 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093635096 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099745091 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07551207 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095751093 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075677166 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074669295 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095641788 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076350769 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102838001 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09340173 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.079873677 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090786228 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080337934 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095289862 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083979981 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090762032 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075872067 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097438776 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080601639 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096649839 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074615181 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095697497 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074780798 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096683937 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077883665 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090805692 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075278028 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097961071 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080881566 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112799295 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085372002 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09093945 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080505981 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095407639 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098985774 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081628647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107438777 seconds)
  done (took 7.057497192 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092900033 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106748304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080243067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096942333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079477975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096007527 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08608381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097954012 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097397481 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087031605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095388437 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080129951 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096975517 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081369467 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095488319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080935408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103817882 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095808987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079923987 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096373071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079337749 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102699342 seconds)
  done (took 2.74866873 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.253338061 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087227848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149361941 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114610891 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119282169 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.214399317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100924619 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101481596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083961522 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106291058 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107301468 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084365652 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118041132 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106538448 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091698344 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107753071 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100534974 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092693205 seconds)
  done (took 2.880607487 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0984386 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098623661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104749151 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098639774 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099152635 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082200094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106705147 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113764048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082195726 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098146234 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093516006 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098239911 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082832541 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099600156 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098757162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082843742 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097966085 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08152171 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108642514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106325927 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092853009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107342657 seconds)
  done (took 2.87865527 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098515559 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097867698 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132033335 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085827045 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097455404 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08040737 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103799479 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080709475 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106130266 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096685408 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082526124 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096754428 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089944546 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097681385 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105396014 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083186439 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098355578 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082861301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097936193 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08020948 seconds)
  done (took 2.639403803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176280547 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097836168 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113075899 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127163314 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09688512 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113407428 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126422655 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096295229 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112811741 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128179919 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112985408 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097705768 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126180245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120792275 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096728419 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127001066 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126134718 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125872239 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096792687 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113374447 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128215541 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09772089 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124858349 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113017278 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09685659 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113617743 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113499923 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106292095 seconds)
  done (took 3.974728939 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079795984 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079125315 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096365587 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078038286 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09735964 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078354063 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095083919 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078078297 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095093269 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079572418 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095432443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079251003 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09552251 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0775673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096508689 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07870682 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094729219 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079778067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095408813 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079320381 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095908781 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078816068 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096691733 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079200233 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096365087 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079514043 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096471953 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079360869 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094436851 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078434383 seconds)
  done (took 3.354785305 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093435931 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108626333 seconds)
  done (took 0.952823516 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088072339 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115538741 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078862462 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097155015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089584736 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096497635 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10843331 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090461145 seconds)
  done (took 1.513958556 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147648396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.149193569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086973892 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109703513 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.150060574 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.142264978 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144387744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086487483 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100181118 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.074384794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.141876678 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093762421 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084013989 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098966617 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084061913 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106774904 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096257655 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090184874 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105594325 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081787812 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102938106 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092014669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104701254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10894758 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076645806 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104381468 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08880429 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109659535 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097251803 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.089201949 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.098879794 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080581661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100229132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08622639 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097984846 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150532673 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110309082 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081910632 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101931669 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086048759 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107339185 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081481664 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104658239 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.099047884 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089225906 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103341117 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086565137 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097386424 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076974288 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.09436174 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081375397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097304574 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080006913 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103724922 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102489717 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093034889 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100217488 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.077463577 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.096574597 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079893858 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10007564 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.09692914 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089453061 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10069942 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081996368 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.102778659 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084514873 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098569841 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08233301 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099201083 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102744988 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101724097 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104217143 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085579648 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103590686 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097534818 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082928031 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104001427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08440641 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103500564 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084715981 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1064824 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098773644 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080208958 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096574501 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087616015 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100148852 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082948113 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091866117 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095020742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100401573 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080746472 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094623742 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10053825 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081809479 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102128992 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079543508 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101992575 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081034031 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103489363 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088690038 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095366876 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104420496 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087501519 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104644125 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084408324 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142791461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099660418 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080628804 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100473329 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086798661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096821364 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084482195 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096586112 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078178107 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097308018 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1030862 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.085481705 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099188604 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085127419 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10107833 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087177774 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100067594 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078881789 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.096957818 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101633369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090624792 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104163692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083296175 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098083802 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08127568 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102012167 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085681698 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103181667 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103234988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08298178 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097569251 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082619528 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10385021 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086141015 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098503441 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083734661 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103790847 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101506751 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084974976 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104113046 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07978808 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09426911 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103204668 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080969375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098325326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091345585 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097466666 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083354456 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098210691 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091125251 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099548372 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104019307 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084178454 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103109801 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088843963 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092447485 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082810714 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100133917 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088284879 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098140224 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082580424 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098225967 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104832409 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079596526 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10091575 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077972533 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095906548 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086928294 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098906962 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084691779 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099002046 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098822621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111739812 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104367895 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084984431 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.101323902 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085930611 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101739153 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084339899 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104841128 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10272148 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082392944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100666547 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087327638 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095334766 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084917937 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10477124 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086715823 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093030252 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081886448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091941328 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084900433 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105882468 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102816518 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087304053 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099483107 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084341122 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108585661 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081151436 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102454298 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094580216 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086197688 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10884903 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08768769 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105067465 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.087439507 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100400301 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082628175 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109160245 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100324544 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085136409 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098842775 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079099075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09585979 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088658655 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101217139 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080779843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.105782883 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08697564 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105711425 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099112232 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078751133 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102613734 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089934245 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098148201 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085291964 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.098083614 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100559079 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095414051 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094732947 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081139115 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10762746 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085951088 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09739463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082415169 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102387172 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103656856 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084629525 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100702766 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083266779 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106764598 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083252663 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097066305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081706106 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101935546 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077908208 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100018111 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094901394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100259499 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099174446 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091323144 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105173443 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087690453 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102368188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084905673 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105577782 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105599911 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080487978 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10494303 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08177573 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095413841 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081726487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094778943 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082574591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098717545 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086792166 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101041228 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101139263 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08555739 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105799812 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082854283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10406911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114346319 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078783866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094766093 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083427525 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102057295 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08119311 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.099605739 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082862236 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104092554 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103061824 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088800444 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096466441 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081051149 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104647123 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082485238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105314065 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086599721 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106834018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080227359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103490171 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09829643 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091097014 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096752401 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084649237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101810784 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084286676 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099530749 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100959695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081271956 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095031185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083282971 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105654178 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.078547314 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103453822 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.081879882 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100727977 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094783408 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081596867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106183209 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079364057 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105609334 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082148048 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095134855 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079098689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104623118 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085794078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105360079 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080068859 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102177209 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105998178 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086944293 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09786543 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091299095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107104568 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08790123 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108972712 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076726753 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100866481 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109229774 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081530419 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101618764 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083730987 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096463136 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087810786 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105643023 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085957107 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102345117 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078337791 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099607733 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104787657 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086546911 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102909032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084557446 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104269462 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080781382 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102609136 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087801383 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104129654 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088482423 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105426132 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103126318 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081932852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105611281 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082230477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097777129 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07895966 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.100627239 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088446693 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094892801 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086200585 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104343362 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082241769 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101482037 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102960339 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08186615 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10191991 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086687103 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098872951 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093085759 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100943824 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080512998 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102877022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086998585 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096853979 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.082177001 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099403737 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106358307 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084422636 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104251505 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085536181 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104587562 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083845327 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104238604 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086184427 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105383778 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07768522 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107355113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106232215 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083626243 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100747558 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083633744 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097458601 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084262088 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10759023 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082301596 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108667884 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104592343 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084634031 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.101086495 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087772498 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101686809 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088257393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098631689 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0846993 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097138295 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106442103 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085115119 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106941509 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08271993 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097476588 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085928765 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104817974 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085073989 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106215948 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1068831 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079768328 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095981276 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083561277 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.099707221 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092406511 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100846157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084480217 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10261437 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101109863 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082735769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108355574 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08077206 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099746315 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086141144 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104482858 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079833388 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097841032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085337543 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.102753867 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085781442 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103345198 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098636612 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085178785 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106841564 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0837648 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095805871 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082098776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107403562 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085734803 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100987115 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097019914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093445803 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108532936 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090509113 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098930533 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103044336 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084706653 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101499586 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089979069 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102040761 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086208208 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102858325 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086739846 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110751529 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096534717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07961587 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111547339 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087530381 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106206333 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083329402 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102816829 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088670255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10746066 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10461042 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080778829 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09798287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081648327 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097218778 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085467717 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111433779 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086050849 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101889704 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084775755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105028883 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083196762 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102991591 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07960413 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107960068 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101866157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09087927 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.098179095 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077543858 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101933805 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087158983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099531872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08099656 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101835813 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083902207 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098942754 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082994685 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107818901 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104133451 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087640041 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1034219 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083671207 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103021018 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093242021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101926801 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083521748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11420853 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108429195 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086514481 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.105725528 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090233695 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107959967 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.1021303 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089960497 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102289986 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08159248 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107904427 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090450192 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117115349 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103205652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078290245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10363905 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080903201 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097751373 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091260023 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108571611 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088137684 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105127544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082390132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110125126 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102200895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087157163 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.102310354 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083790918 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106015561 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084370703 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104626198 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082154477 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108973871 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089293124 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108610971 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109824526 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079073724 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111561419 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089909787 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110277866 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08248468 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.098626651 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080071832 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104029337 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090237871 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107155498 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084788062 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105300493 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086125303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086880643 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105471833 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084695277 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108732806 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086954235 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102233861 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087330637 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100383694 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080421388 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101760677 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087428402 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108687891 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10573278 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094354244 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107711337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084509061 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101980449 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105464278 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085738486 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105814239 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087285512 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101171463 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080999469 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106397359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089537494 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106283777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090190932 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109911462 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103125483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089626922 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112118548 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087667531 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101833073 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088020419 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104114162 seconds)
  done (took 57.507623533 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.16029665 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092038374 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103104961 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084794061 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132764558 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105051484 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085016113 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106214284 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086837308 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118068902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102210513 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085259417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127554969 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135231682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131855531 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119438444 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084859681 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104055167 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085849891 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105314525 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126558392 seconds)
  done (took 3.08333089 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108680623 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123315581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121862285 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124162833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093721354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11921957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120603724 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118160879 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104957338 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116678416 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124390171 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119685007 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09599132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116235047 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115773494 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11571358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105617646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114124061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121364794 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121165329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096467909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120398963 seconds)
  done (took 3.31911622 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094095386 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105931245 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088990861 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104275712 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088078016 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.102883315 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093316154 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103245499 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093415744 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.103272865 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.081166907 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101874648 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084858872 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.103958208 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.082091035 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103455695 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113399602 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088423626 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108020757 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084844634 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120521091 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.084087768 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10433901 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080981136 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117094799 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107784736 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.085143632 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106554528 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080214837 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107360166 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083933789 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104306381 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088297896 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101030839 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.07932364 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107125204 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088212668 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10428585 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083881836 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.101476184 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085139519 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10938599 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111183253 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.084544047 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103991278 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083340054 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107385971 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08498782 seconds)
  done (took 5.43914448 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122824373 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161619507 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089353667 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130017009 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127128458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12060638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08815521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128306035 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108832837 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109836796 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108178729 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.130135469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112275777 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114145052 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094241386 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111621494 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112031955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091482572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118216378 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090049818 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117716625 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112025278 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12477274 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.10677794 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114469903 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10951046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090350967 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115368676 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125269818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099935483 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115459694 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116320446 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125730304 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090049169 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110821415 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091623603 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128405363 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111724734 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092000765 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108094071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111297773 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095482393 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112940836 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12951205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091967016 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112689694 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111797859 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088033332 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127972685 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111178707 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.100153154 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127424492 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115158503 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111735201 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095119003 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12590711 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111528173 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090347583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113185144 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127013141 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089201912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113818056 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127282484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090404705 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120023896 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.128301402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113813362 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.095871095 seconds)
  done (took 8.568248043 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12023721 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116757203 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128499093 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129331717 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097831513 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116847811 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114446424 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.096345036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116020716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123403812 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095520787 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223848573 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091063478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121707616 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115264904 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096557573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11560944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114731984 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096878439 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11567163 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114963547 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107750528 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115563051 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127749668 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130381756 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092230869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116062602 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116391316 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12841902 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096714072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130817571 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116491674 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096036323 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127723283 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131780215 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115812886 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087925929 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116025969 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115487789 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096134889 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111466362 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129756192 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09538042 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111720875 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116425316 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.098009801 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130230026 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132007233 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122947851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103106805 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116189772 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128877253 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116049713 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096519062 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130463518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139307785 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130457401 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129674419 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095978553 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129435149 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129062387 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138712837 seconds)
  done (took 8.075553438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085404528 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084732169 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106624888 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084768399 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10648378 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084787924 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105702459 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085708141 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104928502 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084191052 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105094261 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084785737 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106201384 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085462039 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105341554 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085858291 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10579344 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086058153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105611807 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085004342 seconds)
  done (took 2.703461828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09874896 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130399551 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089908104 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119623002 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110251335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097187961 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109630538 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108759271 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090414788 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110317297 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101681184 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120635399 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109707147 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099131645 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120713869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117914242 seconds)
  done (took 2.553627071 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114399828 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.131940078 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168988214 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11372679 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.08984009 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118679729 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089106977 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.11284519 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107872673 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096128594 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114157924 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093445137 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109675196 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089285482 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.111128982 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.113009089 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.088515268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113914331 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088614696 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.168278766 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116268645 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.113615109 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09178825 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113431656 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09210476 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116184175 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.117251637 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090772139 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.112442387 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089634963 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.113330234 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100568966 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10945952 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.11567336 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089974448 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112500839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089730469 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110442487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.094171269 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109206323 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091114391 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112396547 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.109934948 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091835735 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108300025 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089418614 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109123398 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096598818 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.113444863 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113201029 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090816917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116090373 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093915604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120786664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118523428 seconds)
  done (took 6.726519998 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10343453 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112334557 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102558618 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10681942 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08968615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112873382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111035404 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091925174 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111733613 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086638446 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113177243 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092192071 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1129529 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11083556 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091650453 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111885792 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086083163 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112003679 seconds)
  done (took 2.680889949 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095929334 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109306827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095319212 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110575783 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088941609 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110918961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088273521 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108681786 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086902761 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109269107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089095788 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.110269317 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107658221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088896783 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110090892 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089656443 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10946742 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087363557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109793688 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087203964 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111166056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088654568 seconds)
  done (took 3.016232944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101050533 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.168531934 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119328369 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180753135 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110980344 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087129912 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118589188 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.108465544 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.108142178 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108091827 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.087131172 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108826378 seconds)
  done (took 2.234234728 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118652994 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150466373 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110711991 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089416811 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123885511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115657426 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096452517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117174408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127758647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112257637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117006017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127868432 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127073305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130013671 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10212655 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124007831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116905943 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09631037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111415606 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138814818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116369189 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107316177 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117698564 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116106029 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097219223 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131156791 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127562605 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135615494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096467754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128391356 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121913067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116250078 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107063416 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133277903 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110336034 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128542726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097375198 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139233351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123363114 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13167205 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090126672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123542442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128460163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125379833 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10873498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1178011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126200779 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115853133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097872693 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147515099 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123699328 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130947519 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124148891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10789359 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126720064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148078102 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134044966 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131251557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122911978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132350462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109262513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123023279 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130932524 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134261981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123563959 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109371428 seconds)
  done (took 8.762816677 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136023991 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112320884 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118909496 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134681007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109743682 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116852404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117550838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097321721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118129536 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112412914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168240796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097562096 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13109971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131635106 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117707238 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09658916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117502457 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132711746 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092055484 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14792442 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117247798 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1301766 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132081639 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131025846 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11284686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123404144 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117386169 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096163086 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11904039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117313658 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126236197 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097008336 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130223074 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112775046 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109115411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117709588 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11851373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105621567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117997626 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123875388 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131092886 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13974063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096380421 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11821942 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134991948 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096486694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118412202 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11446398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097023233 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112169079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134294283 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135083592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133777559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110374395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1180935 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11903589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096622195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118429699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116347951 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102716483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130721316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11801688 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150009589 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117660426 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096436468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130024057 seconds)
  done (took 8.686341858 seconds)
done (took 158.488479612 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153398172 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.172515605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15022303 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148556162 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104902504 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11840567 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139879457 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151637618 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083659189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105627319 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083866033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109350225 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149722248 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105069405 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082974962 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108664409 seconds)
  done (took 2.798206799 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207944664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.318640923 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125910763 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115527651 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09272153 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10933365 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093977604 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117412091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109204647 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099155927 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107894512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086995655 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12028844 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109863211 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088420792 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108029981 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119493202 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086949446 seconds)
  done (took 3.056008651 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11239351 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152659893 seconds)
  done (took 1.109384582 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122476846 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190141932 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320939007 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160223185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.13404825 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132819233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141016153 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126224279 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195828188 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131818004 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131900909 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108887821 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119455965 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119991517 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123720535 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089674217 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141495385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122067907 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100082966 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114067478 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137632789 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09308654 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11920821 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.100780309 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.207124751 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.109788867 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.115214615 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114090921 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094077464 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120586551 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093143232 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131078559 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.131090853 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.20284996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096192365 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.198218627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098513934 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114110905 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121923924 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091238571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118529432 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116975183 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107255318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110339325 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113044823 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099497868 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114437319 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091985636 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115909876 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122108577 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095309477 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116127333 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.196591911 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101090051 seconds)
  done (took 7.776116545 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.86918149 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155180353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090001388 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.003309817 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138563589 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129864162 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.865209275 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113167478 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.283674846 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.870005711 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128155609 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103819465 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263713466 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.297386321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.237529606 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.378848842 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.737870256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126780828 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119804376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163530232 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122367131 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140099064 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136519958 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44441779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112858045 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089493811 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122366281 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124444007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179682521 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090177244 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116851045 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.222939383 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291434119 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237953348 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113014099 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088295706 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110922104 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188035957 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.305147616 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247780801 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185172708 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107330556 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088979116 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120455007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13387899 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086149112 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206149054 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193046627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.21499179 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117309077 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103658344 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124758554 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119593309 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182666963 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108891689 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.378221731 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375747301 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110591042 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100959353 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127540141 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303753872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111550898 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262296641 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141119544 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.242818288 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088547206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870349745 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.208356 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088836976 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120226076 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120780355 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098604455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121343522 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178514187 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.41432872 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123586222 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096403246 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110658662 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25341674 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088942253 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111022505 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185731746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114445919 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101675041 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126368992 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124168744 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191359834 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.292953296 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123329914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101894814 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118749244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125864939 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092883291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.257017607 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251746794 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178940043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.258737867 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100112346 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.204242245 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18617029 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119413035 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192119549 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121058306 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12875389 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11885296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250628122 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15359909 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090235012 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118706343 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121737136 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157506374 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092079419 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123112413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189134526 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.506092351 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186387776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108950046 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093382504 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122814075 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201652579 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098769703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295009241 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124976623 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186816575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12160708 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107513552 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100598493 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.206514481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100536942 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123348837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120365242 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121891123 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277776694 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252520362 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125208765 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263968918 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19427968 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096577892 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.21664758 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122316022 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192206566 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124153661 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099727051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114414009 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867664134 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129177053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09932554 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118559403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204953778 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110990077 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090541024 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.11124057 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086763436 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.857824333 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114923561 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086821023 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112427264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09786816 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122937544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122793264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096182444 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.203050902 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268448712 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125181603 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123133478 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089454532 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181574775 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11635133 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111419735 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091210829 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.111673465 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101537258 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118099998 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092025839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.216607526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18010957 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.275994733 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557808227 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111452387 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.111101384 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266942108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089800502 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346076718 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122959684 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26080315 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.210629373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086719306 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.400834432 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190936162 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203858315 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.114520229 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192721784 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109684416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100875888 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.202512994 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089774116 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120992955 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178547909 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127945083 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125255885 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.24758486 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111349067 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254870601 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10925317 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192125156 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115762439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098237546 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.348450066 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111923964 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129679596 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180685543 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11954199 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090094685 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.865579325 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11158033 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105046408 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119646626 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256245623 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208937935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100961361 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124315512 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126435089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184159904 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259000638 seconds)
  done (took 47.617960478 seconds)
done (took 63.193917417 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.325184139 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282809078 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.341410981 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235607377 seconds)
  done (took 2.135761214 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239192086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161748781 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.191774851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111333969 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201710101 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110864078 seconds)
  done (took 1.883419509 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.541394216 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.443997108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.354896644 seconds)
  done (took 2.208666928 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276132089 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274118927 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.36384576 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.502028464 seconds)
  done (took 2.421493874 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262748508 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139880651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129861809 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185799496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221979164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.221365361 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.154142053 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.167172635 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.112620377 seconds)
  done (took 2.517967898 seconds)
done (took 12.041325927 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.209346222 seconds)
    (2/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.407107822 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.251250714 seconds)
    (4/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104834774 seconds)
    (5/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.41464315 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.17039525 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087097385 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.272477674 seconds)
    (9/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214213211 seconds)
    (10/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.122307897 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101469379 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.227731601 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.332886691 seconds)
    (14/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177044346 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.317166022 seconds)
    (16/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.233347265 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.2410997 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083815482 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.261277268 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.169314864 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121838818 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.193480014 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13076545 seconds)
    (24/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.17485678 seconds)
    (25/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201886122 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095506731 seconds)
    (27/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.272956842 seconds)
    (28/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128681635 seconds)
    (29/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.142485874 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.157193627 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.24481858 seconds)
    (32/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.322664823 seconds)
    (33/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.353130347 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.204586556 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.160086687 seconds)
    (36/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096626421 seconds)
    (37/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.183885463 seconds)
    (38/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119496058 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22539744 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0959526 seconds)
    (41/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.104448825 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097144927 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.152355651 seconds)
    (44/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212849275 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.120556806 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096751002 seconds)
    (47/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122280368 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207954525 seconds)
    (49/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185531995 seconds)
    (50/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.233651794 seconds)
    (51/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.179323965 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.203551187 seconds)
    (53/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097870538 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.151341033 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.101843189 seconds)
    (56/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.235962944 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.237955048 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.246950841 seconds)
    (59/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.154825794 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104552502 seconds)
    (61/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.1970346 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10462774 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080727607 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.203791392 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116100922 seconds)
    (66/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106035314 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197445729 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.191727324 seconds)
    (69/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.206805023 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097008504 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.154469781 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.301587319 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13728926 seconds)
    (74/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.178971217 seconds)
    (75/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.223720341 seconds)
    (76/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.219983745 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09717148 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.15205136 seconds)
    (79/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086875743 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104206932 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080655443 seconds)
    (82/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104418696 seconds)
    (83/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09949183 seconds)
    (84/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.104710548 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113364783 seconds)
    (86/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.180271635 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.183282705 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096206395 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120844858 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114185186 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104092159 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080346488 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.102580361 seconds)
    (94/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108053364 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12147091 seconds)
    (96/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096634771 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119435845 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129532613 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089701492 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113304825 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097685606 seconds)
    (102/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.185582938 seconds)
    (103/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094383246 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.102514403 seconds)
    (105/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079209726 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081494631 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110407927 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104862566 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.20862 seconds)
    (110/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.180223452 seconds)
    (111/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078989111 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120092181 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097829031 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120736347 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174570933 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17794751 seconds)
    (117/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12325151 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080132062 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121854355 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088783548 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.151783311 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.104538059 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.223436864 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0988992 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121042283 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098122618 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.105777468 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094771453 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202099802 seconds)
    (130/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086275185 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.104659333 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096448317 seconds)
    (133/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.110081198 seconds)
    (134/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092297462 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11359698 seconds)
    (136/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096055773 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122350774 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080389633 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104732413 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114874844 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137896044 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081196386 seconds)
    (143/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.104358077 seconds)
    (144/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.206578582 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.082416354 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080785059 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122138057 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203319103 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081562915 seconds)
    (150/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122383662 seconds)
    (151/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080264845 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121651861 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089027355 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.345958897 seconds)
    (155/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080415478 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082049354 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112475484 seconds)
    (158/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084226152 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103790746 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097616133 seconds)
    (161/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10578231 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097089665 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.140198603 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121889242 seconds)
    (165/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080116296 seconds)
    (166/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08103416 seconds)
    (167/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.103742184 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096932295 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.104110486 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082072596 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.109255635 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096764898 seconds)
    (173/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104044269 seconds)
    (174/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098003776 seconds)
    (175/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110512842 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088775852 seconds)
    (177/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08675861 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.103606218 seconds)
    (179/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085687964 seconds)
    (180/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.102912697 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096465951 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104853045 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114018731 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122620427 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119695027 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096635148 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.105390896 seconds)
    (188/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080145491 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120679233 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08142057 seconds)
    (191/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086387396 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.104736739 seconds)
  done (took 28.284554497 seconds)
done (took 29.167015759 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231247031 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104780967 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125089988 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124692136 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185341054 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102523349 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.135396922 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126495762 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105388944 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.121803458 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089950986 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130413221 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123917021 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185455378 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102161344 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.117398732 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092161969 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129851245 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.13279472 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.111064169 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183689423 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116888967 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104798668 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117626927 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183595062 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116303963 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100555556 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124860645 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107024399 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.122098428 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124007201 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093202527 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134261288 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108985695 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114555827 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098184636 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114016303 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088302679 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121775696 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122027505 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107170026 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121999485 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.101395387 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117011909 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.122576512 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096628627 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114235511 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104485744 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113699398 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099825312 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116858415 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133313671 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.097283851 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113540335 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090951934 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.118651167 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.104914389 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114474443 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107539278 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114427113 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116882179 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090645452 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123078918 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089816622 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120603404 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092277174 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122465542 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.100170498 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.120643191 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093057837 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115662746 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.121122499 seconds)
done (took 9.408348339 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096737002 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179272506 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.184107041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.191208228 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.148840555 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13477073 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137854456 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12074522 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.133727978 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140453751 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.128929952 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.145218323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.19505078 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129485434 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135188409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099388247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130590797 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122957357 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191393064 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116642374 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150377566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129943896 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151990394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.111937711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123101035 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153744925 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.100657536 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122134357 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121698227 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105336181 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143334207 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122229867 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.100578661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137627607 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109470097 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12878519 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134280983 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099580518 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121506282 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121971022 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111704452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133124201 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096249679 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.134000151 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124276763 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107409733 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.131823031 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128750261 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100602081 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125524637 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101540874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15136719 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.131011181 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.13400097 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106167213 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129325681 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105453459 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128695358 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124810913 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104036317 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120891441 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098956038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124574547 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150280154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100571372 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130102061 seconds)
  done (took 9.400691947 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159869249 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132071398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107727173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1299275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112256805 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087338804 seconds)
  done (took 1.778545602 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090806043 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189319801 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185894239 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185859514 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.183799474 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219829159 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112398702 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.115180126 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.150970635 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.101427644 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186432927 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243895297 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097509483 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.133500747 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.191080964 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089454081 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.215237433 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090551932 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12800765 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189062376 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130064846 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.120302373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131026546 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091274175 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.179957395 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117601051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244380666 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134008433 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121344012 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.101227612 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128502083 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.199458862 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183281217 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13005856 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095274025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185356864 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.180618574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.128151598 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.196587575 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119843257 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181569617 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101895477 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128626832 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.128762345 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102118949 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168923083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.132598601 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104795577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125250359 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189848064 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127677207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183278025 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.099049415 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.127350679 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.102819352 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129165082 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134729542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.102649311 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189290874 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131842594 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185121554 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183809785 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181377638 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183177396 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13925762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184783722 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.181298775 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124723128 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100862139 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129012648 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184605929 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.10092107 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.127980038 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.17033088 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130653287 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.184559616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184329303 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099288814 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12957158 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11996108 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.100205537 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115868923 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.178557025 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102730722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124510334 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111791725 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129920946 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12932973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096862862 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140800277 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.127815743 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.104872949 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132870895 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.125953073 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108998515 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187999612 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128639408 seconds)
  done (took 14.816680615 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093127839 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117118135 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099243308 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118005336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093300515 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121124227 seconds)
  done (took 1.583003498 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122585954 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129707201 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.138945558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105457508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187552597 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.189550266 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.191956017 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126526971 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.146464853 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114208703 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190941795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.219286143 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.191784905 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.106707056 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194154784 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132818748 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.191678298 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129461626 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113466408 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128023889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135303031 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.106594924 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125686877 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182702138 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.132380213 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.106340194 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129249826 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.138876954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.112810628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126308536 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131933761 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.105553523 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123794635 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101272361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.21794671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097834376 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126040068 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108850901 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133177764 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.131318835 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195680161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101095524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13837613 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135364995 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100645623 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122340356 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.134377445 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102750147 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192871708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.134585062 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.136483239 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.105794372 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.133058281 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.134861272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098939808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126956132 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.134220119 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.19431642 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.108280116 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141436719 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.130404315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.107132526 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126036112 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.134007567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107072303 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.13505357 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09865108 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131709553 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126363669 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.106428875 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.134675473 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.130114673 seconds)
  done (took 10.709109586 seconds)
done (took 39.203858147 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.476029102 seconds)
  done (took 10.418234652 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.91792385 seconds)
  done (took 1.863753321 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.946223251 seconds)
  done (took 18.929642653 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.590715825 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.647936958 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.222237426 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.167595053 seconds)
  done (took 3.572333904 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.491772865 seconds)
  done (took 2.455370795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.348205557 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.281261969 seconds)
  done (took 1.581537609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.717180468 seconds)
  done (took 1.674663472 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.27058629 seconds)
  done (took 3.224719648 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.381488503 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197124932 seconds)
  done (took 1.544989132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.697738261 seconds)
  done (took 1.660140264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.795210318 seconds)
  done (took 30.757237863 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25074273 seconds)
  done (took 1.230064536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.310526157 seconds)
  done (took 1.277707571 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.664664143 seconds)
  done (took 4.633733382 seconds)
done (took 85.773707128 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102817676 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131798751 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106941333 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129296111 seconds)
  done (took 1.432304616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112550076 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131202262 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108279609 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129385745 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.138517766 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.104021386 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.129362005 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.111577207 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127952072 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13163429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.10490752 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.128662808 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131532327 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103588718 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127176915 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106590455 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132819155 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.130102892 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.106592594 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.131643608 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.104818986 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13068651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.132583188 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.106143794 seconds)
  done (took 3.872179368 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10395936 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123008585 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099021502 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120958471 seconds)
  done (took 1.424183467 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112791825 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145981477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.144007319 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.112395331 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14518504 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.144203371 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102355387 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125215328 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101712049 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13696724 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.153326805 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149446353 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119108263 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.131984284 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113915606 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122270508 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.106975634 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.146085506 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.137617176 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.112583848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128993772 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137849315 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.102694992 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.143320203 seconds)
  done (took 4.050184889 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.227263425 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.116923726 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152820832 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.189673141 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.163132214 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.101337794 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.156200599 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134204193 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.109976517 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.140477095 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.133028606 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.197598686 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106958594 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129689317 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.106323122 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.135184657 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.143608177 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.136015135 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.17796791 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.108403342 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133104269 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.142259287 seconds)
  done (took 4.117927946 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104282475 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121182109 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090995971 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122615753 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103783952 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124804103 seconds)
  done (took 1.642907782 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102889803 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11556255 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09522436 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117550351 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094763049 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116891353 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089210406 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116356292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090168624 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114968993 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091610179 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113700995 seconds)
  done (took 2.233479762 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.316083195 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097048539 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126614477 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120158133 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104046485 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.120528133 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140302253 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095010128 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265460656 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091402278 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141429077 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202589562 seconds)
  done (took 2.796871881 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226641133 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104691553 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320099172 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.413287206 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171084533 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181371749 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291894808 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178349809 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.231747965 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125031773 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238351298 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142814151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167449144 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193234046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15284339 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.204181641 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191971276 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218439373 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159576483 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24807538 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178962936 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182308437 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19464168 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164834628 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12117187 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172114257 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.1327056 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136797895 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188470253 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18618263 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192376074 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16091653 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152446128 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221194373 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25195238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195679598 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.325613206 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143074567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.208437328 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197344589 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287001367 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149773688 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215382767 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168191817 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140218609 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196373982 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168528378 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198665269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115769148 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150893599 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230246131 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189863559 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201506293 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146904866 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315020653 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162174273 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163050556 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194831876 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203743179 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204189595 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178469233 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12999915 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201698559 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219922802 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191350157 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.132101548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210539434 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111193104 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187052842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236200295 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198357048 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177966728 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.218162514 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144024788 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178164465 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181580014 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166037616 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183432446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171164402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101885352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161676623 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146583319 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135618892 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204040171 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104865776 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220415195 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143926965 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.387539435 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249361887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171623199 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176212089 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17815292 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179718832 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131506891 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130503426 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158747714 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17308835 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171147571 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113404933 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170761476 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154590395 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139049213 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165765822 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104593623 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170694255 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.16137768 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182411189 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177064711 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13979977 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178378382 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134983865 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171018469 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185380062 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22772667 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115316991 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141666642 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200358492 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169466907 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146647789 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188759645 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204192143 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180058405 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148211207 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181858141 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209404737 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15264415 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202568415 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15388463 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116204324 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168476335 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171289928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171548525 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164700858 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137830303 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170366879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211508829 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135896071 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119872322 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188454851 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137916683 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137157817 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124954449 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147417146 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.153162479 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15887157 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.121439758 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168285705 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172524265 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165907728 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171903262 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155826408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207044073 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142194327 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.175444124 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159658695 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102523042 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.228053327 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199375104 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110970525 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242233416 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187978677 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213925701 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179112689 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137226853 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193570846 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139899071 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104847857 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179475491 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176126222 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176662746 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19937023 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237234058 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187369616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167817779 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162521341 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184256916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186691737 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172646419 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156748636 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151198029 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212106169 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104672712 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13604584 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111504589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154141722 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141112303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141737402 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20072992 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179038839 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205658759 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17532968 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153290896 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196859899 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.138837975 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179445748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191772106 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151000385 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202482649 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19455099 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182729585 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154758842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179180738 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102837065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134086274 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147000529 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185992738 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115788708 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14563617 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155930681 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197768385 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191531414 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162040361 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24836978 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185704249 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207899532 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131827222 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149276752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182443567 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170765542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.197362216 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140238445 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17603785 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191117488 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129027171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235711523 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177174989 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185265931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219264655 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169908299 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139820235 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162732014 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181019826 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124413899 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175832542 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157642601 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14712837 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166531729 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149389659 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110386831 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227904959 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128288442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226945106 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167699808 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192296041 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105619173 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15715075 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174658916 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157369903 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100407934 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212756071 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205687582 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158728838 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173340253 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190407051 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138587805 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345719562 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205584551 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201143825 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147610639 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15640245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17489137 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169826597 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179544568 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194433548 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155620847 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192386745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174327461 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.127355093 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145664479 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160732945 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163101284 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167553581 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.118353497 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.169334211 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153828238 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203194455 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15353167 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171480618 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180256649 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.158874277 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.140101058 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153738522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211597414 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168468559 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193622639 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167014389 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180551543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24444446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10560514 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137587095 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13863336 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195068853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112577291 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17181881 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197516704 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241472184 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174213403 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182462308 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148813732 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.108921042 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175839931 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161624163 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244678286 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127709125 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15150614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206371922 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163780793 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14092343 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180086934 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297319927 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1560097 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189925159 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.103808032 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.292972325 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132102663 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141730328 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173363514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187245437 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117419525 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.197365465 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18065647 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156263031 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171240932 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148280033 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205847695 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228041659 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183764604 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220094632 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128319898 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173546916 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178028557 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217405804 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126735288 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.160254359 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17495831 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197019336 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.200369201 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146336221 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17874129 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176671679 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174718996 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194940934 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144406555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219310245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140201323 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178175709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123759264 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137276425 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173045715 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199518392 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144190139 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188804307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170487284 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138438765 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109296752 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16613626 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170351351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156930248 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139069487 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198319701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107129785 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17570429 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184690851 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139998074 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166171835 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158205559 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117055819 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156185491 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15741105 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146103843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.153112706 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195909839 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.144943781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18941273 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179243666 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179734543 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173039856 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157115132 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.676917436 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.140191386 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196444208 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131000348 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232369433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133651381 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182183866 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175788435 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161205577 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182247779 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164893908 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.242055569 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177584607 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175988012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140845653 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129157192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154245802 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145449775 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164398866 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176317966 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123632823 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152129153 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175129407 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156738598 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156040867 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122109561 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198033971 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159852279 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200607885 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197053338 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153907466 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182412188 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222537195 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111929238 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178360302 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187265368 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152785401 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167784995 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.143342144 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.121013267 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18621311 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133267491 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175675759 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173178979 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175049061 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150089385 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151321211 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17306627 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155435103 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174473842 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138420655 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141793974 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171979 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144825514 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.140696445 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167356621 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173987799 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.143320821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138666464 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181070028 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195914376 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104486707 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146007398 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298930496 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171340986 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207500563 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168985147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145298343 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125933007 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17285182 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166974776 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175024014 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.142587864 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141583065 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116829538 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196520459 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168630254 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170749939 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198413824 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176665193 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217423635 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15706637 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286622874 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120532659 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169479646 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143740023 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144258247 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126614685 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145952346 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158543307 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2084339 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186068939 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165048734 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15687263 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138163865 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105331532 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140486737 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172338954 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167020752 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142308324 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156946371 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129871631 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156858364 seconds)
  done (took 84.006997527 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150887559 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.144151588 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154951737 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206061589 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172908938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26389119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212329216 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235900256 seconds)
  done (took 2.605793812 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.185206347 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143557816 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.227104277 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131616227 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129967537 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.444891891 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.220810136 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129282449 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196852565 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.220126681 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.203579546 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.635689084 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.127290964 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.205864491 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.178546446 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130429921 seconds)
  done (took 4.571089617 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.102788767 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.679384125 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.61996621 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287609468 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.271576983 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.19396959 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.878684389 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.184031709 seconds)
  done (took 14.284640575 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133856199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149138015 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.361718714 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.226301768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168631028 seconds)
  done (took 2.1144944 seconds)
done (took 130.114958648 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107997099 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13574516 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108540774 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.139865256 seconds)
  done (took 1.552278695 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157473074 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.119284403 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092153094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117467228 seconds)
  done (took 1.557046368 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.540504402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088950608 seconds)
  done (took 1.732497653 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135471298 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.154350646 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.150856523 seconds)
  done (took 1.522761446 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.119577866 seconds)
  done (took 1.192019829 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117813491 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130440651 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.203228967 seconds)
  done (took 1.531237745 seconds)
done (took 10.162223063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107033183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435556253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.42174497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118150622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733123524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382883483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044887995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164396968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.216151579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124120414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115153177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702522074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034069186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344993603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012520133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.438810761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703454006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095166932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131084352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124885719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993936955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123981497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096990673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123502679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676539867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450974637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122182065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.459423657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123248189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103605536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.411424557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095291524 seconds)
  done (took 17.297336213 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104748039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194250504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135689398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098076609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131643749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097271917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.13547024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137290611 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206942201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095298761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143835871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095203017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130508322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096146433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146726399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123006587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09708324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123069941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104570553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126737226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114395705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12295502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098468197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124782373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095462293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156220814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12356074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109171546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124079654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102986271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128125661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12296753 seconds)
  done (took 5.032796349 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147007211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203351367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137516844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128353518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18428222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127077468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216513942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166593028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207456229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124662722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118194595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124179736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139965099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125108549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146212397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095846104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124604066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096802375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132001019 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098884859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144181849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123589333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099446333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124409943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096129578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159149666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095484577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139306633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123008347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104392899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126779319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096764095 seconds)
  done (took 5.355822993 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108793434 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138735881 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122626865 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151795624 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10290656 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135877045 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.137220381 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103940992 seconds)
  done (took 2.089210144 seconds)
done (took 30.849658289 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121234905 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142529103 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115708675 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137519536 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203772133 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099437658 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.140931775 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100211015 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137817951 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117694306 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124967039 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101390842 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143822272 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105658907 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.186294261 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139344551 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.196177763 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.190478076 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.101116047 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.138003526 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101314722 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223801279 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107808438 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.13017896 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.199006286 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099929076 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183704925 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104585606 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13517248 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133952356 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.189077248 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107021097 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130140126 seconds)
  done (took 5.665319403 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.20738308 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216254168 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102762789 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129707631 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.207686924 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101918612 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206736833 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129537045 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.101857161 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.130349036 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101177597 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.208786783 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.221236669 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.22706335 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.245837795 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.218455695 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204785014 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.214827124 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.202831081 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.222097907 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.204305155 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.13023659 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.220606872 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.218953063 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101521509 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.13079424 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.244299042 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.21646706 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.243109361 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.201720012 seconds)
  done (took 6.601601115 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109742613 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146782575 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123268754 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195004986 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160443016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.108439866 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143250867 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.150238149 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.122431221 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125061306 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.113203007 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164517861 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143634442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107857018 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130448236 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116077132 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152773659 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097304591 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134963428 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146157423 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118021548 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144907888 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112277974 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136602949 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095556199 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134037113 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130890984 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110824141 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136476353 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.117229996 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135837644 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101932312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129877118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.162004693 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103109299 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.137271143 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124353363 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137271092 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137597615 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.12240132 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.134851889 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110547544 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152069904 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.182314585 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098432601 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138646937 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110029016 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139379585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097776581 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146334077 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.174166274 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097940117 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147354841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12611076 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098501094 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138075969 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099747215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129390056 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111672598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131416357 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.123639755 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.133734813 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106509355 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128874967 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133188157 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098870283 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125590733 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102081984 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153141478 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105480841 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163008732 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097107408 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138636209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135770131 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104103271 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135735722 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098352912 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134432924 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107301241 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133323111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109175606 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129944633 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1012148 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145758891 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146124552 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.107731243 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.138064849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137695596 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102792369 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127807222 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112583148 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128756809 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103957589 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141244254 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098233673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130998823 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109623247 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136897852 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098335719 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146814866 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133166431 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09832519 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146725743 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09883863 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131723881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109201496 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.175178989 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126800628 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107426222 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139184724 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097943729 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13214119 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102264325 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125978654 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115338197 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.138681267 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103128472 seconds)
  done (took 15.885136692 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.306576139 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.319484417 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208592998 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.409496357 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124496297 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209325416 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312344345 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.33020467 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.106057833 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174357089 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19012059 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.283473267 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099727762 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.161238339 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31599484 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.381540325 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.160989767 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176616061 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174299037 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124272057 seconds)
  done (took 5.68313088 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122715234 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.177435562 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163074425 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161041062 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105338194 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14160459 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098175204 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.153321883 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.135361107 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.110635297 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.130242314 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122826797 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133733013 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138238292 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.118656683 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.176350257 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107853156 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134893661 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.153702306 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.10413933 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138292715 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159859395 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.138577567 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.131383892 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143933066 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112547967 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126195133 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105667041 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.130617584 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.133854846 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106090377 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149331194 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103953262 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133572333 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.108204506 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.1408433 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.100611708 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130432184 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.133257852 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102979433 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.144773869 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.108827545 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133568749 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095733307 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142211814 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101794022 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.140321113 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109833177 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140299614 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113655977 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139464727 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.140568491 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105328741 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149368067 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103400617 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.144828531 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.140116656 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.111287273 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.135688554 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098173027 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126545234 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10362309 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132754781 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.11114724 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138080896 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.152323144 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112968106 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128099238 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104612006 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.130310558 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131928063 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117914133 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153587564 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102690911 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.131953688 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.146931999 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104329453 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090807156 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.13866645 seconds)
  done (took 11.202084878 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128596255 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133465468 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121176046 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166788407 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.142450504 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106975949 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133474069 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119346823 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142267545 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112349665 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.141148322 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142071905 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12598072 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139772713 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104666705 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145899471 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109172126 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172149448 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149081619 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163086653 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.113807194 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134598809 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113487419 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141959321 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163504099 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.112489813 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163695739 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109715341 seconds)
  done (took 4.87570156 seconds)
done (took 51.000516672 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.276899441 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.40662671 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.187716948 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.18526549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.234343336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.196298486 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205652346 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.190319821 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.966852319 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.176911583 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.186977793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.18428264 seconds)
done (took 27.512154398 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.503256288 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.690046846 seconds)
    (2/2) benchmarking "String"...
    done (took 1.476708244 seconds)
  done (took 4.273645823 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.179582851 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.181275622 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.414309239 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.183725511 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.186103925 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.184453731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.182145938 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.189480307 seconds)
  done (took 15.629971892 seconds)
done (took 25.698139807 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.243790262 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.351991707 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.433176196 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201335449 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.214968363 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.181971785 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.201648447 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.207269073 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.192732637 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.189305715 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.604689201 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.437440164 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.21259732 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.567587655 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.183402282 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.198461785 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.199398741 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.414092927 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.18636182 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.23265313 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.175740038 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.175664698 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196542828 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.201531592 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.188505493 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.184432487 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.2367854 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.184185825 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.376707969 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.194372016 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.242011899 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.188020339 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.239224279 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.188976701 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.184902306 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.209500586 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.376307004 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.196187253 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.186124784 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.19518723 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.381145593 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.262335987 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.185652319 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.212922591 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.19117084 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.253487283 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.174721172 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.296257784 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.208347947 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.192412177 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.201841374 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.58566653 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.196331065 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.189187452 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.187959141 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.405903207 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.201030669 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.24384911 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.211588455 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.188790231 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.18648711 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.203763452 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.199227763 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.201347932 seconds)
  done (took 142.849602036 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.186944808 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.186409775 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.186577053 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.191558174 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.187822322 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.185726219 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.186275344 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.18761321 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.188662782 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.212434761 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.186431238 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.189231674 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.192128094 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.151893719 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.192596682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.211048714 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.189955978 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.20553666 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210652094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.186635804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.207317533 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.187426236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.204540506 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.188292956 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.230714025 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.286226773 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.236126211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.223322788 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.198122062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.188500185 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.229984903 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.254484801 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801088062 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057755464 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.195267725 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.207795641 seconds)
  done (took 79.825718728 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.187367021 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188403608 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188761042 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221211727 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.187342695 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.772703081 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768209631 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.918643484 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.493344206 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.564189254 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499634747 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.192980774 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28151025 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200598878 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193881229 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189251211 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203031446 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.232308115 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193209177 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188130174 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774222308 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203371211 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.281949986 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382641246 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205247655 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221938335 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594253567 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190303556 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222791625 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.522054259 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23978514 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189179057 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.579375623 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.720902742 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308147158 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190499856 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222345995 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189013569 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470629184 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191689363 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190755122 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194870444 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877650804 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.195606054 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.774756854 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195652322 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17286091 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19572337 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191930738 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.209511022 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.902762586 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.212966311 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190418349 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.193342467 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191111324 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191013481 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.224853207 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.290964014 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306607184 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209829514 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194309969 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223157709 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190616674 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.437788125 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207342439 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.662087387 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26569552 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.302761318 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779700862 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195874076 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288065942 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313394487 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19315124 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189562081 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192955156 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191173771 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304282776 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191382654 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617740258 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.368568627 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208296732 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.576554137 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295322391 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194370445 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57699541 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197219947 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191150678 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941141428 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288034909 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193433334 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193250591 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193569379 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192200156 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.625963084 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776519581 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.447165073 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196352127 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193578879 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.585441099 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196272452 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.62790506 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753566673 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885442841 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198555573 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308661937 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.369817554 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.213844787 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195342816 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.58071975 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199076078 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249659677 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19797058 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194541137 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.593235081 seconds)
  done (took 365.140027559 seconds)
done (took 588.924067878 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.044826092 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.998181634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.134105876 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.027518549 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.993311826 seconds)
  done (took 11.317005261 seconds)
done (took 12.436830331 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387675402 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386034179 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255901576 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387562538 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226884062 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403284846 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369878469 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.224170831 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300104748 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.278903036 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298183048 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250204713 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227335523 seconds)
  done (took 18.115258276 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462772562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201209587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279503646 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.441929918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239340841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467259283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.513263576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.201553174 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335771505 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21357528 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212665083 seconds)
  done (took 17.692226253 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462823557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.202661263 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288623438 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492242448 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243270848 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471108127 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.545605299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.203409032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.350778065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213476763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215266022 seconds)
  done (took 17.809728706 seconds)
done (took 54.738098361 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241130594 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.37121077 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227851343 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215845872 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209959937 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212671537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216436748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210450022 seconds)
  done (took 11.028501643 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208075444 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208167966 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20841207 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20849848 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209460734 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208577707 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209144914 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208776712 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210069442 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206760135 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209085706 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208714715 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20889521 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210300763 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207335919 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209260825 seconds)
  done (took 20.463547247 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211976166 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208214499 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209780399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209692983 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21050269 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210684651 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210979721 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209694992 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207787568 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209846191 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210097439 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2105012 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208790464 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209486493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21036682 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210227108 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21041863 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209010255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215253678 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210308562 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210768427 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210249407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210953538 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211516306 seconds)
  done (took 30.170815612 seconds)
done (took 62.786085261 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.200210637 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.212693719 seconds)
  done (took 5.536381747 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.271557247 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271835101 seconds)
  done (took 3.668409338 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213202902 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210665767 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212710247 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210484639 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210886126 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210861318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211817928 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213765603 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212254462 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213281219 seconds)
  done (took 13.245912858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212451536 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212064451 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.213751348 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213028537 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214541192 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211463693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.212823648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213252419 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211674531 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212420027 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211591481 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212391112 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213075454 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213200862 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213595668 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213010361 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213725939 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213805785 seconds)
  done (took 22.95918128 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.226320757 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234233155 seconds)
  done (took 3.585897089 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.353875472 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255727968 seconds)
    (3/7) benchmarking "month"...
    done (took 1.330153125 seconds)
    (4/7) benchmarking "year"...
    done (took 1.321146997 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.255309757 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.234600867 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.25579095 seconds)
  done (took 10.133861397 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2378527 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.4464201 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.60147491 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.212179973 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.271107356 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.312024294 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.212609296 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.314122232 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.309760167 seconds)
  done (took 15.043863522 seconds)
done (took 75.300266039 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.202643078 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.275310857 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.238816388 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224666902 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.561763906 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.225820747 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.208836394 seconds)
done (took 16.06567784 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.202391106 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.199732939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.207647809 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.208882191 seconds)
  done (took 9.946769106 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.203844697 seconds)
    (2/2) benchmarking "read"...
    done (took 1.508509613 seconds)
  done (took 4.84040007 seconds)
done (took 15.916142417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216232112 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215962935 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.215277468 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215410684 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.216060575 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216208189 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216813548 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214852688 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216012139 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216571589 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.215394539 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.21552468 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214595086 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215814054 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216686129 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214508558 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21580119 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215475051 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215650255 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214798015 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214251459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215783996 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216012133 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217591636 seconds)
  done (took 30.306743977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217439601 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216019082 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218975187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21689923 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218216372 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218095123 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21761541 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.217662209 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217770997 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218851926 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21737121 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217725744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218039053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217261362 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217945146 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218118099 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218622255 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220075132 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216143679 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217230608 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216803641 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217924499 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218617596 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218535221 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217940112 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218369621 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21722252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218883575 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218538999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21668437 seconds)
  done (took 37.666727678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.223716453 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224222806 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.216928424 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220400937 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220814472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220338719 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217859213 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218049995 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219285268 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219491209 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219005519 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220006911 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219549663 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218474208 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217747758 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.220602631 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219880605 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216029738 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220409122 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219445373 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219340829 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220123105 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218839244 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219911544 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221026216 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220695921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219719395 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220524565 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219319279 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21946234 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222189242 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21906416 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22058398 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219275437 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219465932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221979798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225967916 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22577201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221196435 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221530699 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22056405 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219940168 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220605598 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222241704 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220005307 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221709001 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222244702 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223592503 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220720226 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222612865 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221940546 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220591025 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223391767 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223177205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221363282 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222262874 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222507521 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222752645 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222839695 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221340394 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221681506 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.222880229 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222344516 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222452414 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223071898 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222518392 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221518826 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223434747 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.2217869 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.223183364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222261409 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222445126 seconds)
  done (took 89.049393683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224117626 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223366827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221922403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223467509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222849762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222937843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223346663 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222574373 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223111644 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.223780636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223648184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223404327 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223674804 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224461899 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223015794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224320378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222411168 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223432613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222780424 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223600725 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224127461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223273 seconds)
  done (took 28.049949461 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222447816 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226683933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223345313 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225381675 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224444112 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223715658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223438498 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225629131 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224902438 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224314895 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2239134 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225593749 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226581204 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225436847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23070744 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225375501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224253599 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22452704 seconds)
  done (took 23.188706616 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224902199 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22451142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224918354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226168469 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224924594 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226480604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225167306 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224283174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226328284 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224700661 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.224422991 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225587937 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225289807 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225579012 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22628627 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225255847 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225836445 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226163643 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226317566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226949799 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227810804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225963197 seconds)
  done (took 28.101477745 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225452835 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226910953 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225859074 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228803422 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227169103 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226308314 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.226239363 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227230452 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228401113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228005036 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226206298 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225975494 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227870799 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228001032 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227842794 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226853722 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22852964 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228752661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228642401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225415688 seconds)
  done (took 25.685292833 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231641358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230539562 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229788049 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229458519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229407919 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23033839 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23081549 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228476785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229490588 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230887232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229813036 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230513215 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229024255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229279998 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230814312 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229040688 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230715441 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230700076 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22999649 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231172232 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230357566 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231278862 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230022633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229752292 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230858473 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232239003 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233186669 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231733261 seconds)
  done (took 35.592618903 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231626338 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228658574 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231005252 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.231617278 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231504057 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229756945 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231197946 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230498206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229677828 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231218699 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231081904 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230333584 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231263597 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230761348 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23042566 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230577748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231117616 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230966209 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231085956 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231068016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232827308 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232760314 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232014514 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230951155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232725991 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232824313 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232371696 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232439403 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231768748 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232681961 seconds)
  done (took 38.083986107 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.230205917 seconds)
    (2/2) benchmarking "in"...
    done (took 2.229252052 seconds)
  done (took 5.603315412 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233655005 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233129922 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233340564 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233430797 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234164517 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233519718 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232205658 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232118413 seconds)
  done (took 11.00985608 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228107378 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234497521 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233520504 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233643976 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233680073 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227816716 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238197304 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239329391 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229780653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229866097 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233140653 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23591987 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232391238 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232082104 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.231384671 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230971862 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238501662 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23278278 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234000845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234321222 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234482668 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233101508 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237383698 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237907565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230790872 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24033754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239636568 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238404717 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230346649 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235108875 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.233015173 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236491716 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236094907 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234203217 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235756368 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235848387 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241188292 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257212258 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239764399 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240489626 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238249583 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234679631 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231707389 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.234861359 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235134232 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238315847 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235091577 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.234757979 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231204174 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.236254887 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242175702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230887438 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239224448 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234765929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.23670448 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241580936 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.262805676 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234737932 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24040319 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243226081 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.251077244 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247287321 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238198632 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241234246 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242959598 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251459801 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242169537 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.241893997 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236604983 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237722291 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239930089 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251097096 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24869427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239375544 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238209796 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.237754867 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234183226 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239426256 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241024016 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243484749 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239598242 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239428902 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242001237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250264115 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23466129 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239803693 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239300713 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238958521 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.233669423 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246570633 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263584323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238810551 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235039933 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234959054 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237706821 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240005773 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233717814 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23700383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239966503 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240867194 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240375192 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238344149 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242573545 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24120625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239021318 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242288896 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246145441 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236944167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243372152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244824085 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2401586 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.235649317 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240067493 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241274164 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237179743 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24365279 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.24296604 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236146412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241754984 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242708826 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245241197 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257890312 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243572183 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242321708 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240664756 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24946552 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240468899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239675747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244034912 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242062578 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242649622 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238457551 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243392974 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.239278289 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243516265 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238607461 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242976183 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24354337 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.241468195 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.239959355 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241642106 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23947868 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24112322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.243064815 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244423701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240451283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.24747411 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242790866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240987078 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243735832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24515996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243606413 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240512201 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243205347 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239534794 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245233833 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239617428 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244855506 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24420101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243950801 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244278139 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238946031 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242304794 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245427919 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243243922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242208588 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244981948 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242836827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24264601 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237746176 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246207609 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238086716 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24288618 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251038764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245364875 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243876117 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.242193615 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245679634 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245099592 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243479877 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242086959 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247768644 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24521708 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247695223 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249671748 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244198418 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244001781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240121887 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240541639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245684634 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243564331 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252077089 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254861344 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255587441 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24189633 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.247865215 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240497134 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.248564977 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244569001 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247133112 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246834976 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244075959 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24223528 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246791234 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.24281042 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248494897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240155165 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246512289 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249004492 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246233958 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247868863 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242231183 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244814904 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248095636 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246757711 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247033159 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242801128 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.247960529 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.24084196 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.243137291 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248724569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247174485 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248720275 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252916813 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24474332 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249065637 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244512297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243582818 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248553322 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246648872 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.245579186 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254162954 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249077007 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244386845 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252636006 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269970299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243372682 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.247541681 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251554773 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249182342 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245408151 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.254357048 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249572813 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.24709267 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248108197 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245651569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249714116 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25273243 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252766644 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.244929065 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250604049 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245538771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250921766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246662911 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.247595775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248616673 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250695737 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253815237 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251303745 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245404247 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250235946 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250059878 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248846226 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24681945 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256098377 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251252952 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.24920602 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.248714659 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248117831 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252982426 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246105256 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250326243 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.246428477 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260060005 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264742368 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25319006 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.252081631 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253831927 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254147429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.253790494 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249282016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246524864 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248399771 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248422682 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247232344 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253154903 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247174461 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251263621 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250181938 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251353329 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256261235 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252661564 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245920245 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25257193 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252075541 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252115324 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246385093 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.252827692 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250476001 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250618745 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248653638 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247105873 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257437705 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25426683 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249927161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249351108 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250930103 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246856252 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250053507 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25510016 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252399 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258188225 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25105262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254111506 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250580733 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259092592 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256161315 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251248923 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.258256179 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252019814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.246840053 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249408503 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255102861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257684087 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260328901 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.2501894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257373073 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25333866 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255249161 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253545239 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254682954 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254380707 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252862765 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26059702 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277470293 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252549611 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255071638 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25728141 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254832855 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255292981 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251450772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255856672 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.258066246 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.252726809 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252713423 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254422433 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255425245 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258656093 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.256510866 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257673779 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257417589 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262983351 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.259867778 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258570252 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258643743 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261750603 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262050099 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260420619 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265045472 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251751559 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258288848 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256346056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252728125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253230379 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253598674 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258788515 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253005194 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259709714 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257136519 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255273897 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256080474 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260519704 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.251094253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262539287 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273946278 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255035662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261260023 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257084147 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253820985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.260130215 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257297888 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.25200324 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.256464296 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262475674 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263350673 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253912899 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.2590649 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2544029 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260150087 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256383655 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258424017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256833747 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258258155 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.25491972 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258446103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25845745 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261602928 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255570773 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25586328 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25503724 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264667586 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263231483 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.256107047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26102317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259222895 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253741607 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256471838 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.260159024 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254199415 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260321773 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255567307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260706 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.258885202 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.260201308 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258484858 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.260157999 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255458588 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.255938524 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259863407 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260068734 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260233475 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256549206 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261387192 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256750065 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256015177 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26125832 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256919016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262235468 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258375781 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262642894 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257589134 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261098124 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259502958 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261386899 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254503631 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258908682 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264585104 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26229168 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264254362 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261991947 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.264390825 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258292541 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260609064 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262503262 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.257251914 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25952494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.262073991 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257560038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257400949 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258509248 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261938133 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.265209753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.261634363 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255757936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267319437 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287409396 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263650117 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259227627 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261116483 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259363415 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263576333 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.263739779 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257894819 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268862412 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.265349419 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264350433 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26068004 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262136893 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259704795 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265375593 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262849336 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260355884 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264691116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26045435 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265296367 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264618364 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263954612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259085905 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.259361626 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26215541 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262857264 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264115881 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264183844 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262549447 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.262376377 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26638371 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264330897 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26453037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264267815 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258396672 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262858757 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259430639 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264757824 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261645106 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.262684157 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267193151 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264971322 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261600718 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268255108 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272093518 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266121576 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259878537 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.263272722 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267020388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268926575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266248297 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261579031 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262326137 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.267668922 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265107826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263900245 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263863334 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275825084 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292729932 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263025652 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.260624588 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267346309 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269119164 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.26673792 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266448485 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26358683 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.265776195 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.272041549 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265748533 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269617712 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287494706 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262930521 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269542144 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264929318 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266150128 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266971507 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269246602 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267088726 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266551254 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274722646 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270841652 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271978565 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289001952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.268725125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266485296 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270201491 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262390604 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268377697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264125216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.270157708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26781684 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267834238 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.267986644 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264760715 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270636479 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266994717 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272150322 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.267881209 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264095532 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265734108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270045701 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269689952 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.26962944 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270113089 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.268785583 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268729701 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.263673683 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277440673 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281682839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270454619 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269694309 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269113883 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269786544 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.270118199 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27263774 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.275437228 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268588743 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269781865 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267957837 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272702912 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272353674 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265291885 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266594588 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263751264 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271992218 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28090534 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28319345 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270996899 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269193254 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271200464 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271266117 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26680508 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272778025 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271344723 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266491208 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269006644 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274504793 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272089086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270196388 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268502983 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274909022 seconds)
  done (took 747.849806569 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271951027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27065244 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270600807 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272309274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26888787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26968869 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271251445 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272436875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27089019 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269849485 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272591358 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272431893 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271025523 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27340137 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271220332 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271829338 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273441763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272496228 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272749149 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272973369 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270690248 seconds)
  done (took 27.882081651 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27295728 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.271525162 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272677602 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27412304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272161505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272952636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272405368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271994082 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272191243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271862214 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273409762 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273425222 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272761588 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270649149 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272585471 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273375202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27451089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274754522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275138108 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271978521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272960015 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274647152 seconds)
  done (took 29.184950687 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274458744 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272538255 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270650012 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.273658703 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.273679854 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.274287623 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.275168698 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.275049035 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274086588 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.269770183 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269515721 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.270384054 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275194966 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.280070698 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.272955313 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.276472868 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274166799 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274723867 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274750585 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27342155 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277485146 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.280046625 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.274411913 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.270520169 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.276232561 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276771484 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.273753897 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275876093 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.270850152 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277490883 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.275932338 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270235376 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27536818 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.273494999 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.272632693 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27834051 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277425648 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.274624166 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.275806441 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279424252 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.290980114 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276291002 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27838074 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.281819166 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.275767568 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272919976 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.28120802 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.276525015 seconds)
  done (took 62.399139983 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276559053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.275566244 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.277516795 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276484218 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27715585 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27633563 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.277058024 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277553453 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.276463767 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278162142 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277581255 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.276423277 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27628409 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.27628081 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277510555 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277343865 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277196409 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277897937 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.276477967 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279425523 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279345199 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278099055 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27733873 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278689331 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277888335 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277625189 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277562084 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.278885646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.278825763 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.277665137 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280755315 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278963722 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277257622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.277958309 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277846743 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.27957411 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.278042651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279257684 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279973241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.279797511 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277914715 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278161293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278736376 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281436438 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280520689 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280134914 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279309452 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280326803 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279397946 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.280433915 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27994762 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280335278 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278590273 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.279730002 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27934716 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280048655 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280392097 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280571049 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.279836422 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.280675764 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.279986306 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280580969 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281196782 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.280249841 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.280671999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28151315 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280384986 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.2792228 seconds)
  done (took 88.135210549 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281027337 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.281924246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28159543 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282336418 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280214618 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.279685449 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280044822 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280932799 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279929067 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281633765 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280528237 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281019941 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282733481 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28006508 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282471829 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280910473 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279582569 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279217649 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281694557 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28135652 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281815982 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283187248 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282378558 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281806712 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283148192 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281608306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282108048 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282484594 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283802804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280437575 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282894479 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.282202203 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281352517 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282006043 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281903652 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.284409411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282215052 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283550433 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282928477 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283003948 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285082517 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283499547 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284957166 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282435606 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282593249 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282241957 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284363069 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282167722 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283205926 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283767421 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.284122531 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284262268 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283146444 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283893255 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28341018 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283190963 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284467746 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283684328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284961264 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284673103 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285822498 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283407105 seconds)
  done (took 80.702296038 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284399308 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28400478 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284731549 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.284072707 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285358831 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285302731 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282803596 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284849782 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283711796 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283985838 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286397749 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284543078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285814306 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285324592 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284627007 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285481775 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284556249 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284099029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285480236 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286821306 seconds)
  done (took 26.887019942 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.284204217 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283964571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286040212 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285857182 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28565701 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285079831 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285117997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28577218 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285930236 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283667322 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286296101 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285798688 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2858322 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286854235 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286174798 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286885907 seconds)
  done (took 21.760585025 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287451693 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286216647 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2868521 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286872019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286497588 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286215002 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28592875 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.286568859 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285701217 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285535987 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285081284 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287378717 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287423013 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286522656 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.287446052 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286165079 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286103483 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286007003 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.287685348 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286838584 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286677394 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285035216 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288171843 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286403088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.286766845 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287628385 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.287479498 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287742854 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288946896 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288060829 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288359312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.288512759 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290035473 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287432309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289366276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288156538 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288325048 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.288877179 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286902921 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.290598584 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.290557471 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289904718 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287761905 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.288602499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290085639 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291045381 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290284372 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290786106 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.288569344 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290364815 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29018458 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289099043 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290857033 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287636632 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289428514 seconds)
  done (took 72.029739661 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28865227 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289486899 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290075858 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29122405 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290608184 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290751211 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289724166 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292050991 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290818608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292157565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291225735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292149027 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289327403 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291558373 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288837186 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290756467 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291332016 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29107343 seconds)
  done (took 24.426501723 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291174549 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291523882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290487331 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290850524 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291392183 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292975147 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291390347 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291730376 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291813654 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29315179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291471742 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293059397 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293177286 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.293318496 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292741543 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292803975 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293702239 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294156862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293558998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291757139 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29189175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292661274 seconds)
  done (took 29.626842877 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.288574807 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.286687572 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.286447696 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.302924983 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.302986873 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.286012933 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.287123822 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.285884898 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308680681 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.335895284 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.329066899 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.302570486 seconds)
  done (took 16.799196279 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291427977 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294583181 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293641051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293168833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292783656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294442542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294279165 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292589918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293742457 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294519807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295100285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295327886 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293137602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294634427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292923715 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294324065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295436099 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293980272 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29471064 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294288275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293021603 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294738177 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294083137 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294631303 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293989679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295580327 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29377607 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294496062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29603257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295694316 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29430836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296759238 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295731914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296892579 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296036818 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295342568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295273518 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297407495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293716041 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296435399 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296605582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296690687 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295672016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29506727 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296293653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29703737 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296069669 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295590937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295903854 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295507442 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29615495 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29548346 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29728884 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297202965 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295795603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297358382 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297050028 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295935989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295582183 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29719651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29871411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296101014 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295355336 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296012451 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295989865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295750688 seconds)
  done (took 86.686017785 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295521302 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296958896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295556051 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295925671 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295255319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294781669 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295252638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296064925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29554044 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296835693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295251077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293697025 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295463717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294471837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296837838 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296305832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294662605 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295821723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294512159 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295860318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294755178 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294870923 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295107202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297273099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294991015 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295389075 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294497807 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29607164 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295355044 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293533479 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293569007 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295192992 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29532405 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29405974 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295725602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295044713 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294333499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294852503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29614285 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294411364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294731566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295160197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294867334 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295152138 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296620688 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294829203 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295088487 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295039849 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295689665 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294992759 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295995773 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295967994 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298478924 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295709043 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298033074 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298077263 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296888794 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297518477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295042187 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296742232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298409748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296682019 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298054393 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297799478 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296185019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297890977 seconds)
  done (took 86.72122372 seconds)
done (took 1754.558762708 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4669962 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417527097 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291893931 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.328078543 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291321008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.287322997 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.304177946 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289905897 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29114704 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290196619 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290656907 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.521044006 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.290176087 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291604718 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290135827 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391864165 seconds)
  done (took 26.536122267 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.320821966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299675943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.415172839 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311515675 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320994853 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496687532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357725103 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.29590728 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.473809488 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.314850147 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.287149147 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318843307 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293552202 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.297852041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313603359 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496640024 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.55748837 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.285947849 seconds)
  done (took 28.65860522 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.76322922 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.295910865 seconds)
  done (took 5.260321395 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.31379258 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294811096 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295363121 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294198499 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.286421401 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.305780989 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292800776 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.291014487 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.306300699 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423753641 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.298623291 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.307707816 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.311877068 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294016196 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29932099 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341601464 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458035949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299608445 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297794185 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299910044 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295130841 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395591423 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.34077591 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303464794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424149998 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.290314463 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297326587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304112821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442576783 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.2993487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.297320768 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295635128 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29656673 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.288455767 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.769326365 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.312358791 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.304672895 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321027549 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299346193 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436367778 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296088061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30273419 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.288756785 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754846057 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436144076 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426915939 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.306087367 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314359212 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299485294 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.37148269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296335459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299040938 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35499048 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.193890607 seconds)
  done (took 83.470914162 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.322375041 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.29113514 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470553012 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.316502008 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295786202 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290504958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.290317541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.590158377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316749999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292315386 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.608435584 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864625567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307592626 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.301830311 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.249720515 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.293810858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29458927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.29211653 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.2920219 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.293096391 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857183964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295884691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.293342677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.456467002 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331532906 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812571799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.290296638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.296735856 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.31011831 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.292524233 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817281321 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318123211 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.310098909 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.293790688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574346175 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679126711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64972212 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.296206383 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313996308 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.294699621 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.318641894 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807889853 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662686219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.294236717 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30986227 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816328803 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.294106204 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.305302193 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.302596389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549197753 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.293530532 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.294597081 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.291587245 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31006038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.292397845 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.314725397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381919897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.8156471 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293675169 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.293360747 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321202025 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294270588 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.299518091 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294757555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316367821 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66530318 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539562495 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.302560469 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.664439476 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813199675 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.312406941 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905470022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310923996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.297767808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.351765656 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294808806 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.294514099 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805841254 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316992552 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293917425 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645273271 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297899883 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590838879 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.311461254 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294226222 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884115551 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.300775795 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.309582921 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.294821603 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.293507257 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310937395 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298099729 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.595645612 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.367959079 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293027669 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.293411551 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.338750961 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295702219 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312402031 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300908403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885573395 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.325306762 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293287671 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297472952 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293220471 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.296982436 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.295440012 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294633854 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56758172 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.296341847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.319515339 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294772478 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295599197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.299574703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441373365 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.300302997 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611259493 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.293392189 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293039302 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.294680206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293871098 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325166026 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294840644 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.296547696 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.20556258 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.560808571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.319119567 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.295250027 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292957172 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294280749 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31556208 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295689694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.390654756 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.298571516 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083644074 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332626744 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.316437822 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.29418694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.302636059 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300303753 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29638187 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295640092 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594495179 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576362604 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.549752426 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294669997 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294496513 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065850721 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345792858 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471333999 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3130461 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293612884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543495043 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.549151356 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295570098 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.293822883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.29469649 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559802599 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.294973211 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621313453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8404053 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315300829 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.303810365 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.075257807 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.07221747 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.299080384 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.295341564 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584920436 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.310538486 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.29453723 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.292540835 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.29603888 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294759476 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.313457369 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.300415544 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.29380598 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.294936769 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.355454054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48386092 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.30968229 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300438679 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796146572 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367766135 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293988631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.320388342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.295229637 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29407685 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406467726 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.297074386 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.327885395 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293977542 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.304152861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826914224 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295282496 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.300590988 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485216509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992468523 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.315225566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.294764468 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295658174 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.307842183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823185995 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.328320198 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.606958506 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.300061537 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.333946799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296063566 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.385621712 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821415575 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299525196 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295253329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950857331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.312072394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.93932776 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.295518913 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.299289338 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882265535 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314751322 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.297882201 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.298286293 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295699825 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.615795525 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.295614056 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.292652965 seconds)
  done (took 490.70524254 seconds)
done (took 635.831284026 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295367911 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.295898672 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.290652007 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30220746 seconds)
  done (took 10.391353111 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309616743 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.301472685 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.306282394 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301169151 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.308786074 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.300771254 seconds)
  done (took 9.034910393 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295936954 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29674944 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.299984022 seconds)
  done (took 8.101626345 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.510430438 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.318833114 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.623922058 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.310790712 seconds)
  done (took 8.970470897 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306729097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.308031711 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.306225125 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307668036 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.309382737 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.310674957 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.308741704 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.308015216 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311046056 seconds)
  done (took 12.982008153 seconds)
done (took 50.688745232 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.402856614 seconds)
    (2/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.429785263 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.442190799 seconds)
    (4/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.356811698 seconds)
    (5/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.298395457 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.353871205 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.395520336 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.288082615 seconds)
    (9/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.476002709 seconds)
    (10/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.055732321 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344768492 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.083420794 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.235840049 seconds)
    (14/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.341971763 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.118945036 seconds)
    (16/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.447136267 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.3078761 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.287425643 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.458633751 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.373008102 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.325320651 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.402111703 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.333588063 seconds)
    (24/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.343533562 seconds)
    (25/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.3106096 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.291304164 seconds)
    (27/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.349690841 seconds)
    (28/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.333516163 seconds)
    (29/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.327826007 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.295006644 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.045744277 seconds)
    (32/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.330640095 seconds)
    (33/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.287999456 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.432652349 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.366459853 seconds)
    (36/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.327951124 seconds)
    (37/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336752586 seconds)
    (38/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.450734082 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.304853576 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.394216432 seconds)
    (41/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.286051141 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.334678255 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.382996635 seconds)
    (44/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.292760983 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.325117077 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.295022536 seconds)
    (47/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343176741 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.287110387 seconds)
    (49/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.290004826 seconds)
    (50/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.953868188 seconds)
    (51/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.379205739 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.312060042 seconds)
    (53/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.343289284 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.441468825 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.373635107 seconds)
    (56/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.402379424 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.983197362 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.471841727 seconds)
    (59/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.333333143 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.949038318 seconds)
    (61/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.392937185 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.28738641 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.095789583 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.301760486 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.312337139 seconds)
    (66/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.399584498 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.186081936 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.562322298 seconds)
    (69/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.955610122 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.336802857 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.317944755 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.309881957 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.372883174 seconds)
    (74/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.330211834 seconds)
    (75/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.287007727 seconds)
    (76/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.431563095 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.336752446 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.423969883 seconds)
    (79/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.306601522 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.039956195 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.306645229 seconds)
    (82/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.313277221 seconds)
    (83/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.313479049 seconds)
    (84/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.43137982 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.369441419 seconds)
    (86/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.376604422 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.465059094 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.392525861 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.329617315 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.366095699 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.467908278 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.44961493 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.30005037 seconds)
    (94/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.344567026 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.402586673 seconds)
    (96/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.286361155 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.441664941 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.376782977 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.350840981 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.399388838 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.327070579 seconds)
    (102/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.446712601 seconds)
    (103/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.29925272 seconds)
    (104/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.396926934 seconds)
    (105/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.948262571 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.288943891 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.518797752 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352507543 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.054080074 seconds)
    (110/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.365730863 seconds)
    (111/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.39654896 seconds)
    (112/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.401865508 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.334422818 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.434408966 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.394680198 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.048896804 seconds)
    (117/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.346155982 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.474123555 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344562772 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.36548954 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.495037651 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287888754 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.986077587 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.349378091 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.388973345 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338343544 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.288669975 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.308008567 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.314282864 seconds)
    (130/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.447964905 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.286743844 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.50273986 seconds)
    (133/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.359778205 seconds)
    (134/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.322666967 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.461356606 seconds)
    (136/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.323312712 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.330474712 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.29589791 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.314306869 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.42879618 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.372926421 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.991235935 seconds)
    (143/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.289466076 seconds)
    (144/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.502691901 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.466148202 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.006630638 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332972145 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.12207003 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.289117833 seconds)
    (150/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.3409973 seconds)
    (151/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.456570025 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.350498227 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.397048815 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.432142621 seconds)
    (155/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447087109 seconds)
    (156/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.086087122 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.366364378 seconds)
    (158/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.300394009 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.50773619 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.349393017 seconds)
    (161/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288816097 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.39941958 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.399622161 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.435720733 seconds)
    (165/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.391183492 seconds)
    (166/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.291174448 seconds)
    (167/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.461212022 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.520223435 seconds)
    (169/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.177998704 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.00788042 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.357623643 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.300922431 seconds)
    (173/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.446436555 seconds)
    (174/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.328023761 seconds)
    (175/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.470720143 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.386021572 seconds)
    (177/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.408721585 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.08441743 seconds)
    (179/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.372440442 seconds)
    (180/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.35325739 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.411486498 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.291542867 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.525570887 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.387960084 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.439139613 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.392507815 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.548250633 seconds)
    (188/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.052937056 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.317856183 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.219302141 seconds)
    (191/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.467988914 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.00851876 seconds)
  done (took 330.2860099 seconds)
done (took 331.494598428 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322773059 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.492495124 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.307605556 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.308170554 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309234338 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.310805681 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335814975 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.307275043 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.328785782 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330019833 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.310339989 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.324311798 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.32222938 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.326090428 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.340998977 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308066268 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.30916206 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.327272405 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333050841 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.333531016 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309250107 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310762992 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.338199903 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.307711236 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317459658 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316901546 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.314939647 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.30255447 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325801154 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.33207047 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.31305937 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.317553947 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.33180704 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328902425 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310679064 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.325718121 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31182284 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.492874784 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.33668727 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.32611351 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325765915 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.334161193 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.314213706 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.313967545 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.328173869 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.340470687 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319798465 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.324012477 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30250439 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.298075455 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327569319 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.33011545 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.326648842 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.299269672 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.308908297 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.329516432 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.326588267 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326631445 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326078423 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311543625 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.344913868 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32655991 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33015859 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3190471 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.326144497 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.323964749 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.328919202 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.336273414 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.327089764 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31302379 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312027639 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.327512557 seconds)
done (took 104.705140623 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.433649936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.312149758 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.454766506 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.314948861 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.476965549 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454527418 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.315797457 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.318893743 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.316611349 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.124655835 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.317014361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.31731546 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.313297788 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.317344253 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440993129 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.317289472 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.317618956 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.036027084 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.318605406 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.453899969 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.313296532 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.317977656 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.316364816 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.145780166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.313287821 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.308534546 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452572781 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.317605755 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.043323676 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.307555477 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.312073208 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.044693094 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454882529 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.336809094 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.327168295 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.32749412 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.473460361 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.336782676 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43280625 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433696396 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.456940792 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.356815913 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.309782079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.314072235 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.31967611 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.317935487 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.31957026 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.346979692 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.314249031 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.319706597 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.028107051 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.32798005 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.328531102 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.318900216 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.319863178 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.339395849 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.320686713 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.322231014 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453673883 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.320789837 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436354565 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.14580092 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.137319555 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.319676924 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.314055575 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.320452358 seconds)
  done (took 107.334466159 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.38189902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.390156144 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.42274524 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.316327417 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.36398219 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.426662693 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.316975814 seconds)
  done (took 10.836162149 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.321712286 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.320684344 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36729581 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363791825 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.320850841 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.474539252 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.320226329 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.328864948 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.32162501 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367338839 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.320673656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.322262628 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.32942211 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.31487159 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363767861 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.327763713 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.429713636 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.319500746 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.321921478 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468118901 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321292461 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.331039147 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.383547195 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.329488517 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.324057417 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.3253884 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.090819056 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321136874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.322087148 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.321856187 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323239278 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.375879683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.322046856 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.316923583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.320926613 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435411811 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.322598149 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.320854333 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.323632888 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.319391058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.322514444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.324014074 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.322174569 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.322898192 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.323039572 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.342669298 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.322964198 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.323973096 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32376282 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322346228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.369847768 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323873867 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.323022997 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.323143259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.375557452 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33377639 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.323177447 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.323643236 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323193368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.324124663 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.471169152 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368326503 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.323040783 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366193821 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323521808 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.323450012 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.324415908 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.323954462 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411149928 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.323742995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3692777 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.324656567 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.502531935 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.343621315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.325802094 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.32432063 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.323987126 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326146864 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.318180964 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328336622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.325046983 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.322138686 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.32657371 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327019407 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325646462 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478525681 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.432098937 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.323948665 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.333957561 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.33102407 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.325943507 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.373759026 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.325336206 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.326636261 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373419867 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.437029164 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.389291502 seconds)
  done (took 136.41621075 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.335002529 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.334023703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.325631693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.350194048 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.323145456 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.32163726 seconds)
  done (took 9.213930093 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.324532124 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.328020595 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.326537722 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.327757394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.326060623 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.32883017 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.328165527 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324646254 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.329229194 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.32645525 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.32801998 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.33047078 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.331102229 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.326558796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.329001701 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.329083229 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.330843392 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328560455 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.329712732 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330746423 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.322955278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.328829888 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328126993 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.326312688 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.332359806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.330632624 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34376723 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.328916095 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.330395846 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.330455356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.348341959 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.329495352 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.325759443 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.328294043 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3319861 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.326222355 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330738983 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.333663593 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328457726 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.331296853 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.333475528 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330384648 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.328540334 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.331853507 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.324871752 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329608143 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.334713614 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346524295 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.330293456 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.332141367 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335799349 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.329496975 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.329312433 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335072886 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.328628047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343226111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.334849985 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.332063571 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.331598703 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.327375157 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.332516152 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.329789756 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329667217 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.333763217 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.330506409 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.334315792 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.327089477 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333021323 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333450233 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.331764479 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.335150917 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.331765586 seconds)
  done (took 98.042757853 seconds)
done (took 363.057132954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.647423578 seconds)
  done (took 11.87491462 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.589324023 seconds)
  done (took 3.819721047 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.720518384 seconds)
  done (took 22.21049991 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.357896739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.379683596 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.32480419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.30475335 seconds)
  done (took 10.589736925 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.405772977 seconds)
  done (took 3.620697403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.300505496 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.301671528 seconds)
  done (took 5.811138749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.489520911 seconds)
  done (took 3.697150982 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.442908952 seconds)
  done (took 3.650533933 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.322350446 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.313495659 seconds)
  done (took 5.845823785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.275366164 seconds)
  done (took 3.471417039 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.680312566 seconds)
  done (took 30.877335195 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.290908447 seconds)
  done (took 3.481467594 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.347764425 seconds)
  done (took 3.536904964 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.668250429 seconds)
  done (took 5.852679112 seconds)
done (took 119.570559874 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.266961441 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.272176018 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.269099056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.272626459 seconds)
  done (took 10.266464968 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.344667981 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.352864936 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.347597799 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.340893206 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.335977729 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.345379954 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.316141687 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.297972992 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.341002108 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.334040722 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.356450874 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.343768848 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.343287581 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.306384321 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.332075643 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.352815868 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.341347286 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.348180009 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.300147864 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.334010031 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.275123346 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.342829382 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.334743831 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.273557195 seconds)
  done (took 33.124965341 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.764548362 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.340142998 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.425252684 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.325577846 seconds)
  done (took 7.035659439 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.378368514 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.380060139 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.392433935 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.435003382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.4571516 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.39184797 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.30269744 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.29609422 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.281449624 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.379737415 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.407569545 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.344060778 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.562671728 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.275116095 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.615064417 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.275250663 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.277070394 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.36812021 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.428123285 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.4665469 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.277390169 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.379347527 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.367444073 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.345124848 seconds)
  done (took 34.266404667 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.285507697 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.298521963 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.277948899 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.294496193 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.278483947 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.278891401 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.28013998 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.284360256 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.277681067 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.278153657 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.278183077 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.29429785 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.281764365 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.278145772 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.286027408 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.280344629 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.279917999 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.287395775 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.288329846 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.278422047 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.280084094 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.283633103 seconds)
  done (took 29.415080851 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.268075786 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.266853937 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.618447365 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.635049718 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.269779846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.272863704 seconds)
  done (took 13.514429515 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.339429967 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.48929852 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.273850704 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.606632887 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.700436002 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.278463869 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.274506892 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.508985131 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.808594484 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.786111121 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.333313575 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.342921644 seconds)
  done (took 18.926679781 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.270970076 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.272544997 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.274401782 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.291603704 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.327094634 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.280825723 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.283797139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.268498103 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.33020837 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.331603765 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.27967525 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.327665934 seconds)
  done (took 20.723204464 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368873041 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273536095 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273596014 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320945969 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292038936 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116388742 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333866438 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984746003 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.299056462 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551060545 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28886426 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36771593 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.531948569 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280244963 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286033027 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277953626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506295533 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770279072 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279360838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275276916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325384207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288192111 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277009729 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.487797163 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117319628 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272150127 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.667262124 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271445324 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540478861 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288656998 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281878335 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271489463 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548804352 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916557259 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396869497 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47090865 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288989781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273106154 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.267765596 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.282197054 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275682425 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275411444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283516854 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273376197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273609544 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273904852 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985352526 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.299752739 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.272476404 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273124303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517873521 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374132458 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.279704698 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273272474 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289808704 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274159643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.280718084 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399936935 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855389616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275602845 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291687722 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.280004472 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27064725 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27548034 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922806744 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.281767488 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.280637968 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279290135 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274971282 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275246865 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291379048 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275251809 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.327750454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276986679 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999317718 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283243326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292625157 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834165332 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286682229 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.281887805 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505429281 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277255547 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277052588 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.275723108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27606922 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952576412 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29381051 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.261760048 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340811867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992405036 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.493595114 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294818966 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306354974 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49732922 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.26223658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277041738 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.281415594 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279161855 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296364862 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.971467676 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293904531 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.678275769 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533044345 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.235493201 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276286621 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.269314607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734627529 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305782021 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.295932374 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276114172 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.479421158 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.850090562 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293360868 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285689117 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315024142 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277002947 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989864345 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294371807 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.286518714 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277777674 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553955952 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.046688857 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280463935 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339358648 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288388977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.277992943 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278375592 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280684035 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27873049 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.471032282 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29755315 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.307971377 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.278295067 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278291284 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.286983486 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28360923 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.280156303 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.499415372 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28285567 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560690759 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279597894 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27966541 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279084126 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.500685839 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.28267106 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.287018951 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540897129 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279973255 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.300040258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294414952 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312390849 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389301298 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311204775 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.279257919 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554384899 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.777732843 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.286859798 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279317566 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282917189 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283331697 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.287989755 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278672427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866513611 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283260474 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284347629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281995206 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.297292031 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342149176 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289489435 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.482774678 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.282666959 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301239663 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.290138898 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.287958129 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508471149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290865128 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.291457457 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359007636 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.735905853 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885430281 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301754893 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.28292847 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.283501073 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.279251379 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282061928 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282327388 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282169138 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483006388 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.2967536 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282260111 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861592799 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284468623 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283513328 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.707809472 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293145292 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.288883107 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283612992 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.295893556 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296294873 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286134215 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.295809487 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419325001 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.298614838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281601526 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.801595385 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29094989 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282864725 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283824269 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314918092 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282696174 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074566196 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544136671 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282734905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529046354 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290725002 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.302441154 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.282941121 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296146153 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287761445 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.300240819 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314990535 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.293086283 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284710878 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287233119 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845855366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067094276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821973768 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303022051 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.288739167 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287977843 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981035524 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303856696 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286171403 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516886207 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98288835 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305676748 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739738646 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.310142371 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018811192 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535397379 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522096147 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300855757 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.298559071 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534177594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249590284 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319130322 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290510283 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289498011 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.273333955 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817687563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316092748 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367039242 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990500238 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316731036 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287905544 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.35076936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288290721 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671992743 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3048868 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286598753 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287308991 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289510439 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079510519 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288661797 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287660971 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937705002 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290713931 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.752558333 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306140668 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.490032583 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.301362778 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.290530228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.288580475 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.296840381 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.540541896 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532999873 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295256394 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288471464 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851771685 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.159700056 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.295621146 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288518811 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007660932 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295197736 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58197273 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.301523981 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.295583142 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306846564 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.289521874 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288576836 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.288847397 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295324599 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289271308 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777332948 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.312069519 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290287932 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300428739 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294388526 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.542874313 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.30501901 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858394556 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524506184 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289405579 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341105543 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.295462617 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290951055 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.279256782 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290666219 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290818494 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345821445 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511994285 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295408067 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.282734473 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299189634 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250659514 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290402224 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295200301 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524124319 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.297587437 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.297027227 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035083775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327652167 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.294754693 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296359804 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29156549 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337355281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377570504 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49173104 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.307138062 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.302844828 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679440161 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316595479 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299134349 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.307859508 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390013515 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291648396 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.298997493 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.065975837 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864992072 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07801866 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890282469 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544184725 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.299981115 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298160245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29174935 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429289782 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292949088 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568517816 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293823654 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.302172654 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319916985 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291939807 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312443145 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257810584 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569506486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292831375 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294872459 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318947187 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.293984525 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.303948048 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.252815593 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785397319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854857474 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300345457 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304760081 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000019815 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588103059 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294842546 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295169816 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296402487 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.301101825 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32419284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.307964165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306055948 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43768818 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538006081 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951398521 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.32256387 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.330387543 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.898949911 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298077156 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552246168 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305606563 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.502968282 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892233647 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005538538 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563873855 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361995726 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498472965 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.300491495 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430870057 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.295549561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296467418 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297853632 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295666035 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.295971443 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.305958847 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88026317 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565346652 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.30038303 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.30640683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331493555 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.306180093 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.518074554 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990854147 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523892021 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30543569 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30171694 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296803736 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903201665 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545185283 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30306609 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.303199104 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524833774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303585469 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326224907 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.878808164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.298050058 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865497005 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.252645573 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318788716 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297858945 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003556001 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88233574 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.300430187 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782913793 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300381766 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29815841 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578858017 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.304914706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312901669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579372302 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.721592286 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310807367 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507261778 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.873718774 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04310602 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.309191631 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322217889 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.302849869 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301468271 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300723199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299491995 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307838989 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.698282667 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31864866 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300297204 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312396458 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.308799349 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319279224 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.307189286 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29957862 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.308266558 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.306806064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.288226058 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316834369 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429295203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838947439 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319460513 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.981964631 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.625770425 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.55407681 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300939278 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.309364847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.703019422 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301499858 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302658308 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301580756 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.302706546 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872668963 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.308038826 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.316170835 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307310321 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.267385336 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263145783 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307903375 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506260331 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30686885 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322447693 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.2886739 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302729459 seconds)
  done (took 940.365665973 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.302487358 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.301505618 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.315017449 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.347564621 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.315457334 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407610568 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.377791737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.311225686 seconds)
  done (took 19.890561131 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.365443163 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.385755416 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.364115102 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.387441501 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.303005606 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.825570069 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.382328748 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.384090026 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.399613336 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.324923313 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.364672115 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.015091611 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.403852817 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.367412053 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.3498302 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.308817974 seconds)
  done (took 32.143393572 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.775658283 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.780262942 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.565931996 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.345413587 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.367417981 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.318629804 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.720970934 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.320994571 seconds)
  done (took 27.408722545 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.310086566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.311037324 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.309143537 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.311026053 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.310261585 seconds)
  done (took 7.764430308 seconds)
done (took 1196.032741249 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.313461853 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.313513444 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.314055064 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.315807601 seconds)
  done (took 6.469258051 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.292601566 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.292890322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.291415048 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.304574737 seconds)
  done (took 9.393399845 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.997074987 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.897652457 seconds)
  done (took 5.108977475 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.768882809 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.777494816 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.774505603 seconds)
  done (took 6.53283066 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.610465339 seconds)
  done (took 2.824434185 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.302054869 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.262203199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.308196643 seconds)
  done (took 8.087692156 seconds)
done (took 39.629329486 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.301770782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.550803071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.457119096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.312148625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.460793712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.460523021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.034080402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.309926685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.301983129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.301836259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.319403933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.463624036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.018796056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.546493444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.022278809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.640399724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.464721659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.310266345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.311887891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.313756956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.043199692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.316297122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.312025802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.302681405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.480702223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.448990615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.312918271 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.640941774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.307909401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.302831783 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.491626248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.304485314 seconds)
  done (took 80.381515782 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.303171574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.30335045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.306264595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.313384509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.304320937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.305917803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.304697477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.303806173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.303100031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.327649332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.302347484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.305075415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.3053948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.310463652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.30703732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.305419968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.317861424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.302892935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.302229809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.321529765 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.305059549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.317181134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.304812156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329653589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.304916556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.317270818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.305115889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.304745647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.30577622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.305084785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.318736273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.308975191 seconds)
  done (took 75.099654751 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.303802537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.308348967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.305709487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.312109038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.310095256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.306962059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.305984666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.304333453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.314116119 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.312316785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.314559664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.309062403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.305741167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.306010003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.322779976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.306593035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.322659191 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.305315252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.305733536 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.315509157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.308707452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.306043902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.307246171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.308067461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.306715948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.307874182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.316594323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.308912703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.313290747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.318151805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.309054264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307420825 seconds)
  done (took 75.135892815 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593686162 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.318316646 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.320098335 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.312173883 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.318953069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.318739586 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.312746278 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.599644821 seconds)
  done (took 14.313350122 seconds)
done (took 246.14542396 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.312054442 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.805682909 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.359673965 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.311864169 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.349426215 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.341353142 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.529715803 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.354965121 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.532025696 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.334052591 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.331313348 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.314102613 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.111388475 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.467126675 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.111529168 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.217510322 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.179423665 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.309185109 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.870316283 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.593524728 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.342771299 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.309810056 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.108913321 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.204485176 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.305297995 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.396020156 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.409022584 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.53635832 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473162064 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.390868169 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.816349767 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.318184013 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.314812045 seconds)
  done (took 61.883403121 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.3143379 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.420021079 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.321779198 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.318963397 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.426507808 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.319815563 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.315930474 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.321805112 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.319341086 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.322503983 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.320906694 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.321167504 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.322986214 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.350335123 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.429659728 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.314362355 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.316980222 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.420686358 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.316725292 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.314392022 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.347623762 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.322684205 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.322683076 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.350009887 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.321668598 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.321471944 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.422918199 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.323075948 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.323879748 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.420372848 seconds)
  done (took 41.528792053 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.32341618 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.891560174 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.043808018 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.328859287 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.319911011 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.323567975 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.592468337 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.32317259 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.32241747 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.323757134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.79554787 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.327557421 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.350955657 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.075020835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.322341818 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.32361921 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.323383951 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.319192533 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.901838004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.327623656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.609054338 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.326090861 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.592541499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.332275004 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.339503342 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.319282376 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.32332424 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.125471881 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.344874474 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.794050817 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.067572319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.590235786 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.086219173 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.095328549 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.068112711 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.329727529 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.324521295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.797060731 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.322212187 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.319703412 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.592452023 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.32843059 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.063755347 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.012126016 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.336572087 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.325260475 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.145466552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.816429209 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.562039933 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.327956948 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.100690984 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.327289052 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.326831073 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.323814004 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.564147797 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.323543472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.321730419 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.160257285 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.342783449 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.594717204 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.332902714 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.320806071 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.90242127 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.327508277 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.897416999 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.322028704 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.331851813 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.341530386 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.065396648 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.325632008 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.033642215 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.340410363 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.328336972 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.794652493 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.897783577 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.196730016 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.32604965 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.908593264 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.112686768 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.610748542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.333222349 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.10636104 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.614484115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.332331596 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.330855591 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.3297534 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.328380262 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.395056594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.593921484 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.968452047 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025878276 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.189095495 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.622758211 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.336525947 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.324750967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.16828648 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.354402318 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.330218171 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.051640748 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.03797203 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.342054022 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.332454974 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.034952767 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.344022766 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.598618284 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.334023803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.090369395 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.329726691 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.395506555 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.328380056 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.331898031 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.347345428 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.598925128 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.334115769 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.330569808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.017045801 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.82324776 seconds)
  done (took 186.497622419 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.320243411 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.320916229 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.319794101 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.320844959 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.318862621 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.327863558 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.320617524 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.321037483 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.325150553 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.319244684 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.321611777 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.328201932 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.327504951 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.323119713 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.320243941 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.320111655 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.320282843 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.325565556 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.321309397 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.321011845 seconds)
  done (took 43.674003836 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.331920722 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.865211682 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.834320228 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.33671756 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.331635005 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.327354696 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.381219156 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.331924993 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.331145788 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.615631347 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.498547562 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.335592004 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.332572507 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.33291259 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.829873798 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.32888587 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.611430539 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.861010275 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.333676215 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.861202047 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.323323574 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.333799987 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.329017849 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.862617478 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.618478532 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.601297674 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.382880532 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.865145751 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.333819641 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.332020514 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.86241022 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.334158833 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.329202434 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.861259719 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.349556692 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.346518446 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.333074834 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.382586622 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.384215049 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.616285965 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.869715444 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.609200878 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.345012908 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.50444166 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.336148759 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.323611593 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.871240216 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.350610347 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.325459552 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.337398964 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.340615884 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.842790178 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.351128782 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.845033677 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.355773651 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.334094615 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.865850948 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.842067647 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.855802738 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.497970155 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.329227191 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.60255726 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.341197088 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.871765398 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.352297095 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.335513119 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.336206141 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.497298836 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.882786436 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.603327824 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.62134307 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.617776951 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.336873672 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.392234645 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.353671237 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.620270123 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.389933186 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.732103364 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.619879923 seconds)
  done (took 120.869695627 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.589623616 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.440373568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.716684521 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.915880722 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.336122717 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.465513746 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.439498469 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.583409767 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.332002798 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.418843904 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.330794364 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.429071015 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.087747509 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.4237118 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.433124779 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.472503681 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.330300105 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.287691912 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.013066983 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.935320709 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.333466979 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.455644999 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.836041468 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.537200007 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.344439653 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.91544164 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.273394786 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.333052154 seconds)
  done (took 53.246269722 seconds)
done (took 508.919094328 seconds)
SAVING RESULT...
DONE!
