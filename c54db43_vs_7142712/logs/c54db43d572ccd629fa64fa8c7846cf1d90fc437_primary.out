cset: moving following pidspec: 9537
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341104027 seconds)
loading group "string"... done (took 0.495904877 seconds)
loading group "linalg"... done (took 7.948706052 seconds)
loading group "parallel"... done (took 0.178964513 seconds)
loading group "find"... done (took 1.216884849 seconds)
loading group "tuple"... done (took 2.183975056 seconds)
loading group "dates"... done (took 1.370758312 seconds)
loading group "micro"... done (took 0.259045928 seconds)
loading group "io"... done (took 0.682739899 seconds)
loading group "scalar"... done (took 42.147629614 seconds)
loading group "sparse"... done (took 12.914162314 seconds)
loading group "broadcast"... done (took 1.043018946 seconds)
loading group "union"... done (took 14.443799275 seconds)
loading group "simd"... done (took 4.936383298 seconds)
loading group "random"... done (took 9.965786967 seconds)
loading group "problem"... done (took 2.02299094 seconds)
loading group "array"... done (took 22.917994431 seconds)
loading group "misc"... done (took 1.482108089 seconds)
loading group "sort"... done (took 3.702784174 seconds)
loading group "collection"... done (took 19.901534635 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.471332742 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206674203 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257141765 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147233977 seconds)
  done (took 1.982863622 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.163850724 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.071942924 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.088268309 seconds)
  done (took 1.030282964 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.334972773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254191907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224011103 seconds)
  done (took 1.479806662 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.239676525 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253678861 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.314399553 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.383038504 seconds)
  done (took 1.956646272 seconds)
done (took 7.126281611 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733207462 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278784202 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206381061 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51063171 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176816344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209375515 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679214256 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365625948 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.243586532 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101654821 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129710205 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.399744759 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114961088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686360921 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088967627 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127346833 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.173209746 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448642213 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.09134652 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091787705 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114942997 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15095768 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111617117 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084860703 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.178832376 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078437945 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186160182 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104959034 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076193706 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.284806471 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199641896 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690992992 seconds)
  done (took 10.830714993 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11901858 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12325571 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077106781 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153677752 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135761171 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07904576 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097746504 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076914893 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121415116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177415194 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130305829 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124449658 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09051012 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.096480109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118121207 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248310865 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102759121 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121158505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096628699 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088725952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.134657123 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093832971 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105863556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10360432 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150511707 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216148309 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10945439 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122074356 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091310788 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09369064 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140789602 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154344241 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075521658 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091667094 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159242741 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119914663 seconds)
  done (took 5.031174578 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18540517 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100120474 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168031668 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155583993 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158398909 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.122455379 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166929924 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094276389 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253499551 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.115043529 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178617588 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.075984216 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142671295 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.0962887 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093309718 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082357951 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075064394 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.735635285 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16296204 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149673013 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0947408 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097548187 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099014949 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369846823 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082645197 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073638489 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096418812 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068122375 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155482366 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097494954 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.176563442 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117358561 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078512754 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131259627 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195449221 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123348242 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132542633 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077889136 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073926264 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176043131 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101132456 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075202729 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123428265 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130799193 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11810619 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091490305 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076531311 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221918031 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07522484 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0897299 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.999923301 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178042925 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088590297 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07429686 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336296638 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113287151 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075590935 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091384792 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26382151 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127059198 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095585165 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098047037 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094494296 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079859829 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078979773 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.409933108 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.078017516 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.697341425 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080130018 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.087542779 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096860452 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095102699 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087235761 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102919204 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097883992 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094722095 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081052486 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077677782 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094770261 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07790351 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113519114 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098723127 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076508845 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15572781 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075805883 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095411728 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124165078 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098587265 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075779982 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127329592 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078731495 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092795528 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13209483 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077838263 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111772947 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092060089 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123394459 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092829833 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.162595437 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.089968855 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107929364 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09830425 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125884834 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073518203 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104752955 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094683714 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082296488 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090646016 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076547881 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145339993 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08995797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077016682 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09385785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088983753 seconds)
  done (took 22.284314343 seconds)
done (took 38.825352869 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397533593 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469898807 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.049755513 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142227278 seconds)
  done (took 2.767912588 seconds)
done (took 3.492728154 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084225956 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087273744 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103917042 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084644759 seconds)
  done (took 1.071179955 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125213919 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.099825223 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106280976 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080381495 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108646372 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081868379 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083894262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109895289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.097868372 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.083622661 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081880477 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099527681 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.087323679 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10179281 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079734742 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103457855 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.088817844 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09926279 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.086088866 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09955246 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078926146 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101655723 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.086228015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098171298 seconds)
  done (took 3.025687723 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09827252 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078509729 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097991355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07853853 seconds)
  done (took 1.07213548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085272611 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.106989043 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091470687 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101237701 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092621098 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10712992 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07770129 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077361701 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096882023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085492296 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093663633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099234281 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110337853 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083577774 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10326144 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073098211 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092621475 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091077847 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101261293 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084801536 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094638973 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084693735 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076260291 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111698869 seconds)
  done (took 2.944102154 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157552861 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103799081 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096786719 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097980154 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.135581377 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114183686 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.113560507 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.099050898 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.117571193 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.087591861 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094692874 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135271812 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.086822545 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.072671321 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.090254375 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.072406784 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.10339991 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.084998989 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09353408 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.086388121 seconds)
  done (took 2.768281803 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09660209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107783168 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076056485 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.075502526 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101838137 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081612349 seconds)
  done (took 1.264295114 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.082866 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07440925 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09587682 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.076044169 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096211639 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073943717 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08953195 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075343145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074751846 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.09111516 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07588303 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090573736 seconds)
  done (took 1.722539216 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.529096019 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.077355016 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095775766 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074574731 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.084306365 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092708705 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090516217 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094558377 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101493025 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102079039 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074673191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094534397 seconds)
  done (took 2.272118641 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190975514 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096830263 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223606537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314005253 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133351239 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13729992 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245020448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141392106 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.152430579 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11539802 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170040113 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135020865 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111701453 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148508789 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115769772 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138853263 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146670039 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165289826 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124596639 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177473811 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135670892 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141539733 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156461916 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110019602 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117275542 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136534901 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.081240146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107493417 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146088013 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143728394 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148254897 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124876852 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099405616 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.408818144 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179914243 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149063122 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246423078 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112560959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145339595 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143397885 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196197744 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11619289 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163192247 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128889094 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090890294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152548158 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311357869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149478754 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.091848314 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119257256 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152596205 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153423573 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.151856884 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11521916 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261423284 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127237573 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.102404663 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158629728 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154396487 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164008765 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139829354 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097238777 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16037035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158637717 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154116923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.119477056 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.138349005 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084382182 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144530125 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167449209 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148612742 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136937176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156691674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115286422 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137121124 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146284271 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129962685 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150478757 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115892363 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098395102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125513491 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099455164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107969523 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18364876 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083388013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170869788 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112521961 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.148449593 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174860317 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133506009 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117124647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13644995 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136766044 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122585826 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075704522 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123474736 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127638235 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131675038 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089812122 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132543506 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119106852 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087327437 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236226076 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100234281 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114383865 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10385026 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288179352 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136094547 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103053057 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137195677 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105632291 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125615107 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1413444 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15903013 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111102445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093776376 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168878493 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134072689 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111151139 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149908549 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15734141 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.111291659 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114115845 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141374745 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160928722 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117184132 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160929009 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118512657 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092807265 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116874521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132670086 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114810427 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.146984121 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109660398 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127639278 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165817586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.084754719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115080801 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144309744 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08643052 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106206094 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118058062 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094955733 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112457854 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098008878 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.115109939 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130985726 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134567549 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129108675 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110493322 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118586946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16314133 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11215119 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106687952 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122041559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097252747 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.145774023 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159510868 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089621982 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167975765 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.138666778 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189098345 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13844496 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091368151 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151440722 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106085763 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.079113194 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139106403 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133561455 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135616254 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154147661 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130271 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.138501273 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126308197 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108042183 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138043403 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139745154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126863675 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093472364 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135926368 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131905345 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09954447 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.083243276 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105101757 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098611759 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109075145 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093253281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170707261 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138059299 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16232879 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13697956 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099666051 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157542594 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104028099 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137948121 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.352232805 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0982954 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155739583 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155665935 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140247124 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117566337 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145005868 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078257856 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100689678 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095344154 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13787326 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111947594 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093281178 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118263156 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157696697 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311703459 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106956689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193547631 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142335123 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16639445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.079710846 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144580907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144366092 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133109635 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.124621477 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109904179 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10577496 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15274802 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121551047 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155899446 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137149902 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14055675 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163411286 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125212523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089857512 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124125573 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136796387 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115838094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141686654 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103424257 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113534962 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279308734 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103671751 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084415943 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146212968 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121180679 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148149699 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123888073 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139960954 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086904714 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117843939 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134774295 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121530737 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.074836638 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290949314 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174504723 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103221526 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298604706 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147726959 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090372438 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.272662411 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164967936 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319431732 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113758872 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100660719 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135516784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137083702 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28371926 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152671866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122675499 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151743326 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131885404 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093433235 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114198198 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124259813 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108220582 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.116331134 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109453244 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10870215 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112564091 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14781424 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118830731 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133609806 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12028194 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127366399 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119775347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099653789 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173841796 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134401841 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149899624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12432097 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139925387 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169948947 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083859154 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106631376 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08527657 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151849874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110021475 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13257656 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.159601517 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171768852 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135373872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137923924 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096425522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097142378 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134572722 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104787089 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18915378 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099951859 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113485221 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161103583 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120400591 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089443733 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13489491 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255319468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120732866 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148888392 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.072046812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247801257 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103798376 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090871732 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138372461 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145190655 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113309275 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.124875263 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137132733 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120367978 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137616742 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096924742 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183250271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178428571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142494799 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145693168 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09124915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134384202 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281802671 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151533723 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121853812 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11264092 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119713313 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156499793 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159122266 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.109851881 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138176916 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138207786 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135399829 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141547981 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095177618 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169708588 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108442691 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140994361 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097101469 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101612207 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134050209 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.15933651 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108754647 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148602152 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115447429 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109847753 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085012976 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126652288 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134397952 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119994269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.084858528 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146366851 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100763421 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11819092 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151985451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110359168 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130973348 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104388716 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112686785 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119177948 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101719439 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114041962 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.115798509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152827118 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107000677 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151610397 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14757498 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13946517 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278830101 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119622576 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641915322 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.087011111 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156832583 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124367679 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155425678 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10573999 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140458775 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138399702 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126574453 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140092996 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125408381 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.186746187 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141037381 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.132794357 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108961165 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101583442 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119790162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.108045546 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10855094 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137029876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119053418 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093754855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.132374289 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121389047 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090838873 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116497783 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158438078 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12391188 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150065659 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154798829 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097613851 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141790906 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143311913 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107857359 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.134815065 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146826945 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099614948 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125846628 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09122575 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111656503 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155153004 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.081709226 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135491858 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139047325 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138125041 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137932779 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.091971704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134104737 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118916874 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135248906 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08919644 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.12928432 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134030084 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091941207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105235221 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131038362 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110472991 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127011412 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10364947 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.115982181 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158071586 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080641831 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110732095 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252721523 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133858088 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162486794 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119156212 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093310867 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120767098 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102355484 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.13082726 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135786468 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106717055 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091434498 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107458851 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114716676 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118199434 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134697037 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161760049 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283123864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169658247 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114365399 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255903408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097970205 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132483172 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100376169 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.087917316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118297808 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092182226 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121844865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165892153 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155347406 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123430786 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092187048 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105534334 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08268264 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110299864 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13849809 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109269194 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134089644 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119574628 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.072830689 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12052013 seconds)
  done (took 65.940170855 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125289472 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111881087 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.128040346 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.290396345 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147264573 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23041851 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187450612 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214508353 seconds)
  done (took 2.246768477 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.166637482 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103736791 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.133181005 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111020544 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.076415198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.1326284 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.30067601 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108875097 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.076353712 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104036551 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129719015 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.079358426 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478141435 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.096387292 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095052555 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072071774 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094895195 seconds)
  done (took 3.164873832 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.633277567 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.392936592 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.084768228 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.154024383 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14355999 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.081587331 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.562989261 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081035829 seconds)
  done (took 9.944870949 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.109055347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123569676 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121424468 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.14033913 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.107855678 seconds)
  done (took 1.421410575 seconds)
done (took 99.581151696 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.089111227 seconds)
  done (took 0.895239929 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377854569 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065191056 seconds)
  done (took 1.287563835 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090656991 seconds)
  done (took 0.908878671 seconds)
done (took 3.906702839 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.29673928 seconds)
    (2/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.230807979 seconds)
    (3/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.181216359 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169234428 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.222841679 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.181341088 seconds)
    (7/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.156598319 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068121089 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117885361 seconds)
    (10/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.248133848 seconds)
    (11/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222949597 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091699631 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103643784 seconds)
    (14/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089869212 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.111869207 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082724401 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.158267535 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.083800822 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118615456 seconds)
    (20/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179538231 seconds)
    (21/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089676162 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.111235217 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.107867829 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137355482 seconds)
    (25/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230937847 seconds)
    (26/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092455259 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.206238287 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.092263145 seconds)
    (29/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.236514202 seconds)
    (30/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.186794486 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110658514 seconds)
    (32/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.145192953 seconds)
    (33/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212689968 seconds)
    (34/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.150022661 seconds)
    (35/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.18430415 seconds)
    (36/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.107377687 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123785878 seconds)
    (38/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082983152 seconds)
    (39/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.105373429 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104122666 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.146047868 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.077021792 seconds)
    (43/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242689633 seconds)
    (44/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.101883033 seconds)
    (45/286) benchmarking ("sort", Int64, true)...
    done (took 0.220222825 seconds)
    (46/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129018885 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106579903 seconds)
    (48/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.086337451 seconds)
    (49/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112224737 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.085193944 seconds)
    (51/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109885103 seconds)
    (52/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.236920694 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.146966901 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.181045129 seconds)
    (55/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085009991 seconds)
    (56/286) benchmarking ("sort", Int8, false)...
    done (took 0.197781939 seconds)
    (57/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.187712918 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108525859 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097852909 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103347569 seconds)
    (61/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.104780897 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100159033 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123962723 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085108262 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077380013 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065643221 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165009953 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094952551 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.105386704 seconds)
    (70/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111236001 seconds)
    (71/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.106167378 seconds)
    (72/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.145907514 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.181016651 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077691012 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.076327542 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101750347 seconds)
    (77/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.13304809 seconds)
    (78/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100657351 seconds)
    (79/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174120031 seconds)
    (80/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079641858 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129176696 seconds)
    (82/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091006189 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.226612319 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.177202196 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.125384228 seconds)
    (86/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.142753218 seconds)
    (87/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.114524041 seconds)
    (88/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.104318388 seconds)
    (89/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17051342 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 0.098070064 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.167439605 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099695281 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.07689378 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094094079 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153748626 seconds)
    (96/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.107420679 seconds)
    (97/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085066319 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.112898605 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.177193082 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084461595 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067083111 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.098064888 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.188809743 seconds)
    (104/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.081879199 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106142492 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077391833 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.161515604 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.159795237 seconds)
    (109/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078415035 seconds)
    (110/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.16784196 seconds)
    (111/286) benchmarking ("sort", Int8, true)...
    done (took 0.218671837 seconds)
    (112/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.131651756 seconds)
    (113/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.124743208 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 0.168854796 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087410024 seconds)
    (116/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105153347 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071197345 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076491456 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.176699354 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.108335823 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068301614 seconds)
    (122/286) benchmarking ("sort", Float32, true)...
    done (took 0.227050293 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.105543046 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087567064 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097570065 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091293422 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08414062 seconds)
    (128/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.08529712 seconds)
    (129/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075846959 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.107035477 seconds)
    (131/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087656954 seconds)
    (132/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110992151 seconds)
    (133/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081847055 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.108829407 seconds)
    (135/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092076221 seconds)
    (136/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080210768 seconds)
    (137/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.087501529 seconds)
    (138/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09347964 seconds)
    (139/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098774171 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076951593 seconds)
    (141/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.142562983 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.084768047 seconds)
    (143/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069932363 seconds)
    (144/286) benchmarking ("sort", BigInt, false)...
    done (took 0.235314985 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.102699736 seconds)
    (146/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095848287 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087812168 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077105687 seconds)
    (149/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101132339 seconds)
    (150/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.131779073 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103500805 seconds)
    (152/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.085748556 seconds)
    (153/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106073031 seconds)
    (154/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066593929 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08840686 seconds)
    (156/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.155393948 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108444345 seconds)
    (158/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07853371 seconds)
    (159/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.167565093 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07709083 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097051256 seconds)
    (162/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.122705181 seconds)
    (163/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08796928 seconds)
    (164/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190921906 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.105294473 seconds)
    (166/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150638459 seconds)
    (167/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.126920133 seconds)
    (168/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.096228635 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.083622144 seconds)
    (170/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085182333 seconds)
    (171/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.146264056 seconds)
    (172/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.14991045 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.088229949 seconds)
    (174/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166030581 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.102801578 seconds)
    (176/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065278887 seconds)
    (177/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067471503 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100682156 seconds)
    (179/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181823974 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083975465 seconds)
    (181/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08828411 seconds)
    (182/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101053964 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.2213664 seconds)
    (184/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.0748501 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.097577351 seconds)
    (186/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.080968106 seconds)
    (187/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076048863 seconds)
    (188/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109974629 seconds)
    (189/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160114578 seconds)
    (190/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076345767 seconds)
    (191/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080484552 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.111081722 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088891597 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1816438 seconds)
    (195/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068089142 seconds)
    (196/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.101523416 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.104966422 seconds)
    (198/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.097321938 seconds)
    (199/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065655909 seconds)
    (200/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087432634 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07624797 seconds)
    (202/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.06721945 seconds)
    (203/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.184013456 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.097523386 seconds)
    (205/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075322261 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068818032 seconds)
    (207/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089006818 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.104379482 seconds)
    (209/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.120395821 seconds)
    (210/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.103271547 seconds)
    (211/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.085748974 seconds)
    (212/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.109664664 seconds)
    (213/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.086750771 seconds)
    (214/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.157208176 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.117117994 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.112568362 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078337855 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.079512214 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090128058 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065816656 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.097939111 seconds)
    (222/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089949753 seconds)
    (223/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166808592 seconds)
    (224/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07732844 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086730402 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08024835 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167494925 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.077357589 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09782744 seconds)
    (230/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.065319782 seconds)
    (231/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067857226 seconds)
    (232/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099591947 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078371285 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10502968 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069923562 seconds)
    (236/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.083539025 seconds)
    (237/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088516707 seconds)
    (238/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.092502115 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107451228 seconds)
    (240/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.084364033 seconds)
    (241/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097668095 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.065965505 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066816331 seconds)
    (244/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.086812285 seconds)
    (245/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074461744 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090295488 seconds)
    (247/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130988284 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.086519212 seconds)
    (249/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.065479995 seconds)
    (250/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065281823 seconds)
    (251/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.096283716 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067983741 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111619201 seconds)
    (254/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.065748094 seconds)
    (255/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09817922 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.085923275 seconds)
    (257/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065914133 seconds)
    (258/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.104579071 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.076191447 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.097055664 seconds)
    (261/286) benchmarking ("sort", Float64, false)...
    done (took 0.146766467 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09913749 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066432218 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119731736 seconds)
    (265/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065684046 seconds)
    (266/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07713505 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098931314 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076308212 seconds)
    (269/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.087952789 seconds)
    (270/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087982507 seconds)
    (271/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.084660139 seconds)
    (272/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102465688 seconds)
    (273/286) benchmarking ("sort", Float64, true)...
    done (took 0.230328708 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067324561 seconds)
    (275/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09057828 seconds)
    (276/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072120073 seconds)
    (277/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065644813 seconds)
    (278/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102105299 seconds)
    (279/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079891464 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099279478 seconds)
    (281/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06704346 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099330519 seconds)
    (283/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.163525788 seconds)
    (284/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09036456 seconds)
    (285/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.080961239 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099099548 seconds)
  done (took 33.661218554 seconds)
done (took 34.476554003 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.115207473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134661115 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.093164031 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163815187 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080260985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135004947 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.112348858 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115570459 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080119583 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101206104 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.079882872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102619614 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144417558 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079736735 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101878925 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.081926004 seconds)
  done (took 2.610693702 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175510004 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.215848018 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.119429677 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.080116472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105921283 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080472424 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099349132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088378123 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102231527 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.079735552 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100999748 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08092474 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079423252 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102004453 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081665996 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100839274 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.079455403 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10115847 seconds)
  done (took 2.730877712 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108665628 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138058748 seconds)
  done (took 1.102610454 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115430443 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172644645 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309998489 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.128310551 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11955642 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116324947 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.129841127 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122036549 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201844941 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124883285 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12459798 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087337054 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13453098 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111842762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089232939 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10785939 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.115180526 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108770176 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089347577 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108874876 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11309908 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100566693 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.090981611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.107814161 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18442256 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122930863 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.080053759 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100603838 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089128393 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109792481 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087476721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114616847 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122843227 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.147478528 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093320012 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.146725045 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108973061 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085824583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110083689 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085274655 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112346096 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1133704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095161069 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107535207 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079759612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110077704 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0815763 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.082380449 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113595211 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.115002353 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.088656637 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108962131 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147974478 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.090504243 seconds)
  done (took 7.12152439 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.81626855 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15150912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087483304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.918329635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137594959 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098984585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.806410808 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133369732 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227956285 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.793427373 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124587688 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115996105 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202121031 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.243419362 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.895426752 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305845121 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686948653 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119825926 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133805319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143380676 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090942514 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130797137 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123953165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401888253 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.107040844 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084147797 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111006201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113893942 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155247216 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08447754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107108166 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170982356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.236034162 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199335462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086406338 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103459932 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084049418 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160135734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263037372 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210153402 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.150268707 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101973963 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083748625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115125845 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123169179 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080822983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15554211 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164031276 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183922793 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087404742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115308627 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092609784 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.114149963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15517514 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081232034 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312327865 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306819063 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105034647 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09228928 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120901251 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238788052 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105079073 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219263478 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110785505 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209806449 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085151704 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78316453 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.158895143 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104571848 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091663295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112902535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088487374 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114757009 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159723577 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3839109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097427234 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108362222 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08378915 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22813819 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084966486 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104594836 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156433545 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085865066 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111867439 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097039562 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117036284 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16146566 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215234673 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116044118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112216683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.08852148 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117175397 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085817533 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206127689 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213959593 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151521485 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206848446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115843565 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157307726 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15781528 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113816648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.162528624 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111979181 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099165791 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116784875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213787038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134893625 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084465206 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109165216 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090898075 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13878879 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086780618 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113375491 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.161480162 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474985433 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158680658 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081268464 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108676453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092279745 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155658374 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111329992 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232930595 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114523771 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160027629 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11202122 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.081227173 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112373858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156984815 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115826544 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093267097 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116110865 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091850195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.242485779 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195523935 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117726188 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21837312 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173789497 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112973237 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164645554 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112405952 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162635366 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093191614 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114916817 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085380724 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762518801 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117818986 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09145996 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109651978 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179959689 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084444516 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083839204 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105749833 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081038277 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77345113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086684265 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104068455 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084643662 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111905429 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090814249 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110811624 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087549922 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175894581 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204391508 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114855602 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111802171 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084880548 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154663294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107546935 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085220899 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105761132 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085939221 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113167803 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088247326 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106200851 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165576547 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153576286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217898767 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57135818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105572496 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085091474 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223347484 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083791376 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.279758356 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112236311 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199296921 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17997813 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082392614 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305534128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161571744 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179690309 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087877871 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163274505 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103169476 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089952992 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175547865 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084496563 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110884687 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152896163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097197411 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117176588 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.921264201 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084587296 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219671982 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103426919 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.162032952 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085594 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117363787 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287664854 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084481666 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122875709 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157779748 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10843492 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086490754 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691143485 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107439121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.093907161 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112166763 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218419444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158716739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113361535 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091695342 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115042258 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156749228 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20252814 seconds)
  done (took 41.728204283 seconds)
done (took 56.150886942 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093497267 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135215333 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.089519517 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115849353 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.093365349 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11590802 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.088123512 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.114024927 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.092562666 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.11570529 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.091619541 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069261532 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112348683 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.091195609 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.112602744 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110833149 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113900186 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08642835 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.105576316 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.078652008 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.104458849 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.078724506 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.102615048 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069292602 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.091500528 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.109972597 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.085740166 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11365066 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.079280511 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.101108185 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078873743 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.086970011 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100832058 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.092880875 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.107907238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082874098 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.113297966 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.089461465 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.102658153 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.079625162 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.088035664 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.101044973 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.08697045 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.10933538 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080869303 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100423821 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082818206 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.115230281 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11174312 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106111566 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.087506428 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.112544012 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09026632 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088498187 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.100500207 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082964817 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.101151908 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111144019 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.105101643 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.30088998 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.109294719 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0877985 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078448565 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.10451931 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.083100348 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111492272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.090374327 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100921881 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.089312795 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.105923288 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07916431 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105491673 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078678988 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.079483109 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.110552964 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.089627416 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.100031702 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.081074278 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.108247583 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.084789365 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.078744231 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103625351 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.080940711 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.102918122 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081522076 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069273152 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.100373759 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.086194581 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09958692 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08287734 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.106532719 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.086149544 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08112682 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.112779308 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079279916 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.100242991 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.079184185 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101115048 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081294318 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078074911 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.100601194 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081665849 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.109139052 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.081078793 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.101916564 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.091608343 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.079981784 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.107580388 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.079130263 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.100292783 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.096001583 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111885323 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.07966942 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106154822 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.078374321 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.081776874 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100640654 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.079232305 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101180662 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.079558272 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.081467859 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.100968954 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083133892 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.104740419 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096142654 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.100890182 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079001653 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082428564 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.100940767 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.084956491 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101604933 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080050105 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081728455 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.099060322 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.081814618 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.101416203 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081171441 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104733345 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082749855 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.080769064 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104534384 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.083638866 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.102808051 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078283618 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.099831697 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073358275 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084270958 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103319804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.081072564 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.100753285 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.081348931 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.078744588 seconds)
done (took 15.357279729 seconds)
RUNNING BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.955834769 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.955505145 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.93691779 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.954096178 seconds)
  done (took 24.686792159 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.958313543 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.957741977 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.95890952 seconds)
  done (took 3.761586512 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.073766291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.955225802 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.954946067 seconds)
  done (took 17.869772216 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.122299353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.93628262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.206552706 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.541807858 seconds)
  done (took 7.693762698 seconds)
done (took 54.900247315 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.957623824 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.985627922 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.957556926 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.93055545 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.044375798 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.967386895 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.337340045 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 5.971125973 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.956323698 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.938700829 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.948388127 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.947453423 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.957654907 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.337068283 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.951037548 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.949253545 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.957790393 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.44145426 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.285214074 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.949463786 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.968608173 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.956208005 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.949387755 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.952401916 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.986189842 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.94548919 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.96094513 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.955660581 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.638525955 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.951236324 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.024298565 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.441190045 seconds)
  done (took 181.38672595 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.947368376 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.065968869 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.141400807 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.975917159 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.588826387 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.152383622 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.106118156 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.646811796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.958697783 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.949562593 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.27313733 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.947769988 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.310616721 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.9554373 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.976807333 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.010985576 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.142290749 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.288743234 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.980269598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.122358538 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.964131522 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.254119255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.191015623 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.202475571 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.96066757 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.986519568 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.97213988 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.96443784 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.150862908 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.10543085 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.977026774 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.998308976 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.441056142 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.804091815 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.966903787 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.974328085 seconds)
  done (took 141.341600531 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.947192424 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.9486789 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.94912998 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.948484908 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.972740444 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.948413678 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.394332405 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.399430426 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.468843114 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.173068059 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.937863844 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.951728171 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.093260497 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.952454546 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.036858309 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.965613753 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.951276942 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.965605186 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.975248581 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.954133397 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.949847011 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.395452892 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.964576425 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.137498714 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.104769294 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.962296124 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.976319311 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.33913123 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.950318478 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.975301544 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.261692149 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.988376925 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.95088819 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.21273974 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.421960857 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.057657188 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.952336414 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.975132306 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.950474054 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.216640295 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.95163328 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.951978613 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.95430144 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51046869 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.955954165 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.398012555 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.95557163 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.7861305 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.951978341 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.951283698 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.721450171 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.380387404 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.967820089 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.95210761 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.954707124 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.952444881 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.953207442 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.977610751 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.680818653 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.041794037 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.952952314 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.95250127 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.955066882 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.977118646 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.953303475 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.142955592 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.952165818 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.236883745 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.012361273 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.0655789 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.401205928 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.956128349 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.04530975 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.067495473 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.95304043 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.952319248 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.952771363 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.95254774 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.056951647 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.953307684 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.291302604 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.108111891 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.966226571 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.94679828 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.047175574 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.954185477 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.231633734 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.95666888 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.952727586 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.590634087 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.042936334 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.953239258 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.952285375 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.953817905 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.288822214 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.404581028 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.09134069 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.957458224 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.197589836 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.954732047 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.300728119 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.394567638 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511971715 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.958358298 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.955077109 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.061129507 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.109512718 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.967103073 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.955090817 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.952132863 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.959949507 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.013321684 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.954699412 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.345669217 seconds)
  done (took 334.294715365 seconds)
done (took 657.908323785 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.001289006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.01098974 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.978216824 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.96425504 seconds)
  done (took 24.84830592 seconds)
done (took 25.743025281 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.955622397 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.961010208 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.9599918 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.959806626 seconds)
  done (took 24.730412263 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.996622113 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.997995497 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.998293743 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.00818731 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.001682534 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.997267957 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.989336182 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.989061883 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.008622053 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.999885135 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.000064501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.000460942 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.998732856 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.989152719 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.999084503 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.999897811 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.00902835 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.999322379 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.990373975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.000975075 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.965552798 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.009310708 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.000880155 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.965233042 seconds)
  done (took 24.811624529 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.491479962 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.038882656 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.118170003 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.017258172 seconds)
  done (took 5.560761817 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.016094662 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.017536302 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.031719901 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.071347498 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.095170375 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.027334541 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.99237637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.987144585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.973446974 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.019008515 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.094428656 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.034113988 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.105479313 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.965415099 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.150321823 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.965414645 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.965456118 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.017916877 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.070104883 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.086618217 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.966427524 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.016898646 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.025509348 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.035308089 seconds)
  done (took 25.626392524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.96527092 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.984222371 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.965647922 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.963462355 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.974155034 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.965898593 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.965852595 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.966138711 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.965294483 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.972148873 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.96395802 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.977411663 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.966198969 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.965136249 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.971624786 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.967937802 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.971646938 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.964503733 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.965609397 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.971604402 seconds)
  done (took 20.270529197 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.9588792 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.842113758 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.310598537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.21594926 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.961242817 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.959262476 seconds)
  done (took 26.14619059 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.018089052 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.133482504 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.967064609 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.232167704 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.308381633 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.970275229 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.96828186 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.160985428 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.393314321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.373841459 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.011192654 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.021992018 seconds)
  done (took 14.459175603 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.968415189 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.965270874 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.974631918 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.980591922 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.009111115 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.970715327 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.975362903 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.961044528 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.012181029 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.012469386 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.971208982 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.009904313 seconds)
  done (took 32.710935684 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.048842529 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010384598 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.743684046 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.027198792 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.691432953 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.17414963 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.983730761 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601625762 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.981685245 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.236787084 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962524347 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.052347641 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.220480048 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963149717 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.967990988 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.811676045 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.189962018 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362788512 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.964801431 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.434565623 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.990626106 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.965300829 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.480111443 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.149080574 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.177527793 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947377363 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.235673898 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.740945248 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.190845064 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.978211705 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.974789953 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.964198961 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.239433796 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.721187871 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.063655805 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.135211498 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97449427 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.598200116 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.965583478 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.425911076 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.96989731 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.968908311 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.975599919 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965779376 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.900031489 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.966082258 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.964018678 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.974349416 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.677653081 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.966214793 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.166601822 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.062011066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.969619046 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.539908537 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.987905509 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.978315082 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.972454746 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.059019801 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542945303 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.719649861 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983671219 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.90679683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.979934133 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.461758794 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51072236 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.975066607 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.972702585 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.972529511 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903058716 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.456065197 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.988791881 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10689032 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.995002435 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631186347 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600092623 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.978105989 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.90336732 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431965289 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.977755874 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.906934111 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.199350906 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747703816 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909010909 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.911197094 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.904296332 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56073141 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.979831439 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.264805965 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.991269516 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606844008 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.156876121 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.994625569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.993420374 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.194936645 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.855414875 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970676802 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.976581632 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089999575 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.992918935 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61340578 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919918659 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.974620885 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.228618881 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.182154496 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.974704347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.826632169 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680084031 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975114278 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.002611064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.9768933 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.146558337 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.475708647 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.991634247 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.722946192 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.989163848 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.749763096 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604144164 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982140881 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.978932271 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.971596151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.200243927 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.653084962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855553509 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.040173957 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.977907399 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.972784907 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.473338471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825177564 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.13235556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.130961804 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.986208852 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.99683888 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.972842609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933567855 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.967970549 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.985618018 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.751654189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.195394633 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.969747545 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.248728124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903783722 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107904323 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987298629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.193322595 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.964323732 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.9781198 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.229727649 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969559846 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.978182593 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.982832511 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.987374416 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.067835101 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.990326925 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.968132151 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.230149072 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.972708387 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.972750736 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.38936197 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.753444769 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969849519 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.974381304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968508151 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475595106 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944876891 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.975226719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86437382 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.984276568 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.037911579 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.976251431 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.137621126 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.775529322 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97823619 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.975940876 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.972655157 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.198494104 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.980579868 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.382888283 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.0545565 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.368860617 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476705892 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.987032882 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.905471322 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.681946904 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.66340417 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97066683 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161958468 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.971639691 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.136692024 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.988430109 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.976622071 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.468296109 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976663042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.382918471 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.981964248 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.984882766 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.205814464 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971326752 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.754623058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.655264633 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.978287712 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.987464491 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.115612095 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.985540027 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.906330348 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.489259301 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.977959885 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.973262141 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.749775481 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.007561087 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.389395408 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.11443005 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.254836836 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.972761191 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.175304711 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.452079379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.004680444 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.979224864 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.973146354 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981649128 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.991723718 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.984836502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.984731355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.39209036 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42663027 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541994163 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636300327 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411505125 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032001162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.983289561 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.873985978 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612127914 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924101057 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.633414829 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.166559102 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608885527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945277477 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613657871 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.96191719 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573213889 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.157989932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.207910509 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068455703 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.976683545 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.166913617 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.189937385 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.007054538 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.979456997 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.905766541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.25944341 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.791358166 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975660306 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.065536384 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.934063104 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.975841427 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.767145534 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.013307707 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.440134198 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409118971 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.604890478 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.360669573 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.972923937 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.977960061 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046645279 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.000469684 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498557256 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497107634 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.986969107 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.374215601 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926679897 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.135415623 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.988121992 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.976231724 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.051639925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.822447339 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.243706958 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.159529049 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913313403 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.974494022 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405455218 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.833197869 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.978476343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972998786 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575282 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983717376 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.183556615 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.98687998 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.734231877 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.985661102 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.906892498 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908269594 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.66648229 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.98255484 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9491778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3489626 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 5.979330003 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993973445 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.982403231 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823428903 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.230097822 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.988380193 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448640314 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.202809813 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.97957568 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.997630856 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.978135327 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.974575462 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.966228542 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.856079261 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.208494131 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.979505985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.21353579 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.685459835 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.878794708 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.004548084 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.188040557 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.855070355 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.973683506 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.149401109 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.687268433 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.975626288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613777801 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.001442873 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.975119018 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987902089 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.987880043 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.994636049 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.043865928 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.132779399 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.988329248 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.984864917 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390168146 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984334661 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.979308572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.987782967 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.06818291 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522770563 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.707477833 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.750715861 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449868278 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585627494 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.448788785 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.16233378 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.979097384 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981193661 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909749236 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.123041816 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.499766517 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.24778825 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106068425 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 5.975614531 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.99877471 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.974574494 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.985692924 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.189516529 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249186908 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.844592465 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98290499 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636421616 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.134389882 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.985207268 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.186603933 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34740224 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409613153 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352649903 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.97492038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611814769 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261939757 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065003447 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.974439452 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562560564 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.985760995 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401861361 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.97969898 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984503962 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.124636019 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.149574696 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.727634408 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.988033666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.131718008 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.748307452 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.248425892 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.233683042 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278740286 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.137603647 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445012417 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.540641515 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237614964 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.045384497 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.132870092 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.087307902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.122647953 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.6934161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.87166012 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975908031 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818782505 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.685676601 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.985297782 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448103682 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.239442162 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.979787763 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.685633243 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.013245896 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.985901063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.199336852 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524577862 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.200302579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.985657888 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.985167873 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.546058391 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447067143 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.159860287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913219482 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.979909928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.142461177 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.213509808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.001327554 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.429182266 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.687702196 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406613311 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.949589517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.998993515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.976954196 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.555028313 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451536601 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.693156888 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344692661 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.636469732 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983580212 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254179875 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.982872036 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.978121048 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256724745 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.982026495 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.984780785 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.140056234 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.446598294 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549766868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.997564254 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.282276504 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.918557867 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204401082 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.058679195 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918651197 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.97895668 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.299609666 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.996968993 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109244349 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.990067036 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.706220763 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000245486 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.714748537 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278187289 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.984764249 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.980217808 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.97711778 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.984884159 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.073748111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.81580311 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987526759 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.65334658 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.332281172 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.234183872 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.980516756 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.96939321 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.983469701 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982002112 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.696840049 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948550258 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.983891832 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412123406 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.989042204 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.993592706 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.983967188 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.196013657 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.191508554 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.98288455 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.144553077 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98204022 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.998896165 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.887796081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.746709833 seconds)
  done (took 1469.806442334 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.999192669 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.993857274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.990166103 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.004165813 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.983909743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.981041297 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.993528861 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.050108469 seconds)
  done (took 48.91171742 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.98042599 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.132667715 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.005021807 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.983441023 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.994366194 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.986755331 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.338260185 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.988922188 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.990720859 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.992064131 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.988566819 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.992368601 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.503718924 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.994468178 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.988622147 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.972005031 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.993972275 seconds)
  done (took 58.744409347 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.231767772 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.090006097 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.442441837 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.006016662 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.993119602 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.985276003 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.05421222 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.988845568 seconds)
  done (took 53.710504892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.991861818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.982685134 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.982408114 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.982345772 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.983261122 seconds)
  done (took 5.836753411 seconds)
done (took 1812.221794804 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.958079991 seconds)
  done (took 6.865802027 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.464080341 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.448574442 seconds)
  done (took 3.818320288 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.25779712 seconds)
  done (took 2.161039646 seconds)
done (took 13.754275896 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.953696578 seconds)
    (2/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.955088694 seconds)
    (3/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.953494434 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.588305132 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 5.954828405 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.687373644 seconds)
    (7/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.065783956 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.952565619 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.171372038 seconds)
    (10/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.964761466 seconds)
    (11/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 5.974858932 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.050068426 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.297304231 seconds)
    (14/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.082815846 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.00330885 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.519272107 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.727289556 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.989527955 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.987493343 seconds)
    (20/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.949770151 seconds)
    (21/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.057214778 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.987593652 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.734359991 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.867311571 seconds)
    (25/286) benchmarking ("sort", BigInt, true)...
    done (took 5.96603124 seconds)
    (26/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.988423325 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.987216033 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.614403306 seconds)
    (29/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.766247155 seconds)
    (30/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.572461523 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.086315921 seconds)
    (32/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 5.948430489 seconds)
    (33/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.638209227 seconds)
    (34/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.706321697 seconds)
    (35/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.45827583 seconds)
    (36/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.148814983 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.986026093 seconds)
    (38/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.168178623 seconds)
    (39/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.092059437 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.627942983 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.96632759 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.679089399 seconds)
    (43/286) benchmarking ("sort", BigFloat, true)...
    done (took 5.959114046 seconds)
    (44/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.022513569 seconds)
    (45/286) benchmarking ("sort", Int64, true)...
    done (took 5.958338099 seconds)
    (46/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.515617041 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.578123371 seconds)
    (48/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.065485251 seconds)
    (49/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.041309043 seconds)
    (50/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.98207782 seconds)
    (51/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.965578431 seconds)
    (52/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.409885065 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.065057744 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.991617727 seconds)
    (55/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.421400784 seconds)
    (56/286) benchmarking ("sort", Int8, false)...
    done (took 3.958606824 seconds)
    (57/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.664311324 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.970136017 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.616949302 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.307913565 seconds)
    (61/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.073911804 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.211628847 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.475789813 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.938590828 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.49266112 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.938122652 seconds)
    (67/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.836870202 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.009744017 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.146052166 seconds)
    (70/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.587962107 seconds)
    (71/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.046791912 seconds)
    (72/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.079133732 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.282417302 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.68352837 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.261164789 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.806192117 seconds)
    (77/286) benchmarking ("sort", BigFloat, false)...
    done (took 5.958434386 seconds)
    (78/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.102853122 seconds)
    (79/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.024067005 seconds)
    (80/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.014766643 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.979034086 seconds)
    (82/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.956567851 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.037762985 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.074881454 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.248632599 seconds)
    (86/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 5.939548142 seconds)
    (87/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.117159745 seconds)
    (88/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.001359255 seconds)
    (89/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.161943833 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 4.986665979 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.216997943 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.954295061 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.183650699 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 5.944364964 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 5.944070971 seconds)
    (96/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.084325748 seconds)
    (97/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.061051303 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.624975621 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.257688452 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.530302621 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 5.941540479 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.955817685 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.00509651 seconds)
    (104/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.976318921 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.167396529 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.617535075 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 5.996850503 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 5.948459062 seconds)
    (109/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.040452569 seconds)
    (110/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.387108811 seconds)
    (111/286) benchmarking ("sort", Int8, true)...
    done (took 5.963524588 seconds)
    (112/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.119512737 seconds)
    (113/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.97076423 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 4.861530965 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.039473276 seconds)
    (116/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.981035976 seconds)
    (117/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 5.943302794 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.32096679 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.456224137 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.976954162 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.941973053 seconds)
    (122/286) benchmarking ("sort", Float32, true)...
    done (took 5.95688994 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.238435896 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.265431887 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.331859869 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.526933634 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.20433097 seconds)
    (128/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.613188554 seconds)
    (129/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.984833402 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.961958834 seconds)
    (131/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.963894067 seconds)
    (132/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.041459591 seconds)
    (133/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.099161769 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.064789847 seconds)
    (135/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.964970967 seconds)
    (136/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.061520949 seconds)
    (137/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.24380223 seconds)
    (138/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.956531128 seconds)
    (139/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.649152009 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.539734507 seconds)
    (141/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.404029513 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.987166115 seconds)
    (143/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 5.943261189 seconds)
    (144/286) benchmarking ("sort", BigInt, false)...
    done (took 5.961875359 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.972998201 seconds)
    (146/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.711827364 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.979708507 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.424207272 seconds)
    (149/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.991653184 seconds)
    (150/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.882809281 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.985245815 seconds)
    (152/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.981555686 seconds)
    (153/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.982789622 seconds)
    (154/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 5.943544573 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 5.943114424 seconds)
    (156/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.759287846 seconds)
    (157/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.967951646 seconds)
    (158/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.062708585 seconds)
    (159/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.950666279 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.327152256 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.049219894 seconds)
    (162/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.406345107 seconds)
    (163/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.947518057 seconds)
    (164/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.416018947 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.732716762 seconds)
    (166/286) benchmarking ("map", abs, BigInt, true)...
    done (took 5.95966717 seconds)
    (167/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.257560747 seconds)
    (168/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.922962256 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.983027475 seconds)
    (170/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.157818675 seconds)
    (171/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 5.949237231 seconds)
    (172/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.248115893 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.00456582 seconds)
    (174/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 5.944433097 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.97926619 seconds)
    (176/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.200508498 seconds)
    (177/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.945609245 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.025616739 seconds)
    (179/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.779713912 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.035840727 seconds)
    (181/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.958904504 seconds)
    (182/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.994329097 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 4.971615876 seconds)
    (184/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.890747027 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.016034014 seconds)
    (186/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.021974813 seconds)
    (187/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.251238353 seconds)
    (188/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.045379196 seconds)
    (189/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.055074625 seconds)
    (190/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.040965719 seconds)
    (191/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.968425289 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.918037165 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.16793624 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 5.945406864 seconds)
    (195/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 5.945819999 seconds)
    (196/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.284422044 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.015552236 seconds)
    (198/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.399093387 seconds)
    (199/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.982885599 seconds)
    (200/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.812713761 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.987403181 seconds)
    (202/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.152795374 seconds)
    (203/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.97986093 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.003263895 seconds)
    (205/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.740852274 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 5.957415547 seconds)
    (207/286) benchmarking ("map", abs, BigInt, false)...
    done (took 5.950741763 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.779887397 seconds)
    (209/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.862348827 seconds)
    (210/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.902674633 seconds)
    (211/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.408240353 seconds)
    (212/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 3.99100784 seconds)
    (213/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.369024583 seconds)
    (214/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.996543834 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.819707958 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.049802812 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.965297943 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.962697932 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 5.97933592 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.702271027 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.96514221 seconds)
    (222/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.965399066 seconds)
    (223/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 5.949388131 seconds)
    (224/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.075353627 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.781769378 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.060915201 seconds)
    (227/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.036592252 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.263489723 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.130121581 seconds)
    (230/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.137517954 seconds)
    (231/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.095123349 seconds)
    (232/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.973747813 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.102340534 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.988076017 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.964358631 seconds)
    (236/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.997825543 seconds)
    (237/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 5.948650647 seconds)
    (238/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.817123951 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.352769063 seconds)
    (240/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.989270897 seconds)
    (241/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.529213568 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.252971562 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 5.961082617 seconds)
    (244/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.949265934 seconds)
    (245/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.131086524 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.961129381 seconds)
    (247/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.917796452 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.991070262 seconds)
    (249/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.438810473 seconds)
    (250/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.185859009 seconds)
    (251/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.948653499 seconds)
    (252/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.976229934 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.60233269 seconds)
    (254/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.142100236 seconds)
    (255/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.966336819 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.046573112 seconds)
    (257/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.826136891 seconds)
    (258/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.989882133 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.045024626 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.075049812 seconds)
    (261/286) benchmarking ("sort", Float64, false)...
    done (took 5.04785076 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.963718445 seconds)
    (263/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.113080156 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.7624469 seconds)
    (265/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.18479659 seconds)
    (266/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.132565538 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.697821617 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.004274052 seconds)
    (269/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 5.949278886 seconds)
    (270/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.005202338 seconds)
    (271/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.99109999 seconds)
    (272/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.070678617 seconds)
    (273/286) benchmarking ("sort", Float64, true)...
    done (took 5.963764277 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 5.950481234 seconds)
    (275/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 5.949316753 seconds)
    (276/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.979579568 seconds)
    (277/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.379413686 seconds)
    (278/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.989059402 seconds)
    (279/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.974977846 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.985116627 seconds)
    (281/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 5.950405218 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.963935139 seconds)
    (283/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.066330108 seconds)
    (284/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 5.954816998 seconds)
    (285/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.022504192 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.331706189 seconds)
  done (took 806.127239123 seconds)
done (took 807.033042183 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.130671537 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.081257394 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.964680985 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.017664379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.961903582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.979918727 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.957359289 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.959587137 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.959829945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.958628515 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.95862269 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.147610019 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.96157071 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.959581255 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.959270534 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.054821908 seconds)
  done (took 36.909611094 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.982529269 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.968096474 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.049099383 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.980199222 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.98417096 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.109654169 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.011929228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.969041877 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.088521334 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.9967714 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.142276259 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.984653853 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.968140457 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.799071095 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.979019681 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.107459979 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.156364276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.141205263 seconds)
  done (took 22.308359872 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.288641963 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.969361468 seconds)
  done (took 8.149814493 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.980080099 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.965791264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.9658 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.96392423 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.956335626 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.956314221 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.964130584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.963245349 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.588344174 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.060473398 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.966508876 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.974902765 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.979152132 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.965095323 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.961502852 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.000206261 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.110072374 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.966372849 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.960702842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.971800906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.964943005 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.046176438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.99891073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.962559424 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.056676668 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.585953672 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.971158619 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.972625019 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.092181941 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.964551653 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.965471161 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.965760097 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.967041097 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.77528411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.360549549 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.957799978 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.990062667 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.974191325 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.962838087 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.127799934 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.96745658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.972427663 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.958238021 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.33953499 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.086459308 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.059257865 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.921378967 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.971746133 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.968757626 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.017004099 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.966698929 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.967946787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.006370464 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.692330425 seconds)
  done (took 88.673032006 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.000154124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.349325574 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.122616152 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.972684603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.611569461 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.517049144 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.973111666 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.169481736 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.98695788 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.960879004 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.203795477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.380969736 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.974820248 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.964607444 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.156790392 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.049091854 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.959610412 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.546610984 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.973203377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.96047041 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.402568877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.961715113 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.960608824 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.129160781 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.994218672 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.336218007 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.926994527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.254368964 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.972877699 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.961792718 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.34454772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.979795335 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.036443558 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.961786296 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.185133431 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.233077818 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.216575864 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.96415476 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.000243548 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.962652647 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 5.992987892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.329907404 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.223175002 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.962384118 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.973881551 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.335486928 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.964499599 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.969716331 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 5.968467258 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.152506934 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.566724004 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.96176114 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 4.940666413 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.962465571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.231453273 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.022861484 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.049706746 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.365092764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.96313551 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.937567489 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.984908582 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.962756573 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.97048105 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.965086121 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.968739193 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.234766419 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.246830382 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.96741288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.231926444 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.343961318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.982516922 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.401593215 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.733581971 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.985855993 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.018941426 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.964214829 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.447063197 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.371633763 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.995538754 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.963989469 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.216011359 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.967162847 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.207019999 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.974811007 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.96860493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.41527697 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 5.966800006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.021720516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.96180046 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.967668046 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.612442687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.965710104 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.194777409 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.992114761 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.966072373 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.966385495 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 5.969303232 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.972111121 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.96515858 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 5.971623385 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.405892692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 5.987812187 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.037791784 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.977987989 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.792555708 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.965561577 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 5.966689586 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.966760094 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.172375259 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.462332553 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.97758798 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.966965662 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.939071901 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 5.966182169 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.126944558 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.973150064 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.196319395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.970294259 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.966886229 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.966706534 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.592147012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.992361582 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.96692729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.966365558 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819853001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.164977077 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.985362729 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.970375601 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.967098143 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.967216971 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.930120773 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.98303665 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.010260591 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.969377197 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.588690102 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.020910414 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.978443763 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.219021421 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.971161828 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.563420724 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.986735009 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.969561108 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.234232003 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.194881453 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.070974411 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.968118926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.979472072 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.569675572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.02354239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.108466521 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.982746241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.007297953 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.159887778 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.148932302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.970739507 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.562638876 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.968090472 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.172070526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.969394605 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.247302362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.375570548 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.985620625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.97179732 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591903881 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.659083963 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.643392169 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.968380801 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.205498156 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.936027141 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.446505233 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.96858403 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.969353833 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.428741592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.972438236 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.970176555 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 5.969663513 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.969632262 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.128604179 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.137117169 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.117008256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.971491825 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.34137181 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.972081254 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.837401541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.976597224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.972662754 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.318551929 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.052314771 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.975109819 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.003005439 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.970906175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.975813051 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.36227811 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.766239533 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 5.971493602 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.117832891 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.511007339 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 5.987604984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.970403383 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.617982816 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.644429199 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.405266728 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.02572221 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.203265962 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.978707635 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.003969019 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.570215 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.051746492 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.365600262 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.978559787 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 5.972390888 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.48499757 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.988818468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.04764265 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.972082268 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.971869323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.425976975 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.988373073 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.9749186 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 4.909229861 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.993847801 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.210898624 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.972594026 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.00825401 seconds)
  done (took 1021.325049968 seconds)
done (took 1178.262246161 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.005212731 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.007999583 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.982527472 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.005077957 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.100777101 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.158309426 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.993123982 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.985586998 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.030731947 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.032981305 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.988614746 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.157793735 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.990759401 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.990630375 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.983187576 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.004849448 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.797174899 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.989756989 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.0073578 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.992915595 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.007042565 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.989231207 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.033424183 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.158931731 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.986730924 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.986063058 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.993121225 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.010221683 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.103292758 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.993272436 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.986884479 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.002194038 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.799493444 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.98249031 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.978949478 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.010483871 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.002091727 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.993689149 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.98840111 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.023687525 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.099281903 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.991475229 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.993436604 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.986189013 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.985446227 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.989281012 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.993667815 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.990672354 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.005728227 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.007086737 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.089893171 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.00612771 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.995319532 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.986003289 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.997009547 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.992663002 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.989262973 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.010334628 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.012267898 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.010655664 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.788866901 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.992107704 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.989083811 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.009579517 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.000809922 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.130864894 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.981856657 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.992254248 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.103776397 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.99117283 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.131284558 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.001153466 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.98838955 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.007672428 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.024834214 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.805109706 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.983452247 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.987676832 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.002142597 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.993340118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.996752964 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.008942687 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.992898021 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.989471349 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.008701705 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.16344363 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.997798323 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.995752324 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.996946706 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.014866451 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.002103644 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.005829893 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.991227014 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.984574175 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.998320671 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.993311228 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.998489933 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.996965032 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.993951618 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.998875519 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.106232376 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.013634278 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.986063759 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.985850832 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.988877562 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.009639362 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.106659551 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.996018345 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.01121804 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.03629044 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.991639417 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.79469296 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.998410564 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.014174558 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.99872371 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.992697611 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.985431333 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.794217435 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.098157652 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.010486627 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.991626863 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.995402862 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.01482294 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.99200088 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.987698659 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.809886072 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.991404771 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.012019151 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.11709351 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.000876459 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.02775208 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.995326292 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.993419261 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.020348629 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.014404771 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.028772151 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.993379291 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.015032888 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.013323533 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.988166596 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.008027968 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.001206433 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.992501418 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.001905333 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.987340231 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.020850542 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.011684506 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.0113591 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.012684351 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.119063828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.989267826 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.795919878 seconds)
done (took 169.188880527 seconds)
SAVING RESULT...
DONE!
