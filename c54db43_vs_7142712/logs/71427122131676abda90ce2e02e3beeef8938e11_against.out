cset: moving following pidspec: 3972
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.361934263 seconds)
loading group "string"... done (took 0.488390751 seconds)
loading group "linalg"... done (took 7.940236327 seconds)
loading group "parallel"... done (took 0.178181421 seconds)
loading group "find"... done (took 1.202146371 seconds)
loading group "tuple"... done (took 2.18306207 seconds)
loading group "dates"... done (took 1.370429041 seconds)
loading group "micro"... done (took 0.253537718 seconds)
loading group "io"... done (took 0.696646116 seconds)
loading group "scalar"... done (took 43.102208685 seconds)
loading group "sparse"... done (took 13.045480472 seconds)
loading group "broadcast"... done (took 1.202847104 seconds)
loading group "union"... done (took 14.552297434 seconds)
loading group "simd"... done (took 4.906233168 seconds)
loading group "random"... done (took 10.003269377 seconds)
loading group "problem"... done (took 2.020690413 seconds)
loading group "array"... done (took 23.016568594 seconds)
loading group "misc"... done (took 1.47955419 seconds)
loading group "sort"... done (took 3.681883852 seconds)
loading group "collection"... done (took 19.938020573 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.473299855 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205741372 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259405122 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147090094 seconds)
  done (took 1.986440133 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.164303727 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.072021088 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.090874372 seconds)
  done (took 1.03044117 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.338585364 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258301652 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22467749 seconds)
  done (took 1.488371743 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.242589715 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.256504526 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.314571683 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.386007849 seconds)
  done (took 1.96874202 seconds)
done (took 7.150695469 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730748307 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278219731 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203955823 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512126659 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180998318 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211521517 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678544659 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341223459 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.243376172 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10375942 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130698843 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.400651969 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11696885 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687109208 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085874532 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127097403 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.171964882 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449884348 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.092571727 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091051379 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114982095 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152280267 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.115231104 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.086424549 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181003135 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077553151 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.188166724 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106059245 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075887601 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.283494647 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200421088 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687199204 seconds)
  done (took 10.816873674 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118340959 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123456055 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076810431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154757404 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138857245 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081081422 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099191263 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07712204 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122850373 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180414359 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13141442 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127859009 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091151644 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097218894 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116623883 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246263791 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101117218 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118668293 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096220998 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087889092 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.134676 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093667033 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105579461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104213193 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150843961 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215844199 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109761756 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123471738 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093049202 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094417826 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140678098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155057528 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077228589 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093436747 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161543264 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122696495 seconds)
  done (took 5.048468242 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18609835 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102143843 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169398528 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160218307 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140027752 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166639058 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094096488 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25304793 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114620987 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175651707 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127535566 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111769258 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077016772 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097749234 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076414129 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.747253168 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165115991 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15180997 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096684877 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098174601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082437394 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160005894 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082364761 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092984237 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079938834 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.13012071 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.310454661 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154402799 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096595004 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.296336754 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.096031178 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098471611 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094663012 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091525867 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12928528 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125250763 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115212382 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09578362 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073284694 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174294281 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099994667 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076896048 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122171512 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130282982 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118675497 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091219067 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077670854 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222437305 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075136177 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090059754 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091599149 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.996402114 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177458446 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076997229 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074880197 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.33502116 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112910522 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075411644 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091945013 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263464653 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125688447 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092450596 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076818616 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076451551 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095661119 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387099601 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075822741 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.686670614 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080384596 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086925851 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094894585 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091879869 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084194042 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099453399 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095556335 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091664841 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079065831 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075192207 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092554492 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077062281 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112398385 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098027735 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076860626 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155172964 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076251284 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094849589 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124648741 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096389378 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075738558 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130605478 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079019301 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092009684 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132617743 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078026895 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11097181 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092011781 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123729849 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094361273 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160304625 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08918533 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105992129 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096310941 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126702828 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105609409 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07912346 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098559859 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075033332 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090819674 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144391862 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079415275 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093198877 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077454428 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089806428 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088366878 seconds)
  done (took 22.247095449 seconds)
done (took 38.790520144 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39677547 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469582923 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.052624294 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142893408 seconds)
  done (took 2.765778185 seconds)
done (took 3.485556905 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08493891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087334078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10340063 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084423371 seconds)
  done (took 1.068183545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124617643 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.098803614 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105016937 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081088617 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106399154 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081804308 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083784713 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.106910513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.095617969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.082062161 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080993985 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097022374 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.086444568 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098612186 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0775094 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100011489 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.087611144 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09732228 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084623335 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098350065 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078210147 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09927159 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.085605031 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096073551 seconds)
  done (took 2.987112978 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098630332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079273924 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097863689 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078497663 seconds)
  done (took 1.071707722 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084841791 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107134397 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091531201 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100665839 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09244443 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10721616 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077766003 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075996374 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096082096 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084936544 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092155934 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098216628 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109564844 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084320496 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102940804 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073301295 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092619751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091177524 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101622099 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085907347 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094137929 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085017652 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075445885 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108303069 seconds)
  done (took 2.934039014 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157267946 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103796058 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096867371 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098543488 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.135437976 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11286389 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114742832 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09904966 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.119109261 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.087835502 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095944641 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134454132 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.086724783 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.072027147 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089804328 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.072383722 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.101761247 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.086020025 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092915767 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.086575127 seconds)
  done (took 2.766707107 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096690047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106581353 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073345852 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.077886412 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101068546 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081018633 seconds)
  done (took 1.261561241 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08264401 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074079087 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095305951 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.076023614 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09600568 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073701815 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089954708 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075744358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073804013 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.091119267 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.076184166 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089017306 seconds)
  done (took 1.718184251 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.528467182 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076254626 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094823633 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074450744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.084678197 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092767032 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090261849 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09420257 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101692658 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101107625 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074925006 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094326107 seconds)
  done (took 2.268060615 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190476322 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096721539 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224028251 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312539895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132276465 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13763779 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24331234 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140079285 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.151896467 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115367211 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168137329 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133565357 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111523649 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14888259 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115085416 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.139105568 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147088943 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164022977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123364645 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178051563 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135167266 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141526465 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154858925 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109600905 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115424566 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135218694 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.080484952 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106595665 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145686418 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142421521 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147701308 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125295349 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099906464 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.402943364 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180636873 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148899731 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245836752 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112730204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145458542 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141892489 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195073469 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116153105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161422258 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128338204 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091273938 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151758662 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305564223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152423214 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.092152595 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117901444 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152900531 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153435338 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.149210007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116961244 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26087024 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124747507 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.101732707 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157580904 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154644395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163353345 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140668713 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096769045 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159366041 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156748192 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152320156 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.119501655 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.139162424 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085108155 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143585126 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167792184 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148822815 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136784568 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156491289 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115168663 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137835521 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146261792 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129347759 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149046568 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11723883 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09915842 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125586982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099644337 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107925115 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.183811929 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083527031 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171917197 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111526196 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14788595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175164474 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132852351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134714673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119033199 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136253441 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122725243 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075890107 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12212735 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12743066 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132124335 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089562668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13141674 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118685925 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086538237 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127722841 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.208806476 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114854952 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103773726 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281752416 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135892548 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102419697 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136578195 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106346639 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126303839 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141257612 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159075615 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112083394 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091223718 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169658998 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133541504 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111121823 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148336797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157016717 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.111984292 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114290171 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140650668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16072091 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116668185 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161032595 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118002483 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093103711 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116384235 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132379077 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132992511 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129240295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109360121 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127390726 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164563274 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.084174845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114197287 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144774029 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086422981 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106154583 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117794581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094915703 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111678219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097978537 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.112677667 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132913572 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13336781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128654318 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109622448 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116886704 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162645257 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111728248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106386804 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122160799 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097781962 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.145219092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158886598 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088932495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166826314 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.137085133 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188545234 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136922409 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090194821 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150702302 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105912951 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078481571 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138175158 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133244043 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136803152 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153420638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168742017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.138592752 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125245175 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109043581 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138332514 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139851476 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126180055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.094068091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119382645 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13064334 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099301682 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.083666029 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104265263 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097388812 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108032126 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093718588 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168144571 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137985291 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161313593 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136776945 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098822784 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156440336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103683124 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137785882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.345343743 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098544533 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155215039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156550581 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140396203 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118039615 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146125773 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078447096 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100695053 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092891376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139171175 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112018499 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092285071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117460271 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157307686 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304962389 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107246455 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193528463 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14069194 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165747774 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.079845173 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145574223 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143712763 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133994801 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.124059084 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109139695 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105689231 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152717377 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12120741 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156360563 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138087441 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140438793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163331075 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125252592 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089872883 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123741506 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137373297 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115701065 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140260821 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104346271 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113804978 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271599054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106643264 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084967974 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146954953 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121070969 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147951808 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123607902 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141169803 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086125727 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118011288 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133972904 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122281052 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.075339755 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284753612 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172822083 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102524897 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292105909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146665845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089960065 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.274431457 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161163643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313484378 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114699199 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099941513 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136188009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136681942 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276395081 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151974414 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121993695 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151336745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131182813 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.094029342 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114390159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122866448 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108122337 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.116838387 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109570435 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109776781 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112731329 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147926834 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119813029 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134652099 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11976876 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125953212 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119638466 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099019106 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173780455 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133945143 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149068204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124086706 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140282553 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170257663 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084296569 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107045543 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08557724 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151913046 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110485942 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133404788 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.159311734 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171712676 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135152609 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138213942 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096203164 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096611636 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134827578 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105507503 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189426404 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099151978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111865897 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15945841 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119999222 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090351438 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134468427 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256150392 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121309306 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150305429 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.071875505 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245680477 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101149394 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090945481 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137607196 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145883055 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114331935 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.124335634 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135892018 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120773665 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137530645 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09682399 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182137861 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178199531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143545487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145460232 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091490659 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134993772 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276361093 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151099364 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123156808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112699423 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119663073 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157464464 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159777168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110368305 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137833184 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138596127 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135383286 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141286245 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095055334 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168967905 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108257142 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140288552 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097211011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1020372 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133776525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.159846544 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109588036 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148235017 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114799139 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109885325 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084733544 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126303491 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134758431 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120540855 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.084741109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146504953 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100538105 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117999206 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150323802 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109982714 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131176393 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103233944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11289117 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118394776 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10247758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114588423 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.114503935 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151916593 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107168838 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150789926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147539699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139412303 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272131234 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118856552 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642708629 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.087007807 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158163884 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124390657 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155856473 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105399409 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140988965 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139041897 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126150705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140277789 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125813526 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189396484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139995916 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.132612059 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108389813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101214011 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119234214 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.108051933 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108581429 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137295388 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117403295 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094466123 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.131413733 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121057732 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090453981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116787774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158135581 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123839498 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148839117 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153716408 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097869586 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141882902 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142843675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108099389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.135862899 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146894939 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10022059 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125122258 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.090459718 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111825418 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154062017 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082133592 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136600824 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139394925 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137884357 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138076034 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.092300823 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135984869 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118520935 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135364715 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088880147 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.12928572 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134334454 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09211974 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10480894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132081898 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110741765 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126901194 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103475067 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.116234215 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157866552 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.081094512 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110549005 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253782845 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134779231 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162854679 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11875482 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093480102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120331992 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102817082 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.131006002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135043027 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.105939049 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090789263 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10777633 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114854878 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117792654 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13404133 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161635382 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276730161 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170609961 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114002756 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257809104 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097904214 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132074817 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099571423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.087144798 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118402865 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091786067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121643163 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165481694 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154571437 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12336789 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091749955 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104654606 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.083274471 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110131453 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138691475 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109421578 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133508272 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118512784 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.073163763 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11987024 seconds)
  done (took 65.769213274 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125241834 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111711835 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.128144838 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.290991937 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146354893 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230899379 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18753209 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214606249 seconds)
  done (took 2.244122948 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.16700086 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104136051 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.1326308 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111479286 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.076656231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.133485858 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29970467 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108928688 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.077210457 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104804873 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129084264 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.079229146 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.477100165 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.095729706 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0949759 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072500189 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094642708 seconds)
  done (took 3.16146994 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.646165422 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.391209913 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.065461543 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.152409988 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141271975 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.080379635 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.562288985 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080594 seconds)
  done (took 9.926716445 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.104583168 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.118750971 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115361383 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.133986787 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103071395 seconds)
  done (took 1.391686921 seconds)
done (took 99.288322484 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.087858814 seconds)
  done (took 0.89020495 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.376806461 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064501315 seconds)
  done (took 1.280447097 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090064157 seconds)
  done (took 0.904659233 seconds)
done (took 3.886673972 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.155666306 seconds)
    (2/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.139359898 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.258666213 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.303106553 seconds)
    (5/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.246253457 seconds)
    (6/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.19380746 seconds)
    (7/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10456791 seconds)
    (8/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.101269888 seconds)
    (9/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.207628323 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082447439 seconds)
    (11/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.22228234 seconds)
    (12/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.213127694 seconds)
    (13/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08604064 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.111029997 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.083557822 seconds)
    (16/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104113985 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103823209 seconds)
    (18/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104471348 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186817019 seconds)
    (20/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174258484 seconds)
    (21/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.127190648 seconds)
    (22/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.107871561 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.105446355 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.185534372 seconds)
    (25/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.170189203 seconds)
    (26/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.084486198 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.204105019 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064299455 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171263836 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.219040935 seconds)
    (31/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136756782 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119895892 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.108875841 seconds)
    (34/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110170772 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.168359118 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083274463 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.213750636 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.097246456 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.246063123 seconds)
    (40/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17342786 seconds)
    (41/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.17326786 seconds)
    (42/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.144793962 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.104873454 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100689484 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097599282 seconds)
    (46/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.211701328 seconds)
    (47/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130421727 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.171084548 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075157584 seconds)
    (50/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111525876 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.092524154 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.124458851 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.169718331 seconds)
    (54/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079526097 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123560221 seconds)
    (56/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.12456473 seconds)
    (57/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134944839 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128151877 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.080914775 seconds)
    (60/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.152164147 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.111143888 seconds)
    (62/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193276949 seconds)
    (63/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.132732008 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103255824 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08437414 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118546633 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 0.076823248 seconds)
    (68/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144894534 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087497899 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.151466281 seconds)
    (71/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.105163923 seconds)
    (72/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.174385121 seconds)
    (73/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.179251612 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.106963938 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127077271 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08664438 seconds)
    (77/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091712038 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111749525 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.153168666 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131052296 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.177999247 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0678648 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108219554 seconds)
    (84/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243433489 seconds)
    (85/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.183362751 seconds)
    (86/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.144862854 seconds)
    (87/286) benchmarking ("sort", Int8, false)...
    done (took 0.183528666 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166127966 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.221719633 seconds)
    (90/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232100543 seconds)
    (91/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122006516 seconds)
    (92/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.104325312 seconds)
    (93/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.139963915 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.079482929 seconds)
    (95/286) benchmarking ("sort", Float32, true)...
    done (took 0.227799683 seconds)
    (96/286) benchmarking ("sort", Float64, true)...
    done (took 0.228445613 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.086388835 seconds)
    (98/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087919531 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079105632 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.177913595 seconds)
    (101/286) benchmarking ("sort", Bool, false)...
    done (took 0.176635576 seconds)
    (102/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.107714934 seconds)
    (103/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.130816207 seconds)
    (104/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107497815 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065619251 seconds)
    (106/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.106257486 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065466547 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.085306549 seconds)
    (109/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.084407484 seconds)
    (110/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.085851198 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103361429 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.083601022 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10500058 seconds)
    (114/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.074636084 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162826796 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077447753 seconds)
    (117/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086798484 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089913756 seconds)
    (119/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065094905 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.104920643 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.086135235 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.087770951 seconds)
    (123/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088333901 seconds)
    (124/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.109385564 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154933856 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185514546 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.160566405 seconds)
    (128/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.081125625 seconds)
    (129/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110721741 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077379789 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.105438949 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.082550477 seconds)
    (133/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10090441 seconds)
    (134/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.079523076 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.145562272 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088571008 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.10754572 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07722787 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068577863 seconds)
    (140/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.085745839 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.094164937 seconds)
    (142/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102324524 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.079614416 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.08805573 seconds)
    (145/286) benchmarking ("sort", BigInt, false)...
    done (took 0.236514581 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.103411301 seconds)
    (147/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189763001 seconds)
    (148/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.064921837 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.108495406 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085265726 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097668091 seconds)
    (152/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.120568828 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.085623465 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080906944 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.124169888 seconds)
    (156/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08976706 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067195247 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085430614 seconds)
    (159/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.165976471 seconds)
    (160/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076911517 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.113339137 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.077871656 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.079949638 seconds)
    (164/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.086846384 seconds)
    (165/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.183882665 seconds)
    (166/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.154772793 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098364799 seconds)
    (168/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081467064 seconds)
    (169/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.148010278 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.180445775 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.155010955 seconds)
    (172/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097510066 seconds)
    (173/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093577729 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.104067681 seconds)
    (175/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067949223 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067159321 seconds)
    (177/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084940078 seconds)
    (178/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.073355159 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.094637892 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.088387576 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078324725 seconds)
    (182/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.180046351 seconds)
    (183/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087764653 seconds)
    (184/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079386353 seconds)
    (185/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065007216 seconds)
    (186/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101455362 seconds)
    (187/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.076581668 seconds)
    (188/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.085456542 seconds)
    (189/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065984049 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.065430477 seconds)
    (191/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08529091 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.220621626 seconds)
    (193/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087669935 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.096847683 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.077198163 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078721559 seconds)
    (197/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.168639556 seconds)
    (198/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098624465 seconds)
    (199/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065042894 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065241878 seconds)
    (201/286) benchmarking ("sort", Int8, true)...
    done (took 0.218144604 seconds)
    (202/286) benchmarking ("sort", Float64, false)...
    done (took 0.166960893 seconds)
    (203/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068652801 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.159801445 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108590681 seconds)
    (206/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065453826 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123344007 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067660231 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.124732278 seconds)
    (210/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079615505 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10854051 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067432835 seconds)
    (213/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066671266 seconds)
    (214/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098365912 seconds)
    (215/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084452858 seconds)
    (216/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107169314 seconds)
    (217/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076193659 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.077363756 seconds)
    (219/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099840237 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076079745 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.103898344 seconds)
    (222/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066129653 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06738294 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099393865 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15454306 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075960916 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067683126 seconds)
    (228/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089034033 seconds)
    (229/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06647823 seconds)
    (230/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104258012 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066195944 seconds)
    (232/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078406793 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097784482 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.078649344 seconds)
    (235/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.087092227 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.071431169 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097480392 seconds)
    (238/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065862551 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07690345 seconds)
    (240/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085927131 seconds)
    (241/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07944597 seconds)
    (242/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099741326 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.091020802 seconds)
    (244/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.065304339 seconds)
    (245/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092187143 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.084380881 seconds)
    (247/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102170247 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.086781527 seconds)
    (249/286) benchmarking ("sort", Float32, false)...
    done (took 0.171046252 seconds)
    (250/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088203932 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.087183048 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065819381 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075546718 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.086677332 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.106458088 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098582771 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068841477 seconds)
    (258/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.094051085 seconds)
    (259/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079837388 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077536518 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097319754 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.085297471 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097988758 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.075759714 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090646091 seconds)
    (266/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.073176083 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076298363 seconds)
    (268/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.089276182 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077295498 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119825845 seconds)
    (271/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.075416813 seconds)
    (272/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.154042077 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077526845 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.124502649 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.078380895 seconds)
    (276/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077119545 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097808861 seconds)
    (278/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077613999 seconds)
    (279/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.094757826 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.080321115 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076242554 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097343253 seconds)
    (283/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.084676998 seconds)
    (284/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09926077 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078533532 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.103263485 seconds)
  done (took 33.5094383 seconds)
done (took 34.320428557 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.114030994 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134361571 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.092587894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16270123 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.079253645 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.134385593 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.111998053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.114361324 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.079528055 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0999509 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.079248026 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102924113 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144061272 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079880464 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100595014 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.081465263 seconds)
  done (took 2.594530486 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176151304 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214695377 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11845805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.079577195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10445897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079460378 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.098901663 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087477981 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102019682 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.078501432 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100149795 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079695211 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.078886147 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100256167 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080735947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100159767 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07902215 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100532594 seconds)
  done (took 2.711345425 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108261327 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13616335 seconds)
  done (took 1.094784937 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114582947 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171813176 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310007832 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.127903403 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118146257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116365175 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.128871783 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121021389 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200600094 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123783503 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124255281 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087621793 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133397436 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110629046 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089168933 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107393391 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114602889 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108385845 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088372302 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108448178 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112746246 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100118908 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09000193 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.108122785 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183790031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123340454 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079822145 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101156238 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088738037 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111475448 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086869723 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114643865 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12198803 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.146909284 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093430885 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.147348785 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108390993 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085831883 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108882055 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085002454 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110744374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111125104 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095265016 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107434299 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079257963 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108010244 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.078995744 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079233521 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10817208 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110048275 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.089345225 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107718024 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.14775877 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088253263 seconds)
  done (took 7.072949316 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.812191358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147180288 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085586327 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.908839538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132916474 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098612232 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801394464 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12916576 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229629936 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.788657061 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122421925 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114687521 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203319469 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250228227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939110827 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310214652 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689182997 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120958165 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133387633 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.142822678 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090628711 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130421342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123314856 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401676958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.105886452 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085513298 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109309349 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112748905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154471067 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084257407 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106780351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170034977 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.241980575 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198234077 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086064463 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103589884 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083195509 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.159470876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261597478 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211170038 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148923407 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101784408 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083568631 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114835144 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122980742 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081073581 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1557019 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.165033015 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183634638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087172828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113659698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091689857 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11256465 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154761247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080911252 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315391507 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317959434 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103703333 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092657503 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119756159 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237246016 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10448006 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221347788 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109458274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209039924 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085196108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776031244 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159515289 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103668668 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090803287 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111968405 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089214934 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113585725 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159588726 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398964698 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095998825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10837423 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084092667 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222994217 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084368316 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103768522 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1574443 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085753883 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112349264 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097805804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115199734 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.161048339 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.226330468 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116887958 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112163422 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088379037 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116786589 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.08520307 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.204362184 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214656656 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151761759 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206300377 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115461851 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15556642 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156913366 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113611909 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.163049908 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111387253 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098913242 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114615664 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212683344 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134131939 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08436327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108513362 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090325866 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137168866 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086651192 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111099648 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.160007585 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.472880272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160217808 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081584011 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107802491 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09275648 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155690647 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110074375 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236381775 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113769513 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.159528275 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111726275 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.081339622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111756089 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156680351 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115884752 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092610796 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115530205 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090994964 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243729816 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192237821 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117015216 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216106121 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175804775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112381533 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165156389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111580098 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162858407 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092379878 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113644865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08609604 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768631625 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117165048 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090165391 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110095051 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177382411 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084639265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083765496 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10534377 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080816276 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778186345 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086649503 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103189112 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084415664 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11125475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090010716 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110569132 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087508026 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175305221 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205105825 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115500409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11078055 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084844209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154272057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106807514 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085541371 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104949515 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085295431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112388971 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087284953 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104837211 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165015174 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153063526 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.215545863 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.563182458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104293775 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084609094 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223238269 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083779675 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289333967 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11141318 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199894988 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177345994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082330092 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314866654 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162024 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179142867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086883952 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.164584169 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101633847 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09014997 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17468346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083895727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110379311 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152895308 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096747603 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116651386 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.982032225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08372656 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222090289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.101717412 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.161675688 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086251379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11446334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294764475 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084498989 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121820235 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155029378 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108269585 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085923357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.843201244 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106844205 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.093906765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111640141 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218164104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159378948 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111349024 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091109945 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115331353 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156220445 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207005154 seconds)
  done (took 41.932722528 seconds)
done (took 56.256296315 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092689596 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134926506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.089183187 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115334183 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.092713035 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.114807627 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.087944673 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.11340642 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.092960796 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.115259662 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.090477624 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069530517 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111554876 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.090120256 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.111700334 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109993829 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113349619 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.086474516 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.103377563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.078787451 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.104284173 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.079627447 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.102161933 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069543113 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.090826031 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.108680206 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.08548483 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.112390109 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.079050681 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.100805591 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078739576 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.087634054 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100350396 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.093313862 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.106892219 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.083511033 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.112090158 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.089214882 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.101858972 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.079335134 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.088504797 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.100048565 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.086569229 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.108954937 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081236524 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099712256 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.083396214 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.114565667 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111022918 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10609665 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.086913981 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090050568 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.110362424 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089260085 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.100187717 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.083378245 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.099941927 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111889126 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.104525678 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084707131 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.320718871 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.087291408 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078127357 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.104387002 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.082852144 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110268711 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.090525156 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099272026 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.089101366 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.105871463 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.078994683 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10399956 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078890952 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.078981877 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.110380709 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.089870352 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.09902228 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080820839 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.107215453 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.084133498 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.079292059 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102877764 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08024072 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.102701323 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081528216 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069297685 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.099226112 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.085141531 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.098621703 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081902507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.106175292 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.086279072 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.080813403 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.111392477 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079094198 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099848379 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.078402765 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.099627676 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081037577 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078818077 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.100091652 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081389745 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.108341199 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080885077 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080387215 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112499792 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.079141051 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.107457932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078058656 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.099439276 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.094903869 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110016749 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.079138776 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083854048 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.099357614 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080857974 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.099628521 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07886856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100251455 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.079209099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.081115276 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.100040126 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081917577 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.101168279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094431204 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.099797588 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.078821129 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082345734 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.10039597 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.083993931 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100652965 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.079472968 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081197062 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.098266577 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082065113 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.099831921 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081406859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103262153 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082154954 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081146706 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10445644 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.08445525 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.101718003 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078395325 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.098968093 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073373772 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084534602 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103294525 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.080608107 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.100832941 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.081270094 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.078390518 seconds)
done (took 15.26892737 seconds)
RUNNING BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.94655913 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.945589422 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.927303226 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.94660293 seconds)
  done (took 24.644741422 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.948148509 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.948946815 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.949782264 seconds)
  done (took 3.722939401 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.092289409 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.945842053 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.946390233 seconds)
  done (took 17.860550182 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.108589073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.90365208 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.191699338 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.475271229 seconds)
  done (took 7.555439188 seconds)
done (took 54.663320604 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.95997251 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.964237189 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.848483414 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.828542882 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.937285253 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.864212368 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.093956421 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.775386995 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.845242532 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.828661362 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.843378787 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.860158635 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.861840193 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.07839896 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.84581419 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.84887395 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.888893001 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.068541286 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.166869391 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.853495395 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.849185544 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.857324422 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.843448565 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.853764046 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.907422329 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.842891565 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.84689135 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.846262429 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.335279815 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.847518492 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.894197101 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.193211947 seconds)
  done (took 178.256473035 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.841391329 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.827336671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.901754018 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.860145612 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.248331935 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.04356707 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.985659733 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.324192605 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.854778159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.848287211 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.145040163 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.841662935 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.189437291 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.806677876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.870754904 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.92603939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.132588175 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.155096983 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.871494716 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.981951742 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.847360934 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.00669772 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.922312693 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.058397283 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.859305156 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.899501211 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.874408574 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.875195197 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.032348477 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.074498934 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.846736365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.869673237 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.287586208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.694467608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.84957198 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.847936301 seconds)
  done (took 136.284682509 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.839369269 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.84015672 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.839827044 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.862484429 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.840623738 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.242149106 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.245071398 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.352029618 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.369946059 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.648684797 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.890159328 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.839763093 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.922253194 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.854537002 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.840553882 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.855588824 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.864916875 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.841887465 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.839620359 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.237407803 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.856140185 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.84016257 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.98467498 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.84961139 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.862744483 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.226416975 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.970944777 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.852119757 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.862454233 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.872968038 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.139979797 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.87360587 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.840111514 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.840202904 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.949809578 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.945169939 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.841343258 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.863185694 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.840940043 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.100626018 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.841398693 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.841343652 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.843973852 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.282752147 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.841449522 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.235661641 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.843194925 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.593109515 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.840442792 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.841881133 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.841904975 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.032094209 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.042306701 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.85108961 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.841636535 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.843491476 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.841344299 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.84111937 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.864053276 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 20.940225342 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.925174381 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.841830433 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.844609285 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.862839848 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.841217871 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.009622645 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.840470602 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.647008895 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.905140905 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.948310075 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.229694377 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.843278489 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.924147282 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.950663407 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.840591731 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.840869993 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.840550412 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.840540165 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.941564085 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.841329285 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.110344915 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.984692775 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.85169745 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.608722692 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.929766193 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.841003673 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.9667999 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.843303696 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.841376606 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.382174516 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.924095481 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.841955616 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.841811619 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.840968689 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.112014121 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.232227513 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 5.869053205 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.844750891 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.473169006 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.854963652 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.120773131 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.223511707 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.30223025 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.842528123 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.942507977 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.986788063 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.852637614 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.841847985 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.615129167 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.844817119 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.89723188 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.841842615 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.842378127 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.22979361 seconds)
  done (took 318.549941719 seconds)
done (took 633.967147845 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.394257055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.908607848 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.853480651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.849252396 seconds)
  done (took 24.788527593 seconds)
done (took 25.572942398 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.842949308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.846300209 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.846220363 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.846341911 seconds)
  done (took 24.165679069 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.882463393 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.88246638 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.882836623 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.88645623 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.885943347 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.882179547 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.875304952 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.875805776 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.888123513 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.886074254 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.882832944 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.886035717 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.883129204 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.876080785 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.88598149 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.8838198 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.887245152 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.884050161 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.876630786 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.886534548 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.851797435 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.88778579 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.886614437 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.851680848 seconds)
  done (took 21.923448427 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.367692021 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.922449201 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.006749627 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.903261177 seconds)
  done (took 4.984691059 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.902913946 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.90407872 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.905075512 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.954560106 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.991651694 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.904385617 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.873069701 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.870771143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.859255917 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.903115996 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.980243967 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.921500903 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.989906802 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.851316888 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.021634812 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.851852046 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.852165383 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.903779823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.956626101 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.970139994 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.85252654 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.903739007 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.905303438 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.921368418 seconds)
  done (took 22.736871918 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.852228669 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.871059894 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.852143453 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.85210277 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.860739905 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.851174277 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.852780769 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.853387947 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.852337135 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.857336508 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.851727069 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.864405464 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.851021537 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.852243498 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.857978531 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.85275233 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.85847214 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.851752508 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.852404614 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.85769844 seconds)
  done (took 17.89211246 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.846370075 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.70071122 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.19834146 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.102532168 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.847601751 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.849887184 seconds)
  done (took 24.33244434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.89886413 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.998474309 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.853797051 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.082205257 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.156715791 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.854369093 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.854433774 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.024957402 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.22285524 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.198080636 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.891675182 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.901701132 seconds)
  done (took 12.725659723 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.854862782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.850643105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.858568706 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.865535785 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.889475195 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.857403687 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.861411314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.847855717 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.892046195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.894770775 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.857156321 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.890892337 seconds)
  done (took 31.209096048 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.935139031 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785897366 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414113081 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.891977273 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551045537 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.059836506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.862361406 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479633691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.864996858 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.122104926 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833435999 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.938099474 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.101274212 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.853812673 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.8516727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.559292489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.072579715 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.200832588 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.85086593 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.149492345 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.875297563 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.85454102 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.064336643 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.013486495 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.0645491 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.725919276 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.110023987 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.628580389 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.04368539 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.866426743 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.860544024 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.850378537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.124074618 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426657542 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.945668024 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.00087754 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858951398 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.395607584 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.865524123 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.01687659 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.539473829 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.862879822 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.861547012 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.850483361 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.78532032 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.851427413 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556171761 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.856311409 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.561704034 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.850593998 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.023052099 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.949849502 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.854002215 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.394823999 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.907008563 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.855669336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.854027812 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.939617331 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423774056 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.209236138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.854878056 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.798172283 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.850194998 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012096877 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329880471 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.85701166 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.854577421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.855146777 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.785794871 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.017157145 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.868970291 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918376775 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.876653572 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454788842 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365380875 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.849803612 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.782260483 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.263412625 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.859786985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.789849075 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.07473014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.630933797 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.786449036 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.790465126 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.785190054 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363320527 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.859456494 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.150817651 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.87285943 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.458028995 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.018075548 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.872728634 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.876222296 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.074885969 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.73808783 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.853634787 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.612337928 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913597469 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.87498928 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.455928952 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.800115593 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.856417137 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.105186471 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.063880871 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.8528661 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.56328714 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211964912 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.85328357 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.881394476 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.860012783 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.007202512 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.28021307 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.872502596 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.216901178 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.875649727 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.633270803 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40644755 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861477227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.860403664 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.835831909 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.069620516 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.43300791 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991999606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.921504339 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.857889853 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.854436758 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.025578209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.722563328 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.715768419 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.99664841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.869387933 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.868099946 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.857046273 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.790815323 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.856800824 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.85680789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.63665196 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.07732163 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.856064419 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.132202746 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.789565599 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921320975 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.76229969 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.07659468 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.737678592 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.863092508 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.110409482 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857537134 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.858262851 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.878934282 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.874972543 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.954543406 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.87817311 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.856261396 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.109481779 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.860022194 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.860796017 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.030244887 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.640514413 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.862177345 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.862465595 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870677761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288983066 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818682346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.865135455 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.693926787 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.87036848 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.924100561 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.862647772 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.009215072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.534469858 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863100192 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.862996984 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.85476959 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.09154727 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.867042683 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.031103246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.938764376 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.218132766 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297061168 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.873635446 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.791798394 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.568493198 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.550270448 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858052421 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.054605049 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.858408934 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.00974427 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.874939583 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.860435991 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.286530614 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863151674 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.048729198 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.864483885 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.871070455 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.07542082 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858782306 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.556281935 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.225902657 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.864193214 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.87220695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.00205215 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.872231581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.793798836 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.376012479 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.865053969 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.859166775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.637845011 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.892937561 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.045792831 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704847885 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.22773954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95257537 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.130026662 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.244850045 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.972844776 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.94589047 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.821761348 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.952286004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.95571632 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.955644597 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.954967353 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.172423445 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382930599 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507610093 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536748104 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350796172 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945619173 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.947968422 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.827662117 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552221827 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88888563 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59775537 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.122408062 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551900336 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898278346 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464207033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.872985241 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508163565 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.118153815 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.173970137 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943072033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.829171503 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.121670034 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.158234454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.977686294 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.948894902 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.874936794 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.246734256 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711802452 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.770245589 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.034596294 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.751408735 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.833129708 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.723667868 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.968558903 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371466828 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350868871 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.491034351 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.330198745 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.946047722 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.946548254 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971949088 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.965706084 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.469789737 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444807887 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.948971093 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.324945788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894003957 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.100244022 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.959217582 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.947915475 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.964656451 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.647235378 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.210130365 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.121963367 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88358655 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.954310239 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355830476 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.800080453 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.950722948 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945320885 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524007023 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.947899814 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.151304853 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.949811409 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.653117658 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954332336 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.879349251 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879858451 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.638385041 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.950699784 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920598593 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3064279 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 5.958875414 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945871453 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.971468101 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794131611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.201483799 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.959985566 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410315631 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.171416438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.950934239 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.969491388 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.949463128 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.890612365 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.935500742 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.844061155 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.180605689 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.952734375 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.16798268 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.623679884 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.849028997 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.962803204 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.153862959 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.844838578 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.947532987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.110335998 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.656708115 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.946600364 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516363956 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.967326321 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.945832048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.949660948 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.940222163 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.958482215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.006840522 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.092419853 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.952209355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.947670588 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338912012 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93959774 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953449472 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.948262129 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.029270036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.417964193 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.652162751 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.708897767 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401104762 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535057389 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402588766 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.118309103 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.940333631 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937937976 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870204815 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.085399222 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.461012401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.209792119 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065961558 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 5.946713187 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.96006289 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.894497039 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.940580395 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.150543713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.211539147 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806458604 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941112716 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597774133 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.832538817 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.94735727 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.148087077 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300794914 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363875714 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055608037 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.943722182 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.551035847 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22446135 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028890059 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.937785726 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527867367 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.941712685 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362206056 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.946245632 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93753441 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.0852115 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.112715417 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.605310554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.950013409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.094270214 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.71163183 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.189664706 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.192429477 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22870522 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.094663377 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409664724 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.502351962 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.201019876 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.008370623 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.093558949 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.050718231 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.087530107 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.701212937 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.833977237 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.940394886 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781977722 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.648938541 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.948224958 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418877524 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.202908689 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.94317172 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.709679816 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.972737278 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.949729224 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.162895299 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483252104 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.162459701 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.949615753 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.944847877 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.508911297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411621284 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.122492434 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.874999041 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.939414229 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.102033295 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.175771649 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.960833473 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.388281651 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.646517496 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359947965 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.904780922 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.954742216 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.934700771 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.498130581 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401214966 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.646507946 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296444756 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590601663 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.930779606 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.208765526 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.934631379 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.93925929 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.208939361 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.933747894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.931223102 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.090477113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.399307987 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505515127 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.933700437 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221658813 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.866888322 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.156071948 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.981760449 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869728527 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.936318628 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.245064142 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.948169666 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061783569 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.94222006 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.712456885 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944633035 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.667476539 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212827369 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.936905267 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.947768777 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.915440553 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.936957147 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.02326675 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705013767 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944789291 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.606007091 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.28152141 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.187224402 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.939344743 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.921786021 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.936152251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933395347 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64859385 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900107355 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.941834405 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361281546 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.941635544 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.945640944 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.93577582 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.147429692 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.14414098 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.939253949 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.090221617 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947632896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.950775531 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.838289741 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.698887151 seconds)
  done (took 1423.651593316 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.951151002 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.937342849 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.951490759 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.962102425 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.950738737 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.035859193 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.983656493 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.003614695 seconds)
  done (took 48.645084845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.936548877 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.07840152 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.961350918 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.935436457 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.946633595 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.933510051 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.288443466 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.94239862 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.942143946 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.944193475 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.936760302 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.944159967 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.443658887 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.946783848 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.940411592 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.923844578 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.946088613 seconds)
  done (took 57.861551691 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.173592313 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.054718889 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.38045597 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.958385559 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.955425494 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.935982323 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.016972016 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.944698811 seconds)
  done (took 53.291859106 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.950920781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.9512692 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.952343887 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.951884416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.95282866 seconds)
  done (took 5.631081873 seconds)
done (took 1749.836547025 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.92068669 seconds)
  done (took 6.79120444 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.427602177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.408898435 seconds)
  done (took 3.70970793 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.224325559 seconds)
  done (took 2.095137254 seconds)
done (took 13.467658744 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.948634571 seconds)
    (2/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.959451394 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.318264187 seconds)
    (4/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 5.936064682 seconds)
    (5/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.977189644 seconds)
    (6/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.22325246 seconds)
    (7/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.047995974 seconds)
    (8/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.99708324 seconds)
    (9/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 5.920121755 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.147793498 seconds)
    (11/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 5.930464551 seconds)
    (12/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 5.920448704 seconds)
    (13/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.034890345 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.974469168 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.960184957 seconds)
    (16/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.556195329 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.949961741 seconds)
    (18/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.960357002 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.75407187 seconds)
    (20/286) benchmarking ("map", abs, BigInt, false)...
    done (took 5.934614756 seconds)
    (21/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.964247435 seconds)
    (22/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.949620575 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.936877544 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.104049818 seconds)
    (25/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 5.92143388 seconds)
    (26/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.970585199 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 5.920963724 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.363134546 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.816747952 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 5.935174426 seconds)
    (31/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.678710089 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.98997076 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.068936465 seconds)
    (34/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.934641417 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.661935489 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.511640804 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 5.921151902 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.938398519 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.927338919 seconds)
    (40/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 5.926880379 seconds)
    (41/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.721286762 seconds)
    (42/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 5.937064082 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.045196378 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.215073682 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.491885601 seconds)
    (46/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.156554517 seconds)
    (47/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.495713555 seconds)
    (48/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.157250052 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.992846265 seconds)
    (50/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.02182128 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.600605742 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.235510234 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.045526107 seconds)
    (54/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.057928228 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.245902076 seconds)
    (56/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.974071801 seconds)
    (57/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.92498575 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.941181316 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.00402017 seconds)
    (60/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.247875694 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 5.936695531 seconds)
    (62/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.928233966 seconds)
    (63/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.863933786 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.145875698 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.305831833 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.819249164 seconds)
    (67/286) benchmarking ("sort", Int64, false)...
    done (took 4.962293825 seconds)
    (68/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.036837081 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.322683798 seconds)
    (70/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.914078951 seconds)
    (71/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.143192349 seconds)
    (72/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.406380735 seconds)
    (73/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.245839827 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.721351015 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.946987041 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 5.92753176 seconds)
    (77/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.576148488 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.589725091 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.452216638 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.770633477 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.933846529 seconds)
    (82/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 5.930576176 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.937458242 seconds)
    (84/286) benchmarking ("sort", BigFloat, true)...
    done (took 5.957636579 seconds)
    (85/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.049962311 seconds)
    (86/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.699459255 seconds)
    (87/286) benchmarking ("sort", Int8, false)...
    done (took 3.943737103 seconds)
    (88/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.963604245 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.057159629 seconds)
    (90/286) benchmarking ("sort", BigInt, true)...
    done (took 5.949775894 seconds)
    (91/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.161127111 seconds)
    (92/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.022681291 seconds)
    (93/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.104930631 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.304818723 seconds)
    (95/286) benchmarking ("sort", Float32, true)...
    done (took 5.948893486 seconds)
    (96/286) benchmarking ("sort", Float64, true)...
    done (took 5.939013173 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 5.925271665 seconds)
    (98/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.020702405 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.390735079 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.961859875 seconds)
    (101/286) benchmarking ("sort", Bool, false)...
    done (took 1.435026723 seconds)
    (102/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.96106791 seconds)
    (103/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.933121866 seconds)
    (104/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 5.938471724 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.995550385 seconds)
    (106/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.199084113 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.958724777 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.969352557 seconds)
    (109/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.383479945 seconds)
    (110/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.944160377 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.511690215 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.545866809 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.219391202 seconds)
    (114/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.88356859 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 5.92657005 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.943025494 seconds)
    (117/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.028724827 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.079123298 seconds)
    (119/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.695981601 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.03804317 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.048504334 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 5.927962682 seconds)
    (123/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.981077362 seconds)
    (124/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.026513673 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.047420772 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.073228891 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 5.929484936 seconds)
    (128/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.979043514 seconds)
    (129/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.026556303 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.509056228 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.966476127 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.966966044 seconds)
    (133/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.78524143 seconds)
    (134/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.004720015 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.754943765 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.480208923 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.979887 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.475638096 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 5.927549119 seconds)
    (140/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.38952041 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.782010525 seconds)
    (142/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.354336413 seconds)
    (143/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.970417665 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.966995311 seconds)
    (145/286) benchmarking ("sort", BigInt, false)...
    done (took 5.942257248 seconds)
    (146/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.8755554 seconds)
    (147/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.1396594 seconds)
    (148/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.22988255 seconds)
    (149/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.067475494 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.045420352 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.620735408 seconds)
    (152/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.388450215 seconds)
    (153/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.805100383 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.02401129 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.884497753 seconds)
    (156/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.951762149 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 5.929532153 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.396320346 seconds)
    (159/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.940383626 seconds)
    (160/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.976846116 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.615792576 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.242901182 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.954937687 seconds)
    (164/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 5.937053661 seconds)
    (165/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.92875088 seconds)
    (166/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.729363661 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.31373775 seconds)
    (168/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.16305414 seconds)
    (169/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.23118649 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.933163031 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.767204615 seconds)
    (172/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.038963107 seconds)
    (173/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.968212975 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.970404663 seconds)
    (175/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 5.92989901 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.93994881 seconds)
    (177/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.617114943 seconds)
    (178/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.245955612 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.380399648 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.98521606 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.412687085 seconds)
    (182/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 5.929783969 seconds)
    (183/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.946851989 seconds)
    (184/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.947740555 seconds)
    (185/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.020029002 seconds)
    (186/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.005166892 seconds)
    (187/286) benchmarking ("map", abs, BigInt, true)...
    done (took 5.930275429 seconds)
    (188/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.132789142 seconds)
    (189/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.57042051 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.092246957 seconds)
    (191/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.797675211 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 4.948574583 seconds)
    (193/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.955220801 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.008179069 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.177115782 seconds)
    (196/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.969236101 seconds)
    (197/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.173149319 seconds)
    (198/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.944695773 seconds)
    (199/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.414538464 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.020822214 seconds)
    (201/286) benchmarking ("sort", Int8, true)...
    done (took 5.945547355 seconds)
    (202/286) benchmarking ("sort", Float64, false)...
    done (took 5.038105895 seconds)
    (203/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.932126371 seconds)
    (204/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 5.937444663 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.882883178 seconds)
    (206/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.138723456 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.161532223 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 5.932557474 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.740212773 seconds)
    (210/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.080566115 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.670124211 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.21838832 seconds)
    (213/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 5.932569847 seconds)
    (214/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.956084123 seconds)
    (215/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.997972585 seconds)
    (216/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.030061935 seconds)
    (217/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.061961603 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.680338523 seconds)
    (219/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.955412905 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.969307131 seconds)
    (221/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.97262358 seconds)
    (222/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.942732775 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 5.948468954 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.948093873 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.047459956 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.987135006 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.933069243 seconds)
    (228/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.690974181 seconds)
    (229/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 5.952141963 seconds)
    (230/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.973226065 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.93403408 seconds)
    (232/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.039109585 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.616856364 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.94730061 seconds)
    (235/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.938953804 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.945368665 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.618679748 seconds)
    (238/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.638442199 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.115972095 seconds)
    (240/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.187373878 seconds)
    (241/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.006328992 seconds)
    (242/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.956745397 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.032962305 seconds)
    (244/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.139727913 seconds)
    (245/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.964264629 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.976636579 seconds)
    (247/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.055996512 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.332552917 seconds)
    (249/286) benchmarking ("sort", Float32, false)...
    done (took 4.866703279 seconds)
    (250/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.031952813 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 5.935452376 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.939251907 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.743293603 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.061472886 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 3.965643214 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.25943126 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 5.946172136 seconds)
    (258/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.114448315 seconds)
    (259/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.124556934 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.949029417 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.331995874 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.041685435 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.625109393 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.030820287 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.936502457 seconds)
    (266/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.266608645 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.066474596 seconds)
    (268/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.936576609 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.716486788 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.732506844 seconds)
    (271/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.51512445 seconds)
    (272/286) benchmarking ("sort", BigFloat, false)...
    done (took 5.949160894 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.997716187 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.730711761 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.961785123 seconds)
    (276/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.135753871 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.001631936 seconds)
    (278/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.291089387 seconds)
    (279/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.877413904 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.013652341 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.972096547 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.031866219 seconds)
    (283/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.976646434 seconds)
    (284/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.067931304 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.055299265 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.965731286 seconds)
  done (took 801.241436404 seconds)
done (took 802.113892988 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.118972195 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.072627681 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.955492739 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.953125543 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.955037968 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.974513518 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.951356031 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.955858819 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.956149385 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.956352156 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.954974363 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.142869359 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.957836378 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.95672528 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.956499161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.051397683 seconds)
  done (took 36.756204128 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.980130993 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.962182533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.045174936 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.976744936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.981025204 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.100721886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.00809183 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.962866779 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.084895289 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.993308608 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.132231159 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.980775997 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.961871412 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.790811581 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.974673902 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.104510462 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.150345366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.132497058 seconds)
  done (took 22.210319814 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.284247534 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.959220917 seconds)
  done (took 8.131543743 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.976617837 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.961896066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.961446629 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.960288598 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.952983782 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.966143349 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.960916366 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.955846266 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.589497042 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.057531615 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.964630547 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.971483852 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.975698024 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.962707856 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.958416923 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.995573829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.109939989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.960185719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.958719668 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.968103611 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.962114442 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.070816541 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.993494118 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.959837228 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.054636989 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.58526449 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.966877703 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.968948744 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.109818991 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.960522985 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.961735194 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.962557678 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.96436039 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.781595887 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.376223159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.954298287 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.981720265 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.970952292 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.959896602 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.126744482 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.965642943 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.968950627 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.955966918 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.388061527 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.073068141 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.05293889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.894366525 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.964538228 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.96507021 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.013532107 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.964253912 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.965395651 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.002340394 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.660903819 seconds)
  done (took 88.567991981 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.002595192 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.349183146 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.121887533 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.969313517 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.729685788 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.54509705 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.970845685 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.165474704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.963371671 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.958130402 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.245208746 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.384811656 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.972223879 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.013071451 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.26043128 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.022795497 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.958816547 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.682353262 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.968352758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.962878589 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.39335919 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.961835034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.969461855 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.117887053 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.990235089 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.331780263 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.969129095 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.43713331 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.970325653 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.957938516 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.349232929 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.9761602 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.962813767 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.957345103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.182836298 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.232151309 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.209931526 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.960276162 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.000569998 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.959496064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 5.978127884 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.325724649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.219339525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.95896608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.958927759 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.330035787 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.958882498 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.967232892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 5.964113178 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.156592283 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.910958375 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.960135081 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 4.967751013 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.964486352 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.225238961 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.996765284 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.020093618 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.360818074 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.959450175 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.069269029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.997919786 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.960603964 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.962012268 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.96557241 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.961802531 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.22839216 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.089628636 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.965751595 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.226012625 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.344733855 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.97178489 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.414782945 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.727490908 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.990212752 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.060979203 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.961668898 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.531889032 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.364757938 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.977531057 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.961301555 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.214421378 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.962409477 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.244456787 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.97178355 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.9625157 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.40515747 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 5.964722672 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.019251235 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.93547085 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.964386581 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.673052407 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.963262492 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.203736146 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.983599453 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.961524791 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.960966479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 5.974688771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.961434961 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.972589792 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 5.968468289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.416538292 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 5.985185846 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 4.89125882 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.97852156 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.6240244 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.962332165 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 5.96431575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.961576048 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.176138818 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.270960202 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.97909302 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.962961114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.908432043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 5.969979997 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.142543505 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.962858353 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.189081193 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.962723666 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.962879224 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.975275679 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.698625406 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.983099133 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.963077535 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.969604031 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.791507201 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.162015618 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.975937444 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.963791143 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.965511481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.965858028 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.904880849 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.977255288 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.050595216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.965751284 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.59199582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.990574787 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.992045687 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.606618522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.974277356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.545855339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.983234644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.96388505 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.232082414 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.192981603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.014130847 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.965195287 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.965858992 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577327454 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.984141306 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.097061072 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.979490975 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.967125176 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.156720928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.208135438 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.966134183 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.554123356 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.966588414 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.176029779 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.966679616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.244814745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.379805967 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 5.9780029 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.969929111 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594199746 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.624515376 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.801729493 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.97127957 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.253072821 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.933633133 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.44491881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.965999435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.966651356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.500615733 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.967486357 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.975868459 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 5.967484821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.966652942 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.030448906 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.133918225 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.60094392 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.968137133 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.336951407 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.969363209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.669599566 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.970510509 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.96738607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316405337 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.054840266 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.972207887 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.006882074 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.969080324 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.971954122 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.355224897 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.775434915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 5.972089813 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.11431749 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.517584551 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 5.983067747 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.966879356 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.423749172 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.426370981 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.438558364 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.985852631 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.19644575 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.977699642 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.000773741 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.528009545 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.033709789 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.359661655 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.967501501 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 5.979618686 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.493479004 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.981790206 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.318259976 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.969192615 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.970419297 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.426084969 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.980963439 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.973915358 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 4.91570917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 5.981630411 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.228021834 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.97137539 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 5.96937855 seconds)
  done (took 1022.052476424 seconds)
done (took 1178.604455368 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.002151689 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.004349369 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.979584272 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.002010745 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.098655553 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.155648321 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.98994552 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.981930512 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.027746482 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.029344887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.985247379 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.153523019 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.987710225 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.986600671 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.97971583 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.001039976 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.792434563 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.988397163 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.003540858 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.991220527 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.003932212 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.985599224 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.030408847 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.155004023 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.984423221 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.983760512 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.990269114 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.007286243 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.100051044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.99111134 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.984791568 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.998490715 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.79453436 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.979734346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.977901768 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.007388455 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.999226249 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.991423883 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.985841882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.020042165 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.102095095 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.988071176 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.989857367 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.982516591 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.983075636 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.985712785 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.990362771 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.989828651 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.003042378 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.003210696 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.095780482 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.003649213 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.992413935 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.983088494 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.995103626 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.990480538 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.986730201 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.006798391 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.009051108 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.007676314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.788287694 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.988309146 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.985543776 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.006443246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.997689559 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.137280659 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.978856229 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.988458862 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.108677841 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.988275371 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.139322563 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.997983721 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.984806409 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.004960451 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.022799332 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.802051467 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.979336047 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.985271089 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.999408047 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.989877083 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.994806238 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.005890811 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.989472541 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.986203773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.006643348 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.160056385 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.995454869 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.993757007 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.994582782 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.011354194 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.999412836 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.003042479 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.988513272 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.981559977 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.995481649 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.990018456 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.995922458 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.994510841 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.989931836 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.99665882 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.111649952 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.010120545 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.982602854 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.983134534 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.986026262 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.00572458 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.10899579 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.993055294 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.008633795 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.033637223 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.988309313 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.803354951 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.999655344 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.011063604 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.995547663 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.990138102 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.982409727 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.803202962 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.106745828 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.008203797 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.988834074 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.992448081 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.011514019 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.989378319 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.983540731 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.807333532 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.988205031 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.009297738 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.114568909 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.99862345 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.026094196 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.992800716 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.991532641 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.0167289 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.012410647 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.026053861 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.991099804 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.012782044 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.010837371 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.98495631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.00572831 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.998663788 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.989141369 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.993011425 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.982586968 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.018479464 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.009169798 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.008623414 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.010598617 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.117975321 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.985727893 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.797391061 seconds)
done (took 168.836140861 seconds)
SAVING RESULT...
DONE!
