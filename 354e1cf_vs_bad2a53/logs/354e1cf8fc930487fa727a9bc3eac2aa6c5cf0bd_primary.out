cset: moving following pidspec: 359
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.011923253 seconds)
loading group "string"... done (took 0.599482066 seconds)
loading group "linalg"... done (took 9.545459017 seconds)
loading group "parallel"... done (took 0.180369449 seconds)
loading group "find"... done (took 1.51300578 seconds)
loading group "tuple"... done (took 2.157218571 seconds)
loading group "dates"... done (took 1.498434952 seconds)
loading group "micro"... done (took 0.235311522 seconds)
loading group "io"... done (took 0.578767574 seconds)
loading group "scalar"... done (took 46.361206822 seconds)
loading group "sparse"... done (took 14.246655631 seconds)
loading group "broadcast"... done (took 1.260476266 seconds)
loading group "union"... done (took 12.933060433 seconds)
loading group "simd"... done (took 2.730297657 seconds)
loading group "random"... done (took 11.012959563 seconds)
loading group "problem"... done (took 1833.362569758 seconds)
loading group "array"... done (took 27.387429839 seconds)
loading group "misc"... done (took 1.19066911 seconds)
loading group "sort"... done (took 3.942517483 seconds)
loading group "collection"... done (took 19.938053972 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.749987418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143165908 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.213783074 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.372052144 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239347297 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162553663 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.170539938 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.58135999 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.03914272 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.285487983 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15187397 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.59280934 seconds)
done (took 6.406206585 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.273202916 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.385085373 seconds)
    (2/2) benchmarking "String"...
    done (took 0.177426474 seconds)
  done (took 1.213366622 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074148799 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182954211 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.113279832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11111246 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09784859 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111512198 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111428639 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111845955 seconds)
  done (took 1.492601582 seconds)
done (took 3.71298434 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.557458456 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.86413537 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.594503711 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.171966102 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.200053898 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.17831209 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318283972 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159481761 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.112285673 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109031713 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.219599424 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.34732729 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.496322917 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.00589199 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088299348 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12485316 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.095343582 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671774006 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083033777 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13471474 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.593232462 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115316307 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113744724 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12453598 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206299415 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132308761 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169085947 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092242297 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67606875 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101889852 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.23005995 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082173234 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181903708 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.254447745 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079012175 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106347627 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66965075 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180718373 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117153463 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099281983 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674559816 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078821307 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.241047677 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106528058 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109080415 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190208104 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102501082 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.098205146 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100496881 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083253541 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170860619 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449821653 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10456381 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.17072268 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106377603 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69744341 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094928983 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154091046 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.136721793 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107658403 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080482769 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.10863145 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155569889 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112277719 seconds)
  done (took 20.044535909 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.158442363 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166291156 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091614064 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139591408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143293005 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095318854 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095631663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076396395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126866269 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191000306 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139114507 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.184173664 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073968569 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.100374989 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.140913872 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249069057 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107144008 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120839721 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098923488 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089695232 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139549898 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110590278 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107173376 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094577165 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.183960929 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201338029 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107631512 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120371512 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097999365 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115417052 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139429639 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146980709 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089485953 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081815654 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.201858332 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103983558 seconds)
  done (took 5.301858217 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224918842 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11605387 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237280494 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.188041552 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198456994 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149027584 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079814703 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156653867 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.28573687 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.298952023 seconds)
    (11/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170320901 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180875017 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12640437 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110353501 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076576821 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094595902 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091723049 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685525666 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178104744 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148547245 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14727453 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102531461 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094868754 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38562205 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086233005 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095010846 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083155477 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.092450291 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22241148 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084420964 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.364482364 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096452552 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107380967 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128784526 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209245087 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081018824 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131216324 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141136056 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08243124 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096870356 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.23372694 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090898824 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093028124 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125588999 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129135944 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115600217 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09889155 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10947764 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24340873 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080184015 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118864712 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.090023682 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210670955 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.132031019 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078656968 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.361478045 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113625559 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102631618 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078442151 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293361562 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137652515 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080292641 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093069991 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083231833 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09276784 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448142292 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088735031 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.092960931 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094517319 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16098045 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09832566 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103599173 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100325949 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081818456 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115315636 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092559273 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076441094 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093607543 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076898401 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099535001 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11653509 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081983038 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09193847 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155851447 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100440977 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113463225 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121900847 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09538665 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077347786 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097364942 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123888858 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078053588 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098296472 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17001811 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102857871 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103631837 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097901757 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140510672 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093346468 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200220813 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094152875 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121828821 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098747557 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109893618 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120245994 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094529546 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098769785 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076080112 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094953897 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144288883 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092999905 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076534864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098417324 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110295415 seconds)
  done (took 24.358846704 seconds)
done (took 50.354639485 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.511683976 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120740274 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.120203342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120591168 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119732845 seconds)
  done (took 1.724727422 seconds)
done (took 2.42792725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.382184573 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186388105 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120766979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185099096 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105128644 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.209645424 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.175258238 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116890987 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204057738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099417082 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181226912 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100009316 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104260551 seconds)
  done (took 2.903345601 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097445861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12341168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08298573 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112850259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075827935 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11229144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110406356 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118209099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110718571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104033355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078300421 seconds)
  done (took 1.826711352 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094908781 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116630701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082548683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111110478 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076652315 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109688088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108599155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103173966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108995695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087979458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093954943 seconds)
  done (took 1.797439816 seconds)
done (took 7.223627153 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.212358573 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.308083441 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1504224 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.201677914 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.397036916 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.251532811 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.64803659 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165868529 seconds)
  done (took 13.24998607 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.17430563 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10105186 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085158644 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099990818 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08412271 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099846662 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083898938 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098601261 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098343431 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085389759 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098703197 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083411231 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098162713 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083112106 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098928895 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098190887 seconds)
  done (took 2.350500855 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137413814 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137138908 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090594537 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111549405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.104404625 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088812615 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107610216 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10531957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088026701 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104173807 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11072582 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.095258129 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109221668 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101711874 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091376497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112605696 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103257215 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092695285 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10745196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107043399 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09622538 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10484398 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108674637 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093927411 seconds)
  done (took 3.31420617 seconds)
done (took 19.619391639 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.18048645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099075262 seconds)
  done (took 1.001387114 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.148534007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150534504 seconds)
  done (took 1.013602897 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113024917 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098819956 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140597202 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118357747 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09770527 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082857645 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.135019839 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09881958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082945674 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098992257 seconds)
  done (took 1.785581344 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088037909 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101231855 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112010374 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.147431349 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095002638 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104982002 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10259007 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088551076 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105149661 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099900021 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09323218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123912511 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106798138 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125798497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088361404 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.227483974 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113131693 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105978872 seconds)
  done (took 2.75073742 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082279839 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099388761 seconds)
  done (took 0.9003458 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089445541 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099132422 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08799757 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104067749 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099154003 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082847114 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099339616 seconds)
  done (took 1.380620326 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.543183505 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274642199 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376006623 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120869675 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143078888 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.396025265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144569195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115260805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115969828 seconds)
  done (took 2.991229096 seconds)
done (took 12.545265729 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089539041 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.231780408 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.592909574 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122979253 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083316366 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156985457 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.324890188 seconds)
done (took 2.323231606 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359750061 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.156096594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091150971 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097250874 seconds)
  done (took 1.424246199 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077368527 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107380659 seconds)
  done (took 0.908629366 seconds)
done (took 3.065547985 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080262013 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094299393 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080185281 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095434291 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080648407 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094304983 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080402119 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095103783 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.079150678 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.095196898 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079087233 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095995487 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079924717 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115672845 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097026333 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079313435 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097600518 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080481871 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096867778 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078986199 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095338057 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094164462 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080393052 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095393199 seconds)
  done (took 2.917842882 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105956699 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100126328 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104143108 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088432885 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104412132 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102990136 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087567226 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101253199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104771001 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084048317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104709657 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103481402 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084669636 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104447457 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099893629 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088222387 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103341795 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099401445 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083700949 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104442708 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103526497 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085241761 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104757589 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102950896 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088756043 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104240996 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083456579 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099809148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10307499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088391411 seconds)
  done (took 3.651496365 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089752387 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092165108 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080667688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10603077 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078039515 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098348536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077147666 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094116158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098885526 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080461369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098884725 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080109775 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093773819 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083015674 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099550283 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084727476 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114347913 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092988675 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078760394 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097932413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084386705 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09508951 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080841008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.096988536 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081481845 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093415082 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082117211 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09689328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081561878 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097072741 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09901999 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085409698 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096866966 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09322192 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100602067 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080450465 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101902104 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093604973 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083859965 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095137095 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07818203 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096833452 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078711946 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106039104 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081460516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097618008 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078271418 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099075622 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09819458 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085868967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09254179 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078493577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09999106 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084746024 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10047737 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078622524 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098686372 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077161727 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099744177 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095430952 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07832786 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093597027 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085398896 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097238495 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103625447 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106315653 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09302069 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084551662 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099093376 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086898399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10108857 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114767239 seconds)
  done (took 7.325547271 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096879297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110107436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082739604 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099053898 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097642622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082586387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105680389 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081238425 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099799312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108019711 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082313862 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098836804 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083574923 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098681285 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082300763 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098744625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108900643 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082887764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098895525 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082094493 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097428376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106550633 seconds)
  done (took 2.821092089 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.26200684 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0888466 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15186609 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117083418 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122290699 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116535518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085259805 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106096096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102834725 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091943864 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108977402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103308235 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121132849 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092924521 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108118347 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111866748 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086301318 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112571273 seconds)
  done (took 2.826806642 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101051509 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102275525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123859941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084240312 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102872391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084848127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110691912 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117081022 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101149477 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085631892 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112247344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100489414 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084930596 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101745873 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084839289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101001718 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099889677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085201913 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111946515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109750031 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094533709 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111722817 seconds)
  done (took 2.952662101 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100624961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102029057 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137724796 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088694533 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099330442 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098646335 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091873083 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101685664 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091114309 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102009575 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101752581 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082540753 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111370947 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102759814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091710019 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102556909 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085342055 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101237525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101300715 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085160717 seconds)
  done (took 2.719740697 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177831742 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099400973 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117494855 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130648794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11506435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099858927 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129408897 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117216446 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100853112 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132260039 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116267782 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114810738 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130224844 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107865737 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115623757 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13086863 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131355997 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130573081 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100237317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116126052 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132682175 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099151113 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129780095 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116571473 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115072902 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101188794 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115984199 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125669478 seconds)
  done (took 4.095256558 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081522873 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097092615 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08203645 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097376003 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081900106 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097308827 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082083667 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098243459 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081856284 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097369008 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081507048 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09738763 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081706482 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097529463 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081270512 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097626496 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080910339 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097737642 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096382061 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083276656 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097197467 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081797386 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096892182 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082598244 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097711229 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081743393 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099003752 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080788792 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097990243 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081821611 seconds)
  done (took 3.43488985 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094418645 seconds)
    (2/2) benchmarking "in"...
    done (took 0.125153629 seconds)
  done (took 0.96768093 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091116561 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119165655 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081187457 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099726513 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110724866 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083666504 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112706576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11009122 seconds)
  done (took 1.555771315 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.150391412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.150050202 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089051058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114114662 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.150348096 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.142869688 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167823155 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105958167 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085495884 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098501316 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147581916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07899597 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106728142 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101479677 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088673623 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111450481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101130075 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094111552 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108954342 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085936667 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106260862 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114689521 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091008397 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112257675 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099308482 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092922939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111390477 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.112922596 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084131056 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109386702 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08646084 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099503501 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104760723 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088348729 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101246275 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.14889372 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116296006 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085331753 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107573258 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089644584 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110427157 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102051823 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091169677 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10478733 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109576985 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089159129 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107626648 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08383807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097417056 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083103827 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101423113 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100562459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082885664 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106780111 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089861248 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116207826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103218227 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084627448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.1021592 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099511127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087331042 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101809593 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107289596 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087142307 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115135062 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08857649 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104941039 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.101444401 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.085242377 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100684552 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089805055 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123165421 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110489504 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089541799 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107646502 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100664869 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085109911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108445613 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087915652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110437096 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105132348 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090450356 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108654233 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101006332 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083182591 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108276842 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085701662 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103851328 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079555187 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118574588 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103578071 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083631761 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096993946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107867045 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084503856 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105350545 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079609776 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107985511 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098638327 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090309809 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108218495 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086694608 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112818587 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107463973 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090198575 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106651501 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.145923545 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103254823 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084033148 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103600254 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089682983 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101924531 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091892086 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100107925 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102231206 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085269069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107719193 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109419008 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085343227 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.107251364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090697226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110381676 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103004196 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082202856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101632988 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089144383 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112026703 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109770865 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085499557 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102735369 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084156682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105910352 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105297208 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087958722 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108623986 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084557914 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.101151867 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101884061 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090272135 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109616878 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084079577 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105509267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10856154 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086674744 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104592844 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108043406 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082485992 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097700207 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089954785 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102599988 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.104259785 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096206366 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102013668 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086582735 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103132614 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111862276 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084936398 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108599237 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086984594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107732893 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108367865 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079526711 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103855054 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08540522 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111287156 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101827826 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08590161 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101548677 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090522591 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099207578 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105503238 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080897509 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102578013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.0900187 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10292388 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087943498 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101325862 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120438376 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098819496 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107920769 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105870311 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092594708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105616937 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105068456 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088504488 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109263769 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089529574 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108162802 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105967361 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090421697 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103068427 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087696835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105406295 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109598298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081171646 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102801934 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079984588 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10758542 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092046828 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10768649 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107655767 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08558302 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105635242 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111756059 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085579026 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106626043 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080410974 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10665926 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095910498 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108897731 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109371101 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093351175 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106337871 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0852997 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112164018 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104144093 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090482956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102802139 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081264186 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09899046 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109854775 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087261478 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101544669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.083629948 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108002032 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109896889 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086113087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099100758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089269723 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113399632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100687886 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088716623 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103296695 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106729062 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10126688 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098817693 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084474936 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112361667 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.107712841 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.083710021 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108040598 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086184063 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10778684 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104757034 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085417359 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104756897 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092482401 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105253994 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100779833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085076193 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104217245 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080764568 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10439224 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091886867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104785342 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103906759 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096964736 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109623027 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109719767 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086555365 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107730803 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090105636 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108761583 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1045607 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090574265 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101441666 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081150257 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105551748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099583745 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085529376 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102509263 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08958745 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104567229 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1053361 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087761358 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109452804 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085500682 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109165751 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126352127 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100548051 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08006831 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106124097 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087771741 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103265909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103040594 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08525936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109947322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088775085 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111054949 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103053394 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083245029 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107567263 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084773994 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109280896 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108761581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091679362 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102848464 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089003838 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103427751 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113529339 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083036451 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111826252 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105196218 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087750285 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103272655 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086427782 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102136685 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098375191 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087313412 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110967792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085544408 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106043631 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106313746 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087274668 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102692042 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08277579 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109899891 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104822539 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092248417 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103263163 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080753623 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10025069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08873427 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109403983 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109983501 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085072611 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106897397 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091546714 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107740167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101070487 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094332516 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110271203 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090066101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113559032 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098966323 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08558553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115152024 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101810209 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087006723 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103167467 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082648576 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110372087 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091536412 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110498084 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105080783 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080872643 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103248817 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090927288 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10576633 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.107152639 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086431574 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107669257 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082848564 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106533051 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089960456 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10676727 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111118851 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091872381 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10679358 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103753167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090706708 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.104080941 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082642939 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100008379 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085941761 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111379747 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100749471 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089579294 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107257685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08597894 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104999657 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087805219 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103040046 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110929384 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08976958 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105607223 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115285507 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085474946 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106180583 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089147634 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107774946 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081019982 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107748775 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107821998 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09196824 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109926523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10835939 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089108911 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10823034 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086161909 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107932961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089308425 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109266452 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100954152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092249749 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113022557 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.0858543 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105529232 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105964392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083850472 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106320435 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091391933 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10698194 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11373985 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090137381 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105040936 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109023649 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089992792 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107023216 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092541107 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105421601 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1117101 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08225824 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113433752 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087215046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.111404052 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105149871 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082737584 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109162695 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089959382 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107380462 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112604245 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092160816 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101078714 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081743949 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105776286 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105753693 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097006438 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1127463 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087147839 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107110617 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.105689844 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085571178 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112083623 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082544752 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104011801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107697821 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091623582 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106551144 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084036523 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106960129 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111261732 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092403723 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107656781 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102019903 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089785561 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11108712 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086434471 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104105379 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10377098 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092581207 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10783997 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084976335 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10044237 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114321162 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092643088 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111434113 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102926769 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088994037 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105095129 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087024224 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112072394 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104540294 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091307912 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105983381 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090865207 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118046839 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100306919 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085265031 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117839476 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089318104 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112415772 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106133443 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08724782 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113059731 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111125706 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087754421 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100929214 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082799421 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106934935 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082370128 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106500105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117450374 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092030702 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107933881 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08811892 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10831005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.106976412 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08868243 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101139348 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092956424 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104842561 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115182823 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083087767 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101278009 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087076029 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109259704 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087946439 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108454535 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105888066 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087059398 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10281815 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087947048 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11478657 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10839378 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091588833 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107196264 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087057522 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107313259 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11605756 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084710161 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108635096 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118723216 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092837202 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109343208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0905422 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114338702 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111884902 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087261794 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112087608 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107128377 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088890513 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11179414 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.093909009 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123643812 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107757095 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0831528 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108516057 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087972644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102744628 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117172229 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093725173 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.111851368 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109105545 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0854308 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113685963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095836859 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109103811 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107274851 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088864408 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108006689 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0866073 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108439415 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104552534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.093645932 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.112869756 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091358107 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113795812 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101779567 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1002868 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114422984 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113546191 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084766372 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101928915 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083758217 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10737453 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091845305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.110682883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088733644 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107713099 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108420367 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089679293 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108917097 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08882683 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.112308353 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110506463 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.085657213 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111853194 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087588519 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110286781 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104575041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091454503 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112627059 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093365349 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117286524 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111164755 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088141553 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106082235 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108742918 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088110041 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10966639 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088654811 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104654489 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083437509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111322748 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112736439 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090286667 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113548389 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094367134 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107294917 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111916744 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096162705 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110817167 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086286653 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111690031 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106970596 seconds)
  done (took 60.500644273 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165855686 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094702272 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108325361 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087510168 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137354175 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109044518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107539373 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089187384 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108909267 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100477803 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107405802 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108138644 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130486677 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139401616 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135985966 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102215924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107554246 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108751277 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087595539 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109325823 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1293168 seconds)
  done (took 3.169001249 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111161864 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126651446 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125522393 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128730017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118381159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104442807 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124940508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12439781 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.127484467 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121255984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128674077 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123221209 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.100356862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120587803 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120294235 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119906347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109255455 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118759474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125200052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.124635876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12024721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105306516 seconds)
  done (took 3.423156498 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096019319 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108761283 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092068047 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.106072988 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090413846 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106085314 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115490303 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087272167 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115337321 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087000619 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104493115 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087506609 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111723044 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107251187 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085060322 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10626499 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.096381067 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.110636954 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.092120052 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.107263955 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130570856 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106317933 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088827936 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.1041847 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101485358 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11244269 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.090769401 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110418588 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104398453 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091351761 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106337214 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089298883 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111275185 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.083935958 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104650472 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.11023238 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091228384 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107726423 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087854535 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111173094 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.087676881 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111691922 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114909453 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089184796 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.107060576 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089174655 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110956983 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.106992718 seconds)
  done (took 5.676237561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.152638975 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168074659 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.117424744 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.157866524 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13335684 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104356093 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.11402964 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159373298 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.115789031 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.093572762 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134532543 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132913305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121220702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123957016 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09713506 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116353248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117743429 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095781408 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124547327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113925348 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122653996 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103180022 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134072782 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132357898 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117715223 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09361024 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12131188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124697562 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130808612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123678998 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.101072868 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124382076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133422144 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.121241788 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095262073 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120800708 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136626275 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.115952943 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096387718 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.112575506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12139718 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103494446 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118394602 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133860742 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116457395 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10083646 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116427672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112430047 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112868948 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121876282 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12778048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133365045 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119462309 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.097385221 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124608049 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13749272 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115969232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.093826137 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116717672 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133542989 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094717561 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11845319 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135808551 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120385321 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126456263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1129741 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119820915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119016698 seconds)
  done (took 9.092113684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125762498 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119056637 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13318822 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13417037 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118058995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099074323 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118406462 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118955283 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099953855 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128172177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119012422 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.206020098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115811843 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126581522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097709396 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120255423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119603162 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119044907 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099035027 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11837592 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118385328 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132949006 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098176536 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132841118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134936016 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115284299 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098452148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119028867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134459932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119465829 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136597104 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097886419 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119743928 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133069865 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135694463 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11979316 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091609315 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118745836 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119538959 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098973271 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115883032 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133072272 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118532965 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095370595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118376061 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120120103 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133908634 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135265985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105671021 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129426358 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120006893 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134003506 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119919544 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101225442 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133978262 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144202081 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133184713 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133816915 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119714276 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135573854 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133895106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143365349 seconds)
  done (took 8.378542677 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088979507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108740032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088249467 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.108267483 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088785614 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108569908 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089154084 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107804295 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087952976 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109312688 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087801498 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107678267 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08821225 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107794789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088755145 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108206416 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087471049 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109255505 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107583305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087817179 seconds)
  done (took 2.775183795 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101196138 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133924765 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.112278742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101340664 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112361317 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120509534 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091781461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112436239 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112840624 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092864137 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12503796 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125409664 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092517704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123010637 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125439724 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121288033 seconds)
  done (took 2.618473273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11524761 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133536567 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167000582 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.115972518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.113837733 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100576711 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112577305 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.093273698 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111416827 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119596084 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.095611649 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11665011 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091348026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.112588861 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.112267736 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096302846 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.110697218 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.096501657 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112467397 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.168182698 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119781386 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.094716198 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11481521 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.116689219 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.094916202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.121170153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.120877597 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.092840686 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.11487429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114467252 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096244201 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122190126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.111078889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.098702027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.112355144 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093910609 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112401635 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113008254 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098534398 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111833124 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.093492673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.115708821 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.111774312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.095408192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.110501322 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.09342242 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110655409 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120797087 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095437777 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117777269 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092469253 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.120568903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.117161171 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103126821 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.122494493 seconds)
  done (took 6.905542683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106249853 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115234822 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.127717897 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089267411 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113571568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.095444102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115114691 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115516484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094905084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.109163369 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095151198 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115495056 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115200372 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094981028 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115376394 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094143434 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110108149 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113898282 seconds)
  done (took 2.756207985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099140056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112644846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097793838 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112853757 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0907838 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11321437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109677067 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09123593 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111343397 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091699331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112900831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091783415 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110757987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112206611 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092360743 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113605382 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.091516793 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111562604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112875151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090229927 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111390019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09102855 seconds)
  done (took 3.089943792 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105067187 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.169207825 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123203671 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.178101241 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113556993 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.110477726 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103060478 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112574929 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.130676311 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.089893614 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109528295 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088682338 seconds)
  done (took 2.256143739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121117089 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155826191 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114508151 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093113128 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127494625 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119377408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118588823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100333866 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131658352 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13681637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120570805 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132518069 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110991492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133776661 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126094269 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125149911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119320037 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099037113 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11445429 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143895879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119604195 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131631675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099041788 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1205882 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119567109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134421258 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111225888 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136985456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119979092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132749259 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126675918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099340582 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132348272 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136304314 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113639676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132023872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098722546 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164975015 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106509156 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133467295 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113257969 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126663755 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111250511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129315616 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132495007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120426621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12946066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100074985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120236697 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151196253 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127622339 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134015584 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126143735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131866831 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131233105 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152693734 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137344149 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134710323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10589301 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137903901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134204338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127045393 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134713893 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138042888 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127282225 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139379821 seconds)
  done (took 9.096634948 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161530787 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094463635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120952796 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138640385 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134295678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098999349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120964629 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1201031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099098245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116546804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173436748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120050075 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134310864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135738655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119755113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100813807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120173657 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135191404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093887095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172787756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099214978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133957856 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135346282 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134902156 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136293525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127113184 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099483374 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122114529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120797723 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120468629 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109220901 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122370268 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135336023 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114328948 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134526543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100390777 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119559296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129353069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099412277 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127242676 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134627527 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12050276 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12180084 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139262593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100853436 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12089953 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116362301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099710393 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117158674 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138580426 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136567225 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138562307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134069123 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09927526 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120882966 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120995494 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099159391 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120896395 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127407902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1355662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099897333 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175340508 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101164961 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121409373 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134139107 seconds)
  done (took 8.981770127 seconds)
done (took 164.71327024 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154081752 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.175897832 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.151844227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150215738 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108051301 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120976364 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141623187 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151668348 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107833915 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086525439 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108255873 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090176938 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173803817 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085349857 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10771892 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110940332 seconds)
  done (took 2.84999956 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20868039 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302735052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129244125 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112990501 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09596471 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110881013 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090129038 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114000915 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108663017 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101619683 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110217543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088700657 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122812223 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110055942 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086952567 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109906059 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121781656 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089275642 seconds)
  done (took 3.046244657 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113846675 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162783618 seconds)
  done (took 1.113536959 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126153765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214816119 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294278635 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169634067 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.139392538 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134456282 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.171689222 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128037019 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204829498 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132935352 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.133618677 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0945564 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14237819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.122167023 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.104510616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116500171 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1433094 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.102259634 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.125058683 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11722293 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.381084926 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.095902491 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121386882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.124296955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192513756 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133056003 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095972334 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115603532 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116511262 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.10176994 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122837652 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134008604 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13198939 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182299262 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120824716 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197335723 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10306576 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114233353 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122963991 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092983881 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120273295 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119729351 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110046415 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115735126 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116236872 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103746517 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116646467 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114968929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103854669 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125233436 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125044297 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121511676 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177416469 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126908599 seconds)
  done (took 8.250517065 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.904108425 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156539824 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092377464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.036463814 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146258077 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130377427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.919830577 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115243631 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280072042 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.907933966 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132863248 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104856225 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.290550136 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274657935 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.188690716 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399416394 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.753992991 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132134199 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145922659 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167617974 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123043349 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146787168 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113648024 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.47116563 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09452318 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11494934 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121323909 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106453932 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.206396091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091893807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119683172 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226070293 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287742861 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232268022 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114239436 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089948933 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113121781 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188283676 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304971485 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27815716 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187865166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087480544 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113468922 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128444216 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113838746 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113230963 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204985609 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197333295 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.216113276 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097184046 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129584834 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125516376 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126019433 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18085111 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110183258 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376927102 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380578974 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114586615 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101063286 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135298776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298510119 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112655631 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262379867 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14492772 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.243455545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111908544 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823227963 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18663265 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112070163 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101294321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124962635 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120049378 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12633475 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182956134 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395487964 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13194735 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095634337 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112505307 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274114412 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090914631 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112865622 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182825601 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116360719 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122964241 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130480261 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108626334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.215137954 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269674742 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130753667 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123761806 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118579185 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107541466 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11504394 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234021642 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.270855221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177388581 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.254079996 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106175122 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.206893504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184784636 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127416004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.211011102 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100307023 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13521987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129191325 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250516894 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155023089 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114714008 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096144813 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124050603 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158252298 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116173567 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122591021 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190475375 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.51126024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186221938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112184496 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094655144 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125253011 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204585558 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10094191 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295439506 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126498625 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.208899744 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100445787 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110237808 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100796429 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.209508959 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129990419 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123741655 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106373028 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124980465 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.294876028 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253054446 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107143068 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26540509 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.215592329 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104334414 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217452795 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121870694 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190568196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125845539 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105355416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118230305 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814607456 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130460523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122599368 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096972375 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.228763743 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091614241 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114259129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090867529 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110620038 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840463665 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093901332 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111024775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092224699 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125507165 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124816297 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12054573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099703121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205093878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265013928 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128605552 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099919858 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116537943 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179150097 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117617811 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112700814 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091978786 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11419586 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123017767 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098396147 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116012076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195532676 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.201623951 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251226678 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576146669 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090854345 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115932949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264145381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11382434 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34105195 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12254691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259721793 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187719625 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11080796 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373892029 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210771578 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20773783 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095390424 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.218026765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089114335 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124434385 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.205920752 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092186869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122919328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176383268 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133074402 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129969449 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.196516435 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112769752 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245800011 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111716734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188452449 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116762526 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126660912 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344879453 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089656507 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137474746 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.2063905 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095345446 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115554618 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.690318862 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090966042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127959686 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124625436 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259911912 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.207683349 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100793325 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123871193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127335088 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182778577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.25355982 seconds)
  done (took 47.949480198 seconds)
done (took 64.039175015 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.325829788 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.285145912 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.339457436 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236839898 seconds)
  done (took 2.138334129 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239344196 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163190834 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.216446002 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089221346 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.227521537 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089295998 seconds)
  done (took 1.885913584 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.543947778 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.44451908 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.376073493 seconds)
  done (took 2.229900621 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267358668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.295981748 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366070644 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.497290762 seconds)
  done (took 2.401138922 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.284509082 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113443333 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131466222 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.183564911 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.255557422 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.281227886 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158510502 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205812066 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.11837515 seconds)
  done (took 2.650013929 seconds)
done (took 12.177425872 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.299315011 seconds)
    (2/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.175018161 seconds)
    (3/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.233973136 seconds)
    (4/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.327550828 seconds)
    (5/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.20281236 seconds)
    (6/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.288471093 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.165380362 seconds)
    (8/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.278434036 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.263198992 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099365567 seconds)
    (11/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.223439033 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120503558 seconds)
    (13/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137488327 seconds)
    (14/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.172812566 seconds)
    (15/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099347319 seconds)
    (16/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140105185 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143661803 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.151359527 seconds)
    (19/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.181136783 seconds)
    (20/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.198325727 seconds)
    (21/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.131032547 seconds)
    (22/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099076072 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132396094 seconds)
    (24/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.338790476 seconds)
    (25/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094295428 seconds)
    (26/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.301213434 seconds)
    (27/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.257724886 seconds)
    (28/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.105643984 seconds)
    (29/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.192995298 seconds)
    (30/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.159876704 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.166569305 seconds)
    (32/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13633112 seconds)
    (33/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098511811 seconds)
    (34/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.298505174 seconds)
    (35/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.193409697 seconds)
    (36/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099420728 seconds)
    (37/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134823755 seconds)
    (38/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.164988286 seconds)
    (39/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.10794618 seconds)
    (40/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.222408557 seconds)
    (41/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.132806646 seconds)
    (42/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.099507931 seconds)
    (43/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211268937 seconds)
    (44/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119649814 seconds)
    (45/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197465289 seconds)
    (46/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.149515101 seconds)
    (47/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.195770472 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119703441 seconds)
    (49/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137622022 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114215383 seconds)
    (51/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.276312026 seconds)
    (52/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182231198 seconds)
    (53/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106874366 seconds)
    (54/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.212255878 seconds)
    (55/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123421394 seconds)
    (56/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.252612645 seconds)
    (57/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119622366 seconds)
    (58/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109067609 seconds)
    (59/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.146679458 seconds)
    (60/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123637967 seconds)
    (61/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.188861875 seconds)
    (62/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.201484469 seconds)
    (63/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.124449761 seconds)
    (64/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.248196702 seconds)
    (65/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.215897592 seconds)
    (66/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096996379 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.106300595 seconds)
    (68/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097748987 seconds)
    (69/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.104392619 seconds)
    (70/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094787543 seconds)
    (71/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130922238 seconds)
    (72/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.268095787 seconds)
    (73/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171011256 seconds)
    (74/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.118067655 seconds)
    (75/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107241098 seconds)
    (76/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108811193 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083322408 seconds)
    (78/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.214250537 seconds)
    (79/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.163658949 seconds)
    (80/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.194903154 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.151957843 seconds)
    (82/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154059954 seconds)
    (83/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173881581 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.156522288 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.152284843 seconds)
    (86/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082005098 seconds)
    (87/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.105690373 seconds)
    (88/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211130576 seconds)
    (89/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13367511 seconds)
    (90/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.143050473 seconds)
    (91/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.153247149 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121039377 seconds)
    (93/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.211245688 seconds)
    (94/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121226317 seconds)
    (95/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.105616336 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106929758 seconds)
    (97/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.132397679 seconds)
    (98/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120839171 seconds)
    (99/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.214698171 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111091329 seconds)
    (101/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123715699 seconds)
    (102/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.217397124 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096398221 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134692032 seconds)
    (105/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104268179 seconds)
    (106/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.081408851 seconds)
    (107/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.122863208 seconds)
    (108/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114331946 seconds)
    (109/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.164055526 seconds)
    (110/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120437383 seconds)
    (111/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100820666 seconds)
    (112/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.196826953 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113402982 seconds)
    (114/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09944342 seconds)
    (115/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.116855159 seconds)
    (116/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.136060391 seconds)
    (117/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.115934426 seconds)
    (118/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083818454 seconds)
    (119/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14034276 seconds)
    (120/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083016794 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120626653 seconds)
    (122/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082707902 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.13305874 seconds)
    (124/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.10389628 seconds)
    (125/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097484726 seconds)
    (126/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112470151 seconds)
    (127/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09917311 seconds)
    (128/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22439709 seconds)
    (129/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106369896 seconds)
    (130/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.112801241 seconds)
    (131/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.110331896 seconds)
    (132/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082707378 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.156402656 seconds)
    (134/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131302491 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098595232 seconds)
    (136/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.111396331 seconds)
    (137/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.082645335 seconds)
    (138/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.103448949 seconds)
    (139/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083330518 seconds)
    (140/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081756447 seconds)
    (141/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135863487 seconds)
    (142/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.1217394 seconds)
    (143/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081628821 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130277473 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097558339 seconds)
    (146/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.167917898 seconds)
    (147/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.154927409 seconds)
    (148/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097473774 seconds)
    (149/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.105769815 seconds)
    (150/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090426401 seconds)
    (151/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12162597 seconds)
    (152/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.121445283 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09790248 seconds)
    (154/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.169156396 seconds)
    (155/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153430066 seconds)
    (156/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090286544 seconds)
    (157/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082709108 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.134430164 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135994863 seconds)
    (160/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090221022 seconds)
    (161/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.104830812 seconds)
    (162/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083278167 seconds)
    (163/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122587198 seconds)
    (164/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10208285 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125337175 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113836727 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098067094 seconds)
    (168/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123201348 seconds)
    (169/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099699349 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114209621 seconds)
    (171/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167549476 seconds)
    (172/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.14284209 seconds)
    (173/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199082803 seconds)
    (174/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10784752 seconds)
    (175/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.082402166 seconds)
    (176/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.106143305 seconds)
    (177/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090356332 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.082981282 seconds)
    (179/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.111939096 seconds)
    (180/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082962736 seconds)
    (181/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.106045581 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098067592 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121838224 seconds)
    (184/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12555894 seconds)
    (185/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.099581588 seconds)
    (186/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10413302 seconds)
    (187/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081694829 seconds)
    (188/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.106421212 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091496716 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12084786 seconds)
    (191/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08404417 seconds)
    (192/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125583787 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09954775 seconds)
    (194/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205115644 seconds)
    (195/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173040129 seconds)
    (196/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08343107 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.167294565 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.135884186 seconds)
    (199/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.082161552 seconds)
    (200/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125406129 seconds)
    (201/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082042628 seconds)
    (202/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131336085 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121371385 seconds)
    (204/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10043033 seconds)
    (205/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11977317 seconds)
    (206/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083269848 seconds)
    (207/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.19613246 seconds)
    (208/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.10674567 seconds)
    (209/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083308121 seconds)
    (210/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083079288 seconds)
    (211/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.11166191 seconds)
    (212/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099418284 seconds)
    (213/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.105398391 seconds)
    (214/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083735497 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135246296 seconds)
    (216/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081971348 seconds)
    (217/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.137321285 seconds)
    (218/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11462898 seconds)
    (219/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089416744 seconds)
    (220/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.106189643 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098414881 seconds)
    (222/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.104883104 seconds)
    (223/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089166773 seconds)
    (224/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113936362 seconds)
  done (took 31.917811578 seconds)
done (took 32.792950831 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.507075356 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131933522 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101576991 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127571344 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.183172642 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.129529793 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110512745 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.131420863 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.131161403 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099587251 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116190801 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107300257 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.126747442 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.181337029 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.129977544 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094418376 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120049226 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.131252416 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11118932 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136148064 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.181739903 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119839149 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10770601 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119124443 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183828321 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118927077 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.101619804 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.126962969 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.130898576 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099952551 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126069981 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094369333 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.135697083 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.133860383 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092380924 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.12325895 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092611991 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114905412 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.125097247 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099729692 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.132089874 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.099944109 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.129395918 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120352329 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.100293185 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.123333594 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116095389 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106399949 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116825603 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101376499 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120485922 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135449635 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.09917723 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117108502 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091649777 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120764489 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.131740253 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092938264 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.131178876 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091806899 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119357469 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115830488 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102327052 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117011124 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.098515288 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118439716 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.12358875 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.102156517 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123739752 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095128492 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116852814 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.122491406 seconds)
done (took 9.882886563 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098715028 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179560033 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.183653251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.189831251 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151774033 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136664831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.138732011 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150262532 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11092163 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142747033 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156200962 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.147633524 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.190560024 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131992571 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111448394 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125774671 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.131535788 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10637306 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191081253 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147515837 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15550543 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.132645494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157318351 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117143958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124952964 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158265373 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.126566223 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101663412 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.124929943 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132290281 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120216114 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125777601 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125722206 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121664467 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135588623 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130439478 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111919194 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126875458 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123144988 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.098851647 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139217883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142395889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098542255 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135135905 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126082801 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107053831 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133618183 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.132679039 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102136912 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12877558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127504847 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15526412 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.107632822 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131963332 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13276597 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107028164 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132261063 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.105044547 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127683345 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.131255523 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.098627538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125928277 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126238384 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153273757 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102231012 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.13254003 seconds)
  done (took 9.627918499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122383561 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158157471 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134376273 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.135118806 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.106418181 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115348597 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089571186 seconds)
  done (took 1.787863822 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09461365 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186587925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183611424 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184929691 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.204680867 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196199164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13855648 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091805968 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.156016218 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128131432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185303474 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218150966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.125688394 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111352274 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212136966 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090763124 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187722634 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118022164 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.129344773 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186410691 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10942868 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.149792832 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13332713 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092659059 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205474509 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094294574 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264902022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109647486 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12365579 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.102836273 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.13053901 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202702774 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.179286094 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135143228 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12181148 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.181985364 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.179932604 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130275758 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198785306 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09774241 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178306625 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132332445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.130720593 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104763527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.129938342 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.167496804 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.134637725 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10598134 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.127680531 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185989154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130191074 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181577508 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.100950965 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132185255 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131402927 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106821245 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138548215 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.130020673 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187794529 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133971447 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180713713 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180723681 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181314762 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179763125 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141924808 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.181645848 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178791629 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.102848942 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127027484 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13013348 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181647602 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.103543142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130852164 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.167078729 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133735974 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182606315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.182990436 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126511837 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107113161 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123163376 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102235551 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120232968 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168537517 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130355188 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.101691304 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137466931 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133719953 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.105042468 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122497684 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144282015 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.103515348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.132584614 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13402379 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.103534577 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13558984 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18262331 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131845942 seconds)
  done (took 14.992941811 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095479813 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118640445 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099737669 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11983835 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094126451 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118838021 seconds)
  done (took 1.58807208 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126324502 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132497933 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.141876858 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.107709577 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187432531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.214891636 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.191723626 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130741687 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.123710332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.142825715 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.187618025 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192656173 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.214929826 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.109537204 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.191247492 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135138293 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.190964717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131357945 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.140889905 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102671308 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138753456 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.133679233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10270724 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.181177794 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.13735533 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.133581433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131808216 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.116029446 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14076059 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130640083 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.109026475 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.134145517 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128034644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129809586 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.193886477 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102398568 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129808092 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139329781 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10956901 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.136689194 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192448607 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130768873 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140552205 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138768117 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105508167 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128538499 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.139005413 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106149991 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219550381 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.111771332 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.139464158 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.132910144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.134581958 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.113919353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128658452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131157374 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.113395317 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.218392226 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111181772 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129259935 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134591324 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.110669853 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129664856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139199694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136446638 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.112988671 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.130109012 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132498381 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102824369 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.133695064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139347877 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108374218 seconds)
  done (took 10.978767964 seconds)
done (took 39.888912919 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.10278536 seconds)
  done (took 2.045547114 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.968157895 seconds)
  done (took 1.917423296 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.473246662 seconds)
  done (took 18.453538883 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.57142388 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.650886312 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98485391 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146742685 seconds)
  done (took 3.297113214 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.106107031 seconds)
  done (took 2.072913134 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.324742877 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284581317 seconds)
  done (took 1.558174192 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.866387975 seconds)
  done (took 1.823118444 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.447522233 seconds)
  done (took 3.408785821 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.384274469 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199682038 seconds)
  done (took 1.553174314 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668460577 seconds)
  done (took 1.628013907 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.800961504 seconds)
  done (took 37.75980681 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248739885 seconds)
  done (took 1.22070254 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.319589057 seconds)
  done (took 1.279989251 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.675690517 seconds)
  done (took 4.641672712 seconds)
done (took 83.61268144 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10720134 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131956205 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107089426 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129934906 seconds)
  done (took 1.4389771 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115093485 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131789603 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.134406358 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106961446 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.140958267 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.105942891 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132298078 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.138739056 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.10468637 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132702401 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131641369 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106613163 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133443933 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.129666236 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.104171395 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133372099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108432434 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.132192357 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131952312 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.106830515 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130915636 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131121514 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110664718 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.132026461 seconds)
  done (took 3.933843631 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10762912 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122880213 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100684806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12287649 seconds)
  done (took 1.422776937 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11519971 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147456818 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145678003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.113114916 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149476201 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145661134 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.100846602 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125953822 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.103154619 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.139478859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128771387 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150601835 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.120525517 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133056634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.14024003 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.099570925 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.132819025 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.121407706 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.138969258 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140262882 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100697689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139111377 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.127623937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117949399 seconds)
  done (took 4.043811139 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.215395028 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.118414955 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.155461273 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.184305353 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.156969813 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10211006 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.159298231 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135313303 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.136749211 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.10848936 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.133730945 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192728463 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132780776 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110144472 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.133288393 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.137993765 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111319678 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134678943 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.135830941 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117564058 seconds)
  done (took 3.785431124 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107383003 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123214351 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093907669 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122816461 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.13085728 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100628797 seconds)
  done (took 1.654217743 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094016447 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117214918 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093462729 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116725738 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097706244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117001205 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09073 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117096606 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093313378 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118098734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092252831 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116955261 seconds)
  done (took 2.239344827 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.305615634 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097693984 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127872475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123135455 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101603835 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.123987248 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.13860643 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09551096 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.258631221 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.123532987 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115327857 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.200421277 seconds)
  done (took 2.784467175 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230860847 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105228554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29140064 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396992928 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175577016 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182240151 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290202486 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181707167 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.232702891 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126803029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241792274 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172107016 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141140679 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220933183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126571863 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.202759878 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217947194 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221977992 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161846149 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226884652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179367491 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183359181 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198235143 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16604037 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151412317 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17534884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131697946 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113875735 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217256665 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187988875 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194425261 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162715575 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154844234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221451827 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266174997 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196380432 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.330376724 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147412456 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.207316357 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199468422 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280932607 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15427872 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241355581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143869467 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143808578 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197695369 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171217543 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.224920541 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.119671789 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153645469 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204811094 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220610832 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206982349 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151264271 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317845881 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160816388 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160285397 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191527477 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208982094 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235595849 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181499823 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105765359 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224546093 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201104819 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197731958 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161348925 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187977255 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139102789 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192993675 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216326947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197720079 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20973263 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.202591713 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145769108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178554592 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186944244 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166561772 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194526362 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175375068 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129300022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13722474 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14987461 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138206921 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202531016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105648482 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251882931 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146559795 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.202556923 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221897502 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174573002 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177127875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179980651 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182417952 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159829145 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131262313 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158988843 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175156283 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171667792 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116458454 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170425444 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159099455 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140922645 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165885835 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105618487 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172486212 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.147974522 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182693685 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179384595 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144081708 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180045274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16358809 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174470358 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18795166 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2038713 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142721364 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115472834 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238379203 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170548413 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123534238 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218268675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207454968 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183516962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149021823 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187030882 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215803036 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155220421 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207837479 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155880695 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145914445 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167934051 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172225103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170481132 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.141303758 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142148587 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168586704 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211441495 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.138344771 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148632538 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190368741 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138052308 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110839818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156784731 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148839481 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154124017 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.166414263 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.12532891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170064137 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174901611 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167001728 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173613043 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155153177 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243514659 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115987418 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.174613673 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160056288 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131243566 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201472121 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203246852 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13996064 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203178718 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188145899 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238028618 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180955977 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140215748 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198925466 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113986407 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.133607367 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182756376 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176212337 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176747595 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203169792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233335757 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188666783 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.169394445 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162188989 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185173748 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190966784 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1730623 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.157441289 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177274761 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184553704 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131404529 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.107533038 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.141667777 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152773229 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141528833 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116109718 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226615122 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18030238 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201152226 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175466692 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151569408 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200607241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.139070071 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180557091 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191760859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151240188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206320962 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198060874 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180822571 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155497394 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18805356 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.132216936 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134231117 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120503245 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185141091 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145357837 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146034457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15721031 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201080667 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192265894 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163469984 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2438931 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186703915 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211027832 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133652657 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149939604 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211290276 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170624869 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172982457 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143684889 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.176785385 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194051977 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157908308 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211877288 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180001198 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181906176 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249899999 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.170385466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142535186 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136295989 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211036158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125552837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179765816 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158551816 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147811947 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169936788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.150161524 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111618596 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228325067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155342878 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201371604 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170977056 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190864886 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137099482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157044157 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175340784 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157610512 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102102201 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186096183 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234713654 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158679945 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171452883 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191771796 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11360499 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.325047931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236356518 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202002437 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150197502 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157014146 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175249238 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173831781 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180972052 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198360944 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156896205 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198555498 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171951436 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.155668694 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118711226 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161741872 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164124646 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168501248 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148485274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.171185995 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153479869 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205520534 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156919278 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173478477 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180785071 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162102509 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14115329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153316335 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21890879 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174305151 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223600246 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16902563 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185416621 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206316327 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106824123 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138489834 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141096668 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199838351 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141869755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145998287 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.223162826 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213482889 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173765705 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183427827 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149725819 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.137121842 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174975705 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162510728 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212421306 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155309638 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151251683 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209922657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164755272 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141737834 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179744037 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294291798 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15644214 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192412287 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.102963028 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312863711 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110204673 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144326023 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174595684 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187959455 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162437914 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194491512 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180843452 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129325467 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17469952 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15104429 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229854583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224553027 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187936106 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192314422 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.157118613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173308989 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17897415 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19357766 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155830901 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.160481209 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175939413 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198743925 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208133096 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.148041248 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176999552 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176833489 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173433452 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220256864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117608954 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202958787 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143207421 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183116581 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151994938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136726959 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171702738 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196572958 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14527228 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193082227 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172970955 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142005458 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112737945 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165940527 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172306459 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157175859 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139257865 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199608775 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137005712 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177811851 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196454855 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113920603 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172726492 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159058204 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146201943 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154661329 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128573683 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148541699 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183225344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201075612 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1444565 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195071798 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191466687 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180536619 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174350222 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158634314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.677260058 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.141097275 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19984647 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131192774 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237734308 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162128147 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181379253 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175133464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134753247 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214612967 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163517918 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207537248 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210350933 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175329544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114694863 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157115059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158762511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144972687 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166279167 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17648712 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123593972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151516998 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174825438 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159562687 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.158895059 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15056836 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202386594 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159363402 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203227872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200547113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15275447 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18224608 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194990448 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140413417 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180244673 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189946734 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154649198 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167390382 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11750515 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150178772 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196208596 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133883652 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176473707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174947102 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176796783 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178606014 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.121285095 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174445029 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154826971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175769955 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140599858 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174344623 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172547226 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143557689 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113030386 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169704288 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174061514 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.172918509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140653097 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.159304192 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225714299 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106622643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144975132 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300429726 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171610324 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210714202 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167705952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148384066 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155526368 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171638136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170704926 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175439387 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113956859 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14336096 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1454687 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194893538 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172104089 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171241608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194457447 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176870821 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208040316 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.157890181 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281026718 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123597592 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170286086 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145233567 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.142500821 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125788231 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148034171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159819658 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204988495 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195301135 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166167638 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.157787611 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142648518 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105173155 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144535168 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176806894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169968722 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173114068 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158449302 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101412955 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16051877 seconds)
  done (took 84.998429031 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164937514 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171041687 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174054758 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223710925 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194889938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282689904 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235418059 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25607116 seconds)
  done (took 2.759891494 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.134395571 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.118784702 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152157089 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131825341 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133093158 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44103574 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143877461 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104886823 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194386694 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.169624516 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.10443714 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.675314607 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130267673 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132156611 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123497401 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13124784 seconds)
  done (took 4.075561912 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.56189888 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560442998 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.168115039 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.262945061 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.24280921 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.191095644 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.771790052 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202130811 seconds)
  done (took 13.017725233 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136579398 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15061671 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.348375013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.219054529 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168943995 seconds)
  done (took 2.087809405 seconds)
done (took 129.213924526 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108602212 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.152925127 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10890929 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154209877 seconds)
  done (took 1.580683764 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155069596 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.121083508 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094463928 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11934397 seconds)
  done (took 1.560672343 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.53315789 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090018399 seconds)
  done (took 1.720471565 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.13249831 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.156202506 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.153190647 seconds)
  done (took 1.517811117 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116272001 seconds)
  done (took 1.182804597 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107406475 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139933769 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.190868062 seconds)
  done (took 1.508030487 seconds)
done (took 10.13802955 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12984654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.43825317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421295702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115825007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730787663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414155491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.051231484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164162294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146862617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126332336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145262926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677430667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.073771035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.383621419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.031516587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3786601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681621446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127997899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13054635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09894579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027613426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096049389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12728403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12506711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67721994 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431096591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097489034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38870449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123497439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102284823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415097706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095882691 seconds)
  done (took 17.232758328 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145040979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191351295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135982339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098594966 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132070556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125987176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.108237857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139771596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191961723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124956948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118583809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126364375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102339334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12682458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149064871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097222322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128700728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099614304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13383487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126757908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118047936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124895169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098931957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128507738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123678085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112570827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125852829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13819656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097499679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130805862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103816619 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127798557 seconds)
  done (took 5.107919673 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148541228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200715591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136462237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160753731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180978057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098601114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217943739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167156467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194210475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126674175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1477581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097563592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16752124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097105111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149678291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126018632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10166092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128923537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132821879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101464679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147743879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096000119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129783764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125876643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098478919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140477522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098629715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141973651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126119461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103583756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132629515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097473572 seconds)
  done (took 5.392759928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110433599 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139787093 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11979739 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150523677 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.134000482 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.109469673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.13950648 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103611472 seconds)
  done (took 2.084699861 seconds)
done (took 30.886366358 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123749259 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146547815 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117342708 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139731234 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.199692434 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099164509 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144594633 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.128131215 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.111476687 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.148210811 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096915849 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.132170002 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118257086 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.137561335 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183235147 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.138632292 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.189105554 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.182585938 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104146105 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.140223252 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.10344331 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.189076897 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139745085 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102568765 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195299145 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132016372 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.180462739 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136556972 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107822327 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.128007955 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.182314147 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109091894 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134184984 seconds)
  done (took 5.687256034 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.200113233 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.211492738 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102632213 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.133792253 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.211576582 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102199138 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.22802867 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103712387 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.131190909 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.102948512 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131047095 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.202365592 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.20821984 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223055242 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.240825953 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.208776191 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.198397947 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.207307733 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.19333909 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.211140511 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.198646889 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132195648 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.211235748 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.213100501 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101551534 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133432928 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.234051909 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.207224793 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.235104552 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196914905 seconds)
  done (took 6.496670001 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112455974 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14510019 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122501154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199706523 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171182548 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.141945443 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112698783 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.152225996 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.152778466 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098864958 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137842496 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137620528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145117922 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138426476 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103749275 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.148242842 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.151814435 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102126126 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135255733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11873907 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.147745625 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145518369 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112978824 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138362616 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098871357 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139002382 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132366456 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11248177 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135713555 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106273662 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133711435 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.131524315 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101325667 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13803218 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102890228 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.140941648 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15443429 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107323421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141973987 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.164567539 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.106719101 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134779101 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14973175 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.146039131 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.130380483 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138308052 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111973063 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137650123 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097202822 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150115237 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141473254 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100630889 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.150442922 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097511414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127682845 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136353985 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101326902 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.130783127 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.107625902 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132781984 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.154129239 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108359534 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135386616 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100859382 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135099113 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097211877 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129513575 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.134650041 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.122887304 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133511184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159073662 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100289351 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139117504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105802959 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134566064 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138421207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099978452 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134992906 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107830341 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135065478 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107808587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.132524682 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132113918 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1192199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.151011597 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140820198 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109703304 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140767795 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101731791 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.130908075 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142356996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102001369 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.132699082 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109017795 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131468919 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130850409 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111484725 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.139050025 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098092396 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148414388 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134088663 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099032813 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.14574038 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100735754 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132921221 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108735759 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.143332375 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129028478 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109245998 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1416417 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097812023 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134252118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.132053351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100325182 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.145906307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110369962 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133060721 seconds)
  done (took 16.058068856 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.301418227 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312250744 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207749689 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.400340272 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.123365558 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.228624894 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.274910902 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.226951276 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130199641 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172857383 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190029316 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.266528426 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100125495 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.163916517 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307020784 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.373777178 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16165963 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176132649 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173709664 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12366041 seconds)
  done (took 5.514902471 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123426665 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172882076 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160363834 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161968101 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105713332 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144636493 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128532362 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.125583767 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.138765293 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13450648 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098751997 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143835684 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.107437527 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139444455 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147676224 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147609828 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135264011 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.13605942 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.122304154 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.136904067 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140747939 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158783427 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110969391 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.158461406 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.144877839 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114099801 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129940506 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13592419 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103805628 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.133954393 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106103022 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150715057 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137522116 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105820038 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13882717 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110461448 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.130636899 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12967916 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103239163 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.132558532 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.117239339 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13973292 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102856075 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12563753 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112862434 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.132672759 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.141003156 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110786565 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142234216 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.115569833 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140800902 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.141248749 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107574442 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149636023 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102228383 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.144458998 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143963891 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.139701152 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.107908748 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128078232 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0975866 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134467149 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.10360271 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.142120915 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139573449 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.124027233 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.146765365 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131822014 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106201071 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133424616 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101930159 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148647044 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.157405797 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.134708958 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.103984293 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152735352 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103645354 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121667829 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109886879 seconds)
  done (took 11.344433925 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131168713 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.135540714 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120369928 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168303126 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.151554174 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107019581 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.134774282 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119875829 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142532783 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143948405 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113067681 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144558914 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155750999 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.11348818 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134700107 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144298334 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11115592 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.174561827 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148692041 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.133538768 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.148548973 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135652208 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.114613207 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143149339 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.165027781 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.112454202 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164111987 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.139230499 seconds)
  done (took 4.971988888 seconds)
done (took 51.152418192 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.21172631 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.40692574 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.179893061 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.177859229 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.220614656 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.216407284 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.181608781 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.370102364 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.90230886 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.176989192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.178421396 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.175668687 seconds)
done (took 27.503434649 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.307875813 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.773320447 seconds)
    (2/2) benchmarking "String"...
    done (took 1.490495582 seconds)
  done (took 4.374028501 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.171736954 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.17357724 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.415893089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.173413416 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.192713556 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.192567973 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.173106261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.175465542 seconds)
  done (took 15.594842625 seconds)
done (took 25.550382997 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.18560091 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.502557683 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.446204726 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.19295045 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.193787308 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.188406857 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.170209659 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.232306036 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.176126657 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.189232113 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.175889672 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.462054108 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.176224132 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.604314707 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.177342353 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.182150317 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.198833065 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.526413121 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.179680525 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.2418491 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.165323893 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.191554103 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.202128315 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.223308365 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.184932776 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.179963423 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.228856329 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.16751919 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.487353853 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.188243569 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.227572075 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.177343442 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2467798 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.189380618 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.287743563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.207479532 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.487092808 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.175273764 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.175587661 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.180545208 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.473469779 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.590206648 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.178762771 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.182244862 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.191871789 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.245726173 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.173844682 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.913307761 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.180589913 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.176805921 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.178446949 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.617671579 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.188586229 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.18219852 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.211705264 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.522261274 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.186838296 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.259753866 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.210289158 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.182148209 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.205530558 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.185797894 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.222681569 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.189668392 seconds)
  done (took 142.92886646 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.178277167 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.182107515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.181900575 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.20322136 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.182263421 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.182543989 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.17763265 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180201293 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.182965847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.185299816 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.183263659 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.179349977 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.18315911 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.163950896 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.181211001 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.194744523 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.183665515 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.197604418 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203085654 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.179313698 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.185834573 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.183452805 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.197046665 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.179701417 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.179982929 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.265234509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.235183802 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.187923474 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.189168066 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.178983157 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.224773889 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.207121843 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819599195 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042954017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.192458884 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.209774298 seconds)
  done (took 79.469245675 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.180240162 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.180692487 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180376362 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181570884 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.213924324 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180607319 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.180631438 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778882284 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.981042668 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.558152474 seconds)
    (11/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.764192202 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63984272 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459337104 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.179079955 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276344203 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194015781 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183687641 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.196155816 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225492915 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.181203073 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182242052 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778957434 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197370713 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.722687106 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.360774864 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197816189 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21413925 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585329849 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181601749 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215261144 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.51952858 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.231266503 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180897658 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.587287807 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.976598685 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.182794879 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295626159 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.185199316 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216063909 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.182827512 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467245148 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182115045 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.183774816 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.184821774 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88648033 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.185494177 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.76439316 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183820343 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155623421 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.182617281 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18321982 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.321949246 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.875178512 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.199624917 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.182783382 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185213641 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.183061814 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183815912 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.215888283 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.450279177 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301443472 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201170506 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.18700203 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217640368 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183294247 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.624447957 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1872265 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.495632816 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.243620757 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.399488218 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786612608 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1887813 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282561197 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305741624 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.184362351 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18441451 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183430879 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.184403034 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295661053 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18509055 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.628250437 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363398055 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203192563 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.65740262 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.28751824 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.183334252 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604400966 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187041976 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18551899 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.185199927 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940563409 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283120492 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185355662 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.18595075 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186230382 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.629648305 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787223642 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.459886925 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.189656677 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.729898026 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.1886914 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632481801 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761533177 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903357945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190871922 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301542427 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365992753 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205273133 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.185943467 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.662892435 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191160429 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.241407098 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.1865915 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.587800901 seconds)
  done (took 366.069481534 seconds)
done (took 589.569540061 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.903274018 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856215565 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.997251026 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.887772579 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.852228836 seconds)
  done (took 10.60752447 seconds)
done (took 11.719030408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383126518 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38218331 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.247206391 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384015298 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220617497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402910782 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365494911 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.207873776 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296122913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272123763 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295746365 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243952602 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224735519 seconds)
  done (took 18.038340101 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.46534678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195164104 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254504015 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431177597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23118253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465456222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.489901006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.194107487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355193203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204260225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205021748 seconds)
  done (took 17.605572932 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47018841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.193073479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277018267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.447074952 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232971369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456864833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493758188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.195563325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372363073 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206017403 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20406393 seconds)
  done (took 17.661672812 seconds)
done (took 54.417359193 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232169575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.36133609 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222084463 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.207957404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20014106 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201951679 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209557683 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.200132299 seconds)
  done (took 10.94903413 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201216999 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200226646 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199756191 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.201507196 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200330825 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200003294 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201769028 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200772675 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.199917099 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200358528 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200338069 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200229259 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199598992 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200162044 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200714907 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200470602 seconds)
  done (took 20.321796579 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204356128 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200596847 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201586419 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201394762 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201162315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202538493 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202591414 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200934929 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201523945 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199971679 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201229197 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201172833 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202002271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202215776 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200291204 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202946735 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.200728379 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201664757 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206950345 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201751913 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.201586698 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202362896 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202831134 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201190211 seconds)
  done (took 29.962626369 seconds)
done (took 62.347988941 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.194173845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.208215064 seconds)
  done (took 5.518476228 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.262435402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.261916499 seconds)
  done (took 3.643181276 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203612325 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202326765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202690945 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203244173 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.202331848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202745133 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203391167 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202387635 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.201646866 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.203154153 seconds)
  done (took 13.143494742 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.203555582 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20390211 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.202900602 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.202564505 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203221339 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203377691 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.204042355 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204855849 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204637957 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205055463 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.204997343 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204896756 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20604254 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203852363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.204234159 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206361703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205810979 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20499595 seconds)
  done (took 22.796453989 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220489382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226165057 seconds)
  done (took 3.56441176 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345611547 seconds)
    (2/7) benchmarking "second"...
    done (took 1.24808966 seconds)
    (3/7) benchmarking "month"...
    done (took 1.322403303 seconds)
    (4/7) benchmarking "year"...
    done (took 1.312690236 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247357832 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226660974 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.245907449 seconds)
  done (took 10.065472493 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20622522 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402524869 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.515330227 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775838107 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.205911252 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.251272797 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037033306 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.25240596 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23875403 seconds)
  done (took 14.003526253 seconds)
done (took 73.851245962 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.194710629 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.274064077 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.22331103 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.219070997 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.499920982 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.227512619 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.198925513 seconds)
done (took 15.956600374 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.196096218 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.205552876 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.196040948 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.231636948 seconds)
  done (took 9.948176966 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210094214 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555009016 seconds)
  done (took 4.884234595 seconds)
done (took 15.952291686 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207676681 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206673525 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.206121185 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.207218061 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.205624804 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.205675271 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.204922247 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.207128859 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.205807965 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.206734103 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206696777 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20678304 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206668942 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206349467 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2073924 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.205889168 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206010557 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207887524 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205682468 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208065248 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206159725 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207165456 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207396396 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208129874 seconds)
  done (took 30.080195679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211269397 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207973131 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.207577459 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207553066 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207369665 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207661501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20587786 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207260911 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.206295276 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208870047 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20812176 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.208461405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208077165 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207969403 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20839525 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208848901 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208864791 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20958261 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207838551 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208930604 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209415964 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208557115 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20900085 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208362253 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209953747 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209929991 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208435783 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210479317 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209221245 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2081712 seconds)
  done (took 37.376846367 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215067647 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216540957 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.20976797 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209835727 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209476937 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209785574 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21086082 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209242721 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.210561323 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.20979204 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210871039 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210334373 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209863639 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209716148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210066005 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209181107 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21041324 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.21086342 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.210748402 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.208928913 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21125557 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21011756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.211526075 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21123868 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.211014044 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.20997281 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210709851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.209507406 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211433766 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212377264 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210766019 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.209804553 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210917565 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21102355 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.211210964 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212393079 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216169589 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218868984 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21099408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211864558 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211318258 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.210346333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.211785669 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210517693 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211706202 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212121103 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.21123559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.212657157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212389463 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212211641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.212083692 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212172921 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.212846532 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212455764 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213096397 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213791654 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212493136 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214126936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213646588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214039791 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213605901 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21386636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.211735544 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214243577 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.213536 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212565736 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213363043 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.213586016 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.213290627 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213985416 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212599226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.212842028 seconds)
  done (took 88.377234876 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214976504 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214360512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214174279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213997814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214798078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214508972 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214953131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214185036 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214519872 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213327895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215291257 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217095386 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215619371 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214698617 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214423845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214116348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214968705 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214219684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214231638 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215336058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215651034 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.214483797 seconds)
  done (took 27.851463924 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215589458 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215377012 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213554141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216269437 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217243429 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216957528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214924371 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217251968 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214523531 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214423719 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216168793 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21577527 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217408747 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215941553 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215423194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2180293 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215920533 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21820376 seconds)
  done (took 23.016361337 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216925575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215414295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217120273 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216921389 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216723472 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21698399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215910089 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216370425 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.215459441 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217568714 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218238555 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217355066 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217435559 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216081131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217014956 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217981014 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216324301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216118058 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21787536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218832229 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217812365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218340379 seconds)
  done (took 27.904318006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219454473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219385929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217951086 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219164327 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218664174 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218491434 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220349783 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216435242 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219250258 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217522416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218046328 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219435413 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221189245 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219621683 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218413358 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218252838 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217619016 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218918066 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219345353 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218260838 seconds)
  done (took 25.506308427 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2195851 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219519565 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221210348 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22076408 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219310011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219493368 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218545105 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221771104 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221039671 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2214511 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22035285 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221599391 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221517999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219558845 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220855575 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221759575 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221591584 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222480007 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223008263 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221020593 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221826709 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220560175 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22193872 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.220630982 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222880652 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222354197 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221558336 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222268005 seconds)
  done (took 35.321794101 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223039782 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221667719 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220926184 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22184548 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220998565 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222238139 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221440014 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223260386 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220746837 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223384571 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221568812 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221968888 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22195455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22256095 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222277854 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221671898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222688006 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221686341 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223331709 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2218371 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222247706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221324736 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222021308 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221872928 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222457429 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222979781 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222316253 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222635491 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225039762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223334616 seconds)
  done (took 37.800723685 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270118583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265029857 seconds)
  done (took 3.66852254 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.225087895 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223842975 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222727443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22350094 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22531868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222913859 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223094008 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223536055 seconds)
  done (took 10.924395897 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.220330575 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222853289 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223553348 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223782122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222628622 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.220340533 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226907601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2441437 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220406905 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22054901 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.227952673 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.228502621 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.221989242 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220110614 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.220634373 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222737311 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.223756714 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224741 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225203169 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225510489 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224762534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222441452 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222995881 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225456262 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.222832908 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.232218025 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.24509965 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226557618 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22028721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224823161 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.221036654 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225833197 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225119916 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.225232044 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22855544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225449183 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229626224 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241383375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.228488967 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246832417 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228058401 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22608613 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.222798791 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.225202016 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225623108 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227152393 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228169109 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226690213 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.223553907 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226442658 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.235266269 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222656896 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228258068 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225763663 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224015168 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228983571 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248008236 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.228045379 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234693846 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233880905 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.256447234 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251774159 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225736136 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.226514992 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234725648 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249582089 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232107113 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250780403 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.229172978 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.22952515 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229446359 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256731766 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.252436695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227848194 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228042326 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229325157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224965636 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229183132 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232569846 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248529943 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229241533 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229233112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236173518 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250648415 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.225349349 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229428884 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228975066 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228995716 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.227180198 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236804449 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249570303 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230988001 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225955818 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226432816 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226273374 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230384215 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.226033347 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228818977 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231082664 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.23042901 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230195975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230178941 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.235258685 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229410988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230198268 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232604523 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.250747516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226024679 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.231572297 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231811416 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230117258 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228379177 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23379501 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231745371 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229894659 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.236400143 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.229761056 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229940511 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229945728 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233069127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236366212 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25848787 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.231829493 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232078718 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23093494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242164146 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231896641 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.231018 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230763871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.232782854 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231708228 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.22957734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232190442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227867981 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231709124 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228982106 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.23215177 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.232183397 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232064511 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229828276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.229675387 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.229412963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228545808 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.229963694 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23203321 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.231231057 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234755599 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250418271 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231721674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230586096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235374513 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233784195 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.229962578 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.233768928 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229359613 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233446199 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.231547477 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233025902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235100813 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234633103 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235642101 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230814457 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236496785 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233341671 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233093327 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229489641 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234713554 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.234173633 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.234128569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229969132 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23467031 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229409994 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.233750814 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242035615 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23506917 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.234618043 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233216954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233602054 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234716588 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235884684 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234388938 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241025496 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234735542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237461195 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.255961725 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235461956 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.23595988 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.23137304 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230752572 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234966101 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235737064 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245938749 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242900442 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260816553 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233443587 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.240892766 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.232723914 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241066966 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.235540039 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.236035758 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.237048322 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235633369 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232826867 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236736839 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236360141 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237109117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233681363 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238477366 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238930261 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237387042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238923816 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234617639 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234342541 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.2393121 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237837257 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237833636 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.234752934 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239524079 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.231426477 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.233104549 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237142378 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.235889427 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.239154923 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238225791 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234501426 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233635058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.233936522 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23419665 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239662869 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236300208 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.233626347 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242469599 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.256509927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236557784 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240883623 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255877024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234598036 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.237647245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.238897586 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.239274034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.236588568 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247424322 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239194633 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239409754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238346806 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234824924 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239747791 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.241056937 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260861125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234923802 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241216607 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.237041506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.240428212 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236812727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236351214 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236285225 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23837732 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239505414 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239406933 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234937131 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239799517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240151649 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239702473 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240594554 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.247572886 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240863935 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235537236 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.23901752 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238157709 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246261579 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236009713 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241768387 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236882319 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248026012 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.267917153 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24348336 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258013669 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240901786 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242434541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.259383341 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241761016 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238176907 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239267105 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244112717 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.238179458 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242295325 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239772258 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242001793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238034026 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.240680215 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24865553 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242752271 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.238547816 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.242178142 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242394928 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242586402 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.238598499 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243149028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.239697568 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24191752 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.238230841 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.240003101 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24599675 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261269568 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.23958275 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.750242322 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.238569242 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240544203 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240926086 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243568001 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241551882 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251087659 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241574517 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.249132419 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.241337425 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249884911 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241639732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.243886386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.252713135 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.245067337 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.23821248 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.240938568 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244228339 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246416897 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265916973 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24224255 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.248422024 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245025974 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244546055 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245789234 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24436291 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244070812 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243865197 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248903168 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261777935 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245016046 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241256871 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.245986035 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244051792 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245258326 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.239898347 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244563904 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244913558 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.242170238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.241416092 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.241827682 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247007506 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.243654037 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246756457 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246334058 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.244951773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248640574 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.266165798 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250116629 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245505665 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.247305248 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266942641 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248717192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26775076 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.243607501 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.245938524 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246405622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.243532389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.242286825 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.243365109 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.245826506 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.243683793 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25413475 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246457082 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.24560367 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.242539794 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.24571061 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.243119074 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253527884 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271264311 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.244859226 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253511857 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249171073 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245661985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251322242 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247381251 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242154456 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247972283 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255100516 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257247716 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244311842 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248781151 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245963914 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249114405 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248890439 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24860347 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247649517 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249298207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.244590864 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248242722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247127862 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.247909929 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244901441 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245761883 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246365813 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.254695524 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.270540038 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.245224108 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248324095 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251093845 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245733263 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246244651 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247957205 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245350098 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249894033 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.246643445 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252274142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253295723 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247847303 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.245211232 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249558248 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.24554699 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247427986 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248785256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.249720254 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250580706 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.246896298 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249994401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247125681 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245576074 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.251084074 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247842565 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251167666 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249288091 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255702468 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247410549 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251006162 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250217989 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250764262 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24654567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247299194 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.252572472 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27195641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259729131 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257818833 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.255484606 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.247569354 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251220408 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.256077337 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248031424 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248879616 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.252232487 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.248981956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249340202 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251471122 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252699421 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254904557 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269419732 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.24905018 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258027046 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.269922512 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25304942 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249851752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25346592 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.248603684 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253108444 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253241446 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.247906417 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255873092 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.271774675 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25292348 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25006258 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.247604929 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250834776 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2579577 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254363303 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.250172091 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254114648 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.2506472 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252406118 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255050037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.255672975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.250405909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250081737 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.253627265 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258116857 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255487132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252575738 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.252296732 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25251507 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254473905 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254934394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.255087035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254636978 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.249956958 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254351144 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250202764 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253926174 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.25170774 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.252240942 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26033851 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256103553 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255073655 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262578822 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264385701 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.255963142 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.251969029 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25338973 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254288136 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255315084 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254305626 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251670322 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.252430832 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.257618891 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255492346 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.257453787 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.255840873 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268391003 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.276741407 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253555438 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252788112 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255125295 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.257349211 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25673033 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.256870971 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.254513634 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25549889 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265178977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256832939 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25843531 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27505227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253920892 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26400749 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.256692837 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260849577 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.255306443 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257201363 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.255891998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258824439 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269995567 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258188655 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264260233 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285616174 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275846002 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254226945 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.257574327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252772048 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.256288909 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256225049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.258122812 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258338771 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259133611 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.2591062 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.2559181 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261224236 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256442276 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261125245 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25905438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255475621 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.257467536 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259510109 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.258928591 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260870576 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.259847446 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258922765 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258330788 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.255457325 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268070295 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285018536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.260825443 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259139751 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259769644 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.25893733 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259057462 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267201006 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.268756444 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.259135308 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260202397 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.257825399 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259776734 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261774212 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.25701143 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257188854 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257795788 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261524509 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269307137 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288433431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.260742771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257029895 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260521346 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26119381 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258439561 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260783256 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261838194 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25804896 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259889298 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267640548 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264467993 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.262599768 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.260742802 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271088665 seconds)
  done (took 743.041704753 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262754628 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262820101 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262118186 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263082279 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263081862 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262092545 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263615938 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262718895 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264191044 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26334773 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264384629 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263905882 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263516019 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263866299 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263951697 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26423129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264819223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264592838 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265104544 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263981807 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263506958 seconds)
  done (took 27.705871128 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263629738 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26562191 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264910147 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264455795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264671571 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26491673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265735664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263605012 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265549368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263678376 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26377244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263994572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264182025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263791706 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264282875 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26398126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264699946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264295088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264906968 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265333967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265843549 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26825422 seconds)
  done (took 28.995115551 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267122925 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.266376337 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26462236 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.268487363 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268975219 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.268716179 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.266608836 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.26606857 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264964974 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.261055623 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.260834058 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.262355428 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.268307863 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.275200634 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.263644386 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.265930756 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.266118446 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264608338 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264813912 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.265142887 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267225761 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.288911547 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.266107766 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.260943555 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266766464 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264787611 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.266434878 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265372614 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.262233807 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268774096 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.265325035 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262592499 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.264125678 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.262541007 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.26450286 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.271162211 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.266715927 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.26679365 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.266107967 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273484965 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.291953131 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267229574 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269071679 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.289446741 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.267591697 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266424146 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275988882 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.267212039 seconds)
  done (took 62.03170431 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868918393 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.897811785 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.899288756 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.898733093 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.899389426 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.901919885 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.899006284 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.904100945 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.895019846 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.891349935 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.894704024 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.899849666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899011997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.893660474 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.893665842 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.895850095 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889947273 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.894621195 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.895568772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.898909922 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.894148412 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.895265208 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.88990329 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.889104333 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898398878 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.895315035 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.889555256 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.894666843 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.897687637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.893077824 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.896707465 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.893746791 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.898361367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.889489071 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894004051 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.887771822 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.905878295 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.919335758 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.901870369 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.929508699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.904162431 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.898122419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.904010871 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.903171568 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.919306795 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.910167706 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899855805 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.893710606 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.895852422 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.902981151 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.89675416 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.897657691 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.894041195 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.900109684 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.897123235 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.897609624 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.900320195 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.902983679 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.894371769 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.899289683 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.895261094 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.901115028 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.895960913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.898598842 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.89260122 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.915279932 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.898215699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.903063756 seconds)
  done (took 130.255864868 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27183468 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271938586 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272121768 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272118576 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272238291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273150366 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2720048 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273093246 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271481321 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270459181 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272501298 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273669363 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.271669119 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273110045 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271467571 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271325103 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271977699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27290818 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271783755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271882774 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.271620178 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272016282 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271818045 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272414332 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273402923 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272114416 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27095531 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273282386 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271405841 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273850427 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272825379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.272731879 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272331361 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27294808 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.273642635 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273115107 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273438653 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273970207 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272549773 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273494942 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274819138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275690754 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275982463 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276076402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276004753 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276975319 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27685642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.276845672 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278099491 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277597778 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278147911 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275231889 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275326654 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27441275 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274213112 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276040844 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275549394 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275026066 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275435799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275287014 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274640761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.275641334 seconds)
  done (took 80.148885037 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277339528 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276984874 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276059058 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276774286 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275925445 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277342934 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275332447 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.275243127 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277645979 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275732713 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278539169 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277841881 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277827234 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277233657 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276398936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277204217 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27704216 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27793179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276766959 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277685746 seconds)
  done (took 26.721842832 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277717141 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277560309 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.276921432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278463277 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278106309 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277990318 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277346701 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278597106 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278058236 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278062865 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277507544 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277769819 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27823182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278458658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278305087 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278567881 seconds)
  done (took 21.631652645 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278153112 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27754848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276586893 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.276538288 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.279293569 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278010016 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278840757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278550952 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27842776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.279487283 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278841048 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280417684 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.278854554 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278002597 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279655376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280422736 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279188243 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281157023 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28016716 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280273798 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281627568 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281233063 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.280259073 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280406763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281890031 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2821724 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281200101 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281228612 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281183175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281131392 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.282247844 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281980732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282353029 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282080887 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.280650854 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282018021 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282258386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281576794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282682083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280926912 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281609671 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280998737 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282455312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281676457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282363145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281082457 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281818492 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281614491 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281558539 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28210062 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281958837 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281850275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280804405 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28263593 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281969061 seconds)
  done (took 71.621271355 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28211212 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281688447 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282340602 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281572117 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281387826 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282724361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281731709 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284377483 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282715789 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283302212 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282693737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283988566 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281317431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28274538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282882732 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282092327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28179831 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283731437 seconds)
  done (took 24.27365139 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282376633 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282141126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283607278 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281874861 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282338314 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283423315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283634101 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282640843 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283872208 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282816404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283391075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284028581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284251786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283836107 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284288426 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284073616 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28431268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283384153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284094126 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283641974 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284142433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283958642 seconds)
  done (took 29.424900601 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.279007625 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.278320679 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.279110609 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.294512872 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.303591803 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.279712965 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.279163808 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.27991539 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.301983183 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.355721741 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.353323446 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.304560297 seconds)
  done (took 16.776906871 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285147315 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284892129 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286230107 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284839687 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284395337 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285693674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285772174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286925034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28542072 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28543302 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286066754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285521951 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285415308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286041173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283890983 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285447833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286139395 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285319852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28616133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286538897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287007721 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286977733 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286100689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286399224 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285928603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286385506 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287056848 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286389588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285886501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287302285 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286096427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287172609 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287037824 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287282868 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2868543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287515005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288401077 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289415353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287482128 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28829201 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286570569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287588922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287917561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287966642 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286967301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288420533 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287778854 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288372852 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288598739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288008566 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289143066 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288227415 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287457102 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288157841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289398525 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28789481 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290060373 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290711607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288360133 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289313641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289531705 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289593671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288240256 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289643928 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289002533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28984653 seconds)
  done (took 86.150629731 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289832312 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289363226 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290254002 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291232096 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290887851 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28957565 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290586092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291277231 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290323102 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289472076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289729055 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289883456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290932757 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290329093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290949312 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28984953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289012264 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291233116 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290216342 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290126683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289886742 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291043766 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289799351 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290515883 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292359926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291207566 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291781341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291608514 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290698858 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292182757 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291041851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291110108 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291770529 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291721344 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291731284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292763123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291574392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292339608 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292223439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294074269 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293657985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291093922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293092678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292791876 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292088089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293334289 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293601231 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29216622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29322671 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293621839 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293991869 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294281718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292142694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292946636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293232631 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2940721 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293915575 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292916409 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293659139 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292789312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29366657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292557056 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296161814 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296287907 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293416641 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29442763 seconds)
  done (took 86.463862503 seconds)
done (took 1784.192205579 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.461692948 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410256354 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.287124643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.301023712 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288300354 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.284704937 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.300798437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289305366 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288181824 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289429809 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.288690028 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489903951 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.289438188 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288820841 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.288207663 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388158583 seconds)
  done (took 26.433045524 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319422944 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.298175316 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418641097 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315726033 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320183449 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501302783 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357011804 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294792511 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.488597657 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318593301 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.28537086 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318332798 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.292654808 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.2991298 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313579374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503718851 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567786584 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.287097506 seconds)
  done (took 28.699273111 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807940106 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.316485434 seconds)
  done (took 5.323784012 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313685459 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292025518 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294833178 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293817084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.285916194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.305643222 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292460393 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.28974649 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.295583593 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.436570215 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.299300679 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308921077 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314995325 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295090051 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298803447 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339775113 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.452682461 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299020358 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.298074613 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300258774 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294819418 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.434985697 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341970798 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298911673 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435342805 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.304198785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.299709671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301536409 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422189121 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30026006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.293582817 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.29447349 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29648298 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.289232092 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.77031353 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.312234306 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.303897482 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323780988 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29863759 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.522202635 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295834494 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302672703 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.290507916 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.777712385 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.434873791 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427152762 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.309038419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.300502394 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297730345 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366473866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296920386 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297460446 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35722539 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123773583 seconds)
  done (took 83.534966473 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.297502002 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.290476743 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471226861 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.311563209 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293893635 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293683837 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.294506404 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619107812 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.314942847 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291660172 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.60422907 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.919224623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319271588 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.346986709 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.158065923 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.368088723 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292175632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309726614 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.295142566 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.297187283 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873251495 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295104074 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.31034117 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.447059948 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331478365 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841375541 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291135473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.292199314 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310822868 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.291870404 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85541232 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315873782 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.356374788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.291148161 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58380626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.707134793 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666403261 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.298745095 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.315617395 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.299514313 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.302616525 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827064648 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685869511 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.29366268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.292845291 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835944417 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292852639 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.303190581 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.30405625 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548847561 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.296863768 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.294501904 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.31214593 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.294773735 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.293545494 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.383250992 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.387348985 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847076559 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294608305 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.297343456 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320018231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295541767 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302620709 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.297535115 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316358437 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691467834 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.452053518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30213559 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690711081 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851274226 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314597399 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940306055 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317972011 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310441826 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.509861179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295353545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299262787 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859179174 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.320365527 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.296321172 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670978839 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297396787 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.607873459 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.323041092 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29686464 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891570751 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.302807974 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.303812093 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.297206573 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295503725 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.29671383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315195712 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.612389799 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.343632596 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.297178896 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.296051157 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.315352155 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297247344 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298380284 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.303186381 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922463131 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.326642342 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.297100894 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2980588 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297740655 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.296865573 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.298382545 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.300238545 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570933447 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.301368638 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.319830042 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.2967847 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296797115 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.305164755 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452546043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.30275916 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.640305944 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.299434861 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297620677 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.317014899 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297385193 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348725635 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297250971 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.303866975 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.231553934 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.566150467 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32131527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.316480327 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299784056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317008655 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.302275634 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.301933749 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.361542447 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300221256 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133895714 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320756984 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.313320802 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.297491592 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303868534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310030117 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.298190593 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299514151 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598886049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590757995 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.456788678 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.30889959 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.297375955 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.120292576 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.347145155 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482428479 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324738062 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298820544 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549713253 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53270202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299409213 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.299836779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.300275864 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565290615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.303755426 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61363787 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903205685 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.321034439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307592408 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.14901911 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015483902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.304779001 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.300362935 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.601159643 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.319467288 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299739922 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.300295057 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301995261 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.319221187 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322392313 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30193222 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.300758909 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.302108807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.349541548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494147822 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.324935092 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301209866 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846951616 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320942543 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315624198 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.304964904 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309894538 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.302050441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383345331 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.304995142 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.339614137 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.301842517 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309053971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863020315 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302500104 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.309072451 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.496712665 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054301308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.326601871 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.304023631 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.319026995 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.221458495 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872667135 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.340215623 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.662945693 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.31910503 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.343598173 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302004776 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.377193312 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871407417 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307556614 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324518455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013709118 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326132772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.788144314 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.303573289 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303419524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964732745 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.325772189 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.305463181 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303493659 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.326646294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612971138 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.307558304 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.342309832 seconds)
  done (took 492.512556384 seconds)
done (took 637.701486153 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304513092 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309374745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.300641212 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.313227969 seconds)
  done (took 10.444762744 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321492278 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314289312 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319767443 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313765387 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321963474 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314899945 seconds)
  done (took 9.127644404 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309282295 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.315827502 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312852319 seconds)
  done (took 8.159401173 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541036985 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334017557 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67360679 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330836303 seconds)
  done (took 9.10228545 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320412054 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318941065 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319025882 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321808986 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.32363161 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322542657 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322801869 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322516404 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322931234 seconds)
  done (took 13.115886466 seconds)
done (took 51.165047331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.346389559 seconds)
    (2/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.379425665 seconds)
    (3/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.386807669 seconds)
    (4/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.301747555 seconds)
    (5/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.500558913 seconds)
    (6/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.51065007 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.378213207 seconds)
    (8/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.412182363 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.41675326 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344520127 seconds)
    (11/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.403311442 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.427276441 seconds)
    (13/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.330760574 seconds)
    (14/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.530284692 seconds)
    (15/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354167584 seconds)
    (16/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.545557521 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.543259518 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.4111749 seconds)
    (19/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.351502616 seconds)
    (20/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.389539491 seconds)
    (21/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.48224263 seconds)
    (22/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372642616 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.349465221 seconds)
    (24/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.531039984 seconds)
    (25/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.308130719 seconds)
    (26/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.189118431 seconds)
    (27/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.285654527 seconds)
    (28/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.414735503 seconds)
    (29/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.687510774 seconds)
    (30/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.316518666 seconds)
    (31/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.365214222 seconds)
    (32/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.359721263 seconds)
    (33/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348009392 seconds)
    (34/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.031330572 seconds)
    (35/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.043500818 seconds)
    (36/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.353668497 seconds)
    (37/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.405534279 seconds)
    (38/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.305800379 seconds)
    (39/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.43087943 seconds)
    (40/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.119314597 seconds)
    (41/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.337015721 seconds)
    (42/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.351247088 seconds)
    (43/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.44539898 seconds)
    (44/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.333444628 seconds)
    (45/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.102558712 seconds)
    (46/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.383970825 seconds)
    (47/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.479934689 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.405260918 seconds)
    (49/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331013348 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.313918647 seconds)
    (51/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.434845078 seconds)
    (52/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.352739556 seconds)
    (53/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.519533486 seconds)
    (54/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.473772509 seconds)
    (55/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.36735334 seconds)
    (56/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.343118768 seconds)
    (57/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.382491905 seconds)
    (58/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.3516997 seconds)
    (59/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.429515077 seconds)
    (60/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.396958868 seconds)
    (61/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.348486303 seconds)
    (62/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.238123447 seconds)
    (63/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.40100565 seconds)
    (64/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.001273961 seconds)
    (65/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.970899981 seconds)
    (66/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.422591588 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.307676238 seconds)
    (68/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382343649 seconds)
    (69/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.454599801 seconds)
    (70/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.449264389 seconds)
    (71/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.449960838 seconds)
    (72/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.450996674 seconds)
    (73/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.090096433 seconds)
    (74/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.449539336 seconds)
    (75/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334034432 seconds)
    (76/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.004515418 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.487439602 seconds)
    (78/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.070151183 seconds)
    (79/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.410397422 seconds)
    (80/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.416613004 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.492678056 seconds)
    (82/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.311605002 seconds)
    (83/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.583728424 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.412151921 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.458311973 seconds)
    (86/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.312404091 seconds)
    (87/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.294929209 seconds)
    (88/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.507986 seconds)
    (89/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.679882115 seconds)
    (90/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.383045081 seconds)
    (91/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.328131919 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.419428228 seconds)
    (93/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.541232503 seconds)
    (94/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.338936228 seconds)
    (95/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.517881337 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.437219482 seconds)
    (97/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.364358983 seconds)
    (98/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.317001414 seconds)
    (99/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.51290199 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.417302137 seconds)
    (101/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.342134711 seconds)
    (102/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.324492393 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.433828725 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.401038561 seconds)
    (105/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.55103211 seconds)
    (106/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.423777261 seconds)
    (107/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.009324742 seconds)
    (108/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.338592522 seconds)
    (109/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.373232037 seconds)
    (110/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.46073426 seconds)
    (111/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.404425637 seconds)
    (112/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.474255182 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.460772615 seconds)
    (114/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.352445498 seconds)
    (115/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.485541472 seconds)
    (116/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.418538404 seconds)
    (117/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.246139799 seconds)
    (118/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.332810391 seconds)
    (119/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.594144048 seconds)
    (120/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.1270436 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.493994534 seconds)
    (122/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.328814056 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.358412878 seconds)
    (124/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.976516599 seconds)
    (125/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.442415813 seconds)
    (126/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.313675941 seconds)
    (127/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.382540093 seconds)
    (128/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.721484627 seconds)
    (129/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.317736536 seconds)
    (130/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.323771156 seconds)
    (131/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.476113585 seconds)
    (132/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.490437526 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.555791678 seconds)
    (134/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.443604207 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37444921 seconds)
    (136/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.494488554 seconds)
    (137/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.51546439 seconds)
    (138/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.518101894 seconds)
    (139/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.56088506 seconds)
    (140/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.134245209 seconds)
    (141/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.359691202 seconds)
    (142/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.350010561 seconds)
    (143/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.978570557 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342446474 seconds)
    (145/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.41528095 seconds)
    (146/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.492125331 seconds)
    (147/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.397497369 seconds)
    (148/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.403229391 seconds)
    (149/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.080608955 seconds)
    (150/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.430105781 seconds)
    (151/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.342177924 seconds)
    (152/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.371639219 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.429756215 seconds)
    (154/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.445130625 seconds)
    (155/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.371903417 seconds)
    (156/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.32167241 seconds)
    (157/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.582126092 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.45103717 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.397150722 seconds)
    (160/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.4211716 seconds)
    (161/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.357997894 seconds)
    (162/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.975127901 seconds)
    (163/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.349094347 seconds)
    (164/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.52381575 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.356174391 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.396418454 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.475634562 seconds)
    (168/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.362734201 seconds)
    (169/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.356947871 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.434027047 seconds)
    (171/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.526267236 seconds)
    (172/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.389001769 seconds)
    (173/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.317963758 seconds)
    (174/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.490580871 seconds)
    (175/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.381986336 seconds)
    (176/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.477366357 seconds)
    (177/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.62349564 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.598162649 seconds)
    (179/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.494922062 seconds)
    (180/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.46019821 seconds)
    (181/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.132264779 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.443507746 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.552356864 seconds)
    (184/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.535960636 seconds)
    (185/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.350456779 seconds)
    (186/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.42818832 seconds)
    (187/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.344206215 seconds)
    (188/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.447030044 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.383027174 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.476763802 seconds)
    (191/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.315675618 seconds)
    (192/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.371184185 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359531116 seconds)
    (194/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.313859442 seconds)
    (195/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.475184381 seconds)
    (196/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.550784785 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.393485637 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.426801944 seconds)
    (199/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.416374566 seconds)
    (200/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.381400264 seconds)
    (201/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.103566889 seconds)
    (202/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.568985727 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.480517703 seconds)
    (204/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356761106 seconds)
    (205/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.323134105 seconds)
    (206/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.775777298 seconds)
    (207/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.109625447 seconds)
    (208/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.499736565 seconds)
    (209/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.188494347 seconds)
    (210/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.318234803 seconds)
    (211/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.449074818 seconds)
    (212/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.362170528 seconds)
    (213/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.460803928 seconds)
    (214/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.011601859 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.573260179 seconds)
    (216/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.315724194 seconds)
    (217/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.328268097 seconds)
    (218/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.511916917 seconds)
    (219/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.501916322 seconds)
    (220/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.483824136 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.574944797 seconds)
    (222/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.364859266 seconds)
    (223/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.54450552 seconds)
    (224/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.409234866 seconds)
  done (took 371.743725034 seconds)
done (took 372.965868697 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379363573 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.513646764 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.330724287 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.331767352 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375765866 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330886982 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.374276429 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340960655 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341764836 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342498788 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.329903058 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343149412 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344763305 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372425102 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445570602 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.340744557 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.333168559 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.338758138 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.381228583 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.400334015 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377147729 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37786808 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351951816 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.333209796 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379762804 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381722317 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.340038687 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.327126466 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.339708279 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381697487 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.336208683 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.339119519 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.390312429 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.390451017 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377703067 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.339446781 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377504829 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514874544 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.374681387 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.373040843 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344144071 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.39075649 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346121369 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.348165336 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.38967192 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352941406 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381397962 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.457543726 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335995599 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.329512199 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382916943 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.400726084 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.34554471 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.32648904 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338062712 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.460562095 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.339911241 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38168747 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.3417425 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378958974 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.44772576 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382341286 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.400032195 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382182861 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.341313741 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.347367603 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34096606 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.401388304 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341888846 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38003086 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380917243 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346965018 seconds)
done (took 107.802852944 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.466489531 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.335415634 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.476891993 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.339609076 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.506067434 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.493577858 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.33990418 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.341072388 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339034563 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.166054524 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341404255 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340326664 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.336745165 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.340207508 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.470672956 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339962771 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.340270563 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.053195719 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340649491 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.478475874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.369666965 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341117705 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339684089 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.159243398 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.335599689 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.330796573 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.478506052 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342516742 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.054489917 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.331763047 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.334388883 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.052205163 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.480225801 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360607136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352440716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350524964 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.507693772 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.362387177 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.466932225 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.468682209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.478370627 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378799184 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.332827612 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.337820187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.344366987 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341799374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341868059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3713704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.338358123 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.342140479 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.055761162 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.351961738 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353208451 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343325942 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.34314874 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361724131 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343230303 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344035153 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.481978003 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.344404867 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.469354473 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.16157081 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.168488906 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344226685 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.336421308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34340042 seconds)
  done (took 109.001876554 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.405864473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413950133 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458483682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359851174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391273466 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463128798 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.359409929 seconds)
  done (took 11.094451363 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346694215 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343874674 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.388608055 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390263176 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34260195 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.49667561 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344304119 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.351315431 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344235976 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392399821 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344205692 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344086911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353369815 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.339112204 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388646893 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.351705116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454914543 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.341440506 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344967343 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490744883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346560751 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354060618 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.392578135 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.351980054 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344971086 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347855376 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.111419685 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345775399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346254529 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346125291 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345898552 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.396082941 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346632387 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.341383475 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345966959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456996517 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.344071598 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346943944 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346846754 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.342127235 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346379459 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345991831 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.346270601 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.347199825 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.346490614 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366653465 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.347615031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.346650353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346042204 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.347962365 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393603033 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34804081 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.34759935 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.348722545 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.398764232 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357529336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345974982 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348169025 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347265757 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348054771 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495896025 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391575254 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347614081 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392201428 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348207857 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347467194 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348573847 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347103114 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435709725 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.349500218 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391740175 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347877441 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.526050655 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368620203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349587902 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348688385 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.346833713 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34798865 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341826598 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.352010751 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349612873 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346629695 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.35174647 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349785266 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349573043 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501569243 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453513302 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349229353 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357416273 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.351982615 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349526346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.398352231 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.350222103 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349827932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397684708 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.460706874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399230299 seconds)
  done (took 138.705079612 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359459655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359573313 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349258571 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374028668 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348263686 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.346202478 seconds)
  done (took 9.384336074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347186377 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354851096 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.350407309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.349610625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.348766485 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351137119 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35013207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347516065 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.355811823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.351512887 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.352186238 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.351389917 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.352402166 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.350285373 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351185773 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.351290361 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.351746683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353025632 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.353895079 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352659306 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.348552456 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352159518 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35196423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34978166 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.357976791 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.352836963 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37015785 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.353125184 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.352008757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.353043781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375207552 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.352695073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.350377862 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355365195 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.357746641 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350497171 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358615532 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.35415783 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35380714 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354674523 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354936972 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352852028 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.353274152 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.354828662 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350581252 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355470416 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.360139661 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37165716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.354120117 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.354002963 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354934644 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.354425868 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355495387 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.353657326 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353218477 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375284195 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.359398995 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354894114 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.356614947 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.35632455 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364015095 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.3572173 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353110413 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.360120713 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355286162 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.355131948 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353054899 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359212694 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353445593 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355195896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.357082733 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.356294142 seconds)
  done (took 99.798957433 seconds)
done (took 369.224169323 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.440639684 seconds)
  done (took 3.694165386 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.525557433 seconds)
  done (took 3.781160093 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.959226373 seconds)
  done (took 25.222267634 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.357435933 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.394348295 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.381814208 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.353949412 seconds)
  done (took 10.741697746 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.94782737 seconds)
  done (took 4.201715966 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.350546298 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.350328418 seconds)
  done (took 5.958142009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.658793769 seconds)
  done (took 3.912605577 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.922299332 seconds)
  done (took 4.186915883 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.353938419 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.363541588 seconds)
  done (took 5.97884518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344227494 seconds)
  done (took 3.597799717 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.851541415 seconds)
  done (took 41.106700633 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.360530949 seconds)
  done (took 3.617965416 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379841059 seconds)
  done (took 3.634819742 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.44927449 seconds)
  done (took 6.704625625 seconds)
done (took 127.593265579 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.348799986 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.351835592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.351697716 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.352175703 seconds)
  done (took 10.659089331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.409466848 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409581893 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.409880495 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409304887 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408598192 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410873819 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.383854826 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385161982 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409945092 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40924808 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409781995 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409973528 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410443851 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.383398479 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409230258 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410695158 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409407134 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.410732002 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.384646586 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409810184 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359355292 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411214519 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40947912 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35963791 seconds)
  done (took 34.891230579 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.855500699 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.432559317 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.509328944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408463353 seconds)
  done (took 7.462081387 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435710466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438658413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.451161234 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488071684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500844282 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448498446 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.384598305 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.379738864 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.366052482 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.437300656 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486835559 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434266486 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.516338913 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.359208008 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.565551489 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.359524208 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360711569 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.437485391 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488245979 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501721407 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.359450996 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436683061 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.439553793 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43016103 seconds)
  done (took 35.763415756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370275353 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375868114 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361695116 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378003142 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362772568 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.362329881 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.363900071 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.368400502 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.362162626 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.362648347 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.363311917 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377580345 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.3666627 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365377321 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.371597539 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363984325 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.368481374 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.366407203 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.36353333 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370200404 seconds)
  done (took 28.604656744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.35031815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.351455391 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.70290515 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.609224219 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.352523715 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.356555801 seconds)
  done (took 13.982087803 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440220748 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.623063585 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357779685 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784749108 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.873298057 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.362846494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359088024 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.644983418 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.010516516 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991892805 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431622941 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444080056 seconds)
  done (took 20.584467853 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.369215825 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.352262947 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.370039782 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.367502305 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420572009 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381727209 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365905517 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.352912661 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.420307598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.444330809 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381017602 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.421991772 seconds)
  done (took 21.90993745 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453499712 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357795993 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36292545 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437358336 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363416825 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207696203 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355216606 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166658468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.389083438 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635203787 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369206158 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458823661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61709386 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360047622 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387309681 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36423255 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594976918 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898128066 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36699207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359959752 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396879475 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359481973 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363303036 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611007597 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3867702 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361444733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.623011996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359479833 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68138226 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379905212 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371125443 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361324022 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635792175 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080277697 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484170705 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605427368 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382771542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366091299 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.378519823 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.364637363 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385954713 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368717843 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372545241 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361593906 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360501835 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362233105 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202758062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395209648 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.361614886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361842753 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656270002 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463689212 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366698939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362000302 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406789841 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367008947 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.366415459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496694942 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965407405 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370344748 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368340232 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.368349899 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377851339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368527016 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016820046 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39425889 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.367668754 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368684554 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363158637 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362986056 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385072 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363770291 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.388764194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362944759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205109824 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404558124 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371604914 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96572229 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366951522 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.369109114 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595951788 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364452285 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36420871 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.363053228 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364163684 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171069065 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376423398 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.349993788 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413256614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18919559 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637185491 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41078008 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393840833 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587080044 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.35166797 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36458037 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.372622453 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371681655 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38681534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178766901 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390894703 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370354724 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623783491 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.575904951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365805696 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35766057 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928700679 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391547052 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.387654377 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368791806 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616742098 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.016348809 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407475187 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367033218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386903281 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365601264 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211643314 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371980124 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.473428083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379234945 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673309682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.287824773 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371659475 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432583916 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369200222 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366889515 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367117533 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373560167 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365986934 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.605574729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394457713 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380749199 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.367280316 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366550132 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.376361014 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386120613 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.373939725 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589880994 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370200866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649858045 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367718053 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367231078 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366976191 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.589864968 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.368329073 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.731709098 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630853558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372791741 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374213472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383263179 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386044015 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472196335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388882984 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.374938181 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628869848 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373838468 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374166604 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37316397 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375716509 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371384622 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.378874214 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374082372 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999664887 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371727424 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375761272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263027695 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.384746116 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437614059 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378344441 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61722796 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400821003 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372390606 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.381467752 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.378691447 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598900415 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379934911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.37297093 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454528614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.926794298 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020613401 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410241539 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.371613613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.370603574 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.369683094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368863657 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371246726 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368900842 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616469938 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409330054 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377463805 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004667769 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398306204 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374500969 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.382808434 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384025012 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.378718986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371690183 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.382734268 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377476925 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382997054 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384408686 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514892061 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387573911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37127044 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890061262 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38024277 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373420985 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371052317 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405205109 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37594061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339968925 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659524315 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375795549 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674205775 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386704324 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395283136 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372759522 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386900659 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388721116 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.398548008 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405637235 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.383253731 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379068757 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379697325 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947697046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227829395 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949772373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401035262 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.385204245 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377329392 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191651505 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399883026 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373972285 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636570393 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21027815 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399765865 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935745246 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.399857056 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213428087 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678457853 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611216469 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374453351 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.39682228 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681137909 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589496679 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408629956 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380961999 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378879609 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.36144109 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029037514 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407781874 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459825267 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190912843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401271554 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403708581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.38602443 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384829282 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851001992 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401024931 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374209088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384363359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381129652 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353209302 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410671511 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375481806 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031721256 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402995445 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.940183431 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401969515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625997902 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411903786 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.380747252 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.382241552 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.387271067 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637350472 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674140994 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383523653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376759542 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956170173 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.273688657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383867134 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376110253 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225315871 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389824063 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706270664 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388098696 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.391292489 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382667532 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377799368 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378823998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377891771 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382593488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348978786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920935305 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.382360119 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381642929 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409833195 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384055335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635235178 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394406903 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007829293 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634596638 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374291286 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405026189 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384229753 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378690483 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372210983 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378747626 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379622635 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394999685 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60657507 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379381203 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.398571402 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390285699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594799184 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3810639 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380132721 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664092792 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.407602853 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.380878352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259600451 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437185063 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38118407 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387174872 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399682579 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425947127 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470545074 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630918827 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.416674009 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.390576833 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8548445 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406128143 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407685198 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.395957449 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475130091 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398425728 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399494444 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.161163776 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014263137 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268878703 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022948013 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70711281 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387622843 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389157069 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381265459 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54328506 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380992665 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65751273 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38112177 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.380734618 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430790377 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382103985 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431041689 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597999942 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659151008 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381242521 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389083749 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389229517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382728974 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392907209 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.592342401 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928437742 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001214866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388025885 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388791636 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21135193 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685873073 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383843229 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382730286 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38403895 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.386833835 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.428839672 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394929535 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384063817 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531101923 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685213377 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123456467 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419705045 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.412561594 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.9016603 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392568471 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645677928 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384370417 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642351594 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045035347 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187653049 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655686902 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454851138 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636401802 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.409508241 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546153635 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.383800269 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388361498 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385358263 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385720464 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.384202313 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394802152 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023423599 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676514659 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.390181676 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.385710318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418758259 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394844168 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608458694 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207823035 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614025036 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39533192 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393767398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38493758 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027389427 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715960228 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391983194 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.392447539 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663614865 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413459087 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412727865 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.905466678 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.387300834 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995098197 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.389921526 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406985115 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392295928 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173219068 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029710569 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41361723 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961723521 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390694789 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397187588 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667263572 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394551434 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389427634 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670380919 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.392553474 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388522054 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646101944 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045847964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243608995 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.414916367 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389602413 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.413409606 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388801764 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422707908 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39365731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388521562 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.885273211 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417625964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38829099 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400783665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.402522743 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39332891 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.392650616 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389970072 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396281993 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.424540366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.382394708 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400606406 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526438194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053525204 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417503022 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069895153 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714972213 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646147741 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389886195 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.381201413 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.395609267 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390197004 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38982088 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390177329 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390640541 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02417438 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.397534758 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.403540865 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396282519 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.390211625 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600248905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394324872 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650526345 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417605798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434441726 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.376955199 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39083547 seconds)
  done (took 984.095745748 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426824812 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440891928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.400767018 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.402176528 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449807214 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.535406666 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.446573612 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445771272 seconds)
  done (took 20.839173175 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.397197977 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.397861845 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.405653736 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.401362849 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.389111204 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.94011165 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.418168458 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.400419931 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.413897827 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.398422989 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.398264892 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.383620951 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.399587642 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.404648445 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.388250431 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.401348337 seconds)
  done (took 33.241864422 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.828629389 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.697931346 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.250838982 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.396045957 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.419687265 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.396254349 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.836059745 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.417510832 seconds)
  done (took 28.535471195 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.397698656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.39814527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.399677931 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399004187 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.39856032 seconds)
  done (took 8.286592969 seconds)
done (took 1250.112870496 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.39859663 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.398190959 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.39856047 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399304769 seconds)
  done (took 6.887276548 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.380994539 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.382667452 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.383636966 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398245349 seconds)
  done (took 9.838929285 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.21535111 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116279367 seconds)
  done (took 5.624440817 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.897354003 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.912350256 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.911908274 seconds)
  done (took 7.016528587 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.686774672 seconds)
  done (took 2.979916753 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.310085421 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.392557538 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.080859111 seconds)
  done (took 8.078584313 seconds)
done (took 41.717986591 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396737968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.640749811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558641605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.401448001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.557408483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.549612769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.150570714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.390782836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407499123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3963549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.426233057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.564642851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.194361905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.642661739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.19378127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.642971591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566481694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391165078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392065984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391509829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.160261013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392991236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392451717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414338171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.564783075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.542703913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39225252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.64363659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394705374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396840517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.544209868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393015132 seconds)
  done (took 83.384736679 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399328975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.404471801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393077564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413933901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414305408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394924645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.424564183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392035154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391240345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42884612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392418528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412453266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393208155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416222607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414519846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411334917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418010619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410101079 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393128283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414866055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40830168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394569375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414527884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39448837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419421703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.396891303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414816563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415210197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395088223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410200647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.399771601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417768586 seconds)
  done (took 78.310988391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396315864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394490109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425508402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407410223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.399952612 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.408607684 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398085303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393994335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394592051 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417444368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429570762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.395298058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417883961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395558245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396014477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394546087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398731157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408409567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395097194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408183589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39831123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394244758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393692082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395293046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400081547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414669159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419311537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426912568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402460692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411565343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.4007116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417607887 seconds)
  done (took 78.250314193 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.681171245 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406615152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.409026491 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.401280427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.409539403 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406248586 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40061242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.688233417 seconds)
  done (took 15.102049921 seconds)
done (took 256.34246648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.400655636 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.975874465 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.451665445 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.402136914 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44558635 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.427578647 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.654089216 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.450829056 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.650343017 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433491655 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.42229315 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.401676918 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.349654349 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.564093467 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.33199668 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.415831366 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.411808452 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.401986603 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.071960771 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.707420904 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.427575868 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.399942086 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.357182176 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.444666166 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.393574473 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.497971645 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.515319921 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.639254463 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574356533 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.493357731 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.993637762 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.419385391 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.423121298 seconds)
  done (took 66.251207412 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.404497693 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.53259847 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.409497847 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.410371998 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.535051453 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.432915837 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.4053282 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.409349197 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.409943647 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.410014554 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.410272775 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.412306893 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.410610317 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.460178727 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.535747642 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.428035559 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.405798027 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.530581781 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.404093134 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.404692981 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.458794217 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.410555007 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.411871476 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.460500727 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.411752107 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.410842237 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.533632457 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.435807894 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.413206718 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.531041885 seconds)
  done (took 44.543630858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411773342 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.092988966 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.267323432 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.420010479 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407860225 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413021989 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.753475837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417827731 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.411765532 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413304627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.973717348 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440154845 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447212762 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.298388307 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.415998057 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.414107046 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.413035429 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409312009 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.10364099 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423697472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.778897898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41848509 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.756797944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.424643306 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.436554217 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409671796 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415088949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.324560739 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.438441038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.973860573 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.368426148 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.753116137 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.228072902 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.302555417 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.34992032 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.420807178 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415359946 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.97722797 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437371901 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.41268948 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.748666214 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411250187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.274809023 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.134607007 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.433788982 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.415436852 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.319575025 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.983904541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718133318 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418149539 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.309269098 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.418142065 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41714306 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414129052 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.698260783 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.414600071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411103881 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.357675374 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441196279 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.748826221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416968088 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411658311 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10093016 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.417487446 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.09962992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.418385936 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421145585 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438380685 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.287428735 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.419572304 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.154161921 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434003234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.417541464 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.975282225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.126013063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.393173936 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.415491487 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091674248 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.262253429 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.779747279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.422310752 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.297598729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.79004314 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420928494 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.420462802 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.420752859 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.419446622 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493359727 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.754667345 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.082066878 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144515986 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.381616729 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.787691586 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426072806 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416314222 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.360236947 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442596121 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417588622 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.259567078 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146441053 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.437660404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422695917 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158355841 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439812698 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.766298808 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.425659151 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.270856896 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.416512269 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495773531 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420349707 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422547845 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.442496675 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.765955079 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.424363067 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.420403483 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132340715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.015633382 seconds)
  done (took 201.852173877 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.413867961 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.41442247 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.409439718 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.414678286 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.409621782 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417789277 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.41101005 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.410037721 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415899955 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410203717 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.412638115 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.41942056 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.416568524 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.410836034 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.411117868 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.415627516 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411100942 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.436877435 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.415843004 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.412146997 seconds)
  done (took 45.602412134 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.421420102 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.099351232 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.074194239 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.424742176 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42000856 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416710837 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.484529098 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.446410602 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.421268421 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.783180986 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.6288101 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445977346 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.421810455 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.422989818 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.05288415 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.418321963 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.785921348 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.105203891 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.428717558 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.102671835 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.417541841 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.422561891 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417017536 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.107422672 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.81916965 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.771498215 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49255778 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130362171 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448459625 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.423900812 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.093376529 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.428145019 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419198693 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.102784824 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447368946 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435809751 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.42159874 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.489946018 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.513759627 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.795559997 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.186186997 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.79586793 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.439889528 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.606342079 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.429223144 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412687586 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.098803841 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447320744 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414113348 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.426293751 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429907443 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.071305275 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445442701 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.07055741 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.448228893 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42476667 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.111949347 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.075370415 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.090785296 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.631880117 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444580483 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.770254542 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.429256996 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.119864375 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450988676 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.424968826 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.425446824 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.632610615 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.136895779 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.774342202 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.796041529 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.777623908 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.426085951 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.496520571 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.450590652 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.86013257 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.499761125 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.853696901 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.797438236 seconds)
  done (took 132.343464097 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.725795133 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549576934 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.885431624 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.092810845 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.421891736 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568862408 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.548745493 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.713933994 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.438398405 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.502246731 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.202406219 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.557305793 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.254831133 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.521568081 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562751229 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.586927405 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.891580494 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.419292393 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.191145627 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.18211021 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.427248171 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.558889293 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.024230027 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.654601608 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.428321613 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.061025559 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.444930763 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.167402039 seconds)
  done (took 55.903437604 seconds)
done (took 547.795754219 seconds)
SAVING RESULT...
DONE!
